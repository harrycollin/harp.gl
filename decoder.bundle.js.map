{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"THREE\"","webpack:///../@here/harp-datasource-protocol/lib/Expr.ts","webpack:///../@here/harp-utils/index.web.ts","webpack:///../@here/harp-geoutils/index.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoCoordinates.ts","webpack:///../@here/harp-datasource-protocol/index.ts","webpack:///../@here/harp-geoutils/lib/math/MathUtils.ts","webpack:///../node_modules/protobufjs/src/util/minimal.js","webpack:///../@here/harp-geoutils/lib/math/Box3Like.ts","webpack:///../@here/harp-geoutils/lib/math/OrientedBox3Like.ts","webpack:///../@here/harp-geoutils/lib/projection/Projection.ts","webpack:///../@here/harp-datasource-protocol/lib/Env.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoBox.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoCoordinatesLike.ts","webpack:///../@here/harp-geoutils/lib/projection/EarthConstants.ts","webpack:///../@here/harp-geoutils/lib/tiling/TilingScheme.ts","webpack:///../@here/harp-omv-datasource/lib/OmvDecoderDefs.ts","webpack:///../@here/harp-datasource-protocol/lib/ColorUtils.ts","webpack:///../@here/harp-datasource-protocol/lib/RGBA.ts","webpack:///../@here/harp-datasource-protocol/lib/StringEncodedNumeral.ts","webpack:///../@here/harp-datasource-protocol/lib/InterpolatedPropertyDefs.ts","webpack:///../@here/harp-geoutils/lib/projection/MercatorProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/QuadTreeSubdivisionScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileKey.ts","webpack:///../@here/harp-mapview-decoder/lib/WorkerService.ts","webpack:///../@here/harp-omv-datasource/lib/OmvUtils.ts","webpack:///../@here/harp-utils/lib/Logger/ILogger.ts","webpack:///../@here/harp-utils/lib/UrlUtils.ts","webpack:///../@here/harp-datasource-protocol/lib/Pixels.ts","webpack:///../@here/harp-datasource-protocol/lib/Theme.ts","webpack:///../@here/harp-datasource-protocol/lib/Techniques.ts","webpack:///../@here/harp-datasource-protocol/index-decoder.ts","webpack:///../@here/harp-omv-datasource/lib/OmvDecoder.ts","webpack:///../@here/harp-utils/lib/Logger/ConsoleChannel.ts","webpack:///../@here/harp-utils/lib/Logger/Logger.ts","webpack:///../@here/harp-utils/lib/Logger/WorkerChannel.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueParams.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueDescriptor.ts","webpack:///../@here/harp-datasource-protocol/lib/PropertyValue.ts","webpack:///../@here/harp-datasource-protocol/lib/DecodedTile.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoPointLike.ts","webpack:///../@here/harp-geoutils/lib/coordinates/LatLngLike.ts","webpack:///../@here/harp-geoutils/lib/projection/EquirectangularProjection.ts","webpack:///../@here/harp-geoutils/lib/projection/TransverseMercatorProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/FlatTileBoundingBoxGenerator.ts","webpack:///../@here/harp-geoutils/lib/tiling/HalfQuadTreeSubdivisionScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/SubTiles.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileKeyUtils.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileTreeTraverse.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueAttr.ts","webpack:///../@here/harp-mapview-decoder/index-worker.ts","webpack:///../@here/harp-mapview-decoder/lib/GeoJsonTiler.ts","webpack:///../@here/harp-omv-datasource/lib/VTJsonDataAdapter.ts","webpack:///../node_modules/protobufjs/src/writer.js","webpack:///../node_modules/protobufjs/src/reader.js","webpack:///../@here/harp-omv-datasource/lib/OmvDataFilter.ts","webpack:///../@here/harp-geometry/lib/SubdivisionModifier.ts","webpack:///./src/decoder.ts","webpack:///../@here/harp-omv-datasource/index-worker.ts","webpack:///../@here/harp-utils/index-common.ts","webpack:///../@here/harp-utils/lib/GroupedPriorityList.ts","webpack:///../@here/harp-utils/lib/Logger/index.ts","webpack:///../@here/harp-utils/lib/Logger/LoggerManager.ts","webpack:///../@here/harp-utils/lib/Logger/LoggerManagerImpl.ts","webpack:///../@here/harp-utils/lib/Logger/MultiChannel.ts","webpack:///../@here/harp-utils/lib/Math2D.ts","webpack:///../@here/harp-utils/lib/MathUtils.ts","webpack:///../@here/harp-utils/lib/Mixins.ts","webpack:///../@here/harp-utils/lib/assert.ts","webpack:///../@here/harp-utils/lib/ContextLogger.ts","webpack:///../@here/harp-utils/lib/PerformanceTimer.ts","webpack:///../@here/harp-utils/lib/ObjectUtils.ts","webpack:///../@here/harp-utils/lib/OptionsUtils.ts","webpack:///../@here/harp-utils/lib/UriResolver.ts","webpack:///../@here/harp-utils/lib/Functions.ts","webpack:///../@here/harp-utils/lib/SampleBilinear.ts","webpack:///../@here/harp-utils/lib/UrlPlatformUtils.web.ts","webpack:///../node_modules/csscolorparser/csscolorparser.js","webpack:///../@here/harp-datasource-protocol/lib/ExprEvaluator.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ArrayOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/CastOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ColorOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ComparisonOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/FeatureOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/FlowOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MapOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MathOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MiscOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ObjectOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/StringOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/TypeOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/VectorOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprInstantiator.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprParser.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerServiceProtocol.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerTilerProtocol.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerDecoderProtocol.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoBoxExtentLike.ts","webpack:///../@here/harp-geoutils/lib/projection/IdentityProjection.ts","webpack:///../@here/harp-geoutils/lib/projection/SphereProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/QuadTree.ts","webpack:///../@here/harp-geoutils/lib/tiling/HereTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/WebMercatorTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/MercatorTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/PolarTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/math/Vector3Like.ts","webpack:///../@here/harp-geoutils/lib/math/TransformLike.ts","webpack:///../@here/harp-geoutils/lib/math/OrientedBox3.ts","webpack:///../@here/harp-datasource-protocol/lib/ThemeVisitor.ts","webpack:///../@here/harp-mapview-decoder/lib/ThemedTileDecoder.ts","webpack:///../@here/harp-datasource-protocol/lib/StyleSetEvaluator.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprPool.ts","webpack:///../@here/harp-datasource-protocol/lib/Outliner.ts","webpack:///../@here/harp-datasource-protocol/lib/ThreeBufferUtils.ts","webpack:///../@here/harp-mapview-decoder/lib/TileDecoderService.ts","webpack:///../@here/harp-mapview-decoder/lib/TilerService.ts","webpack:///../@here/harp-mapview-decoder/lib/WorkerServiceManager.ts","webpack:///../@here/harp-omv-datasource/lib/DecodeInfo.ts","webpack:///../@here/harp-omv-datasource/lib/OmvData.ts","webpack:///../node_modules/long/src/long.js","webpack:///../@here/harp-omv-datasource/lib/proto/vector_tile.js","webpack:///../node_modules/protobufjs/minimal.js","webpack:///../node_modules/protobufjs/src/index-minimal.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/@protobufjs/aspromise/index.js","webpack:///../node_modules/@protobufjs/base64/index.js","webpack:///../node_modules/@protobufjs/eventemitter/index.js","webpack:///../node_modules/@protobufjs/float/index.js","webpack:///../node_modules/@protobufjs/inquire/index.js","webpack:///../node_modules/@protobufjs/utf8/index.js","webpack:///../node_modules/@protobufjs/pool/index.js","webpack:///../node_modules/protobufjs/src/util/longbits.js","webpack:///../node_modules/protobufjs/src/writer_buffer.js","webpack:///../node_modules/protobufjs/src/reader_buffer.js","webpack:///../node_modules/protobufjs/src/rpc.js","webpack:///../node_modules/protobufjs/src/rpc/service.js","webpack:///../node_modules/protobufjs/src/roots.js","webpack:///../@here/harp-omv-datasource/lib/OmvDecodedTileEmitter.ts","webpack:///../@here/harp-lines/lib/Lines.ts","webpack:///../@here/harp-lines/lib/TriangulateLines.ts","webpack:///../node_modules/earcut/src/earcut.js","webpack:///../@here/harp-geometry/lib/ClipPolygon.ts","webpack:///../@here/harp-geometry/lib/EdgeLengthGeometrySubdivisionModifier.ts","webpack:///../@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier.ts","webpack:///../@here/harp-materials/lib/MapMeshMaterialsDefs.ts","webpack:///../@here/harp-omv-datasource/lib/OmvPoliticalViewFeatureModifier.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTomTomFeatureModifier.ts","webpack:///../@here/harp-omv-datasource/lib/StyleSetDataFilter.ts","webpack:///../@here/harp-omv-datasource/lib/TiledGeoJsonAdapter.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTiler.ts","webpack:///../node_modules/geojson-vt/src/simplify.js","webpack:///../node_modules/geojson-vt/src/feature.js","webpack:///../node_modules/geojson-vt/src/convert.js","webpack:///../node_modules/geojson-vt/src/clip.js","webpack:///../node_modules/geojson-vt/src/wrap.js","webpack:///../node_modules/geojson-vt/src/transform.js","webpack:///../node_modules/geojson-vt/src/tile.js","webpack:///../node_modules/geojson-vt/src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","THREE","exprEvaluator","ExprEvaluator","exprInstantiator","ExprInstantiator","ExprDependencies","properties","Set","ComputeExprDependencies","expr","dependencies","accept","this","instance","context","add","args","forEach","childExpr","op","volatile","featureState","branches","_","branch","fallback","condition","input","defaultValue","stops","isJsonExpr","v","Array","isArray","length","ExprScope","Expr","code","ExprParser","parse","json","definitions","definitionExprCache","parseNode","undefined","lockedNames","cache","Map","env","scope","Value","ExprEvaluatorContext","m_dependencies","of","pool","ExprSerializer","serialize","m_isDynamic","exprIsDynamic","VarExpr","super","visitor","visitVarExpr","LiteralExpr","BooleanLiteralExpr","NumberLiteralExpr","StringLiteralExpr","NullLiteralExpr","ObjectLiteralExpr","Error","visitNullLiteralExpr","visitBooleanLiteralExpr","visitNumberLiteralExpr","m_promotedValue","RGBA","Pixels","visitStringLiteralExpr","visitObjectLiteralExpr","HasAttributeExpr","visitHasAttributeExpr","CallExpr","visitCallExpr","descriptor","getOperator","isDynamicOperator","some","e","isDynamic","MatchExpr","node","elementTy","every","visitMatchExpr","CaseExpr","visitCaseExpr","cond","StepExpr","visitStepExpr","InterpolateExpr","visitInterpolateExpr","Vector2","x","y","Vector3","z","Vector4","w","map","label","body","push","result","referenceResolverState","parseCall","slice","has","cachedEntry","definitionEntry","isLiteralDefinition","fromJSON","isBoxedDefinition","isInterpolatedPropertyDefinition","interpolatedPropertyDefinitionToJsonExpr","delete","set","resolveReference","makeCallExpr","parseGetExpr","parseHasExpr","obj","parseLiteralExpr","conditions","isValidMatchLabel","JSON","stringify","parseMatchExpr","caseFallback","parseCaseExpr","isInterpolationMode","isExpr","parseInterpolateExpr","parseStepExpr","GeoCoordinates","latitude","longitude","altitude","MathUtils","radToDeg","latLng","lat","lng","geoPoint","isGeoPointLike","fromGeoPoint","isGeoCoordinatesLike","fromDegrees","isLatLngLike","degToRad","isNaN","wrapped","sign","Math","other","normalizeAngleDeg","a","angleDistanceDeg","b","newEmptyBox3","min","Infinity","max","newVector3","copyVector3","from","to","clamp","normalizeLongitudeDeg","interpolateAnglesDeg","p0","p1","util","merge","dst","src","ifNotSet","keys","newError","CustomError","message","captureStackTrace","stack","constructor","toString","asPromise","base64","EventEmitter","float","inquire","utf8","LongBits","global","window","self","emptyArray","freeze","emptyObject","isNode","Boolean","process","versions","isInteger","Number","isFinite","floor","isString","String","isObject","isset","isSet","prop","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","lcFirst","str","charAt","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","_configure","encoding","allocUnsafe","size","box3","obb","position","xAxis","yAxis","zAxis","extents","ProjectionType","unitScale","point","projectPoint","sourceProjection","worldPos","unprojectPoint","Env","entries","parent","lookup","unmap","GeoBox","southWest","northEast","center","extent","latitudeSpan","longitudeSpan","south","north","west","east","minAltitude","altitudeSpan","maxAltitude","width","containsHelper","isFlat","isSameAltitude","isWithinAltitudeRange","EarthConstants","EQUATORIAL_CIRCUMFERENCE","EQUATORIAL_RADIUS","MIN_ELEVATION","MAX_ELEVATION","MAX_BUILDING_HEIGHT","subdivisionScheme","projection","boundingBoxGenerator","FlatTileBoundingBoxGenerator","tileTreeTraverse","TileTreeTraverse","tileKey","subTiles","level","TileKeyUtils","geoCoordinatesToTileKey","geoBox","geoRectangleToTileKeys","getGeoBox","getWorldBox","FeatureModifierId","OmvFilterString","StringMatch","matchString","filterString","match","Any","Match","StartsWith","startsWith","EndsWith","endsWith","indexOf","OmvGeometryType","OMV_TILE_DECODER_SERVICE_TYPE","OMV_TILER_SERVICE_TYPE","tmpColor","Color","ColorUtils","getHexFromRgba","g","assert","getHexFromRgb","getHexFromHsl","h","setHSL","getHex","getRgbaFromHex","hex","target","hasAlphaInHex","getAlphaFromHex","removeAlphaFromHex","text","color","parseStringEncodedColor","lerp","StringEncodedNumeralType","StringEncodedMeters","type","Meters","regExp","decoder","encodedValue","exec","StringEncodedPixels","mask","StringEncodedHex","Hex","parseInt","StringEncodedMetricFormats","StringEncodedMetricFormatMaxSize","reduce","StringEncodedColorFormats","StringEncodedColorFormatMaxSize","StringEncodedNumeralFormats","StringEncodedNumeralFormatMaxSize","tmpBuffer","parseStringLiteral","formats","pixelToMeters","matchedFormat","find","format","components","parseCSSColor","numeral","InterpolationMode","interpolationMode","values","zoomLevels","interpolation","step","exponent","MercatorProjection","Projection","Planar","val","MercatorConstants","MAXIMUM_LATITUDE","log","tan","PI","latitudeProject","latitudeClamp","atan","exp","worldPoint","cosh","Box3","geoPointLike","latitudeClampProject","latitudeInRadians","fromRadians","unprojectLatitude","worldCenter","worldNorth","worldSouth","worldYCenter","isBox3Like","isOrientedBox3Like","EPSILON","worldBox","minGeo","maxGeo","fromCoordinates","_worldPoint","normal","webMercatorProjection","mercatorProjection","reprojectPoint","sy","sin","projectBox","maxY","quadTreeSubdivisionScheme","powerOfTwo","TileKey","row","column","quadkey","fromRowColumnLevel","quadKey64","quadKey","m_mortonCode","quadkey64","fromMortonCode","m_hereTile","pow","coordX","coordY","totalWidth","totalHeight","rowsAtLevel","columnsAtLevel","mortonCode","delta","changedLevelBy","col","qnr","sub","subQuad","fromQuadKey","child","fromHereTile","msb","logger","LoggerManager","enabled","serviceId","m_pendingRequests","onMessage","data","service","WorkerServiceProtocol","isRequestMessage","request","requestEntry","messageId","responseSent","tryHandleRequest","then","response","doSendResponse","ServiceMessageName","Response","transferList","catch","error","errorMessage","errorStack","tryHandleMessage","err","addEventListener","isInitializedMessage","Initialized","postMessage","cancelAllPendingRequests","removeEventListener","handleMessage","handleRequest","Promise","reject","lat2tile","zoom","func","cos","createWorldTileTransformationCookie","decodeInfo","N","log2","scale","top","adapterId","VTJsonDataAdapterId","round","left","tile2world","flipY","worldTileProjectionCookie","R","SharedArrayBuffer","ArrayBuffer","tempWorldPos","webMercatorTile2TargetWorld","targetProjection","LogLevel","parentUri","childUri","absoluteUrlWithOriginRe","test","getUrlOrigin","substr","baseUrl","RegExp","url","idx","lastIndexOf","parsed","getUrlHostAndProtocol","protocol","host","urlOriginRe","RX","def","bdef","styleDef","technique","TEXTURE_PROPERTY_KEYS","TRANSPARENCY_PROPERTY_KEYS","techniqueDescriptors","baseTechniqueParamsDescriptor","attrTransparencyColor","attrScopes","renderOrder","AttrScope","TechniqueGeometry","FeatureGeometry","kind","transient","fadeFar","TechniqueRendering","fadeNear","pointTechniquePropTypes","mergeTechniqueDescriptor","texture","enablePicking","transparent","opacity","squaresTechniquePropTypes","squares","circlesTechniquePropTypes","circles","lineMarkerTechniquePropTypes","useAbbreviation","useIsoCode","priority","textMinZoomLevel","textMaxZoomLevel","iconMinZoomLevel","iconMaxZoomLevel","distanceScale","textMayOverlap","iconMayOverlap","textReserveSpace","iconReserveSpace","renderTextDuringMovements","alwaysOnTop","textIsOptional","showOnMap","stackMode","minDistance","iconIsOptional","iconFadeTime","textFadeTime","xOffset","yOffset","iconXOffset","iconYOffset","iconScale","screenHeight","screenWidth","poiTable","poiName","poiNameField","imageTexture","imageTextureField","imageTexturePrefix","imageTexturePostfix","iconColor","iconBrightness","style","fontName","fontStyle","fontVariant","rotation","tracking","leading","maxLines","lineWidth","canvasRotation","lineRotation","wrappingMode","hAlignment","vAlignment","placements","backgroundColor","backgroundSize","backgroundOpacity","polygonalTechniqueDescriptor","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","lineColor","lineFadeFar","lineFadeNear","solidLineTechniqueDescriptor","clipping","secondaryRenderOrder","secondaryWidth","secondaryColor","dashSize","gapSize","lineTechniqueDescriptor","line","fillTechniqueDescriptor","fill","standardTechniqueDescriptor","vertexColors","wireframe","roughness","metalness","alphaTest","depthTest","emissive","emissiveIntensity","refractionRatio","mapProperties","normalMap","normalMapProperties","displacementMap","displacementMapProperties","roughnessMap","roughnessMapProperties","emissiveMap","emissiveMapProperties","bumpMap","bumpMapProperties","metalnessMap","metalnessMapProperties","alphaMap","alphaMapProperties","standard","extrudedPolygonTechniqueDescriptor","height","floorHeight","defaultColor","defaultHeight","constantHeight","boundaryWalls","footprint","maxSlope","enableDepthPrePass","animateExtrusionDuration","animateExtrusion","lineColorMix","textTechniqueDescriptor","minZoomLevel","maxZoomLevel","mayOverlap","reserveSpace","shaderTechniqueDescriptor","primitive","params","isExtrudedLineTechnique","isStandardExtrudedLineTechnique","shading","isFillTechnique","isExtrudedPolygonTechnique","isStandardTechnique","isTerrainTechnique","isShaderTechnique","shader","dashes","textureCoordinateType","texturePropertyKey","textureProperty","isTextureBuffer","buffer","imageName","textureName","vertexStride","contour","winding","area","points","stride","q","OmvDecoder","m_projection","m_styleSetEvaluator","m_showMissingTechniques","m_dataFilter","m_featureModifiers","m_gatherFeatureAttributes","m_skipShortLabels","m_storageLevelOffset","m_enableElevationOverlay","m_languages","m_dataAdapters","styleSetDataFilter","StyleSetDataFilter","dataPreFilter","ComposedDataFilter","OmvProtobufDataAdapter","VTJsonDataAdapter","TiledGeoJsonDataAdapter","dataAdapter","adapter","canProcess","techniques","geometries","resetTechniques","DecodeInfo","id","m_decodedTileEmitter","OmvDecodedTileEmitter","getDecodedTile","layer","geometry","storageLevel","fm","doProcessPointFeature","applyKindFilter","getMatchingTechniques","GeometryKind","Label","cachedExprResults","processPointFeature","doProcessLineFeature","Line","featureId","processLineFeature","doProcessPolygonFeature","Area","processPolygonFeature","defaultKind","hasKindFilter","filter","wantsKind","OmvTileDecoder","ThemedTileDecoder","resolve","styleSetEvaluator","startTime","PerformanceTimer","now","decodedTile","m_featureFilter","languages","decodeTime","styleSet","options","configure","omvOptions","showMissingTechniques","filterDescription","featureModifiersIds","featureModifiers","OmvGenericFeatureFilter","fmId","createFeatureModifier","default","politicalView","OmvPoliticalViewFeatureModifier","povFeatureModifier","gatherFeatureAttributes","skipShortLabels","enableElevationOverlay","featureModifierId","tomTom","OmvTomTomFeatureModifier","OmvGenericFeatureModifier","OmvTileDecoderService","WorkerServiceManager","getInstance","register","serviceType","factory","TileDecoderService","start","warn","optionalParams","console","debug","info","trace","m_channel","Trace","update","prefix","Debug","Info","Log","Warn","WORKERCHANNEL_MSG_TYPE","workerMessage","StandardGeometryKind","GeometryKindSet","subset","elem","hasIntersection","TextureCoordinateType","PoiStackMode","PlacementToken","descriptors","evaluate","Dynamic","parseStringEncodedNumeral","getFeatureName","basePropName","abbreviation","isoCode","lang","attr","Float32Array","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","GeometryType","projectionName","sphereProjection","normalizedEquirectangularProjection","equirectangularProjection","attributeMap","$id","propName","isTextTechnique","isPoiTechnique","isLineMarkerTechnique","evaluateTechniqueAttr","EquirectangularProjection","geoToWorldScale","worldToGeoScale","latitudeSpanInRadians","longitudeSpanInRadians","sizeX","sizeY","TransverseMercatorProjection","m_phi0","m_lambda0","_unitScale","lon","TransverseMercatorUtils","POLE_RADIUS","rsq","POLE_RADIUS_SQ","nearestQuarter","deltaLon","abs","deltaLat","distanceToPoleSq","distanceToPole","sqrt","dir","offsetLon","clamped","clampGeoPoint","normalLon","offset","phi","lambda","B","atanh","atan2","outScale","tau","nx","ny","D","asin","sinh","pointsToCheck","E","POLE_EDGE_DEG","containsEastCut","containsCenterX","containsCenterY","alignLatitude","projected","vx","vy","vz","minX","minY","minZ","maxX","maxZ","lowerQ","upperQ","containsLowerQY","containsUpperQY","geoPoints","alignLongitude","latitudes","longitudes","altitudes","referencePoint","bad","good","POLE_EDGE","transverseMercatorProjection","tilingScheme","minElevation","maxElevation","m_tilingScheme","m_worldBox","worldExtent","m_worldDimensions","levelDimensionX","getLevelDimensionX","levelDimensionY","getLevelDimensionY","originX","originY","unprojectBox","halfQuadTreeSubdivisionScheme","SubTiles","iterator","ZCurveIterator","RowColumnIterator","parentKey","worldCoordinatesToTileKey","cx","cy","worldSizeX","worldSizeY","wrap","lower","upper","minVal","maxVal","southWestLongitude","longitudeInRadians","southWestLatitude","northEastLongitude","northEastLatitude","minTileKey","maxTileKey","columnCount","minColumn","maxColumn","minRow","maxRow","m_subdivisionScheme","divX","getSubdivisionX","divY","getSubdivisionY","attrValue","isEnv","getPropertyValue","geojsonvtExport","geojsonvt","indexes","indexId","updateIndex","URL","fetch","href","ok","statusText","index","maxZoom","indexMaxZoom","indexMaxPoints","tolerance","lineMetrics","promoteId","generateId","geojson","tile","getTile","feature","features","originalGeometry","getOriginalGeometry","VTJsonGeometryType","m_processor","m_logger","dataFilter","isArrayBufferLike","source","MapEnv","$layer","$geometryType","convertGeometryType","$level","$zoom","storageLevelOffset","tags","Point","pointGeometry","LineString","untiledPositions","coordinates","lineGeometry","positions","Polygon","polygon","rings","outline","ring","currX","currY","Unknown","Writer","BufferWriter","Op","fn","len","next","noop","State","writer","head","tail","states","writeByte","buf","pos","VarintOp","writeVarint64","writeFixed32","alloc","subarray","_push","uint32","int32","fromNumber","sint32","uint64","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","decode","string","write","fork","reset","ldelim","finish","BufferWriter_","Reader","BufferReader","indexOutOfRange","reader","writeLength","RangeError","create_array","isBuffer","readLongVarint","readFixed32_end","end","readFixed64","_slice","readFloatLE","readDoubleLE","read","skip","skipType","wireType","BufferReader_","zzDecode","m_processLayersDefault","m_processPointsDefault","m_processLinesDefault","m_processPolygonsDefault","m_layersToProcess","m_layersToIgnore","m_pointsToProcess","m_ignoredPoints","m_linesToProcess","m_linesToIgnore","m_polygonsToProcess","m_polygonsToIgnore","m_kindsToProcess","m_kindsToIgnore","processLayersDefault","processPointsDefault","processLinesDefault","processPolygonsDefault","minLevel","maxLevel","addItem","addItems","enabledKinds","concat","disabledKinds","layersToProcess","layersToIgnore","pointsToProcess","pointsToIgnore","linesToProcess","linesToIgnore","polygonsToProcess","polygonsToIgnore","kindsToProcess","kindsToIgnore","items","item","layerName","matchLayer","geometryTypes","geomType","classes","featureClass","matchClass","featureAttribute","geomTypes","featureClasses","description","layerItems","layerItem","geometryType","wantsFeature","hasOrIntersects","itemsToProcess","itemsToIgnore","defaultResult","filters","wantsLayer","wantsPointFeature","wantsLineFeature","wantsPolygonFeature","doProcessFeature","featureClassThing","matchItems","matchAttribute","tmpVectorA","tmpVectorB","tmpVectorC","positionAttr","getAttribute","array","uvAttr","uv","edgeAttr","edge","wallAttr","wall","indexAttr","getIndex","indices","middleVertex","j","lerpVectors","toArray","newIndices","v0","shift","v1","v2","shouldSplitTriangle","v3","count","itemSize","needsUpdate","setIndex","importScripts","PriorityListGroup","elements","element","foundIndex","splice","GroupedPriorityList","groups","getGroup","group","findGroup","remove","clear","otherGroup","clone","fun","normalizedPriority","m_instance","LoggerManagerImpl","m_loggers","channel","document","ConsoleChannel","WorkerChannel","loggerName","m_levelSetForAll","Logger","found","config","channels","Math2D","distSquared","ax","ay","bx","by","Box","xmax","ymax","contains","computeSquaredLineLength","squaredLineLength","xDiff","yDiff","distToSegmentSquared","px","py","l0x","l0y","l1x","l1y","lineLengthSuared","edge0","edge1","factor","smoothStep","smootherStep","inMin","inMax","outMin","outMax","min2","max2","isClamped","lowerBound","upperBound","easeInOutCubic","startValue","endValue","time","derivedCtor","baseCtors","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","headerMessage","m_headerLogged","createLogMethod","pop","severity","rest","join","nowFunc","performance","Date","getTime","getNowFunc","cloneInternal","cached","flags","props","candidate","parameters","optionValue","uri","resolveReferenceUri","resolvers","resolveUri","originalUrl","resolver","f1","f2","apply","u","maxXIndex","maxYIndex","xIndex","xIndexFloor","yIndex","yIndexFloor","swIndex","seIndex","nwIndex","neIndex","swElevation","seElevation","nwElevation","neElevation","xFrac","xFracInverse","yFrac","yFracInverse","location","kCSSColorTable","clamp_css_byte","clamp_css_float","f","parse_css_int","parseFloat","parse_css_float","css_hue_to_rgb","m1","m2","css_str","iv","replace","ep","fname","split","alpha","operatorDescriptors","promoteValue","promotedValue","evaluator","cachedResult","fromValue","builtin","builtins","defineOperator","includes","firstDynamicCondition","findIndex","evaluatedCondition","evaluatedBody","wrapValue","partialEvaluate","arg","param","interp","i1","stop","i0","iP","iN","tP","t0","t1","dt","wP","wN","pp","ppp","cP","c0","c1","cN","vP","vN","cubicInterpolate","keyIndex","prevKey","prevValue","base","defineOperators","CastOperators","ComparisonOperators","MathOperators","StringOperators","ColorOperators","TypeOperators","MiscOperators","FlowOperators","ArrayOperators","ObjectOperators","FeatureOperators","MapOperators","VectorOperators","VALID_ELEMENT_TYPES","checkElementTypes","ty","checkArray","operators","checkArrayLength","at","rgba","rgbaToHex","rgb","rgbToHex","hsl","euclideanModulo","hslToHex","compare","strict","right","state","conditionalCast","all","any","none","boolean","number","pixels","scaleFactor","ppi","acos","ceil","ln","ln2","log10","pi","coalesce","LookupMode","lookupMember","lookupMode","memberName","in","downcase","toLocaleLowerCase","upcase","toLocaleUpperCase","typeof","isVector","ctor","toVector","VectorCtor","fromArray","_value","vector2","vector3","vector4","emptyEnv","_context","preserve","changed","newBranch","newCondition","deps","Condition","instantiatedBranch","Character","Token","isSpace","codepoint","Tab","Lf","Cr","Space","isNumber","_0","_9","isLetter","A","Z","isIdentChar","isLetterOrNumber","Dollar","Dot","LBracket","RBracket","tokenSpell","token","Eof","Identifier","Comma","LParen","RParen","Exclaim","TildeEqual","CaretEqual","DollarEqual","EqualEqual","ExclaimEqual","Less","Greater","LessEqual","GreaterEqual","BarBar","AmpAmp","Lexer","m_token","m_index","m_char","m_text","yylex","codePointAt","yyinp","ch","SingleQuote","DoubleQuote","Equal","Caret","Tilde","Bar","Amp","getEqualityOp","getRelationalOp","lex","parseLogicalOr","yyexpect","hasAttribute","parseLiteral","parseUnary","parsePrimary","parseRelational","parseEquality","expressions","parseLogicalAnd","Requests","WORKER_SERVICE_MANAGER_SERVICE_ID","isUnknownServiceError","Request","isResponseMessage","WorkerTilerProtocol","isRegisterIndexRequest","RegisterIndex","isUpdateIndexRequest","UpdateIndex","isTileRequest","TileRequest","abortController","AbortController","signal","abort","WorkerDecoderProtocol","DecoderMessageName","isConfigurationMessage","Configuration","isDecodeTileRequest","DecodeTileRequest","isTileInfoRequest","TileInfoRequest","IdentityProjection","identityProjection","getLongitudeQuadrant","oneOverPI","quadrantIndex","lengthOfVector3","makeBox3","halfEquatorialRadius","minLongitude","maxLongitude","minLongitudeQuadrant","maxLongitudeQuadrant","xMin","xMax","yMin","yMax","cosMaxLongitude","sinMaxLongitude","xCenter","xExtent","yCenter","yExtent","minLatitude","maxLatutide","zMax","zMin","zCenter","zExtent","SphereProjection","Spherical","_minElevation","radius","worldpoint","cosLatitude","project","parallelRadiusSq","parallelRadius","bounds","mid","midX","midY","cosSouth","sinSouth","cosWest","sinWest","cosNorth","sinNorth","cosEast","sinEast","cosMidX","sinMidX","cosMidY","sinMidY","rMax","rMin","_worldBox","mx","my","gx","gy","cosLongitude","sinLongitude","sinLatitude","visitTileKey","subTileKey","getSubTileKeys","hereTilingScheme","TilingScheme","webMercatorTilingScheme","mercatorTilingScheme","polarTilingScheme","transform","intersectsSlab","rayDir","axis","dot","finv","t2","tmpVec","tmpT","OrientedBox3","rotationMatrix","copy","extractBasis","newBox","multiplyScalar","matrix","Matrix4","makeBasis","frustumOrPlanes","planes","plane","distanceToPoint","ray","origin","direction","dx","dy","dz","distanceToPointSquared","subVectors","lengths","getComponent","dd","theme","visitFunc","visit","styles","styleSetName","decodeThemedTile","StyleSetEvaluator","emptyTechniqueDescriptor","StyleConditionClassifier","_whenExpr","savedStyle","switchStyle","_style","enclosingExpr","children","matched","matchVarStringComparison","_geometryType","saved","OptimizedSubSetKey","keyUpdateNeeded","envLayer","envGeometryType","updateKey","cachedStyleSet","makeDecodedTechnique","attrName","isVector2","isVector3","isVector4","toJSON","m_techniques","m_exprPool","ExprPool","m_cachedResults","m_styleConditionClassifier","m_subStyleSetCache","m_definitionExprCache","m_tmpOptimizedSubSetKey","m_emptyEnv","m_featureDependencies","m_definitions","resolveStyleReferences","isJsonExprReference","definitionName","isActualSelectorDefinition","resolveReferences","techniqueRenderOrder","styleSetIndex","_styleSetIndex","computeDefaultRenderOrder","compileStyleSet","m_previousResult","m_previousEnv","optimizedSubSetKey","m_layer","m_geometryType","m_zoomLevel","searchedStyleSet","getOptimizedStyleSet","currStyle","processStyle","techinque","_index","subSetKey","optimizedStyleSet","createPreFilteredStyleSet","compileStyle","checkStyleDynamicAttributes","when","classify","intern","_minZoomLevelExpr","_maxZoomLevelExpr","checkZoomLevel","getTechniqueForStyleMatch","final","zoomLevel","_dynamicTechniques","dynamicAttributes","evaluateTechniqueProperties","getDynamicTechniqueKey","createTechnique","_staticTechnique","dynamicAttrKey","_attrName","_dynamicTechniqueAttributes","_dynamicFeatureAttributes","_dynamicForwardedAttributes","_staticAttributes","dynamicFeatureAttributes","dynamicTechniqueAttributes","dynamicForwardedAttributes","targetStaticAttributes","techniqueDescriptor","processAttribute","_usesFeatureState","attrScope","replacement","attrExpr","dynamicAttrs","_styleSet","m_booleanLiterals","m_numberLiterals","m_stringLiterals","m_objectLiterals","m_arrayLiterals","m_varExprs","m_hasAttributeExprs","m_matchExprs","m_caseExprs","m_interpolateExprs","m_stepExprs","m_callExprs","literal","branchesMatching","calls","currEdgeStart","currEdgeGoal","prevEdgeStart","prevEdgeGoal","indexBuffer","vertexOffset","polygonContour","polygonContourEdges","isExtruded","addFootprintEdges","wallEdgeSlope","vFootprint0","vRoof0","vFootprint1","vRoof1","prevEdgeIdx","v0x","v0y","v1x","v1y","normalize","vFoot0","ThreeBufferUtils","getBufferElementType","fromThreeBufferAttribute","bufferAttribute","itemCount","normalized","fromThreeInterleavedBufferAttribute","fromThreeBufferGeometry","bufferGeometry","techniqueIndex","vertexAttributes","attributeNames","attributes","vertexAttribute","posAttr","Unspecified","WorkerService","m_decoder","connect","handleDecodeTileRequest","handleTileInfoRequest","handleConfigurationMessage","getProjection","decodeTile","transferBufferAttribute","attribute","byteLength","geom","interleavedVertexAttributes","edgeIndex","objInfos","attachments","attachment","addBuffersToTransferList","getTileInfo","tileInfo","TilerService","tiler","GeoJsonTiler","handleRegisterIndexRequest","handleUpdateIndexRequest","handleTileRequest","registerIndex","m_factories","m_services","m_service","workerServiceDescriptor","CreateService","targetServiceId","targetServiceType","DestroyService","destroy","projectedBoundingBox","tileBounds","tileSize","getCenter","getSize","tileSizeOnScreen","CommandKind","isMoveToCommand","command","MoveTo","isLineToCommand","LineTo","isClosePathCommand","ClosePath","visitOmv","vectorTile","layers","visitLayer","visitOmvLayer","endVisitLayer","com","mapbox","pb","Tile","GeomType","UNKNOWN","POINT","visitPointFeature","LINESTRING","visitLineFeature","POLYGON","visitPolygonFeature","FeatureAttributes","visitAttribute","GeometryCommands","geometryCount","xCoords","yCoords","commands","cmdIndex","xx","yy","visitCommand","propertyCategories","readAttributes","defaultAttributes","attrs","replaceReservedName","category","isLong","simplifiedValue","createFeatureEnv","greaterThan","MAX_SAFE_INTEGER","decodeFeatureId","asGeometryType","processor","m_geometryCommands","payload","proto","m_tileKey","layerExtents","currentPolygon","currentRing","wasm","WebAssembly","Instance","Module","low","high","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","radix","radixToPower","power","mul","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","gt","greaterThanOrEqual","gte","ge","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","LN2","approxRes","approxRem","modulo","rem_u","rem_s","mod","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","$protobuf","$Reader","$util","$root","roots","valuesById","tag","Layer","decodeDelimited","fromObject","TypeError","toObject","arrays","defaults","stringValue","floatValue","doubleValue","intValue","uintValue","sintValue","boolValue","long","Feature","end2","version","protobuf","build","rpc","Function","ctx","arguments","pending","b64","s64","encode","parts","chunk","fromCharCode","charCodeAt","_listeners","on","evt","off","listeners","emit","f32","f8b","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","readFloat_ieee754","readUint","uint","mantissa","NaN","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","moduleName","eval","c2","SIZE","MAX","slab","zero","toLong","part0","part1","part2","writeStringBuffer","writeBytesBuffer","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","callback","setTimeout","endedByRPC","tempTileOrigin","tempVertOrigin","tempVertNormal","tempFootDisp","tempRoofDisp","tmpV2","tmpV2r","tmpV3","tmpV3r","tmpV4","tempP0","tempP1","tempPreviousTangent","tmpPointA","tmpPointB","tmpPointC","tmpPointD","tmpPointE","tmpLine","Line3","MAX_CORNER_ANGLE","createIndexBufferAttribute","maxValue","MeshBuffers","normals","textureCoordinates","colors","extrusionAxis","edgeIndices","texts","pathLengths","stringCatalog","imageTextures","featureStarts","offsetDirections","LineType","m_decodeInfo","m_meshBuffers","m_geometries","m_textGeometries","m_textPathGeometries","m_pathGeometries","m_poiGeometries","m_simpleLines","m_solidLines","m_sources","m_maxGeometryHeight","processFeatureCommon","meshBuffers","findOrCreateMeshBuffers","shouldCreateTextGeometries","wantsPoi","poiTechnique","imageTextureValue","composeTechniqueTextureName","getFeatureId","textTechnique","getFeatureText","addText","webMercatorTile2TargetTile","localLines","worldLines","uvs","offsets","localLineSegments","tileWidth","tileHeight","tileSizeWorld","computeTexCoords","texCoordinateType","hasUntiledLines","hasIndividualLineSegments","hasContinuousLineSegments","otherTexCoordType","getTextureCoordinateType","getComputeTexCoordsFunc","isSpecialDashesLineTechnique","polyline","untiledLine","lineDist","distanceTo","lineLength","pointCount","lastSegmentOffset","localLine","worldLine","lineUvs","segmentOffsets","pos1","pos2","findRelativePositionInLine","segmentLength","segOffsets","offs","lineOffsets","wantCircle","techniqueName","isLineTechnique","isSolidLineTechnique","lineType","Simple","Complex","applyLineTechnique","validLines","worldUnitsPerPixel","minEstimatedLabelLength","minEstimatedLabelLengthSqr","splitJaggyLines","path","pathLengthSqr","lineMarkerTechnique","aLine","isLabelRejectionLineTechnique","worldPath","ExtrudedLine","techniqueCaps","caps","addCircle","triangulateLine","objectBounds","bbox","polygons","isFilled","isStandard","isPolygon","clipRing","ringContour","coords","clipPolygon","coord","Ring","isLine","applyPolygonTechnique","needIndividualLineSegments","lines","ringLength","nextIdx","nextX","nextY","isOutline","createGeometries","processSimpleLines","processLines","decodedTechniques","textGeometries","poiGeometries","textPathGeometries","pathGeometries","copyrightHolderIds","maxGeometryHeight","maxCornerAngle","computeBoundingBoxSizeSqr","startIndex","endIndex","MIN_SAFE_INTEGER","pathsToCheck","splitIndex","tangent","theta","firstPathLengthSqr","secondPathLengthSqr","TileSpace","tilePos","tileExtents","divideScalar","EquirectangularSpace","FeatureSpace","linesGeometry","featureAttributes","lineGroup","lineGroupGeometries","hasNormalsAndUvs","LineGroup","SolidLine","ExtrudedPolygon","extrudedPolygonTechnique","fillTechnique","texCoordType","featureHeight","styleSetDefaultHeight","featureMinHeight","ExtrusionFeatureDefs","MIN_BUILDING_HEIGHT","styleSetConstantHeight","getOptionValue","featureStride","isSpherical","hasEdges","colorValue","featureColor","isColorStringValid","startIndexCount","ringIndex","vertices","polygonBaseVertex","insideExtents","holes","hole","triangles","originalVertexCount","BufferGeometry","positionArray","uvArray","edgeArray","wallArray","BufferAttribute","setAttribute","Uint32BufferAttribute","Uint16BufferAttribute","subdivision","EdgeLengthGeometrySubdivisionModifier","SubdivisionMode","NoDiagonals","modify","SphericalGeometrySubdivisionModifier","world2tile","geomIndex","getScaleFactor","i2","addEdges","addWalls","techniqueIdx","positionElements","positionCount","texCoordCount","linesArray","buffers","featureBaseVertex","featureVertexCount","hasFootprint","tmpEdgeA","tmpEdgeB","firstRingVertex","prevRingVertex","currRingVertex","maxRingVertex","nextRingVertex","prevPos","currPos","nextPos","lineOffset","closestPointToPoint","dist","tmpV","tmpNormal","tmpTangent0","tmpTangent1","tmpBitangent","LINE_VERTEX_ATTRIBUTES","NORMAL_UV_VERTEX_ATTRIBUTES","LINE_VERTEX_ATTRIBUTES_NUV","HP_LINE_VERTEX_ATTRIBUTES","HP_LINE_VERTEX_ATTRIBUTES_NUV","LineGeometry","getVertexDescriptor","highPrecision","createLineGeometry","segments","tangents","baseVertex","hasSegmentOffsets","hasTexCoords","sum","sqrLength","lineCoverage","isClosed","tmpVertices","addVertexPair","T1","T2","segment","extrusionCoord","highComp","fround","lowComp","setComponent","surfaceNormal","angle","bt","cross","computeBitangent","createSimpleLineGeometry","isSimple","m_geometry","vertexDescriptor","InterleavedBuffer","descr","InterleavedBufferAttribute","createGeometry","UNIT_Z","POINTS","BEVEL_POINTS","STEP","lineAngle","SECTORS_IN_CIRCLE","startWithCircle","endWithCircle","angleVec","prevBt","averageBt","p2","p3","useBevel","angleTo","inclineWidth","inBuffer","startOffset","outBuffer","xd","yd","zd","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","prev","list","queue","steiner","getLeftmost","sort","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","again","ear","pass","zOrder","prevZ","nextZ","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","intersects","locallyInside","isValidDiagonal","splitPolygon","hx","hy","qx","tanMin","sectorContainsSector","findHoleBridge","leftmost","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","a2","Node","b2","an","bp","deviation","polygonArea","trianglesArea","flatten","dimensions","holeIndex","tmpBA","tmpQP","tmpA","tmpB","computeIntersection","clip","outputList","inputList","currentPoint","prevPoint","VERTEX_POSITION_CACHE","SubdivisionModifier","subdivisionMode","All","m_projectedBox","m_maxLengthX","m_maxLengthY","m_maxLength","shouldSplitAB","shouldSplitEdge","shouldSplitBC","shouldSplitCA","ab","bc","ca","maxDistance","aa","bb","cc","beta","gamma","DEFAULT_RATIO_MIN","DEFAULT_RATIO_MAX","pov","m_countryCode","rewriteEnvironment","isPoliticalViewLayer","updateEnvironment","countryCode","getAlternativePov","isWood","isHospital","isCemetery","isIndustrial","isPark","isBuiltup","isWater","isRoadLabel","isRoadPath","isRoadStreet","isRoadPrimary","isRoadSecondary","isRailway","isFerry","isAeroway","isBorder","isCountryLabel","isCountyLabel","isRegionLabel","isStateLabel","isPlaceLabel","isWaterLabel","isMarineLabel","isPoiLabel","isBuilding","extrude","min_height","isTunnel","structure","isBridge","newClass","class","worldP","localP","convertPoint","convertLineStringGeometry","convertLineGeometry","lineString","convertRings","convertPolygonGeometry","convertPointGeometry","featureCollection","getSqSegDist","createFeature","calcLineBBox","calcBBox","convertFeature","convertLine","convertLines","out","projectX","projectY","x0","y0","simplify","first","sqTolerance","maxSqDist","minPosToMid","posToMid","y2","k1","k2","minAll","maxAll","clipped","newGeometry","clipPoints","clipLine","clipLines","newGeom","trackMetrics","segLen","newSlice","intersect","intersectX","intersectY","az","exited","addPoint","shiftFeatureCoords","newFeatures","shiftCoords","newPolygon","k","newPoints","transformTile","transformed","z2","tx","transformPoint","createTile","numPoints","numSimplified","numFeatures","addFeature","simplified","addLine","tileFeature","isOuter","rewind","GeoJSONVT","dest","extend","convert","tiles","tileCoords","timeEnd","stats","total","merged","splitTile","toID","cz","tl","bl","tr","br","k3","k4","z0"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,O,woBCOjB,cACA,QACA,QAEA,QAIA,QAEA,OACA,QACA,QAEA,WAEA,MAAMC,EAAgB,IAAI,EAAAC,cAEpBC,EAAmB,IAAI,EAAAC,iBAuB7B,MAAaC,EAAb,cAIa,KAAAC,WAAa,IAAIC,KAJ9B,qBAiBA,kBAAMC,EAUF,UAAUC,GACN,MAAMC,EAAe,IAAIL,EAEzB,OADAI,EAAKE,OAAOC,KAAKC,SAAUH,GACpBA,EAGX,qBAAqBD,EAAuBK,IAI5C,wBAAwBL,EAA0BK,IAIlD,uBAAuBL,EAAyBK,IAIhD,uBAAuBL,EAAyBK,IAIhD,uBAAuBL,EAAyBK,IAIhD,aAAaL,EAAeK,GACxBA,EAAQR,WAAWS,IAAIN,EAAKlC,MAGhC,sBAAsBkC,EAAwBK,GAC1CA,EAAQR,WAAWS,IAAIN,EAAKlC,MAGhC,cAAckC,EAAgBK,GAG1B,OAFAL,EAAKO,KAAKC,QAAQC,GAAaA,EAAUP,OAAOC,KAAME,IAE9CL,EAAKU,IACT,IAAK,qBACDL,EAAQM,UAAW,EACnB,MACJ,IAAK,gBACDN,EAAQO,cAAe,EACvBP,EAAQR,WAAWS,IAAI,UACvBD,EAAQR,WAAWS,IAAI,OACvB,MACJ,IAAK,KACDD,EAAQR,WAAWS,IAAI,OACvB,MACJ,IAAK,OACL,IAAK,kBACL,IAAK,2BACDD,EAAQR,WAAWS,IAAI,SACvB,MACJ,IAAK,gBACDD,EAAQR,WAAWS,IAAI,kBAOnC,eAAeN,EAAiBK,GAC5BL,EAAKxB,MAAM0B,OAAOC,KAAME,GACxBL,EAAKa,SAASL,QAAQ,EAAEM,EAAGC,KAAYA,EAAOb,OAAOC,KAAME,IAC3DL,EAAKgB,SAASd,OAAOC,KAAME,GAG/B,cAAcL,EAAgBK,GAC1BL,EAAKa,SAASL,QAAQ,EAAES,EAAWF,MAC/BE,EAAUf,OAAOC,KAAME,GACvBU,EAAOb,OAAOC,KAAME,KAExBL,EAAKgB,SAASd,OAAOC,KAAME,GAG/B,cAAcL,EAAgBK,GAC1BL,EAAKkB,MAAMhB,OAAOC,KAAME,GACxBL,EAAKmB,aAAajB,OAAOC,KAAME,GAC/BL,EAAKoB,MAAMZ,QAAQ,EAAEM,EAAGtC,KAAWA,EAAM0B,OAAOC,KAAME,IAG1D,qBAAqBL,EAAuBK,GACxCL,EAAKkB,MAAMhB,OAAOC,KAAME,GACxBL,EAAKoB,MAAMZ,QAAQ,EAAEM,EAAGtC,KAAWA,EAAM0B,OAAOC,KAAME,KAE9D,OA/FW,EAAAD,SAAW,IAAIL,EA+F1B,GAhGA,GAwHA,SAAgBsB,EAAWC,GACvB,OAAOC,MAAMC,QAAQF,IAAMA,EAAEG,OAAS,GAAqB,iBAATH,EAAE,GAexD,IAAYI,EAhBZ,eAgBA,SAAYA,GAIR,qBAKA,6BAKA,yBAdJ,CAAYA,EAAA,EAAAA,YAAA,EAAAA,UAAS,KAwBrB,MAAsBC,EAMlB,cAAcnD,GACV,OAAOA,aAAiBmD,EAU5B,aAAaC,GAGT,OAFe,IAAI,EAAAC,WAAWD,GACVE,QAyBxB,gBACIC,EACAC,EACAC,GAWA,OAAOC,EAAUH,OARGI,IAAhBH,EACM,CACIA,cACAI,YAAa,IAAItC,IACjBuC,MAAOJ,GAAuB,IAAIK,UAEtCH,GAed,SACII,EACAC,EAAmBd,EAAUe,MAC7BJ,GAEA,OAAOlC,KAAKD,OACRV,EACA,IAAI,EAAAkD,qBAAqBlD,EAAe+C,EAAKC,EAAOH,IAY5D,YAAYhC,GACR,OAAOF,KAAKD,OAAOR,EAAkBW,GAMzC,eAII,OAHKF,KAAKwC,iBACNxC,KAAKwC,eAAiB5C,EAAwB6C,GAAGzC,OAE9CA,KAAKwC,eAShB,OAAOE,GACH,OAAOA,EAAKvC,IAAIH,MAGpB,SACI,OAAO,IAAI2C,GAAiBC,UAAU5C,MAM1C,YAII,YAHyBgC,IAArBhC,KAAK6C,cACL7C,KAAK6C,YAAc7C,KAAK8C,iBAErB9C,KAAK6C,aA7HpB,SAsKA,MAAaE,UAAgBvB,EACzB,YAAqB7D,GACjBqF,QADiB,KAAArF,OAKrB,OAAwBsF,EAAuC/C,GAC3D,OAAO+C,EAAQC,aAAalD,KAAME,GAI5B,gBACN,OAAO,GAZf,YAmBA,MAAsBiD,UAAoB3B,EAMtC,iBAAiBnD,GACb,cAAeA,GACX,IAAK,UACD,OAAO,IAAI+E,EAAmB/E,GAClC,IAAK,SACD,OAAO,IAAIgF,EAAkBhF,GACjC,IAAK,SACD,OAAO,IAAIiF,EAAkBjF,GACjC,IAAK,SACD,OAAiB,OAAVA,EAAiBkF,EAAgBtD,SAAW,IAAIuD,EAAkBnF,GAC7E,QACI,MAAM,IAAIoF,MAAM,oCAAoCpF,OAOtD,gBACN,OAAO,GAzBf,gBAgCA,kBAAakF,UAAwBJ,EAKjC,cACIH,QAHK,KAAA3E,MAAe,KAOxB,OAAwB4E,EAAuC/C,GAC3D,OAAO+C,EAAQS,qBAAqB1D,KAAME,GAIpC,gBACN,OAAO,GAEf,OAjBW,EAAAD,SAAW,IAAIsD,EAiB1B,GAlBA,GAAa,EAAAA,kBAuBb,MAAaH,UAA2BD,EACpC,YAAqB9E,GACjB2E,QADiB,KAAA3E,QAKrB,OAAwB4E,EAAuC/C,GAC3D,OAAO+C,EAAQU,wBAAwB3D,KAAME,IAPrD,uBAcA,MAAamD,UAA0BF,EACnC,YAAqB9E,GACjB2E,QADiB,KAAA3E,QAKrB,OAAwB4E,EAAuC/C,GAC3D,OAAO+C,EAAQW,uBAAuB5D,KAAME,IAPpD,sBAcA,MAAaoD,UAA0BH,EAGnC,YAAqB9E,GACjB2E,QADiB,KAAA3E,QAOrB,oB,UAII,YAH6B2D,IAAzBhC,KAAK6D,kBACL7D,KAAK6D,gBAAoE,QAArD,EAAyB,QAAzB,EAAG,EAAAC,KAAKnC,MAAM3B,KAAK3B,cAAM,QAAI,EAAA0F,OAAOpC,MAAM3B,KAAK3B,cAAM,QAAI,MAEtD,QAA3B,EAAO2B,KAAK6D,uBAAe,aAAI7B,EAInC,OAAwBiB,EAAuC/C,GAC3D,OAAO+C,EAAQe,uBAAuBhE,KAAME,IAnBpD,sBA0BA,MAAasD,UAA0BL,EACnC,YAAqB9E,GACjB2E,QADiB,KAAA3E,QAIrB,qBACI,OAAO+C,MAAMC,QAAQrB,KAAK3B,OAI9B,OAAwB4E,EAAuC/C,GAC3D,OAAO+C,EAAQgB,uBAAuBjE,KAAME,IAXpD,sBAkBA,MAAagE,UAAyB1C,EAClC,YAAqB7D,GACjBqF,QADiB,KAAArF,OAKrB,OAAwBsF,EAAuC/C,GAC3D,OAAO+C,EAAQkB,sBAAsBnE,KAAME,GAIrC,gBACN,OAAO,GAZf,qBAmBA,MAAakE,UAAiB5C,EAG1B,YAAqBjB,EAAqBH,GACtC4C,QADiB,KAAAzC,KAAqB,KAAAH,OAS1C,eACI,OAAOJ,KAAKI,KAIhB,OAAwB6C,EAAuC/C,GAC3D,OAAO+C,EAAQoB,cAAcrE,KAAME,GAI7B,gBACN,MAAMoE,EAAatE,KAAKsE,YAAc,EAAAhF,cAAciF,YAAYvE,KAAKO,IAErE,SAAI+D,GAAcA,EAAWE,mBAAqBF,EAAWE,kBAAkBxE,QAIxEA,KAAKI,KAAKqE,KAAKC,GAAKA,EAAEC,cA7BrC,aAyCA,MAAaC,UAAkBpD,EAyB3B,YACanD,EACAqC,EACAG,GAETmC,QAJS,KAAA3E,QACA,KAAAqC,WACA,KAAAG,WAtBb,yBAAyBgE,GACrB,cAAeA,GACX,IAAK,SACL,IAAK,SACD,OAAO,EACX,IAAK,SACD,IAAKzD,MAAMC,QAAQwD,IAAyB,IAAhBA,EAAKvD,OAC7B,OAAO,EAEX,MAAMwD,SAAmBD,EAAK,GAC9B,OAAkB,WAAdC,GAAwC,WAAdA,IACnBD,EAAKE,MAAMzG,UAAYA,IAAMwG,GAG5C,QACI,OAAO,GAanB,OAAwB7B,EAAuC/C,GAC3D,OAAO+C,EAAQ+B,eAAehF,KAAME,GAI9B,gBACN,OACIF,KAAK3B,MAAMsG,aACX3E,KAAKU,SAAS+D,KAAK,EAAE9D,EAAGC,KAAYA,EAAO+D,cAC3C3E,KAAKa,SAAS8D,aA3C1B,cAmDA,MAAaM,UAAiBzD,EAC1B,YAAqBd,EAAwCG,GACzDmC,QADiB,KAAAtC,WAAwC,KAAAG,WAK7D,OAAwBoC,EAAuC/C,GAC3D,OAAO+C,EAAQiC,cAAclF,KAAME,GAI7B,gBACN,OACIF,KAAKU,SAAS+D,KAAK,EAAEU,EAAMvE,KAAYuE,EAAKR,aAAe/D,EAAO+D,cAClE3E,KAAKa,SAAS8D,aAd1B,aAsBA,MAAaS,UAAiB5D,EAC1B,YACaT,EACAC,EACAC,GAET+B,QAJS,KAAAjC,QACA,KAAAC,eACA,KAAAC,QAMb,OAAwBgC,EAAuC/C,GAC3D,OAAO+C,EAAQoC,cAAcrF,KAAME,GAI7B,gBACN,OACIF,KAAKe,MAAM4D,aACX3E,KAAKgB,aAAa2D,aAClB3E,KAAKiB,MAAMwD,KAAK,EAAE9D,EAAGtC,KAAWA,EAAMsG,cAnBlD,aAgCA,MAAaW,UAAwB9D,EACjC,YACajD,EACAwC,EACAE,GAET+B,QAJS,KAAAzE,OACA,KAAAwC,QACA,KAAAE,QAMb,OAAwBgC,EAAuC/C,GAC3D,OAAO+C,EAAQsC,qBAAqBvF,KAAME,GAIpC,gBACN,OAAOF,KAAKe,MAAM4D,aAAe3E,KAAKiB,MAAMwD,KAAK,EAAE9D,EAAGtC,KAAWA,EAAMsG,cAhB/E,oBAyBA,MAAMhC,EACF,UAAU9C,GACN,OAAOA,EAAKE,OAAOC,UAAMgC,GAG7B,qBAAqBnC,EAAuBK,GACxC,OAAO,KAGX,wBAAwBL,EAA0BK,GAC9C,OAAOL,EAAKxB,MAGhB,uBAAuBwB,EAAyBK,GAC5C,OAAOL,EAAKxB,MAGhB,uBAAuBwB,EAAyBK,GAC5C,OAAOL,EAAKxB,MAGhB,uBAAuBwB,EAAyBK,GAC5C,OAAIL,EAAKxB,iBAAiBe,EAAMoG,QACrB,CAAC,cAAe3F,EAAKxB,MAAMoH,EAAG5F,EAAKxB,MAAMqH,GACzC7F,EAAKxB,iBAAiBe,EAAMuG,QAC5B,CAAC,cAAe9F,EAAKxB,MAAMoH,EAAG5F,EAAKxB,MAAMqH,EAAG7F,EAAKxB,MAAMuH,GACvD/F,EAAKxB,iBAAiBe,EAAMyG,QAC5B,CAAC,cAAehG,EAAKxB,MAAMoH,EAAG5F,EAAKxB,MAAMqH,EAAG7F,EAAKxB,MAAMuH,EAAG/F,EAAKxB,MAAMyH,GAEzE,CAAC,UAAWjG,EAAKxB,OAG5B,aAAawB,EAAeK,GACxB,MAAO,CAAC,MAAOL,EAAKlC,MAGxB,sBAAsBkC,EAAwBK,GAC1C,MAAO,CAAC,MAAOL,EAAKlC,MAGxB,cAAckC,EAAgBK,GAC1B,MAAO,CAACL,EAAKU,MAAOV,EAAKO,KAAK2F,IAAIzF,GAAaN,KAAK4C,UAAUtC,KAGlE,eAAeT,EAAiBK,GAC5B,MAAMQ,EAAwB,GAC9B,IAAK,MAAOsF,EAAOC,KAASpG,EAAKa,SAC7BA,EAASwF,KAAKF,EAAOhG,KAAK4C,UAAUqD,IAExC,MAAO,CAAC,QAASjG,KAAK4C,UAAU/C,EAAKxB,UAAWqC,EAAUV,KAAK4C,UAAU/C,EAAKgB,WAGlF,cAAchB,EAAgBK,GAC1B,MAAMQ,EAAwB,GAC9B,IAAK,MAAOI,EAAWmF,KAASpG,EAAKa,SACjCA,EAASwF,KAAKlG,KAAK4C,UAAU9B,GAAYd,KAAK4C,UAAUqD,IAE5D,MAAO,CAAC,UAAWvF,EAAUV,KAAK4C,UAAU/C,EAAKgB,WAGrD,cAAchB,EAAgBK,GAC1B,MAAMiG,EAAoB,CAAC,QAO3B,OANAA,EAAOD,KAAKlG,KAAK4C,UAAU/C,EAAKkB,QAChCoF,EAAOD,KAAKlG,KAAK4C,UAAU/C,EAAKmB,eAChCnB,EAAKoB,MAAMZ,QAAQ,EAAE1B,EAAKN,MACtB8H,EAAOD,KAAKvH,GACZwH,EAAOD,KAAKlG,KAAK4C,UAAUvE,MAExB8H,EAGX,qBAAqBtG,EAAuBK,GACxC,MAAMiG,EAAoB,CAAC,cAAetG,EAAKtB,MAM/C,OALA4H,EAAOD,KAAKlG,KAAK4C,UAAU/C,EAAKkB,QAChClB,EAAKoB,MAAMZ,QAAQ,EAAE1B,EAAKN,MACtB8H,EAAOD,KAAKvH,GACZwH,EAAOD,KAAKlG,KAAK4C,UAAUvE,MAExB8H,GAIf,SAASpE,EACL8C,EACAuB,GAEA,GAAIhF,MAAMC,QAAQwD,GACd,OAaR,SAASwB,EAAUxB,EAAiBuB,GAChC,MAAM7F,EAAKsE,EAAK,GAEhB,GAAkB,iBAAPtE,EACP,MAAM,IAAIkD,MAAM,oCAGpB,OAAQlD,GACJ,IAAK,OACL,IAAK,MACD,OAAO,IAAI6D,EAAS,IAAK,CAACiC,EAAU,CAAC9F,EAAG+F,MAAM,MAAOzB,EAAKyB,MAAM,OAEpE,IAAK,MACD,OAiLZ,SAA0BzB,EAAiBuB,GACvC,GAAuB,iBAAZvB,EAAK,GACZ,MAAM,IAAIpB,MAAM,qCAEpB,QAA+BzB,IAA3BoE,EACA,MAAM,IAAI3C,MAAM,gCAEpB,MAAM9F,EAAOkH,EAAK,GAElB,GAAIuB,EAAuBnE,YAAYsE,IAAI5I,GACvC,MAAM,IAAI8F,MAAM,yBAAyB9F,MAG7C,KAAMA,KAAQyI,EAAuBvE,aACjC,MAAM,IAAI4B,MAAM,eAAe9F,gBAGnC,MAAM6I,EAAcJ,EAAuBlE,MAAMjE,IAAIN,GACrD,QAAoBqE,IAAhBwE,EACA,OAAOA,EAEX,IACIL,EADAM,EAAkBL,EAAuBvE,YAAYlE,GAEzD,GAAI,EAAA+I,oBAAoBD,GACpB,OAAOjF,EAAKmF,SAASF,GAClB,GAAI,EAAAG,kBAAkBH,GAAkB,CAC3C,GAAI,EAAAI,iCAAiCJ,EAAgBpI,OAGjD,OAAOmD,EAAKmF,SAAS,EAAAG,yCAAyCL,EAAgBpI,QAC3E,IAAI6C,EAAWuF,EAAgBpI,OAGlC,OAAOmD,EAAKmF,SAASF,EAAgBpI,OAFrCoI,EAAkBA,EAAgBpI,MAM1C,IAAI6C,EAAWuF,GAQX,MAAM,IAAIhD,MAAM,0BAA0B9F,KAP1CyI,EAAuBnE,YAAY9B,IAAIxC,GACvC,IACIwI,EAASpE,EAAU0E,EAAiBL,G,QAEpCA,EAAuBnE,YAAY8E,OAAOpJ,GAMlD,OADAyI,EAAuBlE,MAAM8E,IAAIrJ,EAAMwI,GAChCA,EAjOQc,CAAiBpC,EAAMuB,GAElC,IAAK,MACD,OAyBZ,SAAsBvB,EAAiBuB,GACnC,QAAgBpE,IAAZ6C,EAAK,GACL,OAAOqC,EAAa,MAAOrC,EAAMuB,GAErC,MAAMzI,EAAOkH,EAAK,GAClB,GAAoB,iBAATlH,EACP,MAAM,IAAI8F,MAAM,qCAEpB,OAAO,IAAIV,EAAQpF,GAjCJwJ,CAAatC,EAAMuB,GAE9B,IAAK,MACD,OAiCZ,SAAsBvB,EAAiBuB,GACnC,QAAgBpE,IAAZ6C,EAAK,GACL,OAAOqC,EAAa,MAAOrC,EAAMuB,GAErC,MAAMzI,EAAOkH,EAAK,GAClB,GAAoB,iBAATlH,EACP,MAAM,IAAI8F,MAAM,qCAEpB,OAAO,IAAIS,EAAiBvG,GAzCbyJ,CAAavC,EAAMuB,GAE9B,IAAK,UACD,OAyCZ,SAA0BvB,GACtB,MAAMwC,EAAMxC,EAAK,GACjB,GAAY,OAARwC,GAA+B,iBAARA,EACvB,MAAM,IAAI5D,MAAM,uCAEpB,OAAO,IAAID,EAAkB6D,GA9CdC,CAAiBzC,GAE5B,IAAK,QACD,OA8CZ,SACIA,EACAuB,GAEA,GAAIvB,EAAKvD,OAAS,EACd,MAAM,IAAImC,MAAM,wBAEpB,KAAMoB,EAAKvD,OAAS,GAChB,MAAM,IAAImC,MAAM,6CAEpB,MAAMpF,EAAQ0D,EAAU8C,EAAK,GAAIuB,GAC3BmB,EAAwC,GAC9C,IAAK,IAAInK,EAAI,EAAGA,EAAIyH,EAAKvD,OAAS,EAAGlE,GAAK,EAAG,CACzC,MAAM4I,EAAQnB,EAAKzH,GACnB,IAAKwH,EAAU4C,kBAAkBxB,GAC7B,MAAM,IAAIvC,MAAM,IAAIgE,KAAKC,UAAU1B,wCAEvC,MAAMnG,EAAOkC,EAAU8C,EAAKzH,EAAI,GAAIgJ,GACpCmB,EAAWrB,KAAK,CAACF,EAAOnG,IAE5B,MAAMgB,EAAWkB,EAAU8C,EAAKA,EAAKvD,OAAS,GAAI8E,GAClD,OAAO,IAAIxB,EAAUvG,EAAOkJ,EAAY1G,GAnEzB8G,CAAe9C,EAAMuB,GAEhC,IAAK,OACD,OAmEZ,SACIvB,EACAuB,GAEA,GAAIvB,EAAKvD,OAAS,EACd,MAAM,IAAImC,MAAM,wBAEpB,GAAIoB,EAAKvD,OAAS,EACd,MAAM,IAAImC,MAAM,4CAEpB,MAAM/C,EAAgC,GACtC,IAAK,IAAItD,EAAI,EAAGA,EAAIyH,EAAKvD,OAAS,EAAGlE,GAAK,EAAG,CACzC,MAAM0D,EAAYiB,EAAU8C,EAAKzH,GAAIgJ,GAC/BvG,EAAOkC,EAAU8C,EAAKzH,EAAI,GAAIgJ,GACpC1F,EAASwF,KAAK,CAACpF,EAAWjB,IAE9B,MAAM+H,EAAe7F,EAAU8C,EAAKA,EAAKvD,OAAS,GAAI8E,GACtD,OAAO,IAAInB,EAASvE,EAAUkH,GApFfC,CAAchD,EAAMuB,GAE/B,IAAK,cACD,OAmGZ,SACIvB,EACAuB,GAEA,MAAM7H,EAAwBsG,EAAK,GACnC,IApBJ,SAA6B/F,GACzB,IAAKsC,MAAMC,QAAQvC,GACf,OAAO,EAEX,OAAQA,EAAO,IACX,IAAK,WACL,IAAK,SACL,IAAK,QACL,IAAK,cACD,OAAO,EACX,QACI,OAAO,GASVgJ,CAAoBvJ,GACrB,MAAM,IAAIkF,MAAM,kCAEpB,GAAgB,gBAAZlF,EAAK,IAA2C,iBAAZA,EAAK,GACzC,MAAM,IAAIkF,MAAM,sDAEpB,MAAM1C,EAAQ8D,EAAK,GAAK9C,EAAU8C,EAAK,GAAIuB,QAA0BpE,EACrE,IAAKR,EAAKuG,OAAOhH,GACb,MAAM,IAAI0C,MAAM,2CAEpB,GAAoB,IAAhBoB,EAAKvD,UAAkBuD,EAAKvD,OAAS,GACrC,MAAM,IAAImC,MAAM,6BAGpB,MAAMxC,EAA+B,GACrC,IAAK,IAAI7D,EAAI,EAAGA,EAAIyH,EAAKvD,OAAS,EAAGlE,GAAK,EAAG,CACzC,MAAMuB,EAAMkG,EAAKzH,GACXiB,EAAQ0D,EAAU8C,EAAKzH,EAAI,GAAIgJ,GACrCnF,EAAMiF,KAAK,CAACvH,EAAKN,IAErB,OAAO,IAAIiH,EAAgB/G,EAAMwC,EAAOE,GA5HzB+G,CAAqBnD,EAAMuB,GAEtC,IAAK,OACD,OA4HZ,SACIvB,EACAuB,GAEA,GAAIvB,EAAKvD,OAAS,EACd,MAAM,IAAImC,MAAM,6CAEpB,GAAIoB,EAAKvD,OAAS,KAAOuD,EAAKvD,OAAS,GACnC,MAAM,IAAImC,MAAM,wBAEpB,MAAM1C,EAAQgB,EAAU8C,EAAK,GAAIuB,GAC3BpF,EAAee,EAAU8C,EAAK,GAAIuB,GAClCnF,EAA+B,GACrC,IAAK,IAAI7D,EAAI,EAAGA,EAAIyH,EAAKvD,OAAQlE,GAAK,EAAG,CACrC,MAAMuB,EAAMkG,EAAKzH,GACXiB,EAAQ0D,EAAU8C,EAAKzH,EAAI,GAAIgJ,GACrCnF,EAAMiF,KAAK,CAACvH,EAAKN,IAErB,OAAO,IAAI+G,EAASrE,EAAOC,EAAcC,GA9I1BgH,CAAcpD,EAAMuB,GAE/B,QACI,OAAOc,EAAa3G,EAAIsE,EAAMuB,IAlD3BC,CAAUxB,EAAMuB,GACpB,GAAa,OAATvB,EACP,OAAOtB,EAAgBtD,SACpB,GAAoB,kBAAT4E,EACd,OAAO,IAAIzB,EAAmByB,GAC3B,GAAoB,iBAATA,EACd,OAAO,IAAIxB,EAAkBwB,GAC1B,GAAoB,iBAATA,EACd,OAAO,IAAIvB,EAAkBuB,GAEjC,MAAM,IAAIpB,MAAM,qCAAqCgE,KAAKC,UAAU7C,MAsLxE,SAASqC,EACL3G,EACAsE,EACAuB,GAEA,OAAO,IAAIhC,EACP7D,EACAsE,EAAKyB,MAAM,GAAGP,IAAIzF,GAAayB,EAAUzB,EAAW8F,O,iYC/+B5D,WACA,Y,iYCOA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,UACA,YACA,a,sGCxCA,cACA,QACA,QAEA,OAUA,MAAa8B,EAgGT,YAAmBC,EAAyBC,EAA0BC,GAAnD,KAAAF,WAAyB,KAAAC,YAA0B,KAAAC,WAxFtE,mBAAmBF,EAAkBC,EAAmBC,GACpD,OAAO,IAAIH,EAAeC,EAAUC,EAAWC,GAUnD,mBAAmBF,EAAkBC,EAAmBC,GACpD,OAAO,IAAIH,EACP9I,EAAMkJ,UAAUC,SAASJ,GACzB/I,EAAMkJ,UAAUC,SAASH,GACzBC,GAYR,kBAAkBG,GACd,OAAO,IAAIN,EAAeM,EAAOC,IAAKD,EAAOE,KAmBjD,oBAAoBC,GAChB,OAAO,IAAIT,EAAeS,EAAS,GAAIA,EAAS,GAAIA,EAAS,IAiBjE,kBAAkBA,GACd,GAAI,EAAAC,eAAeD,GACf,OAAOT,EAAeW,aAAaF,GAChC,GAAI,EAAAG,qBAAqBH,GAC5B,OAAOT,EAAea,YAClBJ,EAASR,SACTQ,EAASP,UACTO,EAASN,UAEV,GAAI,EAAAW,aAAaL,GACpB,OAAOT,EAAea,YAAYJ,EAASF,IAAKE,EAASD,KAG7D,MAAM,IAAIjF,MAAM,oCAepB,wBACI,OAAOrE,EAAMkJ,UAAUW,SAASjJ,KAAKmI,UAMzC,yBACI,OAAO/I,EAAMkJ,UAAUW,SAASjJ,KAAKoI,WAOzC,wBACI,OAAOpI,KAAKmI,SAOhB,yBACI,OAAOnI,KAAKoI,UAMhB,UACI,OAAOpI,KAAKmI,SAMhB,UACI,OAAOnI,KAAKoI,UAMhB,UACI,OAAQc,MAAMlJ,KAAKmI,YAAce,MAAMlJ,KAAKoI,WAMhD,aACI,IAAI,SAAED,EAAQ,UAAEC,GAAcpI,KAE9B,GAAIkJ,MAAMf,IAAae,MAAMd,GACzB,OAAOpI,KAGX,GAAImI,EAAW,GAAI,CACf,IAAIgB,GAAWhB,EAAW,IAAM,IAC5BgB,GAAW,MACXf,GAAa,IACbe,EAAU,IAAMA,GAGpBhB,EAAWgB,EAAU,GAGzB,GAAIhB,GAAY,GAAI,CAChB,IAAIgB,GAAWhB,EAAW,IAAM,IAC5BgB,IAAY,MACZf,GAAa,IACbe,GAAW,IAAMA,GAGrBhB,EAAWgB,EAAU,GAGzB,GAAIf,GAAa,KAAOA,EAAY,IAAK,CACrC,MAAMgB,EAAOC,KAAKD,KAAKhB,GACvBA,GAAeA,EAAY,IAAO,IAAMgB,GAAQ,IAAO,IAAMA,EAGjE,OAAIjB,IAAanI,KAAKmI,UAAYC,IAAcpI,KAAKoI,UAC1CpI,KAGJ,IAAIkI,EAAeC,EAAUC,EAAWpI,KAAKqI,UAQxD,OAAOiB,GACH,OACItJ,KAAKmI,WAAamB,EAAMnB,UACxBnI,KAAKoI,YAAckB,EAAMlB,WACzBpI,KAAKqI,WAAaiB,EAAMjB,SAShC,KAAKiB,GAID,OAHAtJ,KAAKmI,SAAWmB,EAAMnB,SACtBnI,KAAKoI,UAAYkB,EAAMlB,UACvBpI,KAAKqI,SAAWiB,EAAMjB,SACfrI,KAMX,QACI,OAAO,IAAIkI,EAAelI,KAAKmI,SAAUnI,KAAKoI,UAAWpI,KAAKqI,UAMlE,WACI,MAAO,CAAEI,IAAKzI,KAAKmI,SAAUO,IAAK1I,KAAKoI,WAM3C,aACI,YAAyBpG,IAAlBhC,KAAKqI,SACN,CAACrI,KAAKoI,UAAWpI,KAAKmI,SAAUnI,KAAKqI,UACrC,CAACrI,KAAKoI,UAAWpI,KAAKmI,WA5OpC,oB,iYCAA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,WACA,YACA,WACA,YACA,Y,iGC5BA,cAEA,SAAiBG,GAyGb,SAAgBiB,EAAkBC,GAK9B,OAJAA,GAAQ,KACA,IACJA,GAAQ,KAELA,EA6BX,SAAgBC,EAAiBD,EAAWE,GAIxC,MAAMhM,GAHN8L,EAAID,EAAkBC,KACtBE,EAAIH,EAAkBG,IAGtB,OAAIhM,EAAI,IACGA,EAAI,IACJA,IAAM,IACNA,EAAI,IAEJA,EA/IC,EAAAiM,aAAhB,WACI,MAAO,CACHC,IAAK,CAAEnE,EAAGoE,IAAUnE,EAAGmE,IAAUjE,EAAGiE,KACpCC,IAAK,CAAErE,GAAIoE,IAAUnE,GAAImE,IAAUjE,GAAIiE,OAoC/B,EAAAE,WAAhB,SAA2BtE,EAAWC,EAAWE,EAAWzE,GACxD,YAAUa,IAANb,EACO,CAAEsE,IAAGC,IAAGE,MAEnBzE,EAAEsE,EAAIA,EACNtE,EAAEuE,EAAIA,EACNvE,EAAEyE,EAAIA,EACCzE,IASK,EAAA6I,YAAhB,SAAwDC,EAAmBC,GAIvE,OAHAA,EAAGzE,EAAIwE,EAAKxE,EACZyE,EAAGxE,EAAIuE,EAAKvE,EACZwE,EAAGtE,EAAIqE,EAAKrE,EACLsE,GAUE,EAAAjB,SAAW7J,EAAMkJ,UAAUW,SAU3B,EAAAV,SAAWnJ,EAAMkJ,UAAUC,SAY3B,EAAA4B,MAAQ/K,EAAMkJ,UAAU6B,MAQrB,EAAAZ,kBAAiB,EAcjB,EAAAa,sBAAhB,SAAsCZ,GAKlC,OAJAA,EAAID,EAAkBC,IACd,MACJA,GAAQ,KAELA,GAeK,EAAAC,iBAAgB,EAqBhB,EAAAY,qBAAhB,SAAqCC,EAAYC,EAAYjM,GAOzD,OADWgM,EADDb,EAAiBc,EAAID,GACXhM,GAAK,KAtKjC,CAAiB,EAAAgK,YAAA,EAAAA,UAAS,M,8BCX1B,YACA,IAAIkC,EAAOtN,EAoOX,SAASuN,EAAMC,EAAKC,EAAKC,GACrB,IAAK,IAAIC,EAAO/M,OAAO+M,KAAKF,GAAMvN,EAAI,EAAGA,EAAIyN,EAAKvJ,SAAUlE,OACnC4E,IAAjB0I,EAAIG,EAAKzN,KAAsBwN,IAC/BF,EAAIG,EAAKzN,IAAMuN,EAAIE,EAAKzN,KAChC,OAAOsN,EAoBX,SAASI,EAASnN,GAEd,SAASoN,EAAYC,EAAStL,GAE1B,KAAMM,gBAAgB+K,GAClB,OAAO,IAAIA,EAAYC,EAAStL,GAKpC5B,OAAOC,eAAeiC,KAAM,UAAW,CAAE/B,IAAK,WAAa,OAAO+M,KAG9DvH,MAAMwH,kBACNxH,MAAMwH,kBAAkBjL,KAAM+K,GAE9BjN,OAAOC,eAAeiC,KAAM,QAAS,CAAE3B,OAAO,IAAIoF,OAAQyH,OAAS,KAEnExL,GACA+K,EAAMzK,KAAMN,GAWpB,OARCqL,EAAY/L,UAAYlB,OAAOY,OAAO+E,MAAMzE,YAAYmM,YAAcJ,EAEvEjN,OAAOC,eAAegN,EAAY/L,UAAW,OAAQ,CAAEf,IAAK,WAAa,OAAON,KAEhFoN,EAAY/L,UAAUoM,SAAW,WAC7B,OAAOpL,KAAKrC,KAAO,KAAOqC,KAAKgL,SAG5BD,EAvRXP,EAAKa,UAAY,EAAQ,KAGzBb,EAAKc,OAAS,EAAQ,KAGtBd,EAAKe,aAAe,EAAQ,KAG5Bf,EAAKgB,MAAQ,EAAQ,KAGrBhB,EAAKiB,QAAU,EAAQ,KAGvBjB,EAAKkB,KAAO,EAAQ,KAGpBlB,EAAK9H,KAAO,EAAQ,KAGpB8H,EAAKmB,SAAW,EAAQ,KAGxBnB,EAAKoB,OAA2B,oBAAXC,QAA0BA,aACf,IAAXD,GAA0BA,GACf,oBAAXE,MAA0BA,MACjC9L,KAQdwK,EAAKuB,WAAajO,OAAOkO,OAASlO,OAAOkO,OAAO,IAAiC,GAOjFxB,EAAKyB,YAAcnO,OAAOkO,OAASlO,OAAOkO,OAAO,IAAiC,GAQlFxB,EAAK0B,OAASC,QAAQ3B,EAAKoB,OAAOQ,SAAW5B,EAAKoB,OAAOQ,QAAQC,UAAY7B,EAAKoB,OAAOQ,QAAQC,SAASxH,MAQ1G2F,EAAK8B,UAAYC,OAAOD,WAAwC,SAAmBjO,GAC/E,MAAwB,iBAAVA,GAAsBmO,SAASnO,IAAUgL,KAAKoD,MAAMpO,KAAWA,GAQjFmM,EAAKkC,SAAW,SAAkBrO,GAC9B,MAAwB,iBAAVA,GAAsBA,aAAiBsO,QAQzDnC,EAAKoC,SAAW,SAAkBvO,GAC9B,OAAOA,GAA0B,iBAAVA,GAW3BmM,EAAKqC,MAQLrC,EAAKsC,MAAQ,SAAezF,EAAK0F,GAC7B,IAAI1O,EAAQgJ,EAAI0F,GAChB,QAAa,MAAT1O,IAAiBgJ,EAAIpI,eAAe8N,MACZ,iBAAV1O,IAAuB+C,MAAMC,QAAQhD,GAASA,EAAMiD,OAASxD,OAAO+M,KAAKxM,GAAOiD,QAAU,IAehHkJ,EAAKwC,OAAS,WACV,IACI,IAAIA,EAASxC,EAAKiB,QAAQ,UAAUuB,OAEpC,OAAOA,EAAOhO,UAAUiO,UAAYD,EAAoC,KAC1E,MAAOtI,GAEL,OAAO,MAPD,GAYd8F,EAAK0C,aAAe,KAGpB1C,EAAK2C,oBAAsB,KAO3B3C,EAAK4C,UAAY,SAAmBC,GAEhC,MAA8B,iBAAhBA,EACR7C,EAAKwC,OACDxC,EAAK2C,oBAAoBE,GACzB,IAAI7C,EAAKpJ,MAAMiM,GACnB7C,EAAKwC,OACDxC,EAAK0C,aAAaG,GACI,oBAAfC,WACHD,EACA,IAAIC,WAAWD,IAOjC7C,EAAKpJ,MAA8B,oBAAfkM,WAA6BA,WAAwClM,MAezFoJ,EAAK+C,KAAkC/C,EAAKoB,OAAO4B,SAAsChD,EAAKoB,OAAO4B,QAAQD,MACtE/C,EAAKoB,OAAO2B,MACvC/C,EAAKiB,QAAQ,QAOzBjB,EAAKiD,OAAS,mBAOdjD,EAAKkD,QAAU,wBAOflD,EAAKmD,QAAU,6CAOfnD,EAAKoD,WAAa,SAAoBvP,GAClC,OAAOA,EACDmM,EAAKmB,SAAS1B,KAAK5L,GAAOwP,SAC1BrD,EAAKmB,SAASmC,UASxBtD,EAAKuD,aAAe,SAAsBC,EAAMC,GAC5C,IAAIC,EAAO1D,EAAKmB,SAASwC,SAASH,GAClC,OAAIxD,EAAK+C,KACE/C,EAAK+C,KAAKa,SAASF,EAAKG,GAAIH,EAAKI,GAAIL,GACzCC,EAAKK,SAASpC,QAAQ8B,KAkBjCzD,EAAKC,MAAQA,EAObD,EAAKgE,QAAU,SAAiBC,GAC5B,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,UAAU,IA0CvDpE,EAAKM,SAAWA,EAmBhBN,EAAKqE,cAAgB/D,EAAS,iBAoB9BN,EAAKsE,YAAc,SAAkBC,GAEjC,IADA,IAAIC,EAAW,GACN5R,EAAI,EAAGA,EAAI2R,EAAWzN,SAAUlE,EACrC4R,EAASD,EAAW3R,IAAM,EAO9B,OAAO,WACH,IAAK,IAAIyN,EAAO/M,OAAO+M,KAAK7K,MAAO5C,EAAIyN,EAAKvJ,OAAS,EAAGlE,GAAK,IAAKA,EAC9D,GAA0B,IAAtB4R,EAASnE,EAAKzN,UAA+B4E,IAAlBhC,KAAK6K,EAAKzN,KAAuC,OAAlB4C,KAAK6K,EAAKzN,IACpE,OAAOyN,EAAKzN,KAiB5BoN,EAAKyE,YAAc,SAAkBF,GAQjC,OAAO,SAASpR,GACZ,IAAK,IAAIP,EAAI,EAAGA,EAAI2R,EAAWzN,SAAUlE,EACjC2R,EAAW3R,KAAOO,UACXqC,KAAK+O,EAAW3R,MAoBvCoN,EAAK0E,cAAgB,CACjBC,MAAOxC,OACPyC,MAAOzC,OACP0C,MAAO1C,OACP/K,MAAM,GAIV4I,EAAK8E,WAAa,WACd,IAAItC,EAASxC,EAAKwC,OAEbA,GAMLxC,EAAK0C,aAAeF,EAAO/C,OAASqD,WAAWrD,MAAQ+C,EAAO/C,MAE1D,SAAqB5L,EAAOkR,GACxB,OAAO,IAAIvC,EAAO3O,EAAOkR,IAEjC/E,EAAK2C,oBAAsBH,EAAOwC,aAE9B,SAA4BC,GACxB,OAAO,IAAIzC,EAAOyC,KAbtBjF,EAAK0C,aAAe1C,EAAK2C,oBAAsB,Q,qHClXvD,sBAA2BrO,GACvB,MAAM4Q,EAAO5Q,EACb,YAAoBkD,IAAb0N,EAAK9F,UAAkC5H,IAAb0N,EAAK5F,M,0GCN1C,8BAAmChL,GAC/B,MAAM6Q,EAAM7Q,EACZ,YACqBkD,IAAjB2N,EAAIC,eACU5N,IAAd2N,EAAIE,YACU7N,IAAd2N,EAAIG,YACU9N,IAAd2N,EAAII,YACY/N,IAAhB2N,EAAIK,U,mHCvBZ,cAEA,QAQA,SAAYC,GAIR,uBAKA,6BATJ,CAAY,EAAAA,iBAAA,EAAAA,eAAc,KAgB1B,mBAWI,YAAqBC,GAAA,KAAAA,YA0CrB,kBACIC,EACAhK,GAUA,OARI,EAAA2C,qBAAqBqH,GACrBnQ,KAAKoQ,aAAaD,EAAOhK,EAAOyJ,UAEhC,EAAAtH,UAAU0B,YAAYmG,EAAOhK,EAAOyJ,UAExC,EAAAtH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO0J,OACrC,EAAAvH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO2J,OACrC,EAAAxH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO4J,OAC9B5J,EA2IX,eACIkK,EACAC,EACAnK,GAEA,OAAIkK,IAAqBrQ,UACNgC,IAAXmE,EACO,CAAEV,EAAG6K,EAAS7K,EAAGC,EAAG4K,EAAS5K,EAAGE,EAAG0K,EAAS1K,IAEvDO,EAAOV,EAAI6K,EAAS7K,EACpBU,EAAOT,EAAI4K,EAAS5K,EACpBS,EAAOP,EAAI0K,EAAS1K,EACbO,GAEJnG,KAAKoQ,aAAaC,EAAiBE,eAAeD,GAAWnK,M,oGC9M5E,MAAaqK,EAMT,aAAa1R,GACT,OAAOA,aAAkB0R,EAQ7B,OAAO7S,IAMP,QACI,MAAO,IAtBf,QA8CA,uBAA4B6S,EACxB,YAAqBC,EAAoCC,GACrD1N,QADiB,KAAAyN,UAAoC,KAAAC,SASzD,OAAO/S,GACH,GAAIqC,KAAKyQ,QAAQxR,eAAetB,GAAO,CACnC,MAAMU,EAAQ2B,KAAKyQ,QAAQ9S,GAC3B,QAAcqE,IAAV3D,EACA,OAAOA,EAGf,OAAO2B,KAAK0Q,OAAS1Q,KAAK0Q,OAAOC,OAAOhT,QAAQqE,EAOpD,QACI,MAAMqF,EAAWrH,KAAK0Q,OAAS1Q,KAAK0Q,OAAOE,QAAU,GACrD,IAAK,MAAMjS,KAAOqB,KAAKyQ,QACfzQ,KAAKyQ,QAAQxR,eAAeN,KAC5B0I,EAAI1I,GAAOqB,KAAKyQ,QAAQ9R,IAGhC,OAAO0I,K,8FCpHf,aAEA,OAKA,MAAawJ,EAoCT,YAAqBC,EAAoCC,GAApC,KAAAD,YAAoC,KAAAC,YA7BzD,uBAAuBD,EAA2BC,GAC9C,OAAO,IAAIF,EAAOC,EAAWC,GASjC,4BAA4BC,EAAwBC,GAChD,OAAO,IAAIJ,EACP,IAAI,EAAA3I,eACA8I,EAAO7I,SAAW8I,EAAOC,aAAe,EACxCF,EAAO5I,UAAY6I,EAAOE,cAAgB,GAE9C,IAAI,EAAAjJ,eACA8I,EAAO7I,SAAW8I,EAAOC,aAAe,EACxCF,EAAO5I,UAAY6I,EAAOE,cAAgB,IAgBtD,kBACI,QAAgCnP,IAA5BhC,KAAK8Q,UAAUzI,eAAsDrG,IAA5BhC,KAAK+Q,UAAU1I,SAG5D,OAAOgB,KAAKO,IAAI5J,KAAK8Q,UAAUzI,SAAUrI,KAAK+Q,UAAU1I,UAM5D,kBACI,QAAgCrG,IAA5BhC,KAAK8Q,UAAUzI,eAAsDrG,IAA5BhC,KAAK+Q,UAAU1I,SAG5D,OAAOgB,KAAKS,IAAI9J,KAAK8Q,UAAUzI,SAAUrI,KAAK+Q,UAAU1I,UAM5D,YACI,OAAOrI,KAAK8Q,UAAU3I,SAM1B,YACI,OAAOnI,KAAK+Q,UAAU5I,SAM1B,WACI,OAAOnI,KAAK8Q,UAAU1I,UAM1B,WACI,OAAOpI,KAAK+Q,UAAU3I,UAM1B,aACI,MAAMD,EAAuC,IAA3BnI,KAAKoR,MAAQpR,KAAKqR,QAC9B,KAAEC,EAAI,KAAEC,GAASvR,MACjB,YAAEwR,EAAW,aAAEC,GAAiBzR,KAEtC,IAAIqI,EAMJ,QAJoBrG,IAAhBwP,QAA8CxP,IAAjByP,IAC7BpJ,EAAWmJ,EAA6B,GAAfC,GAGzBH,EAAOC,EACP,OAAO,IAAI,EAAArJ,eAAeC,EAA0B,IAAfmJ,EAAOC,GAAalJ,GAG7D,IAAID,EAAkC,IAArB,IAAMmJ,EAAOD,GAM9B,OAJIlJ,EAAY,MACZA,GAAa,KAGV,IAAI,EAAAF,eAAeC,EAAUC,EAAWC,GAMnD,4BACI,OAAOjJ,EAAMkJ,UAAUW,SAASjJ,KAAKkR,cAMzC,6BACI,OAAO9R,EAAMkJ,UAAUW,SAASjJ,KAAKmR,eAMzC,mBACI,OAAOnR,KAAKqR,MAAQrR,KAAKoR,MAG7B,mBACI,QAAyBpP,IAArBhC,KAAK0R,kBAAkD1P,IAArBhC,KAAKwR,YAG3C,OAAOxR,KAAK0R,YAAc1R,KAAKwR,YAMnC,oBACI,IAAIG,EAAQ3R,KAAK+Q,UAAU3I,UAAYpI,KAAK8Q,UAAU1I,UAMtD,OAJIuJ,EAAQ,IACRA,GAAS,KAGNA,EAOX,4BACI,OAAO3R,KAAKkR,aAOhB,6BACI,OAAOlR,KAAKmR,cAQhB,SAAShB,GACL,QACuBnO,IAAnBmO,EAAM9H,eACerG,IAArBhC,KAAKwR,kBACgBxP,IAArBhC,KAAK0R,YAEL,OAAO1R,KAAK4R,eAAezB,GAG/B,MAAM0B,EAAS7R,KAAKwR,cAAgBxR,KAAK0R,YACnCI,EAAiB9R,KAAKwR,cAAgBrB,EAAM9H,SAC5C0J,EACF/R,KAAKwR,aAAerB,EAAM9H,UAAYrI,KAAK0R,YAAcvB,EAAM9H,SAKnE,SAAIwJ,EAASC,EAAiBC,IACnB/R,KAAK4R,eAAezB,GASnC,QACI,OAAO,IAAIU,EAAO7Q,KAAK8Q,UAAW9Q,KAAK+Q,WAQ3C,cAAcZ,GACVnQ,KAAK8Q,UAAU3I,SAAWkB,KAAKO,IAAI5J,KAAK8Q,UAAU3I,SAAUgI,EAAMhI,UAClEnI,KAAK8Q,UAAU1I,UAAYiB,KAAKO,IAAI5J,KAAK8Q,UAAU1I,UAAW+H,EAAM/H,WACpEpI,KAAK8Q,UAAUzI,cACiBrG,IAA5BhC,KAAK8Q,UAAUzI,eAA6CrG,IAAnBmO,EAAM9H,SACzCgB,KAAKO,IAAI5J,KAAK8Q,UAAUzI,SAAU8H,EAAM9H,eACZrG,IAA5BhC,KAAK8Q,UAAUzI,SACfrI,KAAK8Q,UAAUzI,cACIrG,IAAnBmO,EAAM9H,SACN8H,EAAM9H,cACNrG,EAEVhC,KAAK+Q,UAAU5I,SAAWkB,KAAKS,IAAI9J,KAAK+Q,UAAU5I,SAAUgI,EAAMhI,UAClEnI,KAAK+Q,UAAU3I,UAAYiB,KAAKS,IAAI9J,KAAK+Q,UAAU3I,UAAW+H,EAAM/H,WACpEpI,KAAK+Q,UAAU1I,cACiBrG,IAA5BhC,KAAK+Q,UAAU1I,eAA6CrG,IAAnBmO,EAAM9H,SACzCgB,KAAKS,IAAI9J,KAAK+Q,UAAU1I,SAAU8H,EAAM9H,eACZrG,IAA5BhC,KAAK+Q,UAAU1I,SACfrI,KAAK+Q,UAAU1I,cACIrG,IAAnBmO,EAAM9H,SACN8H,EAAM9H,cACNrG,EAGN,eAAemO,GACnB,GAAIA,EAAMhI,SAAWnI,KAAK8Q,UAAU3I,UAAYgI,EAAMhI,UAAYnI,KAAK+Q,UAAU5I,SAC7E,OAAO,EAGX,MAAM,KAAEmJ,EAAI,KAAEC,GAASvR,KAEvB,OAAIuR,EAAOD,EACAnB,EAAM/H,WAAakJ,GAAQnB,EAAM/H,UAAYmJ,EAGjDpB,EAAM/H,UAAYmJ,GAAQpB,EAAM/H,WAAakJ,GAtP5D,Y,4GCSA,gCAAqCxS,GACjC,OACIA,GAC2B,iBAApBA,EAAOqJ,UACc,iBAArBrJ,EAAOsJ,YACc,iBAApBtJ,EAAOuJ,eAAoD,IAApBvJ,EAAOuJ,Y,sGCtB9D,kBAAa2J,GAeb,OAbW,EAAAC,yBAAmC,kBAGnC,EAAAC,kBAA4B,QAG5B,EAAAC,eAAyB,IAGzB,EAAAC,cAAwB,KAGxB,EAAAC,oBAA8B,IACzC,GAfA,GAAa,EAAAL,kB,oGCIb,cAGA,QACA,QAKA,qBAUI,YAAqBM,EAA+CC,GAA/C,KAAAD,oBAA+C,KAAAC,aAChEvS,KAAKwS,qBAAuB,IAAI,EAAAC,6BAA6BzS,MAC7DA,KAAK0S,iBAAmB,IAAI,EAAAC,iBAAiBL,GASjD,eAAeM,GACX,OAAO5S,KAAK0S,iBAAiBG,SAASD,GAS1C,WAAWjK,EAA8BmK,GACrC,OAAO,EAAAC,aAAaC,wBAAwBhT,KAAM2I,EAAUmK,GAShE,YAAYG,EAAgBH,GACxB,OAAO,EAAAC,aAAaG,uBAAuBlT,KAAMiT,EAAQH,GAQ7D,UAAUF,GACN,OAAO5S,KAAKwS,qBAAqBW,UAAUP,GAS/C,YAAYA,EAAkBzM,GAC1B,OAAOnG,KAAKwS,qBAAqBY,YAAYR,EAASzM,M,sMCtE9D,SAAYkN,GAOR,yBAIA,uBAXJ,CAAY,EAAAA,oBAAA,EAAAA,kBAAiB,KA2B7B,SAAiBC,GAIb,IAAYC,GAAZ,SAAYA,GAER,iBAEA,qBAEA,+BAEA,2BAEA,2BAVJ,CAAYA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KAoBP,EAAAC,YAAhB,SAA4B/E,EAAagF,GACrC,OAAQA,EAAaC,OACjB,KAAKJ,EAAgBC,YAAYI,IAC7B,OAAO,EACX,KAAKL,EAAgBC,YAAYK,MAC7B,OAAOnF,IAAQgF,EAAapV,MAChC,KAAKiV,EAAgBC,YAAYM,WAC7B,OAAOJ,EAAapV,MAAMyV,WAAWrF,GACzC,KAAK6E,EAAgBC,YAAYQ,SAC7B,OAAON,EAAapV,MAAM2V,SAASvF,GACvC,QACI,OAAOA,EAAIwF,QAAQR,EAAapV,QAAU,IAnC1D,CAAiB,EAAAiV,kBAAA,EAAAA,gBAAe,KAgDhC,SAAYY,GACR,yBACA,qBACA,+BACA,yBAJJ,CAAY,EAAAA,kBAAA,EAAAA,gBAAe,KAoId,EAAAC,8BAAgC,mBAOhC,EAAAC,uBAAyB,a,kGC1NtC,aACA,OACA,QAeMC,EAAW,IAAIjV,EAAMkV,OAiB3B,SAAiBC,GAkBG,EAAAC,eAAhB,SAA+BtW,EAAWuW,EAAW/K,EAAWF,GAG5D,OAFA,EAAAkL,OAAOlL,GAAK,GAAKA,GAAK,GAxCG,IAyCIH,KAAKoD,MAzCT,IAyCejD,IAlDb,GASF,IA4CnBtL,GApDY,GAQO,IA6CnBuW,GApDc,EAOK,IA8CnB/K,GApDa,GAiEP,EAAAiL,cAAhB,SAA8BzW,EAAWuW,EAAW/K,GAIhD,OAHA,EAAAgL,OAAOxW,GAAK,GAAKA,GAAK,GACtB,EAAAwW,OAAOD,GAAK,GAAKA,GAAK,GACtB,EAAAC,OAAOhL,GAAK,GAAKA,GAAK,GA9DG,IAgEnBxL,GAxEY,GAQO,IAiEnBuW,GAxEc,EAOK,IAkEnB/K,GAxEa,GAoFP,EAAAkL,cAAhB,SAA8BC,EAAW1V,EAAW9B,GAIhD,OAHA,EAAAqX,OAAOG,GAAK,GAAKA,GAAK,GACtB,EAAAH,OAAOvV,GAAK,GAAKA,GAAK,GACtB,EAAAuV,OAAOrX,GAAK,GAAKA,GAAK,GACfgX,EAASS,OAAOD,EAAG1V,EAAG9B,GAAG0X,UAcpB,EAAAC,eAAhB,SAA+BC,EAAaC,EAAS,IAAI,EAAApR,MAQrD,OAPA,EAAA4Q,OAAkC,IAApB,EAANO,GAA6B,oBACrCC,EAAOhX,GAAM+W,GA1GK,GAQO,SAmGzBC,EAAOT,GAAMQ,GA1GO,EAOK,SAoGzBC,EAAOxL,GAAMuL,GA1GM,EAMM,SAqGzBC,EAAO1L,GArGkB,KAsGCyL,GA/GC,GASF,UAwGlBC,GASK,EAAAC,cAAhB,SAA8BF,GAE1B,OADA,EAAAP,OAAkC,IAApB,EAANO,GAA6B,oBAC9BA,GA5HoB,IA4HU,GAUzB,EAAAG,gBAAhB,SAAgCH,GAE5B,OADA,EAAAP,OAAkC,IAApB,EAANO,GAA6B,qBA9HZ,KAgICA,GAzIC,IASF,UA2Ib,EAAAI,mBAAhB,SAAmCJ,GAE/B,OADA,EAAAP,OAAkC,IAApB,EAANO,GAA6B,oBA3IhB,SA4IdA,GAxHf,CAAiB,EAAAV,aAAA,EAAAA,WAAU,M,4FClC3B,aACA,QACA,QAQA,MAAazQ,EAmBT,YACW5F,EAAY,EACZuW,EAAY,EACZ/K,EAAY,EACZF,EAAY,GAHZ,KAAAtL,IACA,KAAAuW,IACA,KAAA/K,IACA,KAAAF,IAjBX,aAAa8L,GACT,MAAMC,EAAQ,EAAAC,wBAAwBF,GAEtC,QAActT,IAAVuT,EAIJ,OAAO,EAAAhB,WAAWS,eAAeO,GAgBrC,QACI,OAAO,IAAIzR,EAAK9D,KAAK9B,EAAG8B,KAAKyU,EAAGzU,KAAK0J,EAAG1J,KAAKwJ,GAMjD,SACI,OAAO,EAAA+K,WAAWC,eAAexU,KAAK9B,EAAG8B,KAAKyU,EAAGzU,KAAK0J,EAAG1J,KAAKwJ,GAMlE,KAAK0L,EAAc5W,GAKf,OAJA0B,KAAK9B,EAAI,EAAAoK,UAAUmN,KAAKzV,KAAK9B,EAAGgX,EAAOhX,EAAGI,GAC1C0B,KAAKyU,EAAI,EAAAnM,UAAUmN,KAAKzV,KAAKyU,EAAGS,EAAOT,EAAGnW,GAC1C0B,KAAK0J,EAAI,EAAApB,UAAUmN,KAAKzV,KAAK0J,EAAGwL,EAAOxL,EAAGpL,GAC1C0B,KAAKwJ,EAAI,EAAAlB,UAAUmN,KAAKzV,KAAKwJ,EAAG0L,EAAO1L,EAAGlL,GACnC0B,KAMX,SAEI,MAAO,QAAkB,IAATA,KAAK9B,GAAY,MAAgB,IAAT8B,KAAKyU,GAAY,MAAgB,IAATzU,KAAK0J,GAAY,MAC7E1J,KAAKwJ,MAzDjB,U,iSCXA,aACA,QAGA,QAMA,IAAYkM,GAAZ,SAAYA,GACR,uBACA,uBACA,iBAHJ,CAAYA,EAAA,EAAAA,2BAAA,EAAAA,yBAAwB,KAkBpC,MAAMC,EAAkD,CACpDC,KAAMF,EAAyBG,OAC/BpG,KAAM,EACNqG,OAAQ,qCACRC,QAAS,CAACC,EAAsBd,KAC5B,MAAMxB,EAAQiC,EAAoBG,OAAOG,KAAKD,GAC9C,QAAOtC,QAA2C1R,KAAlCkT,EAAO,GAAK3I,OAAOmH,EAAM,OAG3CwC,EAAkD,CACpDN,KAAMF,EAAyB3R,OAC/B0L,KAAM,EACN0G,KAAM,EACNL,OAAQ,sCACRC,QAAS,CAACC,EAAsBd,KAC5B,MAAMxB,EAAQwC,EAAoBJ,OAAOG,KAAKD,GAC9C,OAAc,OAAVtC,IAGJwB,EAAO,GAAK3I,OAAOmH,EAAM,KAClB,KAGT0C,EAA+C,CACjDR,KAAMF,EAAyBW,IAC/B5G,KAAM,EACNqG,OAAQ,qDACRC,QAAS,CAACC,EAAsBd,KAC5B,MAAMxB,EAAQ0C,EAAiBN,OAAOG,KAAKD,GAC3C,GAAc,OAAVtC,EACA,OAAO,EAEX,MAAMuB,EAAMvB,EAAM,GACZjE,EAAOwF,EAAI3T,OAkBjB,OAhBA,EAAAoT,OAAgB,IAATjF,GAAuB,IAATA,EAAY,sCAGpB,IAATA,GAEAyF,EAAO,GAAKoB,SAASrB,EAAIvG,OAAO,GAAKuG,EAAIvG,OAAO,GAAI,IAAM,IAC1DwG,EAAO,GAAKoB,SAASrB,EAAIvG,OAAO,GAAKuG,EAAIvG,OAAO,GAAI,IAAM,IAC1DwG,EAAO,GAAKoB,SAASrB,EAAIvG,OAAO,GAAKuG,EAAIvG,OAAO,GAAI,IAAM,IAC1DwG,EAAO,GAAc,IAATzF,EAAa6G,SAASrB,EAAIvG,OAAO,GAAKuG,EAAIvG,OAAO,GAAI,IAAM,IAAM,GAC7D,IAATe,IAEPyF,EAAO,GAAKoB,SAASrB,EAAIvG,OAAO,GAAKuG,EAAIvG,OAAO,GAAI,IAAM,IAC1DwG,EAAO,GAAKoB,SAASrB,EAAIvG,OAAO,GAAKuG,EAAIvG,OAAO,GAAI,IAAM,IAC1DwG,EAAO,GAAKoB,SAASrB,EAAIvG,OAAO,GAAKuG,EAAIvG,OAAO,GAAI,IAAM,IAC1DwG,EAAO,GAAc,IAATzF,EAAa6G,SAASrB,EAAIvG,OAAO,GAAKuG,EAAIvG,OAAO,GAAI,IAAM,IAAM,IAE1E,IAQF,EAAA6H,2BAA2D,CACpEZ,EACAO,GAGJ,MAAMM,EAAmC,EAAAD,2BAA2BE,OAChE,CAACjN,EAAGE,IAAML,KAAKS,IAAIN,EAAGE,EAAE+F,MACxB,GAOS,EAAAiH,0BAA0D,CAACN,GAExE,MAAMO,EAAkC,EAAAD,0BAA0BD,OAC9D,CAACjN,EAAGE,IAAML,KAAKS,IAAIN,EAAGE,EAAE+F,MACxB,GAQS,EAAAmH,4BAA4D,IAClE,EAAAL,8BACA,EAAAG,2BAMM,EAAAG,kCAAoCxN,KAAKS,IAClD6M,EACAH,GAGJ,MAAMM,EAAsB,IAAI1V,MAAM,EAAAyV,mCA4BtC,SAASE,EACLzB,EACA0B,EACAC,EAAwB,GAExB,MAAMC,EAAgBF,EAAQG,KAAKC,KACxBA,EAAOrB,QAAQT,EAAMwB,IAGhC,QAAsB9U,IAAlBkV,EAA6B,CAC7B,MAAMG,EAA8B,EAAAC,cAAchC,GAElD,OAAOlU,MAAMC,QAAQgW,KAAgBA,EAAW5S,KAAKhH,GAAKyL,MAAMzL,IAC1D,EAAA8W,WAAWC,eACP6C,EAAW,GAAK,IAChBA,EAAW,GAAK,IAChBA,EAAW,GAAK,IAChBA,EAAW,SAEfrV,EAGV,OAAQkV,aAAa,EAAbA,EAAetB,MACnB,KAAKF,EAAyB3R,OAC1B,OAAO+S,EAAU,GAAKG,EAC1B,KAAKvB,EAAyBW,IAC1B,OAAO,EAAA9B,WAAWC,eACdsC,EAAU,GACVA,EAAU,GACVA,EAAU,GACVA,EAAU,IAElB,QACI,OAAOA,EAAU,IAnD7B,qCACIS,EACAN,EAAwB,GAExB,OAAOF,EAAmBQ,EAAS,EAAAX,4BAA6BK,IAUpE,mCAAwC1B,GACpC,OAAOwB,EAAmBxB,EAAO,EAAAmB,6B,uLChJrC,SAAYc,GACR,2BACA,uBACA,qBACA,iCAJJ,CAAY,EAAAA,oBAAA,EAAAA,kBAAiB,KA+B7B,4CACItY,GAEA,SACIA,QACwB8C,IAAxB9C,EAAEuY,mBACFrW,MAAMC,QAAQnC,EAAEwY,SAChBxY,EAAEwY,OAAOpW,OAAS,QACFU,IAAhB9C,EAAEwY,OAAO,IACTtW,MAAMC,QAAQnC,EAAEyY,aAChBzY,EAAEyY,WAAWrW,OAAS,QACFU,IAApB9C,EAAEyY,WAAW,IACbzY,EAAEwY,OAAOpW,SAAWpC,EAAEyY,WAAWrW,SAYzC,oDACIvC,GAEA,QAA+BiD,IAA3BjD,EAAS6Y,eAA0D,aAA3B7Y,EAAS6Y,cAA8B,CAC/E,MAAMC,EAAiB,CAAC,OAAQ,CAAC,QAAS9Y,EAAS2Y,OAAO,IAC1D,IAAK,IAAIta,EAAI,EAAGA,EAAI2B,EAAS4Y,WAAWrW,SAAUlE,EAC9Cya,EAAK3R,KAAKnH,EAAS4Y,WAAWva,GAAI2B,EAAS2Y,OAAOta,IAEtD,OAAOya,EAEX,MAAMD,EAA0B,CAAC,eACjC,OAAQ7Y,EAAS6Y,eACb,IAAK,SACDA,EAAc1R,KAAK,CAAC,WACpB,MACJ,IAAK,QACD0R,EAAc1R,KAAK,CAAC,UACpB,MACJ,IAAK,cACD0R,EAAc1R,KAAK,CACf,mBACsBlE,IAAtBjD,EAAS+Y,SAAyB/Y,EAAS+Y,SAAW,IAE1D,MACJ,QACI,MAAM,IAAIrU,MAAM,uBAAuB1E,EAAS6Y,mCAExDA,EAAc1R,KAAK,CAAC,SACpB,IAAK,IAAI9I,EAAI,EAAGA,EAAI2B,EAAS4Y,WAAWrW,SAAUlE,EAC9Cwa,EAAc1R,KAAKnH,EAAS4Y,WAAWva,GAAI2B,EAAS2Y,OAAOta,IAE/D,OAAOwa,I,sJC5FX,cACA,OACA,QACA,OACA,OACA,OAGA,QACA,QAEA,OAEA,MAAMG,UAA2B,EAAAC,WAAjC,c,oBA0Ba,KAAApC,KAAuB,EAAA3F,eAAegI,OAzBrC,aAAaC,EAAatO,EAAaE,GAC7C,OAAOT,KAAKO,IAAIP,KAAKS,IAAIF,EAAKsO,GAAMpO,GAG9B,qBAAqB3B,GAC3B,OAAO4P,EAAmB5N,MACtBhC,GACCgQ,EAAkBC,iBACnBD,EAAkBC,kBAIlB,uBAAuBjQ,GAC3B,OAAOkB,KAAKgP,IAAIhP,KAAKiP,IAAc,IAAVjP,KAAKkP,GAAuB,GAAXpQ,IAAmBkB,KAAKkP,GAG9D,4BAA4BpQ,GAChC,OAAO4P,EAAmBS,gBAAgBT,EAAmBU,cAActQ,IAGvE,yBAAyBzC,GAC7B,OAAO,EAAM2D,KAAKqP,KAAKrP,KAAKsP,IAAItP,KAAKkP,GAAK7S,IAAgB,GAAV2D,KAAKkP,GAOzD,eAAeK,GACX,OAAOvP,KAAKwP,KAAK,EAAIxP,KAAKkP,IAAMK,EAAWlT,EAAI1F,KAAKkQ,UAAY,KAIpE,YACIsB,EACAE,EACAvL,GAWA,OATKA,IACDA,EAAU,IAAI/G,EAAM0Z,MAExB3S,EAAOyD,IAAInE,EAAI,EACfU,EAAOyD,IAAIlE,EAAI,EACfS,EAAOyD,IAAIhE,EAAI4L,EACfrL,EAAO2D,IAAIrE,EAAIzF,KAAKkQ,UACpB/J,EAAO2D,IAAIpE,EAAI1F,KAAKkQ,UACpB/J,EAAO2D,IAAIlE,EAAI8L,EACRvL,EAIX,aACI4S,EACA5S,GAEA,IAAIwC,EAqBJ,OAlBIA,EADAoQ,aAAwB,EAAA7Q,eACb6Q,EAEA,IAAI,EAAA7Q,eACX6Q,EAAa5Q,SACb4Q,EAAa3Q,UACb2Q,EAAa1Q,UAIhBlC,IAEDA,EAAS,CAAEV,EAAG,EAAGC,EAAG,EAAGE,EAAG,IAE9BO,EAAOV,GAAMkD,EAASP,UAAY,KAAO,IAAOpI,KAAKkQ,UACrD/J,EAAOT,GACoE,GAAtEqS,EAAmBiB,qBAAqBrQ,EAASsQ,mBAA2B,IAC7EjZ,KAAKkQ,UACT/J,EAAOP,EAAI+C,EAASN,UAAY,EACzBlC,EAIX,eAAeyS,GAMX,OALiB,EAAA1Q,eAAegR,YAC5BnB,EAAmBoB,kBAA0D,GAAvCP,EAAWlT,EAAI1F,KAAKkQ,UAAY,KACrE0I,EAAWnT,EAAIzF,KAAKkQ,UAAa,EAAI7G,KAAKkP,GAAKlP,KAAKkP,GACrDK,EAAWhT,GAMnB,kBAAkBgT,GACd,OAAOA,EAAWhT,EAItB,WACIqN,EACA9M,GAEA,MAAMiT,EAAcpZ,KAAKoQ,aAAa6C,EAAOjC,QACvCqI,GAC6E,GAA9EtB,EAAmBiB,qBAAqB/F,EAAOlC,UAAUkI,mBACtD,IACJjZ,KAAKkQ,UACHoJ,GAC6E,GAA9EvB,EAAmBiB,qBAAqB/F,EAAOnC,UAAUmI,mBACtD,IACJjZ,KAAKkQ,UACHqJ,EAA2C,IAA3BF,EAAaC,GAEnCF,EAAY1T,EAAI6T,EAEhB,MAAMrI,EAAemI,EAAaC,EAC5BnI,EAAiB8B,EAAO9B,cAAgB,IAAOnR,KAAKkQ,UAI1D,GAHK/J,IACDA,EAAU,IAAI/G,EAAM0Z,MAEpB,EAAAU,WAAWrT,GAAS,CACpBA,EAAOyD,IAAInE,EAAI2T,EAAY3T,EAAoB,GAAhB0L,EAC/BhL,EAAOyD,IAAIlE,EAAI0T,EAAY1T,EAAmB,GAAfwL,EAC/B/K,EAAO2D,IAAIrE,EAAI2T,EAAY3T,EAAoB,GAAhB0L,EAC/BhL,EAAO2D,IAAIpE,EAAI0T,EAAY1T,EAAmB,GAAfwL,EAC/B,MAAMO,EAAewB,EAAOxB,kBACPzP,IAAjByP,GACAtL,EAAOyD,IAAIhE,EAAIwT,EAAYxT,EAAmB,GAAf6L,EAC/BtL,EAAO2D,IAAIlE,EAAIwT,EAAYxT,EAAmB,GAAf6L,IAE/BtL,EAAOyD,IAAIhE,EAAI,EACfO,EAAO2D,IAAIlE,EAAI,OAEhB,KAAI,EAAA6T,mBAAmBtT,GAW1B,MAAM,IAAI1C,MAAM,wBAVhB,EAAA6E,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO0J,OACrC,EAAAvH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO2J,OACrC,EAAAxH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO4J,OACrC5J,EAAOyJ,SAASnK,EAAI2T,EAAY3T,EAChCU,EAAOyJ,SAASlK,EAAI0T,EAAY1T,EAChCS,EAAOyJ,SAAShK,EAAIwT,EAAYxT,EAChCO,EAAO6J,QAAQvK,EAAoB,GAAhB0L,EACnBhL,EAAO6J,QAAQtK,EAAmB,GAAfwL,EACnB/K,EAAO6J,QAAQpK,EAAIyD,KAAKS,IAAIyC,OAAOmN,QAAsC,IAA5BzG,EAAOxB,cAAgB,IAIxE,OAAOtL,EAIX,aAAawT,GACT,MAAMC,EAAS5Z,KAAKuQ,eAAeoJ,EAAS/P,KACtCiQ,EAAS7Z,KAAKuQ,eAAeoJ,EAAS7P,KAE5C,OADe,EAAA+G,OAAOiJ,gBAAgBF,EAAQC,GAKlD,eAAejB,GACX,OAAOA,EAAWhT,EAItB,oBAAoBgT,GAEhB,OADAA,EAAWhT,EAAI,EACRgT,EAIX,cAAcmB,EAA0BC,GAQpC,YAPehY,IAAXgY,EACAA,EAAS,CAAEvU,EAAG,EAAGC,EAAG,EAAGE,EAAG,IAE1BoU,EAAOvU,EAAI,EACXuU,EAAOtU,EAAI,EACXsU,EAAOpU,EAAI,GAERoU,EAIX,eACI3J,EACAC,EACAnK,GAOA,OACIkK,IAAqBrQ,MACpBqQ,IAAqB,EAAA4J,uBAAyB5J,IAAqB,EAAA6J,mBAcjElX,MAAMmX,eAAe9J,EAAkBC,EAAUnK,SAZrCnE,IAAXmE,IAEAA,EAAS,IAGbA,EAAOV,EAAI6K,EAAS7K,EACpBU,EAAOT,EAAI1F,KAAKkQ,UAAYI,EAAS5K,EACrCS,EAAOP,EAAI0K,EAAS1K,EAEbO,IAsHnB,kBAAagS,GAGb,OADoB,EAAAC,iBAA2B,mBAC/C,GAHA,GAAa,EAAAD,oBAQA,EAAA+B,mBAAiC,IAAInC,EAC9C,EAAA/F,eAAeC,0BAON,EAAAgI,sBAAoC,IA/HjD,cAAoClC,EAEhC,aACIgB,EACA5S,GAEA,IAAIwC,EAGAA,EADAoQ,aAAwB,EAAA7Q,eACb6Q,EAEA,IAAI,EAAA7Q,eACX6Q,EAAa5Q,SACb4Q,EAAa3Q,UACb2Q,EAAa1Q,UAchBlC,IAEDA,EAAS,CAAEV,EAAG,EAAGC,EAAG,EAAGE,EAAG,IAG9BO,EAAOV,GAAMkD,EAASP,UAAY,KAAO,IAAOpI,KAAKkQ,UACrD,MAAMkK,EAAK/Q,KAAKgR,IAAItC,EAAmBU,cAAc9P,EAASsQ,oBAG9D,OAFA9S,EAAOT,GAAK,GAAM2D,KAAKgP,KAAK,EAAI+B,IAAO,EAAIA,KAAQ,EAAI/Q,KAAKkP,KAAOvY,KAAKkQ,UACxE/J,EAAOP,EAAI+C,EAASN,UAAY,EACzBlC,EAIX,eAAeyS,GACX,MAAMnT,EAAImT,EAAWnT,EAAIzF,KAAKkQ,UAAY,GACpCxK,EAAI,GAAMkT,EAAWlT,EAAI1F,KAAKkQ,UAE9B9H,EAAY,IAAM3C,EAClB0C,EAAW,GAAM,IAAMkB,KAAKqP,KAAKrP,KAAKsP,IAAS,GAAJjT,EAAQ2D,KAAKkP,KAAQlP,KAAKkP,GAE3E,OAAO,IAAI,EAAArQ,eAAeC,EAAUC,EAAWwQ,EAAWhT,GAI9D,WACIqN,EACA9M,GAEA,MAAMjI,EAAI8E,MAAMsX,WAAWrH,EAAQ9M,GACnC,GAAI,EAAAqT,WAAWtb,GAAI,CAEf,MAAMqc,EAAOrc,EAAE4L,IAAIpE,EACnBxH,EAAE4L,IAAIpE,EAAI1F,KAAKkQ,UAAYhS,EAAE0L,IAAIlE,EACjCxH,EAAE0L,IAAIlE,EAAI1F,KAAKkQ,UAAYqK,OACpB,EAAAd,mBAAmBvb,KAC1B,EAAAoK,UAAUyB,WAAW,EAAG,EAAG,EAAG7L,EAAE2R,OAChC,EAAAvH,UAAUyB,WAAW,GAAI,EAAG,EAAG7L,EAAE4R,OACjC,EAAAxH,UAAUyB,WAAW,EAAG,GAAI,EAAG7L,EAAE6R,OACjC7R,EAAE0R,SAASlK,EAAI1F,KAAKkQ,UAAYhS,EAAE0R,SAASlK,GAE/C,OAAOxH,EAIX,aAAayb,GACT,MAAMC,EAAS5Z,KAAKuQ,eAAeoJ,EAAS/P,KACtCiQ,EAAS7Z,KAAKuQ,eAAeoJ,EAAS7P,KAK5C,OAJe,IAAI,EAAA+G,OACf,IAAI,EAAA3I,eAAe2R,EAAO1R,SAAUyR,EAAOxR,UAAWwR,EAAOvR,UAC7D,IAAI,EAAAH,eAAe0R,EAAOzR,SAAU0R,EAAOzR,UAAWyR,EAAOxR,WAMrE,cAAc0R,EAA0BC,GAQpC,YAPehY,IAAXgY,EACAA,EAAS,CAAEvU,EAAG,EAAGC,EAAG,EAAGE,GAAI,IAE3BoU,EAAOvU,EAAI,EACXuU,EAAOtU,EAAI,EACXsU,EAAOpU,GAAK,GAEToU,EAIX,kBACI7J,EACAhK,GAUA,OARI,EAAA2C,qBAAqBqH,GACrBnQ,KAAKoQ,aAAaD,EAAOhK,EAAOyJ,UAEhC,EAAAtH,UAAU0B,YAAYmG,EAAOhK,EAAOyJ,UAExC,EAAAtH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO0J,OACrC,EAAAvH,UAAUyB,WAAW,GAAI,EAAG,EAAG5D,EAAO2J,OACtC,EAAAxH,UAAUyB,WAAW,EAAG,GAAI,EAAG5D,EAAO4J,OAC/B5J,IAqBX,EAAA6L,eAAeC,2B,iHCxUN,EAAAuI,0BAA+C,IApB5D,MACI,kBACI,OAAO,EAEX,kBACI,OAAO,EAEX,mBAAmB1H,GAEf,OAAO,GAAKA,EAEhB,mBAAmBA,GAEf,OAAO,GAAKA,K,+FCdpB,MAAM2H,EAAa,CACf,EACA,EACA,EACA,EACA,GACA,GACA,GACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,aACA,aACA,aACA,cACA,cACA,cACA,cACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,kBAiCJ,MAAaC,EA+JT,YAAqBC,EAAsBC,EAAyB9H,GAA/C,KAAA6H,MAAsB,KAAAC,SAAyB,KAAA9H,QAvJpE,0BAA0B6H,EAAaC,EAAgB9H,GACnD,OAAO,IAAI4H,EAAQC,EAAKC,EAAQ9H,GAWpC,mBAAmB+H,GACf,MAAM/H,EAAQ+H,EAAQvZ,OACtB,IAAIqZ,EAAM,EACNC,EAAS,EAEb,IAAK,IAAIxd,EAAI,EAAGA,EAAIyd,EAAQvZ,SAAUlE,EAAG,CACrC,MAAM+Y,EAAO,GAAK/Y,EACZM,EAAI4Y,SAASuE,EAAQnM,OAAOoE,EAAQ1V,EAAI,GAAI,IAC1C,EAAJM,IACAkd,GAAUzE,GAEN,EAAJzY,IACAid,GAAOxE,GAIf,OAAOuE,EAAQI,mBAAmBH,EAAKC,EAAQ9H,GAUnD,sBAAsBiI,GAClB,IAAIjI,EAAQ,EACR6H,EAAM,EACNC,EAAS,EACTI,EAAUD,EAEd,KAAOC,EAAU,GAAG,CAChB,MAAM7E,EAAe,GAAKrD,EAEZ,EAAVkI,IACAJ,GAAUzE,GAEA,EAAV6E,IACAL,GAAOxE,GAGXrD,IACAkI,GAAWA,GAAqB,EAAVA,IAAkB,EAG5C,MAAM7U,EAASuU,EAAQI,mBAAmBH,EAAKC,EAAQ9H,GAEvD,OADA3M,EAAO8U,aAAeF,EACf5U,EAWX,oBAAoB+U,GAChB,MAAM/U,EAASuU,EAAQS,eAAe7E,SAAS4E,EAAW,KAE1D,OADA/U,EAAOiV,WAAaF,EACb/U,EAWX,sBAAsB2M,GAClB,OAAOzJ,KAAKgS,IAAI,EAAGvI,GAWvB,mBAAmBA,GACf,OAAOzJ,KAAKgS,IAAI,EAAGvI,GAavB,gBACIA,EACAwI,EACAC,EACAC,EACAC,GAEA,OAAOf,EAAQI,mBACXzR,KAAKoD,MAAM8O,GAAUE,EAAcf,EAAQgB,YAAY5I,KACvDzJ,KAAKoD,MAAM6O,GAAUE,EAAad,EAAQiB,eAAe7I,KACzDA,GAYR,wBAAwB8I,GACpB,OAAOvS,KAAKoD,MAAMmP,EAAa,GAwBnC,SACI,GAAmB,IAAf5b,KAAK8S,MACL,MAAM,IAAIrP,MAAM,8CAGpB,OAAOiX,EAAQI,mBAAmB9a,KAAK2a,MAAQ,EAAG3a,KAAK4a,SAAW,EAAG5a,KAAK8S,MAAQ,GAYtF,eAAe+I,GACX,MAAM/I,EAAQzJ,KAAKS,IAAI,EAAG9J,KAAK8S,MAAQ+I,GACvC,IAAIlB,EAAM3a,KAAK2a,IACXC,EAAS5a,KAAK4a,OAWlB,OARIiB,GAAS,GACTlB,IAAQkB,EACRjB,IAAWiB,IAEXlB,MAAUkB,EACVjB,MAAaiB,GAGVnB,EAAQI,mBAAmBH,EAAKC,EAAQ9H,GAcnD,eAAeA,GACX,OAAO9S,KAAK8b,eAAehJ,EAAQ9S,KAAK8S,OAU5C,aACI,QAA0B9Q,IAAtBhC,KAAKib,aAA4B,CACjC,IAAIL,EAAS5a,KAAK4a,OACdD,EAAM3a,KAAK2a,IAGXxU,EAASsU,EAAWza,KAAK8S,OAAS,GACtC,IAAK,IAAI1V,EAAI,EAAGA,EAAI4C,KAAK8S,QAAS1V,EACjB,EAATwd,IACAzU,GAAUsU,EAAW,EAAIrd,IAEnB,EAANud,IACAxU,GAAUsU,EAAW,EAAIrd,EAAI,IAEjCwd,KAAY,EACZD,KAAS,EAIb3a,KAAKib,aAAe9U,EAExB,OAAOnG,KAAKib,aAUhB,aAII,YAHwBjZ,IAApBhC,KAAKob,aACLpb,KAAKob,WAAapb,KAAK4b,aAAaxQ,YAEjCpL,KAAKob,WAchB,YACI,IAAIjV,EAAiB,GAGrB,IAAK,IAAI/I,EAAI4C,KAAK8S,MAAO1V,EAAI,IAAKA,EAAG,CACjC,MAAM+Y,EAAO,GAAM/Y,EAAI,EAEjB2e,EAA+B,IAAxB/b,KAAK4a,OAASzE,GACrBwE,EAA4B,IAArB3a,KAAK2a,IAAMxE,GAGpBhQ,GADA4V,GAAOpB,EACG,IACHA,EACG,IACHoB,EACG,IAEA,IAKlB,OAAO5V,EASX,OAAO6V,GACH,OAAOhc,KAAK2a,MAAQqB,EAAIrB,KAAO3a,KAAK4a,SAAWoB,EAAIpB,QAAU5a,KAAK8S,QAAUkJ,EAAIlJ,MASpF,YAAYmJ,GACR,MAAMC,EAAUxB,EAAQyB,YAA2B,IAAfF,EAAI3a,OAAe,IAAM2a,GACvDG,EAAQpc,KAAK8b,eAAeI,EAAQpJ,OAC1C,OAAO4H,EAAQI,mBACXsB,EAAMzB,IAAMuB,EAAQvB,IACpByB,EAAMxB,OAASsB,EAAQtB,OACvBwB,EAAMtJ,OAUd,iBAAiBmJ,GACb,MAAMC,EAAUxB,EAAQ2B,aAAaJ,GAC/BG,EAAQpc,KAAK8b,eAAeI,EAAQpJ,OAC1C,OAAO4H,EAAQI,mBACXsB,EAAMzB,IAAMuB,EAAQvB,IACpByB,EAAMxB,OAASsB,EAAQtB,OACvBwB,EAAMtJ,OAsBd,eAAe+I,GACX,MAEMS,EAAM,GAAc,EAART,EAIlB,OANY7b,KAAK4b,aAGJU,EAAM,EAEWA,GAChBlR,WAQlB,WACI,OAAOsP,EAAQgB,YAAY1b,KAAK8S,OAQpC,cACI,OAAO4H,EAAQiB,eAAe3b,KAAK8S,QA7X3C,a,qGCvFA,aAGMyJ,EAFN,KAEeC,cAAcvc,SAASvB,OAAO,gBAAiB,CAAE+d,SAAS,IAoDzE,sBAQI,YAAqBC,GAAA,KAAAA,YAPb,KAAAC,kBAA+C,IAAIxa,IAoDnD,KAAAya,UAAa5R,IACjB,GAAoC,iBAAzBA,EAAQ6R,KAAKC,SAAwB9R,EAAQ6R,KAAKC,UAAY9c,KAAK0c,UAI9E,IACI,GAAI,EAAAK,sBAAsBC,iBAAiBhS,EAAQ6R,MAAO,CACtD,MAAMI,EAAUjS,EAAQ6R,KAClBK,EAAe,CACjBJ,QAASG,EAAQH,QACjBK,UAAWF,EAAQE,UACnBC,cAAc,GAElBpd,KAAK2c,kBAAkB3V,IAAIiW,EAAQE,UAAWD,GAC9Cld,KAAKqd,iBAAiBJ,EAAQA,SACzBK,KAAKC,IACFvd,KAAKwd,eACDN,EACA,CACIJ,QAAS9c,KAAK0c,UACd9G,KAAM,EAAAmH,sBAAsBU,mBAAmBC,SAC/CP,UAAWF,EAAQE,UACnBI,SAAUA,EAASA,UAEvBA,EAASI,gBAGhBC,MAAMC,IACH7d,KAAKwd,eAAeN,EAAc,CAC9BJ,QAAS9c,KAAK0c,UACd9G,KAAM,EAAAmH,sBAAsBU,mBAAmBC,SAC/CP,UAAWF,EAAQE,UACnBW,aAAcD,EAAMzS,WACpB2S,WAAYF,EAAM3S,eAI9BlL,KAAKge,iBAAiBhT,EAAQ6R,MAEpC,MAAOoB,GACL1B,EAAOsB,MAAM,IAAI7d,KAAK0c,iDAAiD1R,EAAQ4K,UApFnF9J,KAAKoS,iBAAiB,UAAWle,KAAK4c,WAEtC,MAAMuB,EAAiE,CACnErB,QAASJ,EACT9G,KAAM,EAAAmH,sBAAsBU,mBAAmBW,aAEnDtS,KAAKuS,YAAYF,GAOrB,UACIne,KAAKse,2BAELxS,KAAKyS,oBAAoB,UAAWve,KAAK4c,WAQnC,cAAc5R,GACpBuR,EAAOsB,MAAM,IAAI7d,KAAK0c,+BAA+B1R,EAAQ4K,QAQvD,cAAcqH,GACpB,MAAM,IAAIxZ,MAAM,kBAAkBzD,KAAK0c,gCAAgCO,EAAQrH,SAyD3E,iBAAiB5K,GACrB,IACIhL,KAAKwe,cAAcxT,GACrB,MAAO6S,GACLtB,EAAOsB,MAAM,IAAI7d,KAAK0c,wCAAwC1R,EAAQ4K,SAOtE,iBAAiBqH,GACrB,IACI,OAAOjd,KAAKye,cAAcxB,GAC5B,MAAOY,GAGL,OADAtB,EAAOsB,MAAM,IAAI7d,KAAK0c,sBAAuBmB,GACtCa,QAAQC,OAAOd,IAItB,eACJX,EACAK,EACAI,GAEIT,EAAaE,oBAIIpb,IAAjB2b,EACA7R,KAAKuS,YAAYd,EAAUI,GAE3B7R,KAAKuS,YAAYd,GAGrBL,EAAaE,cAAe,EAC5Bpd,KAAK2c,kBAAkB5V,OAAOmW,EAAaC,YAGvC,2BACJnd,KAAK2c,kBAAkBtc,QAAQ6c,IAC3Bld,KAAKwd,eAAeN,EAAc,CAC9BJ,QAAS9c,KAAK0c,UACd9G,KAAM,EAAAmH,sBAAsBU,mBAAmBC,SAC/CP,UAAWD,EAAaC,UACxBW,aAAc,mB,0PC1M9B,aACA,OAGA,QAgBA,SAAgBc,EACZnW,EACAoW,EACAC,EAA8BzV,KAAKoD,OAEnC,OAAOqS,GACD,EACEzV,KAAKgP,IAAIhP,KAAKiP,IAAK7P,EAAMY,KAAKkP,GAAM,KAAO,EAAIlP,KAAK0V,IAAKtW,EAAMY,KAAKkP,GAAM,MACtElP,KAAKkP,IACT,EACAlP,KAAKgS,IAAI,EAAGwD,IAmBxB,SAAgBG,EAAoChP,EAAiBiP,GACjE,MAAM,MAAE5N,EAAK,KAAEC,GAAS2N,EAAWhM,OAC7BiM,EAAI7V,KAAK8V,KAAKnP,GACdoP,EAAQ/V,KAAKgS,IAAI,EAAG4D,EAAWrM,QAAQE,MAAQoM,GACrD,MAAO,CACHlP,UACAoP,QACAC,IAAKT,EACDvN,EACA4N,EAAWrM,QAAQE,MAAQoM,EAC3BD,EAAWK,YAAc,EAAAC,oBAAsBlW,KAAKmW,MAAQnW,KAAKoD,OAErEgT,MAAQnO,EAAO,KAAO,IAAO8N,GAOrC,SAAgBM,EACZ1P,EACAiP,EACArP,EACA+P,GAAiB,EACjBzK,QAG6ClT,IAAzCid,EAAWW,2BACXX,EAAWW,0BAA0B5P,UAAYA,IAEjDiP,EAAWW,0BAA4BZ,EACnChP,EACAiP,IAIR,MAAM,IAAEI,EAAG,KAAEI,EAAI,MAAEL,GAAUH,EAAWW,0BAClCC,EAAI,EAAA7N,eAAeC,yBAEzB,OAAOiD,EAAOlO,KACRyY,EAAO7P,EAASnK,GAAK2Z,EAASS,GAC9BR,GAAOM,GAAS/P,EAASlK,EAAIkK,EAASlK,IAAM0Z,EAASS,GAjF/D,6BAAkChD,GAC9B,MAAiC,oBAAtBiD,kBACAjD,aAAgBkD,aAAelD,aAAgBiD,kBAE/CjD,aAAgBkD,aAO/B,aAiBA,oBAAyBra,EAAWoN,GAChC,MAAMjU,EAAIwK,KAAKkP,GAAM,EAAIlP,KAAKkP,GAAK7S,EAAK2D,KAAKgS,IAAI,EAAGvI,GACpD,OAAQ,IAAMzJ,KAAKkP,GAAMlP,KAAKqP,KAAK,IAAOrP,KAAKsP,IAAI9Z,GAAKwK,KAAKsP,KAAK9Z,MAUtE,wCAmBA,eA6BA,sBACImR,EACAiP,EACArP,EACA+P,GAAiB,EACjBzK,QAG6ClT,IAAzCid,EAAWW,2BACXX,EAAWW,0BAA0B5P,UAAYA,IAEjDiP,EAAWW,0BAA4BZ,EACnChP,EACAiP,IAGR,MAAM,IAAEI,EAAG,KAAEI,EAAI,MAAEL,GAAUH,EAAWW,0BAClCC,EAAI,EAAA7N,eAAeC,yBAEzB,OAAOiD,EAAOlO,IACT4I,EAASnK,EAAIoa,EAAKT,EAAQK,GAC1BE,GAAS,EAAI,IAAO/P,EAASlK,EAAIma,EAAKT,EAAQC,KAIvD,MAAMW,EAAe,IAAI5gB,EAAMoG,QAE/B,SAAgBya,EACZjQ,EACAiP,EACArP,EACAsF,EACAyK,GAAiB,GAEjB,MAAMrP,EAAWoP,EAAW1P,EAASiP,EAAYrP,EAAU+P,EAAOK,GAClE9K,EAAOlO,IAAIsJ,EAAS7K,EAAG6K,EAAS5K,EAAG,GACnCuZ,EAAWiB,iBAAiB/F,eAAe,EAAAF,sBAAuB/E,EAAQA,GAT9E,gCAYA,sCACIlF,EACAiP,EACArP,EACAsF,EACAyK,GAAiB,GAEjBM,EAA4BjQ,EAASiP,EAAYrP,EAAUsF,EAAQyK,GACnEzK,EAAO+G,IAAIgD,EAAWjO,U,gHC1I1B,SAAYmP,GACR,qBACA,qBACA,iBACA,mBACA,mBACA,qBANJ,CAAY,EAAAA,WAAA,EAAAA,SAAQ,KAYpB,yB,4JCaA,+BAAoCC,EAA+BC,GAC/D,GAAIC,EAAwBC,KAAKF,GAC7B,OAAOA,EACJ,GAAIA,EAASvM,WAAW,KAAM,CAEjC,OADe0M,EAAaJ,GACZC,EAMhB,OAJIA,EAASvM,WAAW,QACpBuM,EAAWA,EAASI,OAAO,IAETC,EAAQN,GACPC,GAI/B,MAAMC,EAA0B,IAAIK,OAAO,uCAAwC,KAmBnF,SAAgBD,EAAQE,GACpB,QAAY5e,IAAR4e,EACA,MAAO,KAEX,IAAIC,EAAMD,EAAI3M,QAAQ,KAStB,OARa,IAAT4M,IACAD,EAAMA,EAAIta,MAAM,EAAGua,IAEvBA,EAAMD,EAAI3M,QAAQ,MACL,IAAT4M,IACAD,EAAMA,EAAIta,MAAM,EAAGua,IAEvBA,EAAMD,EAAIE,YAAY,MACT,IAATD,EACO,KAEAD,EAAIhS,UAAU,EAAGiS,EAAM,GAetC,SAAgBL,EAAaI,GACzB,QAAY5e,IAAR4e,EACA,MAAO,GAEX,MAAMG,EAASC,EAAsBJ,GACrC,MAAwB,UAApBG,EAAOE,SACA,UACAF,EAAOG,MAAQH,EAAOE,SACtBF,EAAOE,SAAW,KAAOF,EAAOG,KAChCH,EAAOG,KACP,KAAOH,EAAOG,KACdH,EAAOE,SACPF,EAAOE,SAAW,KAElB,GAOf,SAAgBD,EACZJ,GAKA,MAAMO,EAAc,IAAIR,OAAO,8BAA+B,KAExDjN,EAAQkN,EAAIlN,MAAMyN,GACxB,IAAKzN,EACD,MAAM,IAAIjQ,MAAM,+CAA+Cmd,MAEnE,MAAO,CACHK,SAAUvN,EAAM,GAChBwN,KAAMxN,EAAM,IAlEpB,YA+BA,iBAqBA,2B,8FCpHA,MAAM0N,EAAK,sCAQX,MAAard,EAmBT,YAAqB1F,GAAA,KAAAA,QAbrB,aAAaiX,GACT,MAAM5B,EAAQ0N,EAAGnL,KAAKX,GACtB,GAAc,OAAV5B,EAGJ,OAAO,IAAI3P,EAAOwI,OAAOmH,EAAM,KAUnC,SACI,MAAO,GAAG1T,KAAK3B,WAtBvB,Y,kLCPA,aACA,QA4MA,6BAAkCgjB,GAC9B,MAAMC,EAAOD,EACb,MACoB,iBAATC,GACE,OAATA,IACsB,iBAAdA,EAAK1L,WAA0C,IAAd0L,EAAK1L,QACvB,iBAAf0L,EAAKjjB,OACa,iBAAfijB,EAAKjjB,OACU,kBAAfijB,EAAKjjB,OACZ,EAAAwI,iCAAiCya,EAAKjjB,QACtC,EAAA6C,WAAWogB,EAAKjjB,SAI5B,+BAAoCgjB,GAChC,MAAsB,iBAARA,GAAmC,iBAARA,GAAmC,kBAARA,GAsKxE,+BAAoChjB,GAChC,OACI+C,MAAMC,QAAQhD,IACG,IAAjBA,EAAMiD,QACO,QAAbjD,EAAM,IACc,iBAAbA,EAAM,IAoBrB,sCAA2CgjB,GACvC,MAAME,EAAWF,EACjB,MACwB,iBAAbE,GACM,OAAbA,IACCngB,MAAMC,QAAQkgB,IACe,iBAAvBA,EAASC,Y,81BClaxB,cAsBA,QAUa,EAAAC,sBAAwB,CACjC,MACA,YACA,kBACA,eACA,cACA,WACA,eACA,WAOS,EAAAC,2BAA6B,CAAC,UAAW,eAsBzC,EAAAC,qBAAoD,GAGpD,EAAAC,8BAA0E,CAGnFC,sBAAuB,QACvBC,WAAY,CACRC,YAAa,EAAAC,UAAUC,kBACvBxF,QAAS,EAAAuF,UAAUE,gBACnBC,KAAM,EAAAH,UAAUC,kBAChBG,UAAW,EAAAJ,UAAUC,kBACrBI,QAAS,EAAAL,UAAUM,mBACnBC,SAAU,EAAAP,UAAUM,qBAKf,EAAAE,wBAA0B,EAAAC,yBACnC,EAAAb,8BACA,CACIE,WAAY,CACRY,QAAS,EAAAV,UAAUC,kBACnBU,cAAe,EAAAX,UAAUC,kBACzB1M,MAAO,EAAAyM,UAAUM,mBACjBM,YAAa,EAAAZ,UAAUM,mBACvBO,QAAS,EAAAb,UAAUC,qBAclB,EAAAa,0BAA4B,EAAAL,yBACrC,EAAAb,8BACA,EAAAY,yBAEJ,EAAAb,qBAAqBoB,QAAU,EAAAD,0BAWlB,EAAAE,0BAA4B,EAAAP,yBACrC,EAAAb,8BACA,EAAAY,yBAEJ,EAAAb,qBAAqBsB,QAAU,EAAAD,0BAkB/B,MAAME,EAA+B,EAAAT,yBACjC,EAAAb,8BACA,CACIE,WAAY,CACRxM,KAAM,EAAA0M,UAAUE,gBAChBlc,MAAO,EAAAgc,UAAUE,gBACjBiB,gBAAiB,EAAAnB,UAAUE,gBAC3BkB,WAAY,EAAApB,UAAUE,gBACtBmB,SAAU,EAAArB,UAAUC,kBACpBqB,iBAAkB,EAAAtB,UAAUC,kBAC5BsB,iBAAkB,EAAAvB,UAAUC,kBAC5BuB,iBAAkB,EAAAxB,UAAUC,kBAC5BwB,iBAAkB,EAAAzB,UAAUC,kBAC5ByB,cAAe,EAAA1B,UAAUC,kBACzB0B,eAAgB,EAAA3B,UAAUC,kBAC1B2B,eAAgB,EAAA5B,UAAUC,kBAC1B4B,iBAAkB,EAAA7B,UAAUC,kBAC5B6B,iBAAkB,EAAA9B,UAAUC,kBAC5B8B,0BAA2B,EAAA/B,UAAUC,kBACrC+B,YAAa,EAAAhC,UAAUC,kBACvBgC,eAAgB,EAAAjC,UAAUC,kBAC1BiC,UAAW,EAAAlC,UAAUC,kBACrBkC,UAAW,EAAAnC,UAAUC,kBACrBmC,YAAa,EAAApC,UAAUC,kBACvBoC,eAAgB,EAAArC,UAAUC,kBAC1BqC,aAAc,EAAAtC,UAAUC,kBACxBsC,aAAc,EAAAvC,UAAUC,kBACxBuC,QAAS,EAAAxC,UAAUC,kBACnBwC,QAAS,EAAAzC,UAAUC,kBACnByC,YAAa,EAAA1C,UAAUC,kBACvB0C,YAAa,EAAA3C,UAAUC,kBACvB2C,UAAW,EAAA5C,UAAUC,kBACrB4C,aAAc,EAAA7C,UAAUC,kBACxB6C,YAAa,EAAA9C,UAAUC,kBACvB8C,SAAU,EAAA/C,UAAUC,kBACpB+C,QAAS,EAAAhD,UAAUE,gBACnB+C,aAAc,EAAAjD,UAAUC,kBACxBiD,aAAc,EAAAlD,UAAUE,gBACxBiD,kBAAmB,EAAAnD,UAAUC,kBAC7BmD,mBAAoB,EAAApD,UAAUC,kBAC9BoD,oBAAqB,EAAArD,UAAUC,kBAC/BqD,UAAW,EAAAtD,UAAUM,mBACrBiD,eAAgB,EAAAvD,UAAUM,mBAC1BkD,MAAO,EAAAxD,UAAUC,kBACjBwD,SAAU,EAAAzD,UAAUC,kBACpByD,UAAW,EAAA1D,UAAUC,kBACrB0D,YAAa,EAAA3D,UAAUC,kBACvB2D,SAAU,EAAA5D,UAAUC,kBACpB4D,SAAU,EAAA7D,UAAUC,kBACpB6D,QAAS,EAAA9D,UAAUC,kBACnB8D,SAAU,EAAA/D,UAAUC,kBACpB+D,UAAW,EAAAhE,UAAUC,kBACrBgE,eAAgB,EAAAjE,UAAUC,kBAC1BiE,aAAc,EAAAlE,UAAUC,kBACxBkE,aAAc,EAAAnE,UAAUC,kBACxBmE,WAAY,EAAApE,UAAUC,kBACtBoE,WAAY,EAAArE,UAAUC,kBACtBqE,WAAY,EAAAtE,UAAUC,kBACtBsE,gBAAiB,EAAAvE,UAAUM,mBAC3BkE,eAAgB,EAAAxE,UAAUM,mBAC1BmE,kBAAmB,EAAAzE,UAAUM,mBAC7B/M,MAAO,EAAAyM,UAAUM,mBACjBO,QAAS,EAAAb,UAAUM,mBACnB7S,KAAM,EAAAuS,UAAUM,sBAI5B,EAAAX,qBAAqB,eAAiBuB,EACtC,EAAAvB,qBAAqB,gBAAkBuB,EAUvC,MAAMwD,EAA8E,CAChF5E,WAAY,CACR6E,cAAe,EAAA3E,UAAUM,mBACzBsE,oBAAqB,EAAA5E,UAAUM,mBAC/BuE,mBAAoB,EAAA7E,UAAUM,mBAC9BwE,UAAW,EAAA9E,UAAUM,mBACrByE,YAAa,EAAA/E,UAAUM,mBACvB0E,aAAc,EAAAhF,UAAUM,qBA8BnB,EAAA2E,6BAA+B,EAAAxE,yBACxC,EAAAb,8BACA8E,EACA,CACI5E,WAAY,CACRoF,SAAU,EAAAlF,UAAUC,kBACpBkF,qBAAsB,EAAAnF,UAAUC,kBAChC1M,MAAO,EAAAyM,UAAUM,mBACjBO,QAAS,EAAAb,UAAUM,mBACnBM,YAAa,EAAAZ,UAAUM,mBACvB0D,UAAW,EAAAhE,UAAUM,mBACrB8E,eAAgB,EAAApF,UAAUM,mBAC1B+E,eAAgB,EAAArF,UAAUM,mBAC1BgF,SAAU,EAAAtF,UAAUM,mBACpBiF,QAAS,EAAAvF,UAAUM,sBAI/B,EAAAX,qBAAqB,cAAgB,EAAAsF,6BAErC,EAAAtF,qBAAqB,eAAiB,EAAAsF,6BAWzB,EAAAO,wBAA0B,EAAA/E,yBACnC,EAAAb,8BACA,CACIE,WAAY,CAERvM,MAAO,EAAAyM,UAAUM,mBACjBO,QAAS,EAAAb,UAAUM,mBACnBM,YAAa,EAAAZ,UAAUM,mBACvB0D,UAAW,EAAAhE,UAAUE,mBAKjC,EAAAP,qBAAqB8F,KAAO,EAAAD,wBAU5B,MAAME,EAA0B,EAAAjF,yBAC5B,EAAAb,8BACA8E,EACA,CACI5E,WAAY,CACRvM,MAAO,EAAAyM,UAAUM,mBACjBO,QAAS,EAAAb,UAAUM,mBACnBM,YAAa,EAAAZ,UAAUM,mBACvB0D,UAAW,EAAAhE,UAAUM,sBAIjC,EAAAX,qBAAqBgG,KAAOD,EAS5B,MAAME,EAA8B,EAAAnF,yBAChC,EAAAb,8BACA,CACIE,WAAY,CACRvM,MAAO,EAAAyM,UAAUE,gBACjB2F,aAAc,EAAA7F,UAAUE,gBACxB4F,UAAW,EAAA9F,UAAUM,mBACrByF,UAAW,EAAA/F,UAAUM,mBACrB0F,UAAW,EAAAhG,UAAUM,mBACrB2F,UAAW,EAAAjG,UAAUM,mBACrB4F,UAAW,EAAAlG,UAAUM,mBACrBM,YAAa,EAAAZ,UAAUM,mBACvBO,QAAS,EAAAb,UAAUM,mBACnB6F,SAAU,EAAAnG,UAAUM,mBACpB8F,kBAAmB,EAAApG,UAAUM,mBAC7B+F,gBAAiB,EAAArG,UAAUM,mBAC3Bvc,IAAK,EAAAic,UAAUC,kBACfqG,cAAe,EAAAtG,UAAUC,kBACzBsG,UAAW,EAAAvG,UAAUC,kBACrBuG,oBAAqB,EAAAxG,UAAUC,kBAC/BwG,gBAAiB,EAAAzG,UAAUC,kBAC3ByG,0BAA2B,EAAA1G,UAAUC,kBACrC0G,aAAc,EAAA3G,UAAUC,kBACxB2G,uBAAwB,EAAA5G,UAAUC,kBAClC4G,YAAa,EAAA7G,UAAUC,kBACvB6G,sBAAuB,EAAA9G,UAAUC,kBACjC8G,QAAS,EAAA/G,UAAUC,kBACnB+G,kBAAmB,EAAAhH,UAAUC,kBAC7BgH,aAAc,EAAAjH,UAAUC,kBACxBiH,uBAAwB,EAAAlH,UAAUC,kBAClCkH,SAAU,EAAAnH,UAAUC,kBACpBmH,mBAAoB,EAAApH,UAAUC,qBAI1C,EAAAN,qBAAqB0H,SAAWzB,EAWhC,MAAM0B,EAAqC,EAAA7G,yBACvC,EAAAb,8BACAgG,EACA,CACI9F,WAAY,CACRyH,OAAQ,EAAAvH,UAAUE,gBAClBsH,YAAa,EAAAxH,UAAUE,gBACvB3M,MAAO,EAAAyM,UAAUE,gBACjBuH,aAAc,EAAAzH,UAAUE,gBACxBwH,cAAe,EAAA1H,UAAUE,gBACzByH,eAAgB,EAAA3H,UAAUE,gBAC1B0H,cAAe,EAAA5H,UAAUE,gBACzB2H,UAAW,EAAA7H,UAAUE,gBACrB4H,SAAU,EAAA9H,UAAUE,gBACpB6H,mBAAoB,EAAA/H,UAAUC,kBAC9B+H,yBAA0B,EAAAhI,UAAUC,kBACpCgI,iBAAkB,EAAAjI,UAAUM,mBAC5BO,QAAS,EAAAb,UAAUM,mBACnBM,YAAa,EAAAZ,UAAUM,mBACvB0D,UAAW,EAAAhE,UAAUM,mBACrB0E,aAAc,EAAAhF,UAAUM,mBACxByE,YAAa,EAAA/E,UAAUM,mBACvB4H,aAAc,EAAAlI,UAAUC,kBACxB6E,UAAW,EAAA9E,UAAUM,sBAIjC,EAAAX,qBAAqB,oBAAsB2H,EAS3C,MAAMa,EAA0B,EAAA1H,yBAC5B,EAAAb,8BACA,CACIE,WAAY,CACRxM,KAAM,EAAA0M,UAAUE,gBAChBlc,MAAO,EAAAgc,UAAUE,gBACjBiB,gBAAiB,EAAAnB,UAAUE,gBAC3BkB,WAAY,EAAApB,UAAUE,gBAEtBkI,aAAc,EAAApI,UAAUC,kBACxBoI,aAAc,EAAArI,UAAUC,kBACxByB,cAAe,EAAA1B,UAAUC,kBACzBqI,WAAY,EAAAtI,UAAUC,kBACtBsI,aAAc,EAAAvI,UAAUC,kBACxBsC,aAAc,EAAAvC,UAAUC,kBACxBuC,QAAS,EAAAxC,UAAUC,kBACnBwC,QAAS,EAAAzC,UAAUC,kBACnBuD,MAAO,EAAAxD,UAAUC,kBACjBwD,SAAU,EAAAzD,UAAUC,kBACpByD,UAAW,EAAA1D,UAAUC,kBACrB0D,YAAa,EAAA3D,UAAUC,kBACvB2D,SAAU,EAAA5D,UAAUC,kBACpB4D,SAAU,EAAA7D,UAAUC,kBACpB6D,QAAS,EAAA9D,UAAUC,kBACnB8D,SAAU,EAAA/D,UAAUC,kBACpB+D,UAAW,EAAAhE,UAAUC,kBACrBgE,eAAgB,EAAAjE,UAAUC,kBAC1BiE,aAAc,EAAAlE,UAAUC,kBACxBkE,aAAc,EAAAnE,UAAUC,kBACxBmE,WAAY,EAAApE,UAAUC,kBACtBoE,WAAY,EAAArE,UAAUC,kBACtBsE,gBAAiB,EAAAvE,UAAUM,mBAC3BkE,eAAgB,EAAAxE,UAAUM,mBAC1BmE,kBAAmB,EAAAzE,UAAUM,mBAC7B/M,MAAO,EAAAyM,UAAUM,mBACjBO,QAAS,EAAAb,UAAUM,mBACnBe,SAAU,EAAArB,UAAUM,mBACpB7S,KAAM,EAAAuS,UAAUM,sBAI5B,EAAAX,qBAAqBrM,KAAO6U,EAU5B,MAAMK,EAA4B,EAAA/H,yBAC9B,EAAAb,8BACA,CACIE,WAAY,CACR2I,UAAW,EAAAzI,UAAUC,kBACrByI,OAAQ,EAAA1I,UAAUM,sBAuK9B,SAAgBqI,EACZnJ,GAEA,MAA0B,kBAAnBA,EAAU7jB,KAerB,SAAgBitB,EACZpJ,GAEA,OAAOmJ,EAAwBnJ,IAAoC,aAAtBA,EAAUqJ,QAM3D,SAAgBC,EAAgBtJ,GAC5B,MAA0B,SAAnBA,EAAU7jB,KAMrB,SAAgBotB,EACZvJ,GAEA,MAA0B,qBAAnBA,EAAU7jB,KAMrB,SAAgBqtB,EAAoBxJ,GAChC,MAA0B,aAAnBA,EAAU7jB,KAMrB,SAAgBstB,EAAmBzJ,GAC/B,MAA0B,YAAnBA,EAAU7jB,KAarB,SAAgButB,EAAkB1J,GAC9B,MAA0B,WAAnBA,EAAU7jB,KAnOrB,EAAAgkB,qBAAqBwJ,OAASX,EAiG9B,8BAAmChJ,GAC/B,MAA0B,YAAnBA,EAAU7jB,MAMrB,8BAAmC6jB,GAC/B,MAA0B,YAAnBA,EAAU7jB,MAMrB,0BAA+B6jB,GAC3B,MAA0B,iBAAnBA,EAAU7jB,MAMrB,iCAAsC6jB,GAClC,MAA0B,gBAAnBA,EAAU7jB,MAMrB,2BAAgC6jB,GAC5B,MAA0B,SAAnBA,EAAU7jB,MAMrB,gCAAqC6jB,GACjC,MAA0B,eAAnBA,EAAU7jB,MAA4C,gBAAnB6jB,EAAU7jB,MAQxD,wCACI6jB,GAEA,OACwB,eAAnBA,EAAU7jB,MAA4C,gBAAnB6jB,EAAU7jB,YACzBqE,IAArBwf,EAAU4J,QACW,WAArB5J,EAAU4J,QAOlB,+BAAoC5J,GAChC,MAA0B,aAAnBA,EAAU7jB,MAOrB,4BASA,wCACI6jB,GAEA,OAAOmJ,EAAwBnJ,IAAoC,UAAtBA,EAAUqJ,SAM3D,oCASA,oBAOA,+BASA,wBAOA,uBAOA,2BAAgCrJ,GAC5B,MAA0B,SAAnBA,EAAU7jB,MAMrB,sBAIA,yCACI6jB,GAEA,MAA0B,yBAAnBA,EAAU7jB,MAOrB,8BAAmC6jB,GAC/B,OACIsJ,EAAgBtJ,IAChBwJ,EAAoBxJ,IACpByJ,EAAmBzJ,IACnBoJ,EAAgCpJ,IAOxC,iCAAsCA,GAClC,OAAIwJ,EAAoBxJ,IAEbuJ,EAA2BvJ,IAE3ByJ,EAAmBzJ,IAEnB0J,EAAkB1J,GALlBA,EAAU6J,2BAQjB,GAOR,oCAAyC7J,EAAsB7D,GAC3D,GACIqN,EAAoBxJ,IACpBuJ,EAA2BvJ,IAC3ByJ,EAAmBzJ,GAEnB,IAAK,MAAM8J,KAAsB,EAAA7J,sBAAuB,CACpD,MAAM8J,EAAmB/J,EAAkB8J,GACvC,EAAAE,gBAAgBD,IACZA,EAAgBE,kBAAkB1L,aAClCpC,EAAazX,KAAKqlB,EAAgBE,UAetD,uCACIC,EACAlK,GAEA,IAAImK,EAAcD,EAOlB,MAN4C,iBAAjClK,EAAU4D,qBACjBuG,EAAcnK,EAAU4D,mBAAqBuG,GAEJ,iBAAlCnK,EAAU6D,sBACjBsG,GAA4BnK,EAAU6D,qBAEnCsG,I,iYChxBX,YACA,YACA,YACA,UACA,YACA,Y,kJCLA,aAUA,QAKA,OAKA,SAEA,SACA,QAOA,SACA,QAMA,SACA,SACA,SACA,SACA,QAEMpP,EAAS,EAAAC,cAAcvc,SAASvB,OAAO,aAAc,CAAE+d,SAAS,IAEtE,aAUI,YACazM,EACA4b,EACAC,GAFA,KAAA7b,UACA,KAAA4b,eACA,KAAAC,UAET7rB,KAAK8rB,QAAU9rB,KAAK+rB,OAAS,EAGjC,OACI,MAAMC,EAAShsB,KAAK6rB,QACdI,EAASjsB,KAAK4rB,aACd/sB,EAAImtB,EAAO1qB,OAAS2qB,EAE1B,IAAIF,EAAO,EAEX,IAAK,IAAI7sB,EAAIL,EAAI,EAAGqtB,EAAI,EAAGA,EAAIrtB,EAAGK,EAAIgtB,IAClCH,GACIC,EAAO9sB,EAAI+sB,GAAUD,EAAOE,EAAID,EAAS,GACzCD,EAAOE,EAAID,GAAUD,EAAO9sB,EAAI+sB,EAAS,GAGjD,OAAOF,EAAO,IA0DtB,MAAaI,EAMT,YACqBC,EACAC,EACAC,EACAC,EACAC,EACAC,GAA4B,EAC5BC,GAAoB,EACpBC,EAAuB,EACvBC,GAA2B,EAC3BC,GATA,KAAAT,eACA,KAAAC,sBACA,KAAAC,0BACA,KAAAC,eACA,KAAAC,qBACA,KAAAC,4BACA,KAAAC,oBACA,KAAAC,uBACA,KAAAC,2BACA,KAAAC,cAZJ,KAAAC,eAAmC,GAchD,MAAMC,EAAqB,IAAI,EAAAC,mBAAmBX,GAC5CY,EAAgBV,EAChB,IAAI,EAAAW,mBAAmB,CAACH,EAAoBR,IAC5CQ,EAEN/sB,KAAK8sB,eAAe5mB,KAAK,IAAI,EAAAinB,uBAAuBntB,KAAMitB,EAAe1Q,IACzEvc,KAAK8sB,eAAe5mB,KAAK,IAAI,EAAAknB,kBAAkBptB,KAAMitB,EAAe1Q,IACpEvc,KAAK8sB,eAAe5mB,KAAK,IAAI,EAAAmnB,wBAAwBrtB,KAAMitB,EAAe1Q,IAG9E,yBACI,OAAOvc,KAAK2sB,qBAWhB,eAAe/Z,EAAkBiK,GAC7B,IAAIyQ,EACJ,IAAK,MAAMC,KAAWvtB,KAAK8sB,eAAepV,SACtC,GAAI6V,EAAQC,WAAW3Q,GAAO,CAC1ByQ,EAAcC,EACd,MAGR,QAAoBvrB,IAAhBsrB,EACA,MAAO,CACHG,WAAY,GACZC,WAAY,IAIpB1tB,KAAKqsB,oBAAoBsB,kBAEzB,MAAM1O,EAAa,IAAI,EAAA2O,WACnBN,EAAYO,GACZ7tB,KAAKosB,aACLxZ,EACA5S,KAAK2sB,sBAaT,OAVA3sB,KAAK8tB,qBAAuB,IAAI,EAAAC,sBAC5B9O,EACAjf,KAAKqsB,oBACLrsB,KAAKysB,0BACLzsB,KAAK0sB,kBACL1sB,KAAK4sB,yBACL5sB,KAAK6sB,aAGTS,EAAYlhB,QAAQyQ,EAAMoC,GACnBjf,KAAK8tB,qBAAqBE,iBAGrC,oBACIC,EACAje,EACAke,EACA9rB,EACA+rB,GAEA,QAAgCnsB,IAA5BhC,KAAKwsB,yBAMMxqB,IAJPhC,KAAKwsB,mBAAmBrV,KAAKiX,IAGjBA,EAAGC,sBAAsBJ,EAAO7rB,EAAK+rB,IAGjD,OAIR,MAAMV,EAAaztB,KAAKsuB,gBACpBtuB,KAAKqsB,oBAAoBkC,sBAAsBnsB,EAAK6rB,EAAO,SAC3D,EAAAO,aAAaC,OAGjB,GAA0B,IAAtBhB,EAAWnsB,OAOX,YANItB,KAAKssB,yBACL/P,EAAOlE,IACH,4DACA5Q,KAAKC,UAAUtF,EAAIwO,WAK/B,MAAM1Q,EAAiC,CACnCkC,MACAssB,kBAAmB,IAAIvsB,KAGvBnC,KAAK8tB,sBACL9tB,KAAK8tB,qBAAqBa,oBACtBV,EACAje,EACAke,EACAhuB,EACAutB,GAKZ,mBACIQ,EACAje,EACAke,EACA9rB,EACA+rB,GAEA,QAAgCnsB,IAA5BhC,KAAKwsB,yBAIMxqB,IAFPhC,KAAKwsB,mBAAmBrV,KAAKiX,IACjBA,EAAGQ,qBAAqBX,EAAO7rB,EAAK+rB,IAGhD,OAIR,MAAMV,EAAaztB,KAAKsuB,gBACpBtuB,KAAKqsB,oBAAoBkC,sBAAsBnsB,EAAK6rB,EAAO,QAC3D,EAAAO,aAAaK,MAGjB,GAA0B,IAAtBpB,EAAWnsB,OAOX,YANItB,KAAKssB,yBACL/P,EAAOlE,IACH,2DACA5Q,KAAKC,UAAUtF,EAAIwO,WAM/B,MAAM1Q,EAAiC,CACnCkC,MACAssB,kBAAmB,IAAIvsB,KAGrB2sB,EAAY1sB,EAAIuO,OAAO,OAEzB3Q,KAAK8tB,sBACL9tB,KAAK8tB,qBAAqBiB,mBACtBd,EACAje,EACAke,EACAhuB,EACAutB,EACAqB,GAKZ,sBACIb,EACAje,EACAke,EACA9rB,EACA+rB,GAEA,QAAgCnsB,IAA5BhC,KAAKwsB,yBAIMxqB,IAFPhC,KAAKwsB,mBAAmBrV,KAAKiX,IACjBA,EAAGY,wBAAwBf,EAAO7rB,EAAK+rB,IAGnD,OAIR,MAAMV,EAAaztB,KAAKsuB,gBACpBtuB,KAAKqsB,oBAAoBkC,sBAAsBnsB,EAAK6rB,EAAO,WAC3D,EAAAO,aAAaS,MAGjB,GAA0B,IAAtBxB,EAAWnsB,OAOX,YANItB,KAAKssB,yBACL/P,EAAOlE,IACH,8DACA5Q,KAAKC,UAAUtF,EAAIwO,WAM/B,MAAM1Q,EAAU,CACZkC,MACAssB,kBAAmB,IAAIvsB,KAGrB2sB,EAAY1sB,EAAIuO,OAAO,OAEzB3Q,KAAK8tB,sBACL9tB,KAAK8tB,qBAAqBoB,sBACtBjB,EACAje,EACAke,EACAhuB,EACAutB,EACAqB,GAKJ,gBACJrB,EACA0B,GAUA,YAR0BntB,IAAtBhC,KAAKusB,cAA8BvsB,KAAKusB,aAAa6C,gBACrD3B,EAAaA,EAAW4B,OAAO7N,IAC3B,MAAMW,OAEiBngB,IAAnBwf,EAAUW,KAAqBgN,EAAe3N,EAAUW,KAC5D,OAAOniB,KAAKusB,aAAc+C,UAAUnN,MAGrCsL,GAhPf,eAmPA,MAAa8B,UAAuB,EAAAC,kBAApC,c,oBACY,KAAAlD,yBAAmC,EAGnC,KAAAG,2BAAqC,EACrC,KAAAC,mBAA6B,EAC7B,KAAAE,0BAAoC,EAG5C,UACI,OAAOlO,QAAQ+Q,UAInB,iBACI5S,EACAjK,EACA8c,EACAnd,GAEA,MAAMod,EAAY,EAAAC,iBAAiBC,MAe7BC,EAbU,IAAI3D,EAChB5Z,EACAmd,EACA1vB,KAAKssB,wBACLtsB,KAAK+vB,gBACL/vB,KAAKwsB,mBACLxsB,KAAKysB,0BACLzsB,KAAK0sB,kBACL1sB,KAAK2sB,qBACL3sB,KAAK4sB,yBACL5sB,KAAKgwB,WAGmBhC,eAAepb,EAASiK,GAIpD,OAFAiT,EAAYG,WAAa,EAAAL,iBAAiBC,MAAQF,EAE3CjR,QAAQ+Q,QAAQK,GAI3B,UACII,EACAruB,EACAmuB,EACAG,GAIA,GAFAntB,MAAMotB,UAAUF,EAAUruB,EAAamuB,EAAWG,GAE9CA,EAAS,CACT,MAAME,EAAaF,EAMnB,QAJyCnuB,IAArCquB,EAAWC,wBACXtwB,KAAKssB,yBAA+D,IAArC+D,EAAWC,4BAGTtuB,IAAjCquB,EAAWE,kBACX,GAAqC,OAAjCF,EAAWE,kBAA4B,CAIvC,MAAMA,EAAoBF,EAAWE,kBAC/BC,EAAsBH,EAAWI,iBAGvCzwB,KAAK+vB,gBAAkB,IAAI,EAAAW,wBAAwBH,GAEnD,MAAME,EAAyC,QACnBzuB,IAAxBwuB,EACAA,EAAoBnwB,QAAQswB,IACxBF,EAAiBvqB,KACblG,KAAK4wB,sBAAsBL,EAAmBI,MAItDF,EAAiBvqB,KACblG,KAAK4wB,sBAAsBL,EAAmB,EAAAld,kBAAkBwd,UAGxE7wB,KAAKwsB,mBAAqBiE,OAG1BzwB,KAAK+vB,qBAAkB/tB,EACvBhC,KAAKwsB,wBAAqBxqB,EAIlC,QAAiCA,IAA7BquB,EAAWS,cAA6B,CACxC,MAAMA,EAAgBT,EAAWS,cACjC,IAAIL,EAAmBzwB,KAAKwsB,mBAS5B,GANIiE,IACAA,EAAmBA,EAAiBpB,OAChCjB,KAAQA,aAAc,EAAA2C,mCAID,IAAzBD,EAAcxvB,OAAc,CAC5B,EAAAoT,OAC6B,IAAzBoc,EAAcxvB,OACd,4EAEJ,MAAM0vB,EAAqB,IAAI,EAAAD,gCAAgCD,GAC3DL,EACAA,EAAiBvqB,KAAK8qB,GAEtBP,EAAmB,CAACO,GAI5BhxB,KAAKwsB,mBACDiE,GAAoBA,EAAiBnvB,OAAS,EAAImvB,OAAmBzuB,OAGlCA,IAAvCquB,EAAWY,0BACXjxB,KAAKysB,2BAAmE,IAAvC4D,EAAWY,8BAEbjvB,IAA/BquB,EAAWa,kBACXlxB,KAAK0sB,kBAAoB2D,EAAWa,sBAEElvB,IAAtCquB,EAAWc,yBACXnxB,KAAK4sB,yBAA2ByD,EAAWc,6BAGjCnvB,IAAdguB,IACAhwB,KAAKgwB,UAAYA,GAIjB,sBACJO,EACAa,GAEA,OAAQA,GACJ,KAAK,EAAA/d,kBAAkBge,OACnB,OAAO,IAAI,EAAAC,yBAAyBf,GACxC,KAAK,EAAAld,kBAAkBwd,QACnB,OAAO,IAAI,EAAAU,0BAA0BhB,GACzC,QAEI,OADA,EAAA7b,QAAO,GACA,IAAI,EAAA6c,0BAA0BhB,KA/IrD,mBAuJA,MAAaiB,EAMT,eACI,EAAAC,qBAAqBC,cAAcC,SAAS,CACxCC,YAAa,EAAAzd,8BACb0d,QAAUnV,GACN,EAAAoV,mBAAmBC,MAAMrV,EAAW,IAAI6S,MAVxD,0BAoBA,gBAEI,cACIhT,EAAOyV,KAAK,+EACZR,EAAsBO,W,sGCliB9B,uBACI,MAAM/mB,KAAkBinB,GAEpBC,QAAQrU,MAAM7S,KAAYinB,GAG9B,MAAMjnB,KAAkBinB,GAEpBC,QAAQC,MAAMnnB,KAAYinB,GAG9B,KAAKjnB,KAAkBinB,GAEnBC,QAAQE,KAAKpnB,KAAYinB,GAG7B,IAAIjnB,KAAkBinB,GAElBC,QAAQ7Z,IAAIrN,KAAYinB,GAG5B,MAAMjnB,KAAkBinB,GAEpBC,QAAQG,MAAMrnB,KAAYinB,GAG9B,KAAKjnB,KAAkBinB,GAEnBC,QAAQF,KAAKhnB,KAAYinB,M,8FCjCjC,cAKA,eAII,YAAqBt0B,EAAsB20B,EAAqBnC,GAA3C,KAAAxyB,OAAsB,KAAA20B,YAH3C,KAAA7V,SAAmB,EACnB,KAAA3J,MAAkB,EAAAqN,SAASoS,WAGPvwB,IAAZmuB,GACAnwB,KAAKwyB,OAAOrC,GAIpB,MAAMnlB,KAAkBinB,GAChBjyB,KAAKyc,SAAWzc,KAAK8S,OAAS,EAAAqN,SAAS1c,OACvCzD,KAAKsyB,UAAUzU,MAAM7d,KAAKyyB,OAAQznB,KAAYinB,GAItD,MAAMjnB,KAAkBinB,GAChBjyB,KAAKyc,SAAWzc,KAAK8S,OAAS,EAAAqN,SAASuS,OACvC1yB,KAAKsyB,UAAUH,MAAMnyB,KAAKyyB,OAAQznB,KAAYinB,GAItD,KAAKjnB,KAAkBinB,GACfjyB,KAAKyc,SAAWzc,KAAK8S,OAAS,EAAAqN,SAASwS,MACvC3yB,KAAKsyB,UAAUF,KAAKpyB,KAAKyyB,OAAQznB,KAAYinB,GAIrD,IAAIjnB,KAAkBinB,GACdjyB,KAAKyc,SAAWzc,KAAK8S,OAAS,EAAAqN,SAASyS,KACvC5yB,KAAKsyB,UAAUja,IAAIrY,KAAKyyB,OAAQznB,KAAYinB,GAIpD,MAAMjnB,KAAkBinB,GAChBjyB,KAAKyc,SAAWzc,KAAK8S,OAAS,EAAAqN,SAASoS,OACvCvyB,KAAKsyB,UAAUD,MAAMryB,KAAKyyB,OAAQznB,KAAYinB,GAItD,KAAKjnB,KAAkBinB,GACfjyB,KAAKyc,SAAWzc,KAAK8S,OAAS,EAAAqN,SAAS0S,MACvC7yB,KAAKsyB,UAAUN,KAAKhyB,KAAKyyB,OAAQznB,KAAYinB,GAIrD,OAAO9B,GACHnwB,KAAKyc,aAA8Bza,IAApBmuB,EAAQ1T,QAAwBzc,KAAKyc,QAAU0T,EAAQ1T,QACtEzc,KAAK8S,WAA0B9Q,IAAlBmuB,EAAQrd,MAAsB9S,KAAK8S,MAAQqd,EAAQrd,MAGpE,aACI,OAAO9S,KAAKrC,KAAO,O,8HCzD3B,cAIa,EAAAm1B,uBAAyB,yBActC,sBACI,MAAM9nB,KAAkBinB,GACpB,MAAMc,EAAuC,CACzC/nB,QAAS,CAACA,KAAYinB,GACtBrc,KAAM,EAAAkd,uBACNhgB,MAAO,EAAAqN,SAAS1c,OAEpBqI,KAAKuS,YAAY0U,GAGrB,MAAM/nB,KAAkBinB,GACpB,MAAMc,EAAuC,CACzC/nB,QAAS,CAACA,KAAYinB,GACtBrc,KAAM,EAAAkd,uBACNhgB,MAAO,EAAAqN,SAASuS,OAEpB5mB,KAAKuS,YAAY0U,GAGrB,KAAK/nB,KAAkBinB,GACnB,MAAMc,EAAuC,CACzC/nB,QAAS,CAACA,KAAYinB,GACtBrc,KAAM,EAAAkd,uBACNhgB,MAAO,EAAAqN,SAASwS,MAEpB7mB,KAAKuS,YAAY0U,GAGrB,IAAI/nB,KAAkBinB,GAClB,MAAMc,EAAuC,CACzC/nB,QAAS,CAACA,KAAYinB,GACtBrc,KAAM,EAAAkd,uBACNhgB,MAAO,EAAAqN,SAASyS,KAEpB9mB,KAAKuS,YAAY0U,GAGrB,MAAM/nB,KAAkBinB,GACpB,MAAMc,EAAuC,CACzC/nB,QAAS,CAACA,KAAYinB,GACtBrc,KAAM,EAAAkd,uBACNhgB,MAAO,EAAAqN,SAASoS,OAEpBzmB,KAAKuS,YAAY0U,GAGrB,KAAK/nB,KAAkBinB,GACnB,MAAMc,EAAuC,CACzC/nB,QAAS,CAACA,KAAYinB,GACtBrc,KAAM,EAAAkd,uBACNhgB,MAAO,EAAAqN,SAAS0S,MAEpB/mB,KAAKuS,YAAY0U,M,6BCrDzB,IAAYC,E,0LAAZ,SAAYA,GAIR,cAKA,0BAKA,oBAKA,cAKA,cAKA,gBAKA,kBAKA,cAKA,sBAKA,gBAKA,kBAtDJ,CAAYA,EAAA,EAAAA,uBAAA,EAAAA,qBAAoB,KA+EnB,EAAAxE,aAAewE,EA4B5B,MAAaC,UAAwBtzB,IAIjC,WAAWuzB,GACP,IAAK,MAAMC,KAAQD,EACf,IAAKlzB,KAAKuG,IAAI4sB,GACV,OAAO,EAGf,OAAO,EAMX,gBAAgBnsB,GACZ,IAAK,MAAMmsB,KAAQnsB,EACf,GAAIhH,KAAKuG,IAAI4sB,GACT,OAAO,EAGf,OAAO,EAOX,gBAAgBnsB,GACZ,OAAIA,aAAerH,IACRK,KAAKozB,gBAAgBpsB,GAEzBhH,KAAKuG,IAAIS,GAMpB,qBAAqBksB,GACjB,IAAK,MAAMC,KAAQD,EACf,GAAIlzB,KAAKuG,IAAI4sB,GACT,OAAO,EAGf,OAAO,GA7Cf,oBA6GA,SAAYE,GAKR,yBAMA,+CASA,+BApBJ,CAAY,EAAAA,wBAAA,EAAAA,sBAAqB,KA4MjC,SAAYC,GAIR,uBAIA,uBAIA,2BAZJ,CAAY,EAAAA,eAAA,EAAAA,aAAY,KA2BxB,SAAYC,GACR,eACA,UACA,gBACA,YACA,mBACA,aACA,kBACA,WACA,aACA,iBACA,YACA,iBACA,WACA,iBACA,YACA,iBACA,WAjBJ,CAAY,EAAAA,iBAAA,EAAAA,eAAc,KA+9B1B,2BAAgCz0B,GAC5B,OAAOA,GAAUA,EAAO2sB,QAAiC,iBAAhB3sB,EAAO8W,O,4HC/6CpD,SAAYoM,GAUR,yCAWA,6CASA,+CA9BJ,CAAY,EAAAA,YAAA,EAAAA,UAAS,KA0DrB,uCACOwR,GAEH,MAAMrtB,EAAiC,CACnC2b,WAAY,IAEhB,IAAK,MAAMxd,KAAckvB,OACoBxxB,IAArCsC,EAAWud,wBACX1b,EAAO0b,sBAAwBvd,EAAWud,4BAEhB7f,IAA1BsC,EAAWwd,aACX3b,EAAO2b,WAAa,OAAH,wBAAQ3b,EAAO2b,YAAexd,EAAWwd,aAGlE,OAAO3b,I,wGC1EX,aAEA,OACA,QACA,QACA,QAEMoW,EAAS,EAAAC,cAAcvc,SAASvB,OAAO,iBAS7C,4BACIK,EACAqD,EACAF,G,UAEA,GAAI,EAAAV,KAAKuG,OAAOhJ,GACZ,IACI,IAAIb,EAAIa,EAAS00B,SAASrxB,EAAK,EAAAb,UAAUmyB,QAASxxB,GAMlD,MAJiB,iBAANhE,IACPA,EAAoC,QAAnC,EAAgB,QAAhB,EAAG,EAAA4F,KAAKnC,MAAMzD,UAAE,QAAI,EAAA6F,OAAOpC,MAAMzD,UAAE,QAAIA,GAGxCA,aAAa,EAAA4F,KACN5F,EAAE6W,SACF7W,aAAa,EAAA6F,OACb7F,EAAEG,OAA6C,QAArC,EAACkO,OAAOnK,EAAIuO,OAAO,0BAAkB,QAAI,GAEvDzS,EACT,MAAO2f,GAOL,OANAtB,EAAOsB,MACH,gCACApW,KAAKC,UAAU3I,GACf,QACA4N,OAAOkR,IAEJ,KAIf,GAAI9e,QACA,OAAO,KACJ,GAAwB,iBAAbA,EAEd,OAAOA,EACJ,CAEH,MAAMkY,EAAiB7U,EAAIuO,OAAO,mBAAgC,EAC5DtS,EAAQ,EAAAs1B,0BAA0B50B,EAAUkY,GAClD,YAAiBjV,IAAV3D,EAAsBA,EAAQU,K,+MCvD7C,aAUA,OACA,QACA,QA2UA,SAAgB60B,EACZxxB,EACAyxB,EACA1Q,EACAC,EACA4M,GAEA,IAAIryB,EAIJ,QAHqBqE,IAAjB6xB,IACAA,EAAe,QAEf1Q,EAAiB,CACjB,MAAM2Q,EAAe1xB,EAAIuO,OAAO,GAAGkjB,WACnC,GAA4B,iBAAjBC,GAA6BA,EAAaxyB,OAAS,EAC1D,OAAOwyB,EAGf,GAAI1Q,EAAY,CACZ,MAAM2Q,EAAU3xB,EAAIuO,OAAO,YAC3B,GAAuB,iBAAZojB,GAAwBA,EAAQzyB,OAAS,EAChD,OAAOyyB,EAGf,QAAkB/xB,IAAdguB,EACA,IAAK,MAAMgE,KAAQhE,EAEf,GADAryB,EAAOyE,EAAIuO,OAAO,GAAGkjB,KAAgBG,MAAW5xB,EAAIuO,OAAO,GAAGkjB,KAAgBG,KAC1D,iBAATr2B,GAAqBA,EAAK2D,OAAS,EAC1C,OAAO3D,EAKnB,GADAA,EAAOyE,EAAIuO,OAAOkjB,GACE,iBAATl2B,EACP,OAAOA,EA9Rf,+BAAoCs2B,GAChC,OAAQA,GACJ,IAAK,QACD,OAAOC,aACX,IAAK,QACD,OAAO5mB,WACX,IAAK,SACD,OAAO6mB,YACX,IAAK,SACD,OAAOC,YACX,IAAK,OACD,OAAOC,UACX,IAAK,QACD,OAAOC,WACX,IAAK,QACD,OAAOC,aAqBnB,SAAYC,GACR,iCACA,qBACA,mBACA,6BACA,mBACA,2BACA,mCACA,yBACA,yCACA,2BACA,uBAXJ,CAAY,EAAAA,eAAA,EAAAA,aAAY,KAuJxB,yBAA8BC,GAC1B,OAAQA,GACJ,IAAK,WACD,OAAO,EAAAva,mBACX,IAAK,cACD,OAAO,EAAAD,sBACX,IAAK,SACD,OAAO,EAAAya,iBACX,IAAK,4BACD,OAAO,EAAAC,oCACX,IAAK,kBACD,OAAO,EAAAC,0BACX,QACI,MAAM,IAAInxB,MAAM,sBAAsBgxB,OASlD,6BAAkCliB,GAC9B,GAAIA,IAAe,EAAA2H,mBACf,MAAO,WACJ,GAAI3H,IAAe,EAAA0H,sBACtB,MAAO,cACJ,GAAI1H,IAAe,EAAAmiB,iBACtB,MAAO,SACJ,GAAIniB,IAAe,EAAAoiB,oCACtB,MAAO,4BACJ,GAAIpiB,IAAe,EAAAqiB,0BACtB,MAAO,kBAEX,MAAM,IAAInxB,MAAM,uBAMpB,wBAA6BoxB,GACzB,YAAqB7yB,IAAjB6yB,EACO,EAGiB,iBAAjBA,EACAA,EAGPA,EAAa51B,eAAe,OACpB41B,EAAqBC,IAG1B,GAaX,mBA+CA,0BACI50B,EACAshB,EACAwO,GAEA,IAAI7M,EACAC,EACJ,MAAMhhB,EAAMlC,aAAmB,EAAAsQ,IAAMtQ,EAAUA,EAAQkC,IACvD,IAAI2yB,EAAmB,OACvB,GACI,EAAAC,gBAAgBxT,IAChB,EAAAyT,eAAezT,IACf,EAAA0T,sBAAsB1T,GACxB,CACE,QAAuBxf,IAAnBwf,EAAUlM,KACV,OAAO,EAAA6f,sBAAsBj1B,EAASshB,EAAUlM,MAGpD,QAAwBtT,IAApBwf,EAAUxb,QAEV+uB,EAAW,EAAAI,sBAAsBj1B,EAASshB,EAAUxb,OAC5B,iBAAb+uB,GACP,OAIR5R,EAAkB3B,EAAU2B,gBAE5BC,EAAa5B,EAAU4B,WAG3B,OAAOwQ,EAAexxB,EAAK2yB,EAAU5R,EAAiBC,EAAY4M,K,sGC7ZtE,0BAA+BrnB,GAC3B,GAAIvH,MAAMC,QAAQsH,GAAW,CACzB,MAAOP,EAAWD,EAAUE,GAAYM,EACxC,MACyB,iBAAdP,GACa,iBAAbD,SACOnG,IAAbqG,GAA8C,iBAAbA,GAG1C,OAAO,I,oGCHX,wBAA6BvJ,GACzB,OAAOA,GAAgC,iBAAfA,EAAO2J,KAA0C,iBAAf3J,EAAO4J,M,uJCfrE,cACA,OAEA,OACA,OACA,OAEA,QACA,QAEA,OAEA,kBAAM0sB,UAAkC,EAAApd,WAAxC,c,oBAKa,KAAApC,KAAuB,EAAA3F,eAAegI,OAG/C,eAAe8B,GACX,OAAO,EAIX,YACIvI,EACAE,EACAvL,GAWA,OATKA,IACDA,EAAU,IAAI/G,EAAM0Z,MAExB3S,EAAOyD,IAAInE,EAAI,EACfU,EAAOyD,IAAIlE,EAAI,EACfS,EAAOyD,IAAIhE,EAAI4L,EACfrL,EAAO2D,IAAIrE,EAAIzF,KAAKkQ,UACpB/J,EAAO2D,IAAIpE,EAAI1F,KAAKkQ,UAAY,EAChC/J,EAAO2D,IAAIlE,EAAI8L,EACRvL,EAIX,aACIwC,EACAxC,GAyBA,YAvBenE,IAAXmE,IAYAA,EAAS,CAAEV,EAAG,EAAGC,EAAG,EAAGE,EAAG,IAE9BO,EAAOV,GACFrG,EAAMkJ,UAAUW,SAASN,EAASP,WAAaiB,KAAKkP,IACrD6c,EAA0BC,gBAC1Br1B,KAAKkQ,UACT/J,EAAOT,GACFtG,EAAMkJ,UAAUW,SAASN,EAASR,UAAsB,GAAVkB,KAAKkP,IACpD6c,EAA0BC,gBAC1Br1B,KAAKkQ,UACT/J,EAAOP,EAAI+C,EAASN,UAAY,EACzBlC,EAIX,eAAeyS,GAOX,OANiB,EAAA1Q,eAAegR,YAC3BN,EAAWlT,EAAI0vB,EAA0BE,gBAAmBt1B,KAAKkQ,UACpD,GAAV7G,KAAKkP,GACRK,EAAWnT,EAAI2vB,EAA0BE,gBAAmBt1B,KAAKkQ,UAAY7G,KAAKkP,GACnFK,EAAWhT,GAMnB,kBAAkBgT,GACd,OAAOA,EAAWhT,EAItB,WACIqN,EACA9M,GAEA,MAAMiT,EAAcpZ,KAAKoQ,aACrB,IAAI,EAAAlI,eAAe+K,EAAOjC,OAAO7I,SAAU8K,EAAOjC,OAAO5I,UAAW,KAElE,sBAAEmtB,EAAqB,uBAAEC,EAAsB,aAAE/jB,GAAiBwB,EAClEwiB,EAAQD,EAAyBJ,EAA0BC,gBAC3DK,EAAQH,EAAwBH,EAA0BC,gBA2BhE,OA1BKlvB,IACDA,EAAU,IAAI/G,EAAM0Z,MAEpB,EAAAU,WAAWrT,IACXA,EAAOyD,IAAInE,EAAI2T,EAAY3T,EAAY,GAARgwB,EAAcz1B,KAAKkQ,UAClD/J,EAAOyD,IAAIlE,EAAI0T,EAAY1T,EAAY,GAARgwB,EAAc11B,KAAKkQ,UAClD/J,EAAO2D,IAAIrE,EAAI2T,EAAY3T,EAAY,GAARgwB,EAAcz1B,KAAKkQ,UAClD/J,EAAO2D,IAAIpE,EAAI0T,EAAY1T,EAAY,GAARgwB,EAAc11B,KAAKkQ,eAC7BlO,IAAjByP,GACAtL,EAAOyD,IAAIhE,EAAIwT,EAAYxT,EAAmB,GAAf6L,EAC/BtL,EAAO2D,IAAIlE,EAAIwT,EAAYxT,EAAmB,GAAf6L,IAE/BtL,EAAOyD,IAAIhE,EAAI,EACfO,EAAO2D,IAAIlE,EAAI,IAEZ,EAAA6T,mBAAmBtT,KAC1B,EAAAmC,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO0J,OACrC,EAAAvH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO2J,OACrC,EAAAxH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO4J,OACrC5J,EAAOyJ,SAASnK,EAAI2T,EAAY3T,EAChCU,EAAOyJ,SAASlK,EAAI0T,EAAY1T,EAChCS,EAAOyJ,SAAShK,EAAIwT,EAAYxT,EAChCO,EAAO6J,QAAQvK,EAAY,GAARgwB,EAAcz1B,KAAKkQ,UACtC/J,EAAO6J,QAAQtK,EAAY,GAARgwB,EAAc11B,KAAKkQ,UACtC/J,EAAO6J,QAAQpK,EAAIyD,KAAKS,IAAIyC,OAAOmN,QAA+B,IAArBjI,GAAgB,KAE1DtL,EAIX,aAAawT,GACT,MAAMC,EAAS5Z,KAAKuQ,eAAeoJ,EAAS/P,KACtCiQ,EAAS7Z,KAAKuQ,eAAeoJ,EAAS7P,KAC5C,OAAO,EAAA+G,OAAOiJ,gBAAgBF,EAAQC,GAI1C,eAAejB,GACX,OAAOA,EAAWhT,EAItB,oBAAoBgT,GAEhB,OADAA,EAAWhT,EAAI,EACRgT,EAIX,cAAcmB,EAA0BC,GAQpC,YAPehY,IAAXgY,EACAA,EAAS,CAAEvU,EAAG,EAAGC,EAAG,EAAGE,EAAG,IAE1BoU,EAAOvU,EAAI,EACXuU,EAAOtU,EAAI,EACXsU,EAAOpU,EAAI,GAERoU,GAEf,OAjJW,EAAAqb,gBAA0B,GAAO,EAAMhsB,KAAKkP,IAC5C,EAAA+c,gBAA2B,EAAMjsB,KAAKkP,GAAM,EAgJvD,GAlJA,GAwJa,EAAAoc,oCAAkD,IAAIS,EAA0B,GAMhF,EAAAR,0BAAwC,IAAIQ,EACrD,EAAApjB,eAAeC,2B,8IC3KnB,cACA,OAEA,OACA,OACA,OAEA,QACA,QAEA,OAQA,MAAM0jB,UAAqC,EAAA3d,WAiDvC,YAAqB9H,GACjBlN,MAAMkN,GADW,KAAAA,YALZ,KAAA0F,KAAuB,EAAA3F,eAAegI,OAEvC,KAAA2d,OAAiB,EACjB,KAAAC,UAAoB,EAhC5B,qBAAqBltB,EAA8BmtB,GAC/C,MAAMrtB,EAAME,EAASR,SACf4tB,EAAMptB,EAASP,UAEflK,EAAI83B,EAAwBC,YAC5BC,EAAMF,EAAwBG,eAE9BC,EAAiB/sB,KAAKmW,MAAMuW,EAAM,IAClCM,EAA4B,GAAjBD,EAAsBL,EACvC,GAAIK,EAAiB,GAAM,GAAK/sB,KAAKitB,IAAID,GAAYn4B,EACjD,OAAOyK,EAGX,MAAM4tB,EAAW9tB,EAAM,EACjB+tB,EAAmBH,EAAWA,EAAWE,EAAWA,EAC1D,GAAIC,EAAmBN,EAAK,CACxB,MAAMO,EAAiBptB,KAAKqtB,KAAKF,GAC3BpX,GAASlhB,EAAIu4B,GAAkBA,EAG/BE,EAAM,EACNC,EAAyB,IAAbP,GAA+B,IAAbE,EAAiBr4B,EAAIy4B,EAAMN,EAC/D,OAAO,IAAI,EAAAnuB,eAAeO,EAAM8tB,EAAWnX,EAAO2W,EAAMa,EAAYxX,GAGxE,OAAOzW,EAcX,eAAeiQ,GACX,OAAOvP,KAAKwP,KAA6C,GAAvCD,EAAWnT,EAAIzF,KAAKkQ,UAAY,IAAW7G,KAAKkP,IAItE,YACI/G,EACAE,EACAvL,GAWA,OATKA,IACDA,EAAU,IAAI/G,EAAM0Z,MAExB3S,EAAOyD,IAAInE,EAAI,EACfU,EAAOyD,IAAIlE,EAAI,EACfS,EAAOyD,IAAIhE,EAAI4L,EACfrL,EAAO2D,IAAIrE,EAAIzF,KAAKkQ,UACpB/J,EAAO2D,IAAIpE,EAAI1F,KAAKkQ,UACpB/J,EAAO2D,IAAIlE,EAAI8L,EACRvL,EAIX,aACIwC,EACAxC,GAEKA,IAEDA,EAAS,CAAEV,EAAG,EAAGC,EAAG,EAAGE,EAAG,IAG9B,MAAMixB,EAAUlB,EAA6BmB,cAAcnuB,EAAU3I,KAAKkQ,WACpE6mB,EAAYF,EAAQzuB,UAAY,IAAM,GACtC4uB,EAAuB,IAAdD,EAAkB,EAAI1tB,KAAKoD,MAAMsqB,GAC1CE,EAAM73B,EAAMkJ,UAAUW,SAAS4tB,EAAQ1uB,UACvC+uB,EAAS93B,EAAMkJ,UAAUW,SAAS4tB,EAAQzuB,UAAqB,IAAT4uB,GAAgBh3B,KAAK61B,UAE3EsB,EAAI9tB,KAAK0V,IAAIkY,GAAO5tB,KAAKgR,IAAI6c,GAEnC/wB,EAAOV,EAAI4D,KAAK+tB,MAAMD,GACtBhxB,EAAOT,EAAI2D,KAAKguB,MAAMhuB,KAAKiP,IAAI2e,GAAM5tB,KAAK0V,IAAImY,IAAWl3B,KAAK41B,OAE9D,MAAM0B,EAAW,GAAMjuB,KAAKkP,GAM5B,OALApS,EAAOV,EACHzF,KAAKkQ,WAAa9Q,EAAMkJ,UAAU6B,MAAMhE,EAAOV,EAAI6xB,EAAW,GAAK,EAAG,GAAKN,GAC/E7wB,EAAOT,EAAI1F,KAAKkQ,UAAY9Q,EAAMkJ,UAAU6B,MAAMhE,EAAOT,EAAI4xB,EAAW,GAAK,EAAG,GAEhFnxB,EAAOP,EAAI+C,EAASN,UAAY,EACzBlC,EAIX,eAAeyS,GACX,MAAM2e,EAAgB,EAAVluB,KAAKkP,GACXif,EAAK5e,EAAWnT,EAAIzF,KAAKkQ,UACzBunB,EAAK7e,EAAWlT,EAAI1F,KAAKkQ,UACzB8mB,EAAgB,IAAPQ,EAAW,EAAInuB,KAAKoD,MAAM+qB,GACnC/xB,EAAI8xB,GAAOC,EAAK,GAAMR,GACtBtxB,EAAI6xB,GAAOE,EAAK,IAChB7xB,EAAIgT,EAAWhT,GAAK,EAEpB8xB,EAAIhyB,EAAI1F,KAAK41B,OAEbqB,EAAM5tB,KAAKsuB,KAAKtuB,KAAKgR,IAAIqd,GAAKruB,KAAKwP,KAAKpT,IACxCyxB,EAASl3B,KAAK61B,UAAYxsB,KAAKguB,MAAMhuB,KAAKuuB,KAAKnyB,GAAI4D,KAAK0V,IAAI2Y,IAAMV,EAASO,EAGjF,OADiB,EAAArvB,eAAegR,YAAY+d,EAAKC,EAAQtxB,GAK7D,WACIqN,EACA9M,GAEA,MAAM,MAAEkL,EAAK,MAAED,EAAK,KAAEG,EAAI,KAAED,GAAS2B,EAE/B4kB,EAAgB,CAClB5kB,EAAOjC,OACPiC,EAAOlC,UACPkC,EAAOnC,UACP,IAAI,EAAA5I,eAAekJ,EAAOG,GAC1B,IAAI,EAAArJ,eAAemJ,EAAOC,IAGxBwmB,EAAI9B,EAAwB+B,cAG5BC,EAAkB1mB,EAAO,IAAMC,EAAO,GACtC0mB,EAAkB3mB,EAAO,GAAKC,EAAO,EACrC2mB,EAAkB5mB,EAAOwmB,GAAKvmB,GAAQumB,GAAKzmB,EAAQ,GAAKD,EAAQ,EAH9CE,GAAQ,IAAMC,GAAQ,KAM1CsmB,EAAc3xB,KAAK,IAAI,EAAAgC,eAAemJ,GAAQ,KAC9CwmB,EAAc3xB,KAAK,IAAI,EAAAgC,eAAekJ,GAAQ,MAG9C4mB,IACAH,EAAc3xB,KAAK,IAAI,EAAAgC,eAAemJ,EAAO,KAC7CwmB,EAAc3xB,KAAK,IAAI,EAAAgC,eAAekJ,EAAO,MAG7C6mB,IACAJ,EAAc3xB,KAAK,IAAI,EAAAgC,eAAemJ,EAAO,IAC7CwmB,EAAc3xB,KAAK,IAAI,EAAAgC,eAAekJ,EAAO,KAG7C8mB,IACAL,EAAc3xB,KAAK,IAAI,EAAAgC,eAAe,EAAGoJ,IACzCumB,EAAc3xB,KAAK,IAAI,EAAAgC,eAAe,EAAGqJ,KAG7CykB,EAAwBmC,cAAcN,EAAeA,EAAc,IAEnE,MAAMO,EAAYP,EAAc9xB,IAAI7G,GAAKc,KAAKoQ,aAAalR,IACrDm5B,EAAKD,EAAUryB,IAAI7G,GAAKA,EAAEuG,GAC1B6yB,EAAKF,EAAUryB,IAAI7G,GAAKA,EAAEwG,GAC1B6yB,EAAKH,EAAUryB,IAAI7G,GAAKA,EAAE0G,GAE1B4yB,EAAOnvB,KAAKO,OAAOyuB,GACnBI,EAAOpvB,KAAKO,OAAO0uB,GACnBI,EAAOrvB,KAAKO,OAAO2uB,GACnBI,EAAOtvB,KAAKS,OAAOuuB,GACnB9d,EAAOlR,KAAKS,OAAOwuB,GACnBM,EAAOvvB,KAAKS,OAAOyuB,GAKzB,GAHKpyB,IACDA,EAAU,IAAI/G,EAAM0Z,MAEpB,EAAAU,WAAWrT,GACXA,EAAOyD,IAAInE,EAAI+yB,EACfryB,EAAOyD,IAAIlE,EAAI+yB,EACftyB,EAAOyD,IAAIhE,EAAI8yB,EACfvyB,EAAO2D,IAAIrE,EAAIkzB,EACfxyB,EAAO2D,IAAIpE,EAAI6U,EACfpU,EAAO2D,IAAIlE,EAAIgzB,MACZ,KAAI,EAAAnf,mBAAmBtT,GAW1B,MAAM,IAAI1C,MAAM,wBAVhB,EAAA6E,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO0J,OACrC,EAAAvH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO2J,OACrC,EAAAxH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO4J,OACrC5J,EAAOyJ,SAASnK,GAAK+yB,EAAOG,GAAQ,EACpCxyB,EAAOyJ,SAASlK,GAAK+yB,EAAOle,GAAQ,EACpCpU,EAAOyJ,SAAShK,GAAK8yB,EAAOE,GAAQ,EACpCzyB,EAAO6J,QAAQvK,GAAKkzB,EAAOH,GAAQ,EACnCryB,EAAO6J,QAAQtK,GAAK6U,EAAOke,GAAQ,EACnCtyB,EAAO6J,QAAQpK,GAAKgzB,EAAOF,GAAQ,EAIvC,OAAOvyB,EAuBX,aAAawT,GACT,MAAMxa,EAAIa,KAAKkQ,UAETtG,EAAM+P,EAAS/P,IACfE,EAAM6P,EAAS7P,IACf+tB,EAAgB,CAClB,CAAEpyB,GAAImE,EAAInE,EAAIqE,EAAIrE,GAAK,EAAGC,GAAIkE,EAAIlE,EAAIoE,EAAIpE,GAAK,EAAGE,EAAG,GACrDgE,EACAE,EACA,CAAErE,EAAGmE,EAAInE,EAAGC,EAAGoE,EAAIpE,EAAGE,EAAG,GACzB,CAAEH,EAAGqE,EAAIrE,EAAGC,EAAGkE,EAAIlE,EAAGE,EAAG,IAGvBoL,EAAS,GAAM7R,EACf05B,EAAS,IAAO15B,EAChB25B,EAAS,IAAO35B,EAEhB84B,EAAkBruB,EAAInE,EAAIuL,GAAUlH,EAAIrE,EAAIuL,EAC5CknB,EAAkBtuB,EAAIlE,EAAIsL,GAAUlH,EAAIpE,EAAIsL,EAC5C+nB,EAAkBnvB,EAAIlE,EAAImzB,GAAU/uB,EAAIpE,EAAImzB,EAC5CG,EAAkBpvB,EAAIlE,EAAIozB,GAAUhvB,EAAIpE,EAAIozB,EAE9CZ,IACAL,EAAc3xB,KAAK,CAAET,EAAGmE,EAAInE,EAAGC,EAAGsL,EAAQpL,EAAG,IAC7CiyB,EAAc3xB,KAAK,CAAET,EAAGqE,EAAIrE,EAAGC,EAAGsL,EAAQpL,EAAG,IAEzCqyB,GACAJ,EAAc3xB,KAAK,CAAET,EAAGuL,EAAQtL,EAAGsL,EAAQpL,EAAG,KAGlDmzB,IACAlB,EAAc3xB,KAAK,CAAET,EAAGmE,EAAInE,EAAGC,EAAGmzB,EAAQjzB,EAAG,IAC7CiyB,EAAc3xB,KAAK,CAAET,EAAGqE,EAAIrE,EAAGC,EAAGmzB,EAAQjzB,EAAG,IAEzCqyB,GACAJ,EAAc3xB,KAAK,CAAET,EAAGuL,EAAQtL,EAAGmzB,EAAQjzB,EAAG,KAGlDozB,IACAnB,EAAc3xB,KAAK,CAAET,EAAGmE,EAAInE,EAAGC,EAAGozB,EAAQlzB,EAAG,IAC7CiyB,EAAc3xB,KAAK,CAAET,EAAGqE,EAAIrE,EAAGC,EAAGozB,EAAQlzB,EAAG,IAEzCqyB,GACAJ,EAAc3xB,KAAK,CAAET,EAAGuL,EAAQtL,EAAGozB,EAAQlzB,EAAG,KAItD,MAAMqzB,EAAYpB,EAAc9xB,IAAI7G,GAAKc,KAAKuQ,eAAerR,IAC7D82B,EAAwBkD,eAAeD,EAAWA,EAAU,IAE5D,MAAME,EAAYF,EAAUlzB,IAAI0O,GAAKA,EAAEtM,UACjCixB,EAAaH,EAAU5J,OAAO5a,GAAKpL,KAAKitB,IAAI7hB,EAAEtM,UAAY,IAAIpC,IAAI0O,GAAKA,EAAErM,WACzEixB,EAAYJ,EAAUlzB,IAAI0O,GAAKA,EAAEpM,UAAY,GAE7CuR,EAAS,IAAI,EAAA1R,eACfmB,KAAKO,OAAOuvB,GACZ9vB,KAAKO,OAAOwvB,GACZ/vB,KAAKO,OAAOyvB,IAGVxf,EAAS,IAAI,EAAA3R,eACfmB,KAAKS,OAAOqvB,GACZ9vB,KAAKS,OAAOsvB,GACZ/vB,KAAKS,OAAOuvB,IAIhB,OADe,EAAAxoB,OAAOiJ,gBAAgBF,EAAQC,GAKlD,kBAAkBjB,GACd,OAAOA,EAAWhT,EAItB,eAAegT,GACX,OAAOA,EAAWhT,EAItB,oBAAoBgT,GAEhB,OADAA,EAAWhT,EAAI,EACRgT,EAIX,cAAcmB,EAA0BC,GAQpC,YAPehY,IAAXgY,EACAA,EAAS,CAAEvU,EAAG,EAAGC,EAAG,EAAGE,GAAI,IAE3BoU,EAAOvU,EAAI,EACXuU,EAAOtU,EAAI,EACXsU,EAAOpU,GAAK,GAEToU,GAIf,kBAAagc,EAaT,qBAAqBhK,EAA8BsN,GAG/C,IAAK,MAAMnpB,KAAS6b,EACO,IAAnB7b,EAAMhI,WACNgI,EAAMhI,SAJE,KAISmxB,EAAenxB,UAW5C,sBAAsB6jB,EAA8BsN,GAChD,MAAMC,EAAMD,EAAelxB,UAAY,EAAI,KAAO,IAC5CoxB,EAAOF,EAAelxB,UAAY,GAAK,IAAM,IAEnD,IAAK,MAAM+H,KAAS6b,EACZ7b,EAAM/H,YAAcmxB,IACpBppB,EAAM/H,UAAYoxB,IAIlC,OAtCW,EAAAC,UAAoB,mBACpB,EAAA1B,cAAwB34B,EAAMkJ,UAAUC,SAASytB,EAAwByD,WACzE,EAAAxD,YAAsB,GAAKD,EAAwB+B,cACnD,EAAA5B,eAAyB9sB,KAAKgS,IAAI2a,EAAwBC,YAAa,GAmClF,GAvCA,GAAa,EAAAD,0BA6CA,EAAA0D,6BAA2C,IAAI/D,EACxD,EAAA3jB,eAAeC,2B,oHC9XnB,aAMA,qCAYI,YACa0nB,EACAC,EAAuB,EACvBC,EAAuB,GAFvB,KAAAF,eACA,KAAAC,eACA,KAAAC,eAET75B,KAAK85B,eAAiBH,EACtB35B,KAAK+5B,WAAaJ,EAAapnB,WAAWynB,YAAYJ,EAAcC,GACpE,MAAM,IAAEjwB,EAAG,IAAEE,GAAQ9J,KAAK+5B,WAC1B/5B,KAAKi6B,kBAAoB,CAAEx0B,EAAGqE,EAAIrE,EAAImE,EAAInE,EAAGC,EAAGoE,EAAIpE,EAAIkE,EAAIlE,EAAGE,EAAGkE,EAAIlE,EAAIgE,EAAIhE,GAMlF,iBACI,OAAO5F,KAAK85B,eAAevnB,WAM/B,wBACI,OAAOvS,KAAK85B,eAAexnB,kBAiB/B,YAAYM,EAAkBzM,GAC1B,MAAM2M,EAAQF,EAAQE,MAChBonB,EAAkBl6B,KAAKsS,kBAAkB6nB,mBAAmBrnB,GAC5DsnB,EAAkBp6B,KAAKsS,kBAAkB+nB,mBAAmBvnB,GAC5D2iB,EAAQz1B,KAAKi6B,kBAAkBx0B,EAAIy0B,EACnCxE,EAAQ11B,KAAKi6B,kBAAkBv0B,EAAI00B,EACnCE,EAAUt6B,KAAK+5B,WAAWnwB,IAAInE,EAAIgwB,EAAQ7iB,EAAQgI,OAClD2f,EAAUv6B,KAAK+5B,WAAWnwB,IAAIlE,EAAIgwB,EAAQ9iB,EAAQ+H,IAYxD,OAVKxU,IACDA,EAAS,IAAI/G,EAAM0Z,MAGvB3S,EAAOyD,IAAInE,EAAI60B,EACfn0B,EAAOyD,IAAIlE,EAAI60B,EACfp0B,EAAOyD,IAAIhE,EAAI5F,KAAK+5B,WAAWnwB,IAAIhE,EACnCO,EAAO2D,IAAIrE,EAAI60B,EAAU7E,EACzBtvB,EAAO2D,IAAIpE,EAAI60B,EAAU7E,EACzBvvB,EAAO2D,IAAIlE,EAAI5F,KAAK+5B,WAAWjwB,IAAIlE,EAC5BO,EAcX,UAAUyM,GACN,MAAM+G,EAAW3Z,KAAKoT,YAAYR,GAClC,OAAO5S,KAAKuS,WAAWioB,aAAa7gB,M,qHC5E/B,EAAA8gB,8BAAmD,IAtBhE,MACI,kBACI,OAAO,EAEX,gBAAgB3nB,GACZ,OAAiB,IAAVA,EAAc,EAAI,EAE7B,mBAAmBA,GAEf,OAAO,GAAKA,EAEhB,mBAAmBA,GAEf,OAAiB,IAAVA,EAAc,GAAMA,EAAQ,EAAK,K,gGCfhD,cAEA,MAAa4nB,EACT,YAAmB9nB,EAAyB6iB,EAAsBC,GAA/C,KAAA9iB,UAAyB,KAAA6iB,QAAsB,KAAAC,QAElE,CAACv3B,OAAOw8B,YACJ,OAAsB,IAAf36B,KAAKy1B,OAA8B,IAAfz1B,KAAK01B,MAC1BgF,EAASE,eAAe56B,KAAK4S,SAC7B8nB,EAASG,kBAAkB76B,KAAK4S,QAAS5S,KAAKy1B,MAAOz1B,KAAK01B,QANxE,aAUA,SAAiBgF,GACI,EAAAG,kBAAjB,UACIC,EACArF,EACAC,GAEA,IAAK,IAAIhwB,EAAI,EAAGA,EAAIgwB,EAAOhwB,IACvB,IAAK,IAAID,EAAI,EAAGA,EAAIgwB,EAAOhwB,UACjB,EAAAiV,QAAQI,mBACVggB,EAAUngB,IAAM+a,EAAQhwB,EACxBo1B,EAAUlgB,OAAS6a,EAAQhwB,EAC3Bq1B,EAAUhoB,MAAQ,IAMjB,EAAA8nB,eAAjB,UAAgCE,GAE5B,IAAK,IAAI19B,EAAI,EAAGA,EAAI,EAAGA,UACb,EAAAsd,QAAQI,mBACTggB,EAAUngB,KAAO,EAAMvd,GAAK,EAC5B09B,EAAUlgB,QAAU,EAAU,EAAJxd,EAC3B09B,EAAUhoB,MAAQ,IAvBlC,CAAiB4nB,EAAA,EAAAA,WAAA,EAAAA,SAAQ,M,oGCXzB,aAGA,QAGA,MAAa3nB,EACT,+BACI4mB,EACAhxB,EACAmK,GAEA,MACM8F,EADa+gB,EAAapnB,WACFnC,aAAazH,GAE3C,OAAO3I,KAAK+6B,0BAA0BpB,EAAc/gB,EAAY9F,GAGpE,iCACI6mB,EACA/gB,EACA9F,GAEA,MAAMP,EAAaonB,EAAapnB,WAC1BD,EAAoBqnB,EAAarnB,kBAEjC0oB,EAAK1oB,EAAkB6nB,mBAAmBrnB,GAC1CmoB,EAAK3oB,EAAkB+nB,mBAAmBvnB,IAE1C,IAAElJ,EAAG,IAAEE,GAAQyI,EAAWynB,YAAY,EAAG,GACzCkB,EAAapxB,EAAIrE,EAAImE,EAAInE,EACzB01B,EAAarxB,EAAIpE,EAAIkE,EAAIlE,EAE/B,GAAIkT,EAAWnT,EAAImE,EAAInE,GAAKmT,EAAWnT,EAAIqE,EAAIrE,EAC3C,OAAO,KAGX,GAAImT,EAAWlT,EAAIkE,EAAIlE,GAAKkT,EAAWlT,EAAIoE,EAAIpE,EAC3C,OAAO,KAGX,MAAMkV,EAASvR,KAAKO,IAAIoxB,EAAK,EAAG3xB,KAAKoD,MAAOuuB,GAAMpiB,EAAWnT,EAAImE,EAAInE,GAAMy1B,IACrEvgB,EAAMtR,KAAKO,IAAIqxB,EAAK,EAAG5xB,KAAKoD,MAAOwuB,GAAMriB,EAAWlT,EAAIkE,EAAIlE,GAAMy1B,IAExE,OAAO,EAAAzgB,QAAQI,mBAAmBH,EAAKC,EAAQ9H,GAGnD,8BACI6mB,EACA1mB,EACAH,GAEA,MAAMsoB,EAAO,CAAC/8B,EAAeg9B,EAAeC,IACpCj9B,EAAQg9B,EACDC,GAAUD,EAAQh9B,IAAUi9B,EAAQD,GAGxCA,GAAUh9B,EAAQg9B,IAAUC,EAAQD,GAGzClxB,EAAQ,CAAC1E,EAAW81B,EAAgBC,IAC/BnyB,KAAKO,IAAIP,KAAKS,IAAIrE,EAAG81B,GAASC,GAInCC,EAAqBL,EAAKnoB,EAAOnC,UAAU4qB,oBAAqBryB,KAAKkP,GAAIlP,KAAKkP,IAC9EojB,EAAoBxxB,EACtB8I,EAAOnC,UAAUmI,mBACL,GAAV5P,KAAKkP,GACG,GAAVlP,KAAKkP,IAEHqjB,EAAqBR,EAAKnoB,EAAOlC,UAAU2qB,oBAAqBryB,KAAKkP,GAAIlP,KAAKkP,IAC9EsjB,EAAoB1xB,EACtB8I,EAAOlC,UAAUkI,mBACL,GAAV5P,KAAKkP,GACG,GAAVlP,KAAKkP,IAEHujB,EAAa/oB,EAAaC,wBAC5B2mB,EACA,EAAAzxB,eAAegR,YAAYyiB,EAAmBF,GAC9C3oB,GAEEipB,EAAahpB,EAAaC,wBAC5B2mB,EACA,EAAAzxB,eAAegR,YAAY2iB,EAAmBD,GAC9C9oB,GAEEkpB,EAAcrC,EAAarnB,kBAAkB6nB,mBAAmBrnB,GAEtE,IAAKgpB,IAAeC,EAChB,MAAM,IAAIt4B,MAAM,uBAGpB,MAAMw4B,EAAYH,EAAWlhB,OAC7B,IAAIshB,EAAYH,EAAWnhB,OAGvB6gB,EAAqBG,IAEjBM,GADAA,IAAcD,EACDD,EAGAA,EAAc,GAInC,MAAMG,EAAS9yB,KAAKO,IAAIkyB,EAAWnhB,IAAKohB,EAAWphB,KAC7CyhB,EAAS/yB,KAAKS,IAAIgyB,EAAWnhB,IAAKohB,EAAWphB,KAE7C9P,EAAO,IAAIzJ,MAEjB,IAAK,IAAIuZ,EAAMwhB,EAAQxhB,GAAOyhB,IAAUzhB,EACpC,IAAK,IAAIC,EAASqhB,EAAWrhB,GAAUshB,IAAathB,EAChD/P,EAAK3E,KAAK,EAAAwU,QAAQI,mBAAmBH,EAAKC,EAASohB,EAAalpB,IAIxE,OAAOjI,GA/Gf,kB,wGCNA,cAGA,yBAGI,YAAYyH,GACRtS,KAAKq8B,oBAAsB/pB,EAG/B,SAASM,GACL,MAAM0pB,EAAOt8B,KAAKq8B,oBAAoBE,gBAAgB3pB,EAAQE,OACxD0pB,EAAOx8B,KAAKq8B,oBAAoBI,gBAAgB7pB,EAAQE,OAE9D,OAAO,IAAI,EAAA4nB,SAAS9nB,EAAS0pB,EAAME,M,6GCf3C,aACA,QAqCA,iCACIt8B,EACAw8B,EACA17B,GAEA,QAAkBgB,IAAd06B,EACA,OAAO17B,EAGX,MAAMmF,EAAS,EAAAqK,IAAImsB,MAAMz8B,GACnB,EAAA08B,iBAAiBF,EAAWx8B,GAC5B,EAAA08B,iBAAiBF,EAAWx8B,EAAQkC,IAAKlC,EAAQwuB,mBAEvD,OAAOvoB,UAAUnF,I,gdCnDrB,YACA,YACA,YACA,WACA,YACA,Y,oGCDA,MAAM67B,EAAkB,EAAQ,KAE1BC,EAAYD,EAAgBhM,SAAWgM,EAO7C,qBAGI,cACI78B,KAAK+8B,QAAU,IAAI56B,IAGvB,WAIA,gBACI,OAAOuc,QAAQ+Q,UAGnB,oBAAoBuN,EAAiBj8B,GACjC,IAAIf,KAAK+8B,QAAQx2B,IAAIy2B,GAGrB,OAAOh9B,KAAKi9B,YAAYD,EAASj8B,GAGrC,kBAAkBi8B,EAAiBj8B,GAC/B,GAAIA,aAAiBm8B,IAAK,CACtB,MAAM3f,QAAiB4f,MAAMp8B,EAAMq8B,MACnC,IAAK7f,EAAS8f,GACV,MAAM,IAAI55B,MACN,iCAAiC1C,EAAMq8B,SAAS7f,EAAS+f,cAGjEv8B,QAAcwc,EAAS3b,YAEvBb,EAAQA,EAGZ,MAAMw8B,EAAQT,EAAU/7B,EAAO,CAC3By8B,QAAS,GACTC,aAAc,EACdC,eAAgB,IAChBC,UAAW,EACX1sB,OAAQ,KACRwa,OAAQ,EACRmS,aAAa,EACbC,UAAW,KACXC,YAAY,EACZ3L,MAAO,IAEXoL,EAAMQ,QAAUh9B,EAEhBf,KAAK+8B,QAAQ/1B,IAAIg2B,EAASO,GAG9B,cAAcP,EAAiBpqB,GAC3B,MAAM2qB,EAAQv9B,KAAK+8B,QAAQ9+B,IAAI++B,GAC/B,QAAch7B,IAAVu7B,EACA,MAAM,IAAI95B,MAAM,kBAEpB,MAAMu6B,EAAOT,EAAMU,QAAQrrB,EAAQE,MAAOF,EAAQgI,OAAQhI,EAAQ+H,KAClE,GAAa,OAATqjB,EAAe,CACfA,EAAK/P,MAAQ+O,EACb,IAAK,MAAMkB,KAAWF,EAAKG,SACvBD,EAAQE,iBAAmBp+B,KAAKq+B,oBAAoBH,EAASX,EAAMQ,SAG3E,OAAOC,GAAQ,GAGX,oBAAoBE,EAAcH,GACtC,OAAQA,EAAQnoB,MACZ,IAAK,QACL,IAAK,aACL,IAAK,aACL,IAAK,kBACL,IAAK,UACL,IAAK,eACL,IAAK,qBACD,OAAOmoB,EACX,IAAK,UACD,OAAOA,EAAQ7P,SACnB,IAAK,oBACD,OAAO6P,EAAQI,SAASD,EAAQrQ,IAAIK,a,+HC7FpD,cAMA,OAEA,OAKA,QAMA,IAAKoQ,GAAL,SAAKA,GACD,yBACA,qBACA,+BACA,yBAJJ,CAAKA,MAAkB,KA+CV,EAAA/e,oBAA8B,UAM3C,0BAGI,YACagf,EACDhS,EACCiS,GAFA,KAAAD,cACD,KAAAhS,eACC,KAAAiS,WALb,KAAA3Q,GAAK,EAAAtO,oBAQL,iBACI,OAAOvf,KAAKusB,aAGhB,eAAekS,GACXz+B,KAAKusB,aAAekS,EAGxB,WAAW5hB,GACP,GAAI,EAAA6hB,kBAAkB7hB,GAClB,OAAO,EAGX,MAAMmhB,EAAOnhB,EACb,YACsB7a,IAAlBg8B,EAAKG,eACWn8B,IAAhBg8B,EAAKW,aACM38B,IAAXg8B,EAAKv4B,QACMzD,IAAXg8B,EAAKt4B,QACM1D,IAAXg8B,EAAKp4B,EAQb,QAAQo4B,EAA2B/e,GAC/B,MAAM,QAAErM,GAAYqM,EACpB,IAAK,MAAMif,KAAWF,EAAKG,SAAU,CACjC,MAAM/7B,EAAM,IAAI,EAAAw8B,OAAO,OAAD,QAClBC,OAAQb,EAAK/P,MACb6Q,cAAe9+B,KAAK++B,oBAAoBb,EAAQtoB,MAChDopB,OAAQpsB,EAAQE,MAChBmsB,MAAO51B,KAAKS,IAAI,EAAG8I,EAAQE,OAAS9S,KAAKu+B,YAAYW,oBAAsB,IAC3EpK,IAAKoJ,EAAQrQ,IACVqQ,EAAQiB,OAGf,OAAQjB,EAAQtoB,MACZ,KAAK0oB,EAAmBc,MACpB,IAAK,MAAMC,KAAiBnB,EAAQhQ,SAAU,CAC1C,MAAMzoB,EAAK45B,EAAiC,GACtC35B,EAAK25B,EAAiC,GAEtCzvB,EAAW,IAAI,EAAApK,QAAQC,EAAGC,GAEhC1F,KAAKu+B,YAAY5P,oBACbqP,EAAK/P,MAlHT,KAoHI,CAACre,GACDxN,EACAwQ,EAAQE,OAGhB,MAEJ,KAAKwrB,EAAmBgB,WAAY,CAChC,IAAIC,EACJ,GAAsC,eAAlCrB,EAAQE,iBAAiBxoB,KAAuB,CAChD2pB,EAAmB,GACnB,IAAK,MAAO95B,EAAGC,KAAMw4B,EAAQE,iBAAiBoB,YAC1CD,EAAiBr5B,KAAK,IAAI,EAAAgC,eAAexC,EAAGD,SAE7C,GAAsC,oBAAlCy4B,EAAQE,iBAAiBxoB,KAA4B,CAC5D2pB,EAAmB,GACnB,IAAK,MAAME,KAAgBvB,EAAQE,iBAC9BoB,YACD,IAAK,MAAO/5B,EAAGC,KAAM+5B,EACjBF,EAAiBr5B,KAAK,IAAI,EAAAgC,eAAexC,EAAGD,IAKxD,IAAK,MAAMg6B,KAAgBvB,EAAQhQ,SAAgC,CAC/D,MAAMzG,EAAsB,CAAEiY,UAAW,GAAIH,oBAC7C,IAAK,MAAO95B,EAAGC,KAAM+5B,EAAc,CAC/B,MAAM7vB,EAAW,IAAI,EAAApK,QAAQC,EAAGC,GAChC+hB,EAAKiY,UAAUx5B,KAAK0J,GAGxB5P,KAAKu+B,YAAYxP,mBACbiP,EAAK/P,MApJT,KAsJI,CAACxG,GACDrlB,EACAwQ,EAAQE,OAGhB,MAEJ,KAAKwrB,EAAmBqB,QAAS,CAC7B,MAAMC,EAA4B,CAAEC,MAAO,IAC3C,IAAK,MAAMC,KAAW5B,EAAQhQ,SAAgC,CAC1D,MAAM6R,EAAkB,GACxB,IAAK,MAAOC,EAAOC,KAAUH,EAAS,CAClC,MAAMlwB,EAAW,IAAI,EAAApK,QAAQw6B,EAAOC,GACpCF,EAAK75B,KAAK0J,GAEdgwB,EAAQC,MAAM35B,KAAK65B,GAGvB//B,KAAKu+B,YAAYrP,sBACb8O,EAAK/P,MAzKL,KA2KA,CAAC2R,GACDx9B,EACAwQ,EAAQE,OAGZ,MAEJ,KAAKwrB,EAAmB4B,WAO5B,oBAAoBtqB,GACxB,OAAQA,GACJ,KAAK0oB,EAAmBc,MACpB,MAAO,QACX,KAAKd,EAAmBgB,WACpB,MAAO,OACX,KAAKhB,EAAmBqB,QACpB,MAAO,UACX,QACI,MAAO,c,6BCtNvBxiC,EAAOD,QAAUijC,EAEjB,IAEIC,EAFA51B,EAAY,EAAQ,GAIpBmB,EAAYnB,EAAKmB,SACjBL,EAAYd,EAAKc,OACjBI,EAAYlB,EAAKkB,KAWrB,SAAS20B,EAAGC,EAAIC,EAAKroB,GAMjBlY,KAAKsgC,GAAKA,EAMVtgC,KAAKugC,IAAMA,EAMXvgC,KAAKwgC,UAAOx+B,EAMZhC,KAAKkY,IAAMA,EAIf,SAASuoB,KAUT,SAASC,EAAMC,GAMX3gC,KAAK4gC,KAAOD,EAAOC,KAMnB5gC,KAAK6gC,KAAOF,EAAOE,KAMnB7gC,KAAKugC,IAAMI,EAAOJ,IAMlBvgC,KAAKwgC,KAAOG,EAAOG,OAQvB,SAASX,IAMLngC,KAAKugC,IAAM,EAMXvgC,KAAK4gC,KAAO,IAAIP,EAAGI,EAAM,EAAG,GAM5BzgC,KAAK6gC,KAAO7gC,KAAK4gC,KAMjB5gC,KAAK8gC,OAAS,KASlB,IAAIpiC,EAAS,WACT,OAAO8L,EAAKwC,OACN,WACE,OAAQmzB,EAAOzhC,OAAS,WACpB,OAAO,IAAI0hC,OAIjB,WACE,OAAO,IAAID,IAuCvB,SAASY,EAAU7oB,EAAK8oB,EAAKC,GACzBD,EAAIC,GAAa,IAAN/oB,EAoBf,SAASgpB,EAASX,EAAKroB,GACnBlY,KAAKugC,IAAMA,EACXvgC,KAAKwgC,UAAOx+B,EACZhC,KAAKkY,IAAMA,EA8Cf,SAASipB,EAAcjpB,EAAK8oB,EAAKC,GAC7B,KAAO/oB,EAAI5J,IACP0yB,EAAIC,KAAkB,IAAT/oB,EAAI7J,GAAW,IAC5B6J,EAAI7J,IAAM6J,EAAI7J,KAAO,EAAI6J,EAAI5J,IAAM,MAAQ,EAC3C4J,EAAI5J,MAAQ,EAEhB,KAAO4J,EAAI7J,GAAK,KACZ2yB,EAAIC,KAAkB,IAAT/oB,EAAI7J,GAAW,IAC5B6J,EAAI7J,GAAK6J,EAAI7J,KAAO,EAExB2yB,EAAIC,KAAS/oB,EAAI7J,GA2CrB,SAAS+yB,EAAalpB,EAAK8oB,EAAKC,GAC5BD,EAAIC,GAA0B,IAAd/oB,EAChB8oB,EAAIC,EAAM,GAAM/oB,IAAQ,EAAM,IAC9B8oB,EAAIC,EAAM,GAAM/oB,IAAQ,GAAM,IAC9B8oB,EAAIC,EAAM,GAAM/oB,IAAQ,GA7J5BioB,EAAOzhC,OAASA,IAOhByhC,EAAOkB,MAAQ,SAAe5xB,GAC1B,OAAO,IAAIjF,EAAKpJ,MAAMqO,IAKtBjF,EAAKpJ,QAAUA,QACf++B,EAAOkB,MAAQ72B,EAAK9H,KAAKy9B,EAAOkB,MAAO72B,EAAKpJ,MAAMpC,UAAUsiC,WAUhEnB,EAAOnhC,UAAUuiC,MAAQ,SAAcjB,EAAIC,EAAKroB,GAG5C,OAFAlY,KAAK6gC,KAAO7gC,KAAK6gC,KAAKL,KAAO,IAAIH,EAAGC,EAAIC,EAAKroB,GAC7ClY,KAAKugC,KAAOA,EACLvgC,MA8BXkhC,EAASliC,UAAYlB,OAAOY,OAAO2hC,EAAGrhC,WACtCkiC,EAASliC,UAAUshC,GAxBnB,SAAuBpoB,EAAK8oB,EAAKC,GAC7B,KAAO/oB,EAAM,KACT8oB,EAAIC,KAAe,IAAN/oB,EAAY,IACzBA,KAAS,EAEb8oB,EAAIC,GAAO/oB,GA0BfioB,EAAOnhC,UAAUwiC,OAAS,SAAsBnjC,GAW5C,OARA2B,KAAKugC,MAAQvgC,KAAK6gC,KAAO7gC,KAAK6gC,KAAKL,KAAO,IAAIU,GACzC7iC,KAAkB,GACT,IAAY,EACpBA,EAAQ,MAAY,EACpBA,EAAQ,QAAY,EACpBA,EAAQ,UAAY,EACA,EAC1BA,IAAQkiC,IACDvgC,MASXmgC,EAAOnhC,UAAUyiC,MAAQ,SAAqBpjC,GAC1C,OAAOA,EAAQ,EACT2B,KAAKuhC,MAAMJ,EAAe,GAAIx1B,EAAS+1B,WAAWrjC,IAClD2B,KAAKwhC,OAAOnjC,IAQtB8hC,EAAOnhC,UAAU2iC,OAAS,SAAsBtjC,GAC5C,OAAO2B,KAAKwhC,QAAQnjC,GAAS,EAAIA,GAAS,MAAQ,IAsBtD8hC,EAAOnhC,UAAU4iC,OAAS,SAAsBvjC,GAC5C,IAAI6P,EAAOvC,EAAS1B,KAAK5L,GACzB,OAAO2B,KAAKuhC,MAAMJ,EAAejzB,EAAK5M,SAAU4M,IAUpDiyB,EAAOnhC,UAAU6iC,MAAQ1B,EAAOnhC,UAAU4iC,OAQ1CzB,EAAOnhC,UAAU8iC,OAAS,SAAsBzjC,GAC5C,IAAI6P,EAAOvC,EAAS1B,KAAK5L,GAAO0jC,WAChC,OAAO/hC,KAAKuhC,MAAMJ,EAAejzB,EAAK5M,SAAU4M,IAQpDiyB,EAAOnhC,UAAUgjC,KAAO,SAAoB3jC,GACxC,OAAO2B,KAAKuhC,MAAMR,EAAW,EAAG1iC,EAAQ,EAAI,IAehD8hC,EAAOnhC,UAAUijC,QAAU,SAAuB5jC,GAC9C,OAAO2B,KAAKuhC,MAAMH,EAAc,EAAG/iC,IAAU,IASjD8hC,EAAOnhC,UAAUkjC,SAAW/B,EAAOnhC,UAAUijC,QAQ7C9B,EAAOnhC,UAAUmjC,QAAU,SAAuB9jC,GAC9C,IAAI6P,EAAOvC,EAAS1B,KAAK5L,GACzB,OAAO2B,KAAKuhC,MAAMH,EAAc,EAAGlzB,EAAKG,IAAIkzB,MAAMH,EAAc,EAAGlzB,EAAKI,KAU5E6xB,EAAOnhC,UAAUojC,SAAWjC,EAAOnhC,UAAUmjC,QAQ7ChC,EAAOnhC,UAAUwM,MAAQ,SAAqBnN,GAC1C,OAAO2B,KAAKuhC,MAAM/2B,EAAKgB,MAAM62B,aAAc,EAAGhkC,IASlD8hC,EAAOnhC,UAAUsjC,OAAS,SAAsBjkC,GAC5C,OAAO2B,KAAKuhC,MAAM/2B,EAAKgB,MAAM+2B,cAAe,EAAGlkC,IAGnD,IAAImkC,EAAah4B,EAAKpJ,MAAMpC,UAAUgI,IAChC,SAAwBkR,EAAK8oB,EAAKC,GAChCD,EAAIh6B,IAAIkR,EAAK+oB,IAGf,SAAwB/oB,EAAK8oB,EAAKC,GAChC,IAAK,IAAI7jC,EAAI,EAAGA,EAAI8a,EAAI5W,SAAUlE,EAC9B4jC,EAAIC,EAAM7jC,GAAK8a,EAAI9a,IAQ/B+iC,EAAOnhC,UAAUqQ,MAAQ,SAAqBhR,GAC1C,IAAIkiC,EAAMliC,EAAMiD,SAAW,EAC3B,IAAKi/B,EACD,OAAOvgC,KAAKuhC,MAAMR,EAAW,EAAG,GACpC,GAAIv2B,EAAKkC,SAASrO,GAAQ,CACtB,IAAI2iC,EAAMb,EAAOkB,MAAMd,EAAMj1B,EAAOhK,OAAOjD,IAC3CiN,EAAOm3B,OAAOpkC,EAAO2iC,EAAK,GAC1B3iC,EAAQ2iC,EAEZ,OAAOhhC,KAAKwhC,OAAOjB,GAAKgB,MAAMiB,EAAYjC,EAAKliC,IAQnD8hC,EAAOnhC,UAAU0jC,OAAS,SAAsBrkC,GAC5C,IAAIkiC,EAAM70B,EAAKpK,OAAOjD,GACtB,OAAOkiC,EACDvgC,KAAKwhC,OAAOjB,GAAKgB,MAAM71B,EAAKi3B,MAAOpC,EAAKliC,GACxC2B,KAAKuhC,MAAMR,EAAW,EAAG,IAQnCZ,EAAOnhC,UAAU4jC,KAAO,WAIpB,OAHA5iC,KAAK8gC,OAAS,IAAIJ,EAAM1gC,MACxBA,KAAK4gC,KAAO5gC,KAAK6gC,KAAO,IAAIR,EAAGI,EAAM,EAAG,GACxCzgC,KAAKugC,IAAM,EACJvgC,MAOXmgC,EAAOnhC,UAAU6jC,MAAQ,WAUrB,OATI7iC,KAAK8gC,QACL9gC,KAAK4gC,KAAS5gC,KAAK8gC,OAAOF,KAC1B5gC,KAAK6gC,KAAS7gC,KAAK8gC,OAAOD,KAC1B7gC,KAAKugC,IAASvgC,KAAK8gC,OAAOP,IAC1BvgC,KAAK8gC,OAAS9gC,KAAK8gC,OAAON,OAE1BxgC,KAAK4gC,KAAO5gC,KAAK6gC,KAAO,IAAIR,EAAGI,EAAM,EAAG,GACxCzgC,KAAKugC,IAAO,GAETvgC,MAOXmgC,EAAOnhC,UAAU8jC,OAAS,WACtB,IAAIlC,EAAO5gC,KAAK4gC,KACZC,EAAO7gC,KAAK6gC,KACZN,EAAOvgC,KAAKugC,IAOhB,OANAvgC,KAAK6iC,QAAQrB,OAAOjB,GAChBA,IACAvgC,KAAK6gC,KAAKL,KAAOI,EAAKJ,KACtBxgC,KAAK6gC,KAAOA,EACZ7gC,KAAKugC,KAAOA,GAETvgC,MAOXmgC,EAAOnhC,UAAU+jC,OAAS,WAItB,IAHA,IAAInC,EAAO5gC,KAAK4gC,KAAKJ,KACjBQ,EAAOhhC,KAAKmL,YAAYk2B,MAAMrhC,KAAKugC,KACnCU,EAAO,EACJL,GACHA,EAAKN,GAAGM,EAAK1oB,IAAK8oB,EAAKC,GACvBA,GAAOL,EAAKL,IACZK,EAAOA,EAAKJ,KAGhB,OAAOQ,GAGXb,EAAO7wB,WAAa,SAAS0zB,GACzB5C,EAAe4C,EACf7C,EAAOzhC,OAASA,IAChB0hC,EAAa9wB,e,6BC9cjBnS,EAAOD,QAAU+lC,EAEjB,IAEIC,EAFA14B,EAAY,EAAQ,GAIpBmB,EAAYnB,EAAKmB,SACjBD,EAAYlB,EAAKkB,KAGrB,SAASy3B,EAAgBC,EAAQC,GAC7B,OAAOC,WAAW,uBAAyBF,EAAOnC,IAAM,OAASoC,GAAe,GAAK,MAAQD,EAAO7C,KASxG,SAAS0C,EAAOxX,GAMZzrB,KAAKghC,IAAMvV,EAMXzrB,KAAKihC,IAAM,EAMXjhC,KAAKugC,IAAM9U,EAAOnqB,OAGtB,IA4CQjD,EA5CJklC,EAAqC,oBAAfj2B,WACpB,SAA4Bme,GAC1B,GAAIA,aAAkBne,YAAclM,MAAMC,QAAQoqB,GAC9C,OAAO,IAAIwX,EAAOxX,GACtB,MAAMhoB,MAAM,mBAGd,SAAsBgoB,GACpB,GAAIrqB,MAAMC,QAAQoqB,GACd,OAAO,IAAIwX,EAAOxX,GACtB,MAAMhoB,MAAM,mBAGhB/E,EAAS,WACT,OAAO8L,EAAKwC,OACN,SAA6Bye,GAC3B,OAAQwX,EAAOvkC,OAAS,SAAuB+sB,GAC3C,OAAOjhB,EAAKwC,OAAOw2B,SAAS/X,GACtB,IAAIyX,EAAazX,GAEjB8X,EAAa9X,KACpBA,IAGL8X,GAwDV,SAASE,IAEL,IAAIv1B,EAAO,IAAIvC,EAAS,EAAG,GACvBvO,EAAI,EACR,KAAI4C,KAAKugC,IAAMvgC,KAAKihC,IAAM,GAanB,CACH,KAAO7jC,EAAI,IAAKA,EAAG,CAEf,GAAI4C,KAAKihC,KAAOjhC,KAAKugC,IACjB,MAAM4C,EAAgBnjC,MAG1B,GADAkO,EAAKG,IAAMH,EAAKG,IAA2B,IAArBrO,KAAKghC,IAAIhhC,KAAKihC,OAAmB,EAAJ7jC,KAAW,EAC1D4C,KAAKghC,IAAIhhC,KAAKihC,OAAS,IACvB,OAAO/yB,EAIf,OADAA,EAAKG,IAAMH,EAAKG,IAA6B,IAAvBrO,KAAKghC,IAAIhhC,KAAKihC,SAAqB,EAAJ7jC,KAAW,EACzD8Q,EAxBP,KAAO9Q,EAAI,IAAKA,EAGZ,GADA8Q,EAAKG,IAAMH,EAAKG,IAA2B,IAArBrO,KAAKghC,IAAIhhC,KAAKihC,OAAmB,EAAJ7jC,KAAW,EAC1D4C,KAAKghC,IAAIhhC,KAAKihC,OAAS,IACvB,OAAO/yB,EAKf,GAFAA,EAAKG,IAAMH,EAAKG,IAA2B,IAArBrO,KAAKghC,IAAIhhC,KAAKihC,OAAe,MAAQ,EAC3D/yB,EAAKI,IAAMJ,EAAKI,IAA2B,IAArBtO,KAAKghC,IAAIhhC,KAAKihC,OAAgB,KAAO,EACvDjhC,KAAKghC,IAAIhhC,KAAKihC,OAAS,IACvB,OAAO/yB,EAgBf,GAfI9Q,EAAI,EAeJ4C,KAAKugC,IAAMvgC,KAAKihC,IAAM,GACtB,KAAO7jC,EAAI,IAAKA,EAGZ,GADA8Q,EAAKI,IAAMJ,EAAKI,IAA2B,IAArBtO,KAAKghC,IAAIhhC,KAAKihC,OAAmB,EAAJ7jC,EAAQ,KAAO,EAC9D4C,KAAKghC,IAAIhhC,KAAKihC,OAAS,IACvB,OAAO/yB,OAGf,KAAO9Q,EAAI,IAAKA,EAAG,CAEf,GAAI4C,KAAKihC,KAAOjhC,KAAKugC,IACjB,MAAM4C,EAAgBnjC,MAG1B,GADAkO,EAAKI,IAAMJ,EAAKI,IAA2B,IAArBtO,KAAKghC,IAAIhhC,KAAKihC,OAAmB,EAAJ7jC,EAAQ,KAAO,EAC9D4C,KAAKghC,IAAIhhC,KAAKihC,OAAS,IACvB,OAAO/yB,EAInB,MAAMzK,MAAM,2BAkChB,SAASigC,EAAgB1C,EAAK2C,GAC1B,OAAQ3C,EAAI2C,EAAM,GACV3C,EAAI2C,EAAM,IAAM,EAChB3C,EAAI2C,EAAM,IAAM,GAChB3C,EAAI2C,EAAM,IAAM,MAAQ,EA+BpC,SAASC,IAGL,GAAI5jC,KAAKihC,IAAM,EAAIjhC,KAAKugC,IACpB,MAAM4C,EAAgBnjC,KAAM,GAEhC,OAAO,IAAI2L,EAAS+3B,EAAgB1jC,KAAKghC,IAAKhhC,KAAKihC,KAAO,GAAIyC,EAAgB1jC,KAAKghC,IAAKhhC,KAAKihC,KAAO,IA3KxGgC,EAAOvkC,OAASA,IAEhBukC,EAAOjkC,UAAU6kC,OAASr5B,EAAKpJ,MAAMpC,UAAUsiC,UAAuC92B,EAAKpJ,MAAMpC,UAAUsH,MAO3G28B,EAAOjkC,UAAUwiC,QACTnjC,EAAQ,WACL,WACuD,GAA1DA,GAAuC,IAArB2B,KAAKghC,IAAIhhC,KAAKihC,QAAuB,EAAOjhC,KAAKghC,IAAIhhC,KAAKihC,OAAS,IAAK,OAAO5iC,EACvC,GAA1DA,GAASA,GAA8B,IAArB2B,KAAKghC,IAAIhhC,KAAKihC,OAAgB,KAAO,EAAOjhC,KAAKghC,IAAIhhC,KAAKihC,OAAS,IAAK,OAAO5iC,EACvC,GAA1DA,GAASA,GAA8B,IAArB2B,KAAKghC,IAAIhhC,KAAKihC,OAAe,MAAQ,EAAOjhC,KAAKghC,IAAIhhC,KAAKihC,OAAS,IAAK,OAAO5iC,EACvC,GAA1DA,GAASA,GAA8B,IAArB2B,KAAKghC,IAAIhhC,KAAKihC,OAAe,MAAQ,EAAOjhC,KAAKghC,IAAIhhC,KAAKihC,OAAS,IAAK,OAAO5iC,EACvC,GAA1DA,GAASA,GAA+B,GAAtB2B,KAAKghC,IAAIhhC,KAAKihC,OAAe,MAAQ,EAAOjhC,KAAKghC,IAAIhhC,KAAKihC,OAAS,IAAK,OAAO5iC,EAGjG,IAAK2B,KAAKihC,KAAO,GAAKjhC,KAAKugC,IAEvB,MADAvgC,KAAKihC,IAAMjhC,KAAKugC,IACV4C,EAAgBnjC,KAAM,IAEhC,OAAO3B,IAQf4kC,EAAOjkC,UAAUyiC,MAAQ,WACrB,OAAuB,EAAhBzhC,KAAKwhC,UAOhByB,EAAOjkC,UAAU2iC,OAAS,WACtB,IAAItjC,EAAQ2B,KAAKwhC,SACjB,OAAOnjC,IAAU,IAAc,EAARA,GAAa,GAqFxC4kC,EAAOjkC,UAAUgjC,KAAO,WACpB,OAAyB,IAAlBhiC,KAAKwhC,UAchByB,EAAOjkC,UAAUijC,QAAU,WAGvB,GAAIjiC,KAAKihC,IAAM,EAAIjhC,KAAKugC,IACpB,MAAM4C,EAAgBnjC,KAAM,GAEhC,OAAO0jC,EAAgB1jC,KAAKghC,IAAKhhC,KAAKihC,KAAO,IAOjDgC,EAAOjkC,UAAUkjC,SAAW,WAGxB,GAAIliC,KAAKihC,IAAM,EAAIjhC,KAAKugC,IACpB,MAAM4C,EAAgBnjC,KAAM,GAEhC,OAAkD,EAA3C0jC,EAAgB1jC,KAAKghC,IAAKhhC,KAAKihC,KAAO,IAmCjDgC,EAAOjkC,UAAUwM,MAAQ,WAGrB,GAAIxL,KAAKihC,IAAM,EAAIjhC,KAAKugC,IACpB,MAAM4C,EAAgBnjC,KAAM,GAEhC,IAAI3B,EAAQmM,EAAKgB,MAAMs4B,YAAY9jC,KAAKghC,IAAKhhC,KAAKihC,KAElD,OADAjhC,KAAKihC,KAAO,EACL5iC,GAQX4kC,EAAOjkC,UAAUsjC,OAAS,WAGtB,GAAItiC,KAAKihC,IAAM,EAAIjhC,KAAKugC,IACpB,MAAM4C,EAAgBnjC,KAAM,GAEhC,IAAI3B,EAAQmM,EAAKgB,MAAMu4B,aAAa/jC,KAAKghC,IAAKhhC,KAAKihC,KAEnD,OADAjhC,KAAKihC,KAAO,EACL5iC,GAOX4kC,EAAOjkC,UAAUqQ,MAAQ,WACrB,IAAI/N,EAAStB,KAAKwhC,SACdzP,EAAS/xB,KAAKihC,IACd0C,EAAS3jC,KAAKihC,IAAM3/B,EAGxB,GAAIqiC,EAAM3jC,KAAKugC,IACX,MAAM4C,EAAgBnjC,KAAMsB,GAGhC,OADAtB,KAAKihC,KAAO3/B,EACRF,MAAMC,QAAQrB,KAAKghC,KACZhhC,KAAKghC,IAAI16B,MAAMyrB,EAAO4R,GAC1B5R,IAAU4R,EACX,IAAI3jC,KAAKghC,IAAI71B,YAAY,GACzBnL,KAAK6jC,OAAOtmC,KAAKyC,KAAKghC,IAAKjP,EAAO4R,IAO5CV,EAAOjkC,UAAU0jC,OAAS,WACtB,IAAIrzB,EAAQrP,KAAKqP,QACjB,OAAO3D,EAAKs4B,KAAK30B,EAAO,EAAGA,EAAM/N,SAQrC2hC,EAAOjkC,UAAUilC,KAAO,SAAc3iC,GAClC,GAAsB,iBAAXA,EAAqB,CAE5B,GAAItB,KAAKihC,IAAM3/B,EAAStB,KAAKugC,IACzB,MAAM4C,EAAgBnjC,KAAMsB,GAChCtB,KAAKihC,KAAO3/B,OAEZ,GAEI,GAAItB,KAAKihC,KAAOjhC,KAAKugC,IACjB,MAAM4C,EAAgBnjC,YACE,IAAvBA,KAAKghC,IAAIhhC,KAAKihC,QAE3B,OAAOjhC,MAQXijC,EAAOjkC,UAAUklC,SAAW,SAASC,GACjC,OAAQA,GACJ,KAAK,EACDnkC,KAAKikC,OACL,MACJ,KAAK,EACDjkC,KAAKikC,KAAK,GACV,MACJ,KAAK,EACDjkC,KAAKikC,KAAKjkC,KAAKwhC,UACf,MACJ,KAAK,EACD,KAA0C,IAAlC2C,EAA2B,EAAhBnkC,KAAKwhC,WACpBxhC,KAAKkkC,SAASC,GAElB,MACJ,KAAK,EACDnkC,KAAKikC,KAAK,GACV,MAGJ,QACI,MAAMxgC,MAAM,qBAAuB0gC,EAAW,cAAgBnkC,KAAKihC,KAE3E,OAAOjhC,MAGXijC,EAAO3zB,WAAa,SAAS80B,GACzBlB,EAAekB,EACfnB,EAAOvkC,OAASA,IAChBwkC,EAAa5zB,aAEb,IAAIgxB,EAAK91B,EAAK+C,KAAO,SAAsC,WAC3D/C,EAAKC,MAAMw4B,EAAOjkC,UAAW,CAEzB6iC,MAAO,WACH,OAAO4B,EAAelmC,KAAKyC,MAAMsgC,IAAI,IAGzCsB,OAAQ,WACJ,OAAO6B,EAAelmC,KAAKyC,MAAMsgC,IAAI,IAGzCwB,OAAQ,WACJ,OAAO2B,EAAelmC,KAAKyC,MAAMqkC,WAAW/D,IAAI,IAGpD6B,QAAS,WACL,OAAOyB,EAAYrmC,KAAKyC,MAAMsgC,IAAI,IAGtC8B,SAAU,WACN,OAAOwB,EAAYrmC,KAAKyC,MAAMsgC,IAAI,Q,qMCjZ9C,aAEA,QAsHA,2CA+BI,YACInQ,GA/BI,KAAAmU,wBAAkC,EAClC,KAAAC,wBAAkC,EAClC,KAAAC,uBAAiC,EACjC,KAAAC,0BAAoC,EAE3B,KAAAC,kBAAoB,IAAItjC,MACxB,KAAAujC,iBAAmB,IAAIvjC,MACvB,KAAAwjC,kBAAoB,IAAIxjC,MACxB,KAAAyjC,gBAAkB,IAAIzjC,MACtB,KAAA0jC,iBAAmB,IAAI1jC,MACvB,KAAA2jC,gBAAkB,IAAI3jC,MACtB,KAAA4jC,oBAAsB,IAAI5jC,MAC1B,KAAA6jC,mBAAqB,IAAI7jC,MAElC,KAAA8jC,iBAA6B,GAC7B,KAAAC,gBAA4B,GAkB5BhV,IACAnwB,KAAKskC,4BACgCtiC,IAAjCmuB,EAAQiV,sBAAqCjV,EAAQiV,qBACzDplC,KAAKukC,4BACgCviC,IAAjCmuB,EAAQkV,sBAAqClV,EAAQkV,qBACzDrlC,KAAKwkC,2BAC+BxiC,IAAhCmuB,EAAQmV,qBAAoCnV,EAAQmV,oBACxDtlC,KAAKykC,8BACkCziC,IAAnCmuB,EAAQoV,wBACFpV,EAAQoV,wBAW1B,aACItX,EACAva,EAAQ,EAAAJ,gBAAgBC,YAAYK,MACpC4xB,EAAmB,EACnBC,EAAmB57B,KAEnB7J,KAAK0kC,kBAAkBx+B,KAAK,CACxBvI,KAAM,CAAEU,MAAO4vB,EAAOva,SACtB8xB,WACAC,aAUR,YACIxX,EACAva,EAAQ,EAAAJ,gBAAgBC,YAAYK,MACpC4xB,EAAmB,EACnBC,EAAmB57B,KAEnB7J,KAAK2kC,iBAAiBz+B,KAAK,CACvBvI,KAAM,CAAEU,MAAO4vB,EAAOva,SACtB8xB,WACAC,aASR,aAAatV,GACTnwB,KAAK0lC,QAAQ1lC,KAAK4kC,kBAAmBzU,GAQzC,cAAcA,GACVnwB,KAAK2lC,SAAS3lC,KAAK4kC,kBAAmBzU,GAQ1C,YAAYA,GACRnwB,KAAK0lC,QAAQ1lC,KAAK6kC,gBAAiB1U,GAQvC,aAAaA,GACTnwB,KAAK2lC,SAAS3lC,KAAK6kC,gBAAiB1U,GAQxC,YAAYA,GACRnwB,KAAK0lC,QAAQ1lC,KAAK8kC,iBAAkB3U,GAQxC,aAAaA,GACTnwB,KAAK2lC,SAAS3lC,KAAK8kC,iBAAkB3U,GAQzC,WAAWA,GACPnwB,KAAK0lC,QAAQ1lC,KAAK+kC,gBAAiB5U,GAQvC,YAAYA,GACRnwB,KAAK2lC,SAAS3lC,KAAK+kC,gBAAiB5U,GAQxC,eAAeA,GACXnwB,KAAK0lC,QAAQ1lC,KAAKglC,oBAAqB7U,GAQ3C,gBAAgBA,GACZnwB,KAAK2lC,SAAS3lC,KAAKglC,oBAAqB7U,GAQ5C,cAAcA,GACVnwB,KAAK0lC,QAAQ1lC,KAAKilC,mBAAoB9U,GAQ1C,eAAeA,GACXnwB,KAAK2lC,SAAS3lC,KAAKilC,mBAAoB9U,GAQ3C,aAAayV,GACT5lC,KAAKklC,iBAAmBllC,KAAKklC,iBAAiBW,OAAOD,GAQzD,YAAYE,GACR9lC,KAAKmlC,gBAAkBnlC,KAAKmlC,gBAAgBU,OAAOC,GAMvD,oBACI,MAAO,CACHV,qBAAsBplC,KAAKskC,uBAC3Be,qBAAsBrlC,KAAKukC,uBAC3Be,oBAAqBtlC,KAAKwkC,sBAC1Be,uBAAwBvlC,KAAKykC,yBAE7BsB,gBAAiB/lC,KAAK0kC,kBACtBsB,eAAgBhmC,KAAK2kC,iBACrBsB,gBAAiBjmC,KAAK4kC,kBACtBsB,eAAgBlmC,KAAK6kC,gBACrBsB,eAAgBnmC,KAAK8kC,iBACrBsB,cAAepmC,KAAK+kC,gBACpBsB,kBAAmBrmC,KAAKglC,oBACxBsB,iBAAkBtmC,KAAKilC,mBAEvBsB,eAAgBvmC,KAAKklC,iBACrBsB,cAAexmC,KAAKmlC,iBAIpB,QACJsB,EACAtW,SAEyBnuB,IAArBmuB,EAAQqV,UAA0Bt8B,MAAMinB,EAAQqV,aAChDrV,EAAQqV,SAAW,SAEExjC,IAArBmuB,EAAQsV,UAA0Bv8B,MAAMinB,EAAQsV,aAChDtV,EAAQsV,SAAW57B,KAGvB,MAAM68B,EAA6B,CAC/BC,UAAW,CACPtoC,MAAO8xB,EAAQlC,MACfva,WAC2B1R,IAAvBmuB,EAAQyW,WACF,EAAAtzB,gBAAgBC,YAAYK,MAC5Buc,EAAQyW,YAEtBC,mBACyB7kC,IAArBmuB,EAAQ2W,SACF1lC,MAAMC,QAAQ8uB,EAAQ2W,UAClB3W,EAAQ2W,SACR,CAAC3W,EAAQ2W,eACb9kC,EACV+kC,QAAS,CACL,CACI1oC,MAAO8xB,EAAQ6W,aACftzB,WAC2B1R,IAAvBmuB,EAAQ8W,WACF,EAAA3zB,gBAAgBC,YAAYK,MAC5Buc,EAAQ8W,aAG1BzB,SAAUrV,EAAQqV,SAClBC,SAAUtV,EAAQsV,SAClByB,iBAAkB/W,EAAQ+W,kBAG9BT,EAAMvgC,KAAKwgC,GAGP,SACJD,EACAtW,SAEyBnuB,IAArBmuB,EAAQqV,UAA0Bt8B,MAAMinB,EAAQqV,aAChDrV,EAAQqV,SAAW,SAEExjC,IAArBmuB,EAAQsV,UAA0Bv8B,MAAMinB,EAAQsV,aAChDtV,EAAQsV,SAAW57B,KAGvB,MAAM68B,EAA6B,CAC/BC,UAAW,CACPtoC,MAAO8xB,EAAQlC,MACfva,WAC2B1R,IAAvBmuB,EAAQyW,WACF,EAAAtzB,gBAAgBC,YAAYK,MAC5Buc,EAAQyW,YAEtBC,mBAC0B7kC,IAAtBmuB,EAAQgX,UACF/lC,MAAMC,QAAQ8uB,EAAQgX,WAClBhX,EAAQgX,UACR,CAAChX,EAAQgX,gBACbnlC,EACV+kC,QAAS5W,EAAQiX,eACjB5B,SAAUrV,EAAQqV,SAClBC,SAAUtV,EAAQsV,SAClByB,iBAAkB/W,EAAQ+W,kBAG9BT,EAAMvgC,KAAKwgC,KAiHnB,MAAahW,EAqBT,YAAoB2W,GAAA,KAAAA,cACZrnC,KAAKqnC,YAAYd,eAAejlC,OAAS,IACzCtB,KAAK4lC,aAAe,IAAI,EAAA3S,gBACpBjzB,KAAKqnC,YAAYd,iBAGrBvmC,KAAKqnC,YAAYb,cAAcllC,OAAS,IACxCtB,KAAK8lC,cAAgB,IAAI,EAAA7S,gBACrBjzB,KAAKqnC,YAAYb,gBA5BrB,kBACJvY,EACAqZ,EACAx0B,GAEA,IAAK,MAAMy0B,KAAaD,EACpB,KAAIx0B,EAAQy0B,EAAU/B,UAAY1yB,EAAQy0B,EAAU9B,WAIhD,EAAAnyB,gBAAgBE,YAAYya,EAAOsZ,EAAU5pC,MAC7C,OAAO,EAGf,OAAO,EAmBX,WAAWswB,EAAenb,GACtB,QAAI4d,EAAwBkW,WAAW3Y,EAAOjuB,KAAKqnC,YAAYtB,gBAAiBjzB,KAI5E4d,EAAwBkW,WAAW3Y,EAAOjuB,KAAKqnC,YAAYrB,eAAgBlzB,IAIxE9S,KAAKqnC,YAAYjC,qBAG5B,kBAAkBnX,EAAeuZ,EAA+B10B,GAC5D,OAAO9S,KAAKynC,aACRznC,KAAKqnC,YAAYpB,gBACjBjmC,KAAKqnC,YAAYnB,eACjBjY,EACAuZ,EACA10B,EACA9S,KAAKqnC,YAAYhC,sBAIzB,iBAAiBpX,EAAeuZ,EAA+B10B,GAC3D,OAAO9S,KAAKynC,aACRznC,KAAKqnC,YAAYlB,eACjBnmC,KAAKqnC,YAAYjB,cACjBnY,EACAuZ,EACA10B,EACA9S,KAAKqnC,YAAY/B,qBAIzB,oBAAoBrX,EAAeuZ,EAA+B10B,GAC9D,OAAO9S,KAAKynC,aACRznC,KAAKqnC,YAAYhB,kBACjBrmC,KAAKqnC,YAAYf,iBACjBrY,EACAuZ,EACA10B,EACA9S,KAAKqnC,YAAY9B,wBAIzB,UAAUpjB,GAEN,YAAangB,IAATmgB,WAM2BngB,IAAvBhC,KAAK8lC,eACL9lC,KAAK8lC,cAAc4B,gBAAgBvlB,UAEhBngB,IAAtBhC,KAAK4lC,cACF5lC,KAAK4lC,aAAa8B,gBAAgBvlB,IAI9C,oBACI,YAA6BngB,IAAtBhC,KAAK4lC,mBAAqD5jC,IAAvBhC,KAAK8lC,cAG3C,aACJ6B,EACAC,EACA3Z,EACAuZ,EACA10B,EACA+0B,GAEA,IAAK,MAAMnB,KAAQiB,EACf,KAAI70B,EAAQ4zB,EAAKlB,UAAY1yB,EAAQ4zB,EAAKjB,WAIrC,EAAAnyB,gBAAgBE,YAAYya,EAAOyY,EAAKC,iBAKlB3kC,IAAvB0kC,EAAKG,eAA+BH,EAAKG,cAAc5yB,QAAQuzB,IAAiB,EAChF,OAAO,EAIf,IAAK,MAAMd,KAAQkB,EACf,GAAK,EAAAt0B,gBAAgBE,YAAYya,EAAOyY,EAAKC,iBAKlB3kC,IAAvB0kC,EAAKG,eAA+BH,EAAKG,cAAc5yB,QAAQuzB,IAAiB,EAChF,OAAO,EAIf,OAAOK,GArIf,4BA6IA,2BACI,YAAqBC,GAAA,KAAAA,UAErB,oBACI,OAAO9nC,KAAK8nC,QAAQrxB,OAChB,CAACtQ,EAAQkpB,IAAWlpB,GAAUkpB,EAAOD,eACrC,GAIR,WAAWnB,EAAenb,GACtB,OAAO9S,KAAK8nC,QAAQrxB,OAChB,CAACtQ,EAAQkpB,IAAWlpB,GAAUkpB,EAAO0Y,WAAW9Z,EAAOnb,IACvD,GAGR,kBAAkBmb,EAAeuZ,EAA+B10B,GAC5D,OAAO9S,KAAK8nC,QAAQrxB,OAChB,CAACtQ,EAAQkpB,IAAWlpB,GAAUkpB,EAAO2Y,kBAAkB/Z,EAAOuZ,EAAc10B,IAC5E,GAGR,iBAAiBmb,EAAeuZ,EAA+B10B,GAC3D,OAAO9S,KAAK8nC,QAAQrxB,OAChB,CAACtQ,EAAQkpB,IAAWlpB,GAAUkpB,EAAO4Y,iBAAiBha,EAAOuZ,EAAc10B,IAC3E,GAGR,oBAAoBmb,EAAeuZ,EAA+B10B,GAC9D,OAAO9S,KAAK8nC,QAAQrxB,OAChB,CAACtQ,EAAQkpB,IAAWlpB,GAAUkpB,EAAO6Y,oBAAoBja,EAAOuZ,EAAc10B,IAC9E,GAGR,UAAUqP,GACN,OAAOniB,KAAK8nC,QAAQrxB,OAChB,CAACtQ,EAAQkpB,IAAWlpB,GAAUkpB,EAAOC,UAAUnN,IAC/C,KAUZ,MAAaoP,EAmCT,YAAoB8V,GAAA,KAAAA,cAlCpB,kBACIV,EACAK,EACAP,GAEA,IAAK,MAAMC,KAAQD,EACf,QAAqBzkC,IAAjB0kC,EAAKK,QAAuB,CAC5B,IAAK,EAAAzzB,gBAAgBE,YAAYmzB,EAAWD,EAAKC,WAC7C,SAEJ,IAAK,MAAMM,KAAcP,EAAKK,QAC1B,GAAI,EAAAzzB,gBAAgBE,YAAYwzB,EAAcC,GAC1C,OAAO,EAKvB,OAAO,EAGX,sBAAsBN,EAAmBvkC,EAAaqkC,GAClD,IAAK,MAAMC,KAAQD,EACf,QAA8BzkC,IAA1B0kC,EAAKQ,kBAED,EAAA5zB,gBAAgBE,YAAYmzB,EAAWD,EAAKC,YAC5CvkC,EAAIuO,OAAO+1B,EAAKQ,iBAAiBvoC,OAAS+nC,EAAKQ,iBAAiB7oC,MAEhE,OAAO,EAInB,OAAO,EAKX,sBAAsB4vB,EAAe7rB,GACjC,OAAOpC,KAAKmoC,iBACRnoC,KAAKqnC,YAAYpB,gBACjBjmC,KAAKqnC,YAAYnB,eACjBjY,EACA7rB,EACApC,KAAKqnC,YAAYhC,sBAIzB,qBAAqBpX,EAAe7rB,GAChC,OAAOpC,KAAKmoC,iBACRnoC,KAAKqnC,YAAYlB,eACjBnmC,KAAKqnC,YAAYjB,cACjBnY,EACA7rB,EACApC,KAAKqnC,YAAY/B,qBAIzB,wBAAwBrX,EAAe7rB,GACnC,OAAOpC,KAAKmoC,iBACRnoC,KAAKqnC,YAAYhB,kBACjBrmC,KAAKqnC,YAAYf,iBACjBrY,EACA7rB,EACApC,KAAKqnC,YAAY9B,wBAIf,iBACNoC,EACAC,EACA3Z,EACA7rB,EACAylC,GAEA,QAAc7lC,IAAVisB,GAAkD,IAA1B0Z,EAAermC,QAAyC,IAAzBsmC,EAActmC,OACrE,OAAOumC,EAGX,IAAIb,EACJ,MAAMoB,EAAoBhmC,EAAIuO,OAAO,SAMrC,OAJIy3B,UACApB,EAAeoB,EAAkBh9B,eAIjC47B,IACAzV,EAA0B8W,WAAWpa,EAAO+Y,EAAcW,OAM1DX,IACAzV,EAA0B8W,WAAWpa,EAAO+Y,EAAcY,QAK1DrW,EAA0B+W,eAAera,EAAO7rB,EAAKulC,KAIrDpW,EAA0B+W,eAAera,EAAO7rB,EAAKwlC,IAIlDC,IA3Gf,+B,2GCztBA,aAEMU,EAAa,IAAI,EAAA5iC,QACjB6iC,EAAa,IAAI,EAAA7iC,QACjB8iC,EAAa,IAAI,EAAA9iC,QAKvB,4BAII,eAaA,OAAOuoB,GACH,MAAMwa,EAAexa,EAASya,aAAa,YACrC/4B,EAAWxO,MAAM6I,KAAKy+B,EAAaE,OAEnCC,EAAS3a,EAASya,aAAa,MAC/BG,OAAgB9mC,IAAX6mC,EAAuBznC,MAAM6I,KAAK4+B,EAAOD,YAAS5mC,EAEvD+mC,EAAW7a,EAASya,aAAa,QACjCK,OAAoBhnC,IAAb+mC,EAAyB3nC,MAAM6I,KAAK8+B,EAASH,YAAS5mC,EAE7DinC,EAAW/a,EAASya,aAAa,QACjCO,OAAoBlnC,IAAbinC,EAAyB7nC,MAAM6I,KAAKg/B,EAASL,YAAS5mC,EAE7DmnC,EAAYjb,EAASkb,WACrBC,EAAUjoC,MAAM6I,KAAKk/B,EAAUP,OAI/B1mC,EAAQ,IAAIC,IAKlB,SAASmnC,EAAalsC,EAAWmsC,GAE7B,MAAM5qC,EAAM,GAAG0K,KAAKO,IAAIxM,EAAGmsC,MAAMlgC,KAAKS,IAAI1M,EAAGmsC,KAEvC10B,EAAI3S,EAAMjE,IAAIU,GAEpB,QAAUqD,IAAN6S,EAEA,OAAOA,EAIX0zB,EAAWvhC,IAAI4I,EAAa,EAAJxS,GAAQwS,EAAa,EAAJxS,EAAQ,GAAIwS,EAAa,EAAJxS,EAAQ,IACtEorC,EAAWxhC,IAAI4I,EAAa,EAAJ25B,GAAQ35B,EAAa,EAAJ25B,EAAQ,GAAI35B,EAAa,EAAJ25B,EAAQ,IACtEd,EAAWe,YAAYjB,EAAYC,EAAY,IAG/C,MAAMjL,EAAQ3tB,EAAStO,OAAS,EAuChC,OAtCAsO,EAAS1J,QAAQuiC,EAAWgB,WAE5BvnC,EAAM8E,IAAIrI,EAAK4+B,QAGJv7B,IAAP8mC,IACAP,EAAWvhC,IAAI8hC,EAAO,EAAJ1rC,GAAQ0rC,EAAO,EAAJ1rC,EAAQ,GAAI,GACzCorC,EAAWxhC,IAAI8hC,EAAO,EAAJS,GAAQT,EAAO,EAAJS,EAAQ,GAAI,GACzCd,EAAWe,YAAYjB,EAAYC,EAAY,IAC/CM,EAAG5iC,KAAKuiC,EAAWhjC,EAAGgjC,EAAW/iC,SAMxB1D,IAATgnC,IACIA,EAAK5rC,KAAOmsC,GACZP,EAAK9iC,KAAKqjC,GACVP,EAAK5rC,GAAKmgC,GACHyL,EAAKO,KAAOnsC,GACnB4rC,EAAK9iC,KAAK9I,GACV4rC,EAAKO,GAAKhM,GAEVyL,EAAK9iC,MAAM,SAGNlE,IAATknC,IACIA,EAAK9rC,KAAOmsC,GACZL,EAAKhjC,KAAKqjC,GACVL,EAAK9rC,GAAKmgC,GACH2L,EAAKK,KAAOnsC,GACnB8rC,EAAKhjC,KAAK9I,GACV8rC,EAAKK,GAAKhM,GAEV2L,EAAKhjC,MAAM,IAIZq3B,EAGX,MAAMmM,EAAa,GACnB,KAAOL,EAAQ/nC,QAAU,GAAG,CACxB,MAAMqoC,EAAKN,EAAQO,QACbC,EAAKR,EAAQO,QACbE,EAAKT,EAAQO,QAQnB,OANArB,EAAWvhC,IAAI4I,EAAc,EAAL+5B,GAAS/5B,EAAc,EAAL+5B,EAAS,GAAI/5B,EAAc,EAAL+5B,EAAS,IACzEnB,EAAWxhC,IAAI4I,EAAc,EAALi6B,GAASj6B,EAAc,EAALi6B,EAAS,GAAIj6B,EAAc,EAALi6B,EAAS,IACzEpB,EAAWzhC,IAAI4I,EAAc,EAALk6B,GAASl6B,EAAc,EAALk6B,EAAS,GAAIl6B,EAAc,EAALk6B,EAAS,IAErD9pC,KAAK+pC,oBAAoBxB,EAAYC,EAAYC,IAGjE,KAAK,EAAG,CACJ,MAAMuB,EAAKV,EAAaK,EAAIE,GAC5BR,EAAQnjC,KAAKyjC,EAAIK,EAAIF,EAAIE,EAAIH,EAAIC,GACjC,MAGJ,KAAK,EAAG,CACJ,MAAME,EAAKV,EAAaO,EAAIC,GAC5BT,EAAQnjC,KAAKyjC,EAAIE,EAAIG,EAAIL,EAAIK,EAAIF,GACjC,MAGJ,KAAK,EAAG,CACJ,MAAME,EAAKV,EAAaQ,EAAIH,GAC5BN,EAAQnjC,KAAKyjC,EAAIE,EAAIG,EAAIA,EAAIH,EAAIC,GACjC,MAGJ,UAAK9nC,EACD0nC,EAAWxjC,KAAKyjC,EAAIE,EAAIC,GACxB,MAGJ,QACI,MAAM,IAAIrmC,MAAM,2CAsB5B,OAlBAilC,EAAaE,MAAQ,IAAI1U,aAAatkB,GACtC84B,EAAauB,MAAQr6B,EAAStO,OAASonC,EAAawB,SACpDxB,EAAayB,aAAc,EAE3Bjc,EAASkc,SAASV,QAEP1nC,IAAP8mC,IACAD,EAAOD,MAAQ,IAAI1U,aAAa4U,GAChCD,EAAOoB,MAAQnB,EAAGxnC,OAASunC,EAAOqB,SAClCrB,EAAOsB,aAAc,QAGZnoC,IAATgnC,IACAD,EAASH,MAAQ,IAAI1U,aAAa8U,GAClCD,EAASkB,MAAQjB,EAAK1nC,OAASynC,EAASmB,SACxCnB,EAASoB,aAAc,GAGpBjc,K,8ECnKfpiB,KAAKu+B,cAAc,gBAEnB,MAEA7Y,sBAAsBO,S,iYCRtB,WACA,YACA,Y,iYCFA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,Y,+HCEA,MAAauY,EACT,YAAqBjnB,EAAyBknB,EAAgB,IAAInpC,OAA7C,KAAAiiB,WAAyB,KAAAknB,WAO9C,QACI,OAAO,IAAID,EAAqBtqC,KAAKqjB,SAAUrjB,KAAKuqC,SAASjkC,SAQjE,OAAOkkC,GACH,MAAMC,EAAazqC,KAAKuqC,SAASt2B,QAAQu2B,GACzC,OAAoB,IAAhBC,IAGJzqC,KAAKuqC,SAASG,OAAOD,EAAY,IAC1B,IAvBf,sBAoCA,MAAaE,EAAb,cACa,KAAAC,OAAkC,IAAIzoC,IAM/C,IAAIqoC,GACAxqC,KAAK6qC,SAASL,EAAQnnB,UAAUknB,SAASrkC,KAAKskC,GAYlD,OAAOA,GACH,MAAMM,EAAQ9qC,KAAK+qC,UAAUP,EAAQnnB,UACrC,aAAcrhB,IAAV8oC,IAAuBA,EAAME,OAAOR,MACN,IAA1BM,EAAMP,SAASjpC,QACftB,KAAK4qC,OAAO7jC,OAAO+jC,EAAMznB,WAGtB,GAQf,QACIrjB,KAAK4qC,OAAOK,QAQhB,MAAM3hC,GACF,IAAK,MAAM4hC,KAAc5hC,EAAMshC,OAAQ,CACnC,MAAME,EAAQ9qC,KAAK+qC,UAAUG,EAAW,GAAG7nB,eAC7BrhB,IAAV8oC,EAIJA,EAAMP,SAAWO,EAAMP,SAAS1E,OAAOqF,EAAW,GAAGX,UAHjDvqC,KAAK4qC,OAAO5jC,IAAIqC,KAAKoD,MAAMy+B,EAAW,GAAG7nB,UAAW6nB,EAAW,GAAGC,SAK1E,OAAOnrC,KAGX,QACI,MAAMmrC,EAAQ,IAAIR,EAClB,IAAK,MAAOtnB,EAAUynB,KAAU9qC,KAAK4qC,OACjCO,EAAMP,OAAO5jC,IAAIqc,EAAUynB,EAAMK,SAErC,OAAOA,EAQX,QAAQC,GACJ,IAAK,MAAMN,KAAS9qC,KAAK4qC,OACrBE,EAAM,GAAGP,SAASlqC,QAAQ+qC,GAOlC,QACI,IAAIvsC,EAAI,EACR,IAAK,MAAMisC,KAAS9qC,KAAK4qC,OACrB/rC,GAAKisC,EAAM,GAAGP,SAASjpC,OAE3B,OAAOzC,EAQH,UAAUwkB,GACd,MAAMgoB,EAAqBhiC,KAAKoD,MAAM4W,GAEtC,OADcrjB,KAAK4qC,OAAO3sC,IAAIotC,GAS1B,SAAShoB,GACb,IAAIynB,EAAQ9qC,KAAK+qC,UAAU1nB,GAE3B,QAAcrhB,IAAV8oC,EAAqB,CACrB,MAAMO,EAAqBhiC,KAAKoD,MAAM4W,GACtCynB,EAAQ,IAAIR,EAAqBe,GACjCrrC,KAAK4qC,OAAO5jC,IAAI8jC,EAAMznB,SAAUynB,GAGpC,OAAOA,GA/Gf,yB,iYCrDA,WACA,WACA,WACA,WACA,WACA,WACA,Y,oLCLA,cAiBA,sBAGI,sBACI,OAAO9qC,KAAKsrC,aAAetrC,KAAKsrC,WAAa,IAAI,EAAAC,sB,yGCtBzD,cAIA,QACA,QAOA,0BAKI,cAHiB,KAAAC,UAAuB,GAIpCxrC,KAAKyrC,QACe,oBAAT3/B,WAAiD,IAAlBA,KAAK4/B,SACrC,IAAI,EAAAC,eACJ,IAAI,EAAAC,cAGlB,iBACI,OAAO5rC,KAAKwrC,UAAUzlC,IAAIwW,GAAUA,EAAO5e,MAG/C,UAAUA,GACN,OAAOqC,KAAKwrC,UAAUr0B,KAAKoF,GAAUA,EAAO5e,OAASA,GAGzD,OAAOkuC,EAAoB1b,EAAyB,SAElBnuB,IAA1BhC,KAAK8rC,wBACc9pC,IAAlBmuB,EAAQrd,OAAuBqd,EAAQrd,MAAQ9S,KAAK8rC,oBAErD3b,EAAQrd,MAAQ9S,KAAK8rC,kBAEzB,MAAMvvB,EAAS,IAAI,EAAAwvB,OAAOF,EAAY7rC,KAAKyrC,QAAStb,GAEpD,OADAnwB,KAAKwrC,UAAUtlC,KAAKqW,GACbA,EAGX,QAAQA,GACJ,MAAMyvB,EAAQhsC,KAAKwrC,UAAUv3B,QAAQsI,GACrC,GAAIyvB,EAAQ,EACR,MAAM,IAAIvoC,MAAM,sBAAsB8Y,mCAE1Cvc,KAAKwrC,UAAUd,OAAOsB,EAAO,GAGjC,UAAU7b,GACN,IAAK,MAAM5T,KAAUvc,KAAKwrC,UACtBjvB,EAAOiW,OAAOrC,GAItB,OAAO0b,EAAoBI,GACvB,IAAK,MAAM1vB,KAAUvc,KAAKwrC,UAClBjvB,EAAO5e,OAASkuC,GAChBtvB,EAAOiW,OAAOyZ,GAK1B,UAAUxvB,GACN,IAAK,MAAMF,KAAUvc,KAAKwrC,UACtBjvB,EAAOE,QAAUA,EAIzB,OAAOovB,EAAoBxtC,GACvB2B,KAAKwyB,OAAOqZ,EAAY,CAAEpvB,QAASpe,IAGvC,kBAAkByU,GACd9S,KAAK8rC,iBAAmBh5B,EACxB,IAAK,MAAMyJ,KAAUvc,KAAKwrC,UACtBjvB,EAAOzJ,MAAQA,EAIvB,YAAY+4B,EAAoB/4B,GAC5B9S,KAAKwyB,OAAOqZ,EAAY,CAAE/4B,UAG9B,WAAW24B,GACPzrC,KAAKyrC,QAAUA,K,oGCnFvB,qBAEI,eAAeS,GADE,KAAAA,SAAuB,GAEpClsC,KAAKksC,SAAWA,EAGpB,MAAMlhC,KAAkBinB,GACpB,IAAK,MAAMwZ,KAAWzrC,KAAKksC,SACvBT,EAAQ5tB,MAAM7S,KAAYinB,GAIlC,MAAMjnB,KAAkBinB,GACpB,IAAK,MAAMwZ,KAAWzrC,KAAKksC,SACvBT,EAAQtZ,MAAMnnB,KAAYinB,GAIlC,KAAKjnB,KAAkBinB,GACnB,IAAK,MAAMwZ,KAAWzrC,KAAKksC,SACvBT,EAAQrZ,KAAKpnB,KAAYinB,GAIjC,IAAIjnB,KAAkBinB,GAClB,IAAK,MAAMwZ,KAAWzrC,KAAKksC,SACvBT,EAAQpzB,IAAIrN,KAAYinB,GAIhC,MAAMjnB,KAAkBinB,GACpB,IAAK,MAAMwZ,KAAWzrC,KAAKksC,SACvBT,EAAQpZ,MAAMrnB,KAAYinB,GAIlC,KAAKjnB,KAAkBinB,GACnB,IAAK,MAAMwZ,KAAWzrC,KAAKksC,SACvBT,EAAQzZ,KAAKhnB,KAAYinB,M,8FC3CrC,SAAiBka,GA4Fb,SAAgBC,EAAYC,EAAYC,EAAYC,EAAYC,GAC5D,OAAQH,EAAKE,IAAOF,EAAKE,IAAOD,EAAKE,IAAOF,EAAKE,GAxFxC,EAAAC,IAAb,MAUI,YAAmBhnC,EAAI,EAAUC,EAAI,EAAUI,EAAI,EAAU+O,EAAI,GAA9C,KAAApP,IAAc,KAAAC,IAAc,KAAAI,IAAc,KAAA+O,IAU7D,IAAIpP,EAAWC,EAAWI,EAAW+O,GACjC7U,KAAKyF,EAAIA,EACTzF,KAAK0F,EAAIA,EACT1F,KAAK8F,EAAIA,EACT9F,KAAK6U,EAAIA,EASb,SAASpP,EAAWC,GAChB,OAAO1F,KAAKyF,GAAKA,GAAKzF,KAAKyF,EAAIzF,KAAK8F,GAAKL,GAAKzF,KAAK0F,GAAKA,GAAK1F,KAAK0F,EAAI1F,KAAK6U,GAAKnP,EAQpF,YAAY4D,GACR,MAAMojC,EAAOpjC,EAAM7D,EAAI6D,EAAMxD,EACvB6mC,EAAOrjC,EAAM5D,EAAI4D,EAAMuL,EAC7B,OACI7U,KAAK4sC,SAAStjC,EAAM7D,EAAG6D,EAAM5D,IAC7B1F,KAAK4sC,SAASF,EAAMpjC,EAAM5D,IAC1B1F,KAAK4sC,SAAStjC,EAAM7D,EAAGknC,IACvB3sC,KAAK4sC,SAASF,EAAMC,GAS5B,WAAWrjC,GACP,OACItJ,KAAKyF,GAAK6D,EAAM7D,EAAI6D,EAAMxD,GAC1B9F,KAAKyF,EAAIzF,KAAK8F,GAAKwD,EAAM7D,GACzBzF,KAAK0F,GAAK4D,EAAM5D,EAAI4D,EAAMuL,GAC1B7U,KAAK0F,EAAI1F,KAAK6U,GAAKvL,EAAM5D,IAwBrB,EAAA0mC,YAAW,EASX,EAAAS,yBAAhB,SAAyCplB,GACrC,IAAIqlB,EAA4B,EAEhC,MAAMxrC,EAASmmB,EAAKnmB,OAAS,EAC7B,IAAK,IAAIlE,EAAI,EAAGA,EAAIkE,EAAQlE,GAAK,EAAG,CAChC,MAAM2vC,EAAQtlB,EAAKrqB,EAAI,GAAKqqB,EAAKrqB,GAC3B4vC,EAAQvlB,EAAKrqB,EAAI,GAAKqqB,EAAKrqB,EAAI,GACrC0vC,GAAqBC,EAAQA,EAAQC,EAAQA,EAEjD,OAAOF,GAcK,EAAAG,qBAAhB,SACIC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAmBpB,EAAYgB,EAAKC,EAAKC,EAAKC,GACpD,GAAyB,IAArBC,EACA,OAAOpB,EAAYc,EAAIC,EAAIC,EAAKC,GAEpC,IAAI/uC,IAAM4uC,EAAKE,IAAQE,EAAMF,IAAQD,EAAKE,IAAQE,EAAMF,IAAQG,EAEhE,OADAlvC,EAAI+K,KAAKS,IAAI,EAAGT,KAAKO,IAAI,EAAGtL,IACrB8tC,EAAYc,EAAIC,EAAIC,EAAM9uC,GAAKgvC,EAAMF,GAAMC,EAAM/uC,GAAKivC,EAAMF,KA1I3E,CAAiB,EAAAlB,SAAA,EAAAA,OAAM,M,iGCAvB,SAAiB7jC,GAUb,SAAgB6B,EAAM9L,EAAeuL,EAAaE,GAC9C,OAAOzL,EAAQuL,EAAMA,EAAMvL,EAAQyL,EAAMA,EAAMzL,EADnC,EAAA8L,MAAK,EAgBL,EAAAsL,KAAhB,SAAqBg4B,EAAeC,EAAeC,GAC/C,OAAOF,GAAS,EAAIE,GAAUD,EAAQC,GAY1B,EAAAC,WAAhB,SAA2BH,EAAeC,EAAejoC,GAIrD,OAFAA,EAAI0E,GAAO1E,EAAIgoC,IAAUC,EAAQD,GAAQ,EAAK,IAEnChoC,GAAK,EAAI,EAAIA,IAgBZ,EAAAooC,aAAhB,SAA6BJ,EAAeC,EAAejoC,GAIvD,OAFAA,EAAI0E,GAAO1E,EAAIgoC,IAAUC,EAAQD,GAAQ,EAAK,IAEnChoC,EAAIA,GAAKA,GAAS,EAAJA,EAAQ,IAAM,KAY3B,EAAAM,IAAhB,SAAoBmS,EAAa41B,EAAeC,EAAeC,EAAgBC,GAC3E,OAAS/1B,EAAM41B,IAAUG,EAASD,IAAYD,EAAQD,GAASE,GAWnD,EAAAE,KAAhB,SAAqB1kC,EAAuBE,GACxC,IAAIvD,EASJ,YAPUnE,IAANwH,IACArD,EAASqD,QAEHxH,IAAN0H,IACAvD,OAAoBnE,IAAXmE,EAAuBuD,EAAIL,KAAKO,IAAIzD,EAAQuD,IAGlDvD,GAWK,EAAAgoC,KAAhB,SAAqB3kC,EAAuBE,GACxC,IAAIvD,EASJ,YAPUnE,IAANwH,IACArD,EAASqD,QAEHxH,IAAN0H,IACAvD,OAAoBnE,IAAXmE,EAAuBuD,EAAIL,KAAKS,IAAI3D,EAAQuD,IAGlDvD,GAcK,EAAAioC,UAAhB,SACI/vC,EACAgwC,EACAC,GAEA,aAAmBtsC,IAAfqsC,GAA4BhwC,EAAQgwC,WAGrBrsC,IAAfssC,GAA4BjwC,EAAQiwC,IAc5B,EAAAC,eAAhB,SAA+BC,EAAoBC,EAAkBC,GAGjE,OAAOF,GAAcC,EAAWD,IAD5BE,EAAO,GAAM,EAAIA,EAAOA,EAAOA,GAAQA,EAAO,IAAM,EAAIA,EAAO,IAAM,EAAIA,EAAO,GAAK,IA5JjG,CAAiB,EAAApmC,YAAA,EAAAA,UAAS,M,kICQ1B,uBAA4BqmC,EAAkBC,GAC1CA,EAAUvuC,QAAQwuC,IACd/wC,OAAOgxC,oBAAoBD,EAAS7vC,WAAWqB,QAAQ1C,IACnDgxC,EAAY3vC,UAAUrB,GAAQkxC,EAAS7vC,UAAUrB,QAa7D,wCAA6CgxC,EAAkBC,GAC3DA,EAAUvuC,QAAQwuC,IACd/wC,OAAOgxC,oBAAoBD,EAAS7vC,WAAWqB,QAAQ1C,IACnD,MAAM2G,EAAaxG,OAAOixC,yBAAyBF,EAAS7vC,UAAWrB,QAEpDqE,IAAfsC,QACmBtC,IAAnBsC,EAAWrG,KACF,gBAATN,IAEAgxC,EAAY3vC,UAAUrB,GAAQkxC,EAAS7vC,UAAUrB,U,6GChBjE,kBAAuBmD,EAAoBkK,GACnC,GAOR,wBAAgCw/B,EAAwBx/B,GAQpD,OAAOw/B,I,oLCEX,sBAOI,YAAqBhM,EAAmCwQ,GAAnC,KAAAxQ,WAAmC,KAAAwQ,gBANvC,KAAA9uC,QAAoB,GAC7B,KAAA+uC,gBAAiB,EAgCzB,KAAAjd,KAAOhyB,KAAKkvC,gBAAgB,QAC5B,KAAA9c,KAAOpyB,KAAKkvC,gBAAgB,QAC5B,KAAArxB,MAAQ7d,KAAKkvC,gBAAgB,SAtB7B,SAASvxC,GACLqC,KAAKE,QAAQgG,KAAK,GAAGlG,KAAKE,QAAQoB,OAAS,EAAI,IAAM,KAAK3D,KAQ9D,UAAU4/B,GACNv9B,KAAKE,QAAQgG,KAAK,IAAIq3B,MAG1B,MACIv9B,KAAKE,QAAQivC,MAWT,gBAAgBC,GACpB,MAAO,CAACpkC,KAAoBqkC,KACnBrvC,KAAKivC,iBACNjvC,KAAKw+B,SAASpM,KAAKpyB,KAAKgvC,eACxBhvC,KAAKivC,gBAAiB,GAE1BjvC,KAAKw+B,SAAS4Q,GAAU,GAAGpvC,KAAKE,QAAQovC,KAAK,QAAQtkC,OAAcqkC,O,wGCzE/E,kBAAazf,EAgBT,aACI,OAAOA,EAAiB2f,UAQpB,oBACJ,MAA2B,oBAAhBC,kBAA0D,IAApBA,YAAY3f,IAClD,IAAM2f,YAAY3f,MAItB,KACI,IAAI4f,MAAOC,WAG9B,OAd4B,EAAAzvC,SAAW,IAAI2vB,EAEf,EAAA2f,QAAwB3f,EAAiB+f,aAYrE,GAnCA,GAAa,EAAA/f,oB,wGCEb,qBAA6BvoB,GACzB,MAAMnF,EAA6B,IAAIC,IA4CjCjE,EA3CN,SAAS0xC,EAAcjlC,GACnB,GAAY,OAARA,EACA,OAAO,KACJ,GAAmB,iBAARA,EAAkB,CAChC,MAAMklC,EAAS3tC,EAAMjE,IAAI0M,GACzB,QAAe3I,IAAX6tC,EACA,OAAOA,EAGX,GAAIzuC,MAAMC,QAAQsJ,GAAM,CACpB,MAAMxE,EAAgB,GACtBjE,EAAM8E,IAAI2D,EAAKxE,GACfA,EAAO7E,OAASqJ,EAAIrJ,OACpB,IAAK,IAAIlE,EAAI,EAAGA,EAAI+I,EAAO7E,SAAUlE,EACjC+I,EAAO/I,GAAKwyC,EAAcjlC,EAAIvN,IAElC,OAAO+I,EACJ,GAAIwE,aAAe8kC,KAAM,CAC5B,MAAMtpC,EAAS,IAAIspC,KAAK9kC,EAAI+kC,WAE5B,OADAxtC,EAAM8E,IAAI2D,EAAKxE,GACRA,EACJ,GAAIwE,aAAegW,OAAQ,CAC9B,MAAMxa,EAAS,IAAIwa,OAAOhW,EAAIg0B,OAAQh0B,EAAImlC,OAE1C,OADA5tC,EAAM8E,IAAI2D,EAAKxE,GACRA,EACJ,GAAIwE,EAAIQ,cAAgBrN,OAC3B,MAAM,IAAI2F,MAAM,4DACb,CACH,MAAM0C,EAAqB,GAC3BjE,EAAM8E,IAAI2D,EAAKxE,GACf,IAAK,MAAMxH,KAAOgM,EACVA,EAAI1L,eAAeN,KACnBwH,EAAOxH,GAAOixC,EAAcjlC,EAAIhM,KAGxC,OAAOwH,GAIX,OAAOwE,EAILilC,CAAcvoC,GAExB,OADAnF,EAAM+oC,QACC/sC,GAQX,gBAA0DY,EAAWixC,GACjE,MAAM5pC,EAAc,GACpB,IAAK,MAAM4uB,KAAYgb,EACfjxC,EAAOG,eAAe81B,KACtB5uB,EAAO4uB,GAAYj2B,EAAOi2B,IAGlC,OAAO5uB,I,yHCzCX,6BAAqCuR,GACjC,IAAK,MAAMs4B,KAAat4B,EACpB,GAAIs4B,QACA,OAAOA,GAyDnB,4BAAmDC,EAAe9f,GAI9D,MAAMhqB,EAAS,iBAAM8pC,GACrB,GAAI9f,QACA,OAAOhqB,EAEX,IAAK,MAAM4G,KAAQkjC,EACf,GAAIA,EAAWhxC,eAAe8N,GAAO,CACjC,MAAMmjC,EAAc/f,EAAQpjB,GACxBmjC,UACA/pC,EAAO4G,GAAQmjC,GAI3B,OAAO/pC,I,wJC1GX,cA4CA,6BACI,YAAqBtE,GAAA,KAAAA,cAErB,WAAWsuC,GACP,OAAOryC,OAAO+M,KAAK7K,KAAK6B,aAAa4U,OAAO,CAACvY,EAAGS,KAC5C,GAAIA,EAAIqV,SAAS,MAAQ9V,EAAE4V,WAAWnV,GAAM,CAExC,OADkBqB,KAAK6B,YAAYlD,GAChBT,EAAEuiB,OAAO9hB,EAAI2C,QAC7B,OAAIpD,IAAMS,EACNqB,KAAK6B,YAAYlD,GAErBT,GACRiyC,KAOX,4BACI,YAAqB/vB,GAAA,KAAAA,YAErB,WAAW+vB,GACP,OAAO,EAAAC,oBAAoBpwC,KAAKogB,UAAW+vB,KAiBnD,kCAAuCE,GACnC,MAAO,CACHC,WAAWC,GACAF,EAAU55B,OAAO,CAACmK,EAAK4vB,SACTxuC,IAAbwuC,EACOA,EAASF,WAAW1vB,GAEpBA,EAEZ2vB,M,sGC1Ff,0BACIE,EACAC,GAEA,OAAO,YAAuBtwC,GAI1B,OAHIqwC,GACAA,EAAGE,MAAM3wC,KAAMI,GAEZswC,EAAGC,MAAM3wC,KAAMI,M,sGCQ9B,0BACIsiB,EACA/Q,EACA4X,EACAqnB,EACAzvC,GAEA,MAAM0vC,EAAYl/B,EAAQ,EACpBm/B,EAAYvnB,EAAS,EAErBwnB,EAASH,EAAIC,EACbG,EAAc3nC,KAAKoD,MAAMskC,GACzBE,EAAS9vC,EAAI2vC,EACbI,EAAc7nC,KAAKoD,MAAMwkC,GACzBE,EAAUD,EAAcv/B,EAAQq/B,EAChCI,EAAUJ,EAAcH,EAAYM,EAAU,EAAIA,EAClDE,EAAUH,EAAcJ,EAAYK,EAAUx/B,EAAQw/B,EACtDG,EAAUN,EAAcH,EAAYQ,EAAU,EAAIA,EAClDE,EAAc7uB,EAAQyuB,GACtBK,EAAc9uB,EAAQ0uB,GACtBK,EAAc/uB,EAAQ2uB,GACtBK,EAAchvB,EAAQ4uB,GAEtBK,EAAQplC,OAAOD,UAAUykC,GAAU,EAAIA,EAASC,EAChDY,EAAe,EAAID,EACnBE,EAAQtlC,OAAOD,UAAU2kC,GAAU,EAAIA,EAASC,EAChDY,EAAe,EAAID,EAQzB,OAJIN,EAAcK,EAAeE,EAC7BN,EAAcG,EAAQG,EACtBL,EAAcG,EAAeC,EAC7BH,EAAcC,EAAQE,I,oLCpD9B,cAUA,2BACI,OAAO,EAAAnxB,QAAQ7U,OAAOkmC,SAAS3U,Q,cCMnC,IAAI4U,EAAiB,CACnB,YAAe,CAAC,EAAE,EAAE,EAAE,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GACpD,aAAgB,CAAC,IAAI,IAAI,IAAI,GAAI,KAAQ,CAAC,EAAE,IAAI,IAAI,GACpD,WAAc,CAAC,IAAI,IAAI,IAAI,GAAI,MAAS,CAAC,IAAI,IAAI,IAAI,GACrD,MAAS,CAAC,IAAI,IAAI,IAAI,GAAI,OAAU,CAAC,IAAI,IAAI,IAAI,GACjD,MAAS,CAAC,EAAE,EAAE,EAAE,GAAI,eAAkB,CAAC,IAAI,IAAI,IAAI,GACnD,KAAQ,CAAC,EAAE,EAAE,IAAI,GAAI,WAAc,CAAC,IAAI,GAAG,IAAI,GAC/C,MAAS,CAAC,IAAI,GAAG,GAAG,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GAClD,UAAa,CAAC,GAAG,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,EAAE,GACtD,UAAa,CAAC,IAAI,IAAI,GAAG,GAAI,MAAS,CAAC,IAAI,IAAI,GAAG,GAClD,eAAkB,CAAC,IAAI,IAAI,IAAI,GAAI,SAAY,CAAC,IAAI,IAAI,IAAI,GAC5D,QAAW,CAAC,IAAI,GAAG,GAAG,GAAI,KAAQ,CAAC,EAAE,IAAI,IAAI,GAC7C,SAAY,CAAC,EAAE,EAAE,IAAI,GAAI,SAAY,CAAC,EAAE,IAAI,IAAI,GAChD,cAAiB,CAAC,IAAI,IAAI,GAAG,GAAI,SAAY,CAAC,IAAI,IAAI,IAAI,GAC1D,UAAa,CAAC,EAAE,IAAI,EAAE,GAAI,SAAY,CAAC,IAAI,IAAI,IAAI,GACnD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,YAAe,CAAC,IAAI,EAAE,IAAI,GACxD,eAAkB,CAAC,GAAG,IAAI,GAAG,GAAI,WAAc,CAAC,IAAI,IAAI,EAAE,GAC1D,WAAc,CAAC,IAAI,GAAG,IAAI,GAAI,QAAW,CAAC,IAAI,EAAE,EAAE,GAClD,WAAc,CAAC,IAAI,IAAI,IAAI,GAAI,aAAgB,CAAC,IAAI,IAAI,IAAI,GAC5D,cAAiB,CAAC,GAAG,GAAG,IAAI,GAAI,cAAiB,CAAC,GAAG,GAAG,GAAG,GAC3D,cAAiB,CAAC,GAAG,GAAG,GAAG,GAAI,cAAiB,CAAC,EAAE,IAAI,IAAI,GAC3D,WAAc,CAAC,IAAI,EAAE,IAAI,GAAI,SAAY,CAAC,IAAI,GAAG,IAAI,GACrD,YAAe,CAAC,EAAE,IAAI,IAAI,GAAI,QAAW,CAAC,IAAI,IAAI,IAAI,GACtD,QAAW,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,GAAG,IAAI,IAAI,GACtD,UAAa,CAAC,IAAI,GAAG,GAAG,GAAI,YAAe,CAAC,IAAI,IAAI,IAAI,GACxD,YAAe,CAAC,GAAG,IAAI,GAAG,GAAI,QAAW,CAAC,IAAI,EAAE,IAAI,GACpD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,IAAI,GACzD,KAAQ,CAAC,IAAI,IAAI,EAAE,GAAI,UAAa,CAAC,IAAI,IAAI,GAAG,GAChD,KAAQ,CAAC,IAAI,IAAI,IAAI,GAAI,MAAS,CAAC,EAAE,IAAI,EAAE,GAC3C,YAAe,CAAC,IAAI,IAAI,GAAG,GAAI,KAAQ,CAAC,IAAI,IAAI,IAAI,GACpD,SAAY,CAAC,IAAI,IAAI,IAAI,GAAI,QAAW,CAAC,IAAI,IAAI,IAAI,GACrD,UAAa,CAAC,IAAI,GAAG,GAAG,GAAI,OAAU,CAAC,GAAG,EAAE,IAAI,GAChD,MAAS,CAAC,IAAI,IAAI,IAAI,GAAI,MAAS,CAAC,IAAI,IAAI,IAAI,GAChD,SAAY,CAAC,IAAI,IAAI,IAAI,GAAI,cAAiB,CAAC,IAAI,IAAI,IAAI,GAC3D,UAAa,CAAC,IAAI,IAAI,EAAE,GAAI,aAAgB,CAAC,IAAI,IAAI,IAAI,GACzD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,IAAI,GACzD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,qBAAwB,CAAC,IAAI,IAAI,IAAI,GACnE,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,IAAI,GACzD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GACxD,YAAe,CAAC,IAAI,IAAI,IAAI,GAAI,cAAiB,CAAC,GAAG,IAAI,IAAI,GAC7D,aAAgB,CAAC,IAAI,IAAI,IAAI,GAAI,eAAkB,CAAC,IAAI,IAAI,IAAI,GAChE,eAAkB,CAAC,IAAI,IAAI,IAAI,GAAI,eAAkB,CAAC,IAAI,IAAI,IAAI,GAClE,YAAe,CAAC,IAAI,IAAI,IAAI,GAAI,KAAQ,CAAC,EAAE,IAAI,EAAE,GACjD,UAAa,CAAC,GAAG,IAAI,GAAG,GAAI,MAAS,CAAC,IAAI,IAAI,IAAI,GAClD,QAAW,CAAC,IAAI,EAAE,IAAI,GAAI,OAAU,CAAC,IAAI,EAAE,EAAE,GAC7C,iBAAoB,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,EAAE,EAAE,IAAI,GAC5D,aAAgB,CAAC,IAAI,GAAG,IAAI,GAAI,aAAgB,CAAC,IAAI,IAAI,IAAI,GAC7D,eAAkB,CAAC,GAAG,IAAI,IAAI,GAAI,gBAAmB,CAAC,IAAI,IAAI,IAAI,GAClE,kBAAqB,CAAC,EAAE,IAAI,IAAI,GAAI,gBAAmB,CAAC,GAAG,IAAI,IAAI,GACnE,gBAAmB,CAAC,IAAI,GAAG,IAAI,GAAI,aAAgB,CAAC,GAAG,GAAG,IAAI,GAC9D,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GACxD,SAAY,CAAC,IAAI,IAAI,IAAI,GAAI,YAAe,CAAC,IAAI,IAAI,IAAI,GACzD,KAAQ,CAAC,EAAE,EAAE,IAAI,GAAI,QAAW,CAAC,IAAI,IAAI,IAAI,GAC7C,MAAS,CAAC,IAAI,IAAI,EAAE,GAAI,UAAa,CAAC,IAAI,IAAI,GAAG,GACjD,OAAU,CAAC,IAAI,IAAI,EAAE,GAAI,UAAa,CAAC,IAAI,GAAG,EAAE,GAChD,OAAU,CAAC,IAAI,IAAI,IAAI,GAAI,cAAiB,CAAC,IAAI,IAAI,IAAI,GACzD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,cAAiB,CAAC,IAAI,IAAI,IAAI,GAC5D,cAAiB,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,IAAI,GAC7D,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,KAAQ,CAAC,IAAI,IAAI,GAAG,GAClD,KAAQ,CAAC,IAAI,IAAI,IAAI,GAAI,KAAQ,CAAC,IAAI,IAAI,IAAI,GAC9C,WAAc,CAAC,IAAI,IAAI,IAAI,GAAI,OAAU,CAAC,IAAI,EAAE,IAAI,GACpD,cAAiB,CAAC,IAAI,GAAG,IAAI,GAC7B,IAAO,CAAC,IAAI,EAAE,EAAE,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GAC9C,UAAa,CAAC,GAAG,IAAI,IAAI,GAAI,YAAe,CAAC,IAAI,GAAG,GAAG,GACvD,OAAU,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,GAAG,GACrD,SAAY,CAAC,GAAG,IAAI,GAAG,GAAI,SAAY,CAAC,IAAI,IAAI,IAAI,GACpD,OAAU,CAAC,IAAI,GAAG,GAAG,GAAI,OAAU,CAAC,IAAI,IAAI,IAAI,GAChD,QAAW,CAAC,IAAI,IAAI,IAAI,GAAI,UAAa,CAAC,IAAI,GAAG,IAAI,GACrD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GACxD,KAAQ,CAAC,IAAI,IAAI,IAAI,GAAI,YAAe,CAAC,EAAE,IAAI,IAAI,GACnD,UAAa,CAAC,GAAG,IAAI,IAAI,GAAI,IAAO,CAAC,IAAI,IAAI,IAAI,GACjD,KAAQ,CAAC,EAAE,IAAI,IAAI,GAAI,QAAW,CAAC,IAAI,IAAI,IAAI,GAC/C,OAAU,CAAC,IAAI,GAAG,GAAG,GAAI,UAAa,CAAC,GAAG,IAAI,IAAI,GAClD,OAAU,CAAC,IAAI,IAAI,IAAI,GAAI,MAAS,CAAC,IAAI,IAAI,IAAI,GACjD,MAAS,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,IAAI,GACrD,OAAU,CAAC,IAAI,IAAI,EAAE,GAAI,YAAe,CAAC,IAAI,IAAI,GAAG,IAEtD,SAASC,EAAe70C,GAEtB,OADAA,EAAIiM,KAAKmW,MAAMpiB,IACJ,EAAI,EAAIA,EAAI,IAAM,IAAMA,EAGrC,SAAS80C,EAAgBC,GACvB,OAAOA,EAAI,EAAI,EAAIA,EAAI,EAAI,EAAIA,EAGjC,SAASC,EAAc3jC,GACrB,MAA4B,MAAxBA,EAAIA,EAAInN,OAAS,GACZ2wC,EAAeI,WAAW5jC,GAAO,IAAM,KACzCwjC,EAAe37B,SAAS7H,IAGjC,SAAS6jC,EAAgB7jC,GACvB,MAA4B,MAAxBA,EAAIA,EAAInN,OAAS,GACZ4wC,EAAgBG,WAAW5jC,GAAO,KACpCyjC,EAAgBG,WAAW5jC,IAGpC,SAAS8jC,EAAeC,EAAIC,EAAI59B,GAI9B,OAHIA,EAAI,EAAGA,GAAK,EACPA,EAAI,IAAGA,GAAK,GAEb,EAAJA,EAAQ,EAAU29B,GAAMC,EAAKD,GAAM39B,EAAI,EACnC,EAAJA,EAAQ,EAAU49B,EACd,EAAJ59B,EAAQ,EAAU29B,GAAMC,EAAKD,IAAO,EAAE,EAAI39B,GAAK,EAC5C29B,EAwET,IAAMt1C,EAAQoa,cArEd,SAAuBo7B,GAErB,IAeQC,EAfJlkC,EAAMikC,EAAQE,QAAQ,KAAM,IAAIjkC,cAGpC,GAAIF,KAAOujC,EAAgB,OAAOA,EAAevjC,GAAKnI,QAGtD,GAAe,MAAXmI,EAAI,GACN,OAAmB,IAAfA,EAAInN,QACFqxC,EAAKr8B,SAAS7H,EAAIgS,OAAO,GAAI,MACrB,GAAKkyB,GAAM,KAChB,EAAQ,KAALA,IAAe,GAAY,KAALA,IAAe,EACjC,IAALA,GAAoB,IAALA,IAAc,EACxB,GAALA,GAAmB,GAALA,IAAa,EAC5B,GAJ8B,KAKd,IAAflkC,EAAInN,SACTqxC,EAAKr8B,SAAS7H,EAAIgS,OAAO,GAAI,MACrB,GAAKkyB,GAAM,SAChB,EAAO,SAALA,IAAkB,IACb,MAALA,IAAgB,EACZ,IAALA,EACA,GAGH,KAGT,IAAIpyC,EAAKkO,EAAIwF,QAAQ,KAAM4+B,EAAKpkC,EAAIwF,QAAQ,KAC5C,IAAY,IAAR1T,GAAasyC,EAAK,IAAMpkC,EAAInN,OAAQ,CACtC,IAAIwxC,EAAQrkC,EAAIgS,OAAO,EAAGlgB,GACtBmqB,EAASjc,EAAIgS,OAAOlgB,EAAG,EAAGsyC,GAAItyC,EAAG,IAAIwyC,MAAM,KAC3CC,EAAQ,EACZ,OAAQF,GACN,IAAK,OACH,GAAsB,IAAlBpoB,EAAOppB,OAAc,OAAO,KAChC0xC,EAAQV,EAAgB5nB,EAAOykB,OAEjC,IAAK,MACH,OAAsB,IAAlBzkB,EAAOppB,OAAqB,KACzB,CAAC8wC,EAAc1nB,EAAO,IACrB0nB,EAAc1nB,EAAO,IACrB0nB,EAAc1nB,EAAO,IACrBsoB,GACV,IAAK,OACH,GAAsB,IAAlBtoB,EAAOppB,OAAc,OAAO,KAChC0xC,EAAQV,EAAgB5nB,EAAOykB,OAEjC,IAAK,MACH,GAAsB,IAAlBzkB,EAAOppB,OAAc,OAAO,KAChC,IAAIuT,GAAOw9B,WAAW3nB,EAAO,IAAM,IAAO,KAAO,IAAO,IAGpDvrB,EAAImzC,EAAgB5nB,EAAO,IAC3BrtB,EAAIi1C,EAAgB5nB,EAAO,IAC3B+nB,EAAKp1C,GAAK,GAAMA,GAAK8B,EAAI,GAAK9B,EAAI8B,EAAI9B,EAAI8B,EAC1CqzC,EAAS,EAAJn1C,EAAQo1C,EACjB,MAAO,CAACR,EAA+C,IAAhCM,EAAeC,EAAIC,EAAI59B,EAAE,EAAE,IAC1Co9B,EAA2C,IAA5BM,EAAeC,EAAIC,EAAI59B,IACtCo9B,EAA+C,IAAhCM,EAAeC,EAAIC,EAAI59B,EAAE,EAAE,IAC1Cm+B,GACV,QACE,OAAO,MAIb,OAAO,MAGqC,MAAMtuC,M,4HClMpD,aAqBA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAEA,OACA,QAuBMuuC,EAAsB,IAAI9wC,IAQhC,SAAS+wC,EAAahzC,EAA+BL,G,UACjD,GAAIA,aAAgB,EAAAyD,kBAChB,OAAyB,QAAzB,EAAOzD,EAAKszC,qBAAa,QAAItzC,EAAKxB,MAGtC,MAAMA,EAAQ6B,EAAQuzB,SAAS5zB,GAE/B,MAAqB,iBAAVxB,GACwC,QAA/C,EAAwB,QAAxB,EAAO,EAAAyF,KAAKnC,MAAMtD,UAAM,QAAI,EAAA0F,OAAOpC,MAAMtD,UAAM,QAG5CA,EAkIX,6BACI,YACa+0C,EACAhxC,EACAC,EACAH,GAHA,KAAAkxC,YACA,KAAAhxC,MACA,KAAAC,QACA,KAAAH,QAQb,SAASrC,G,QACL,QAAamC,IAATnC,EACA,MAAM,IAAI4D,MAAM,iCAGpB,MAAM4vC,EAAyB,QAAb,EAAGrzC,KAAKkC,aAAK,eAAEjE,IAAI4B,GAErC,QAAqBmC,IAAjBqxC,EACA,OAAOA,EAGX,MAAMltC,EAAStG,EAAKE,OAAOC,KAAKozC,UAAWpzC,MAE3C,OADU,QAAV,EAAAA,KAAKkC,aAAK,SAAE8E,IAAInH,EAAMsG,GACfA,EAQX,UAAU9H,GACN,OAAO,EAAAmD,KAAKuG,OAAO1J,GAASA,EAAQ,EAAA8E,YAAYmwC,UAAUj1C,KASlE,MAAaiB,EACT,sBAAsBiB,EAAYgzC,GAC9BN,EAAoBjsC,IAAIzG,EAAIgzC,GAGhC,uBAAuBC,GACnB11C,OAAOgxC,oBAAoB0E,GAAUnzC,QAAQnB,IACzCc,KAAKyzC,eAAev0C,EAAGs0C,EAASt0C,MAQxC,mBAAmBqB,GACf,OAAO0yC,EAAoBh1C,IAAIsC,GAGnC,aAAaV,EAAeK,GACxB,MAAM7B,EAAQ6B,EAAQkC,IAAIuO,OAAO9Q,EAAKlC,MACtC,YAAiBqE,IAAV3D,EAAsBA,EAAQ,KAGzC,qBAAqBwB,EAAuBK,GACxC,OAAO,KAGX,wBAAwBL,EAA0BK,GAC9C,OAAOL,EAAKxB,MAGhB,uBAAuBwB,EAAyBK,GAC5C,OAAOL,EAAKxB,MAGhB,uBAAuBwB,EAAyBK,GAC5C,OAAOL,EAAKxB,MAGhB,uBAAuBwB,EAAyBK,GAC5C,OAAOL,EAAKxB,MAGhB,sBAAsBwB,EAAwBK,GAC1C,YAAyC8B,IAAlC9B,EAAQkC,IAAIuO,OAAO9Q,EAAKlC,MAGnC,eAAe+V,EAAkBxT,GAC7B,MAAMhC,EAAIgC,EAAQuzB,SAAS/f,EAAMrV,OACjC,IAAK,MAAO2H,EAAOC,KAASyN,EAAMhT,SAAU,CACxC,GAAIU,MAAMC,QAAQ2E,IAAWA,EAAgB0tC,SAASx1C,GAClD,OAAOgC,EAAQuzB,SAASxtB,GACrB,GAAID,IAAU9H,EACjB,OAAOgC,EAAQuzB,SAASxtB,GAGhC,OAAO/F,EAAQuzB,SAAS/f,EAAM7S,UAGlC,cAAc6S,EAAiBxT,GAC3B,GAAIA,EAAQmC,QAAU,EAAAd,UAAUe,MAAO,CACnC,MAAMqxC,EAAwBjgC,EAAMhT,SAASkzC,UAAU,EAAE9yC,EAAWH,KAChEG,EAAU6D,aAGd,IAA+B,IAA3BgvC,EAA8B,CAC9B,IAAIjzC,EAGJ,IAAK,IAAItD,EAAI,EAAGA,EAAIsW,EAAMhT,SAASY,SAAUlE,EAAG,CAC5C,MAAO0D,EAAWmF,GAAQyN,EAAMhT,SAAStD,GAEnCy2C,EAAqB3zC,EAAQuzB,SAAS3yB,GACtCgzC,EAAgB5zC,EAAQuzB,SAASxtB,GAEvC,GAAI7I,EAAIu2C,GAAyBxnC,QAAQ0nC,GACrC,OAAOC,EAGX,IAAK,EAAAtyC,KAAKuG,OAAO8rC,IAAwB1nC,QAAQ0nC,WAKhC7xC,IAAbtB,IACAA,EAAW,IAGfA,WAAUwF,KAAK,CACXhG,EAAQ6zC,UAAUF,GAClB3zC,EAAQ6zC,UAAUD,MAGjB,EAAAtyC,KAAKuG,OAAO8rC,IAAuB1nC,QAAQ0nC,IAE5C,OAAO,IAAI,EAAA5uC,SAASvE,EAAU,EAAAyC,YAAYmwC,UAAU,OAI5D,MAAMzyC,EAAWX,EAAQuzB,SAAS/f,EAAM7S,UAExC,YAAoBmB,IAAbtB,EACDG,EACA,IAAI,EAAAoE,SAASvE,EAAUR,EAAQ6zC,UAAUlzC,KAIvD,IAAK,MAAOC,EAAWmF,KAASyN,EAAMhT,SAClC,GAAIR,EAAQuzB,SAAS3yB,GACjB,OAAOZ,EAAQuzB,SAASxtB,GAIhC,OAAO/F,EAAQuzB,SAAS/f,EAAM7S,UAGlC,cAAchB,EAAgBK,G,MAC1B,MAAMoE,EAA4B,QAAlB,EAAGzE,EAAKyE,kBAAU,QAAI2uC,EAAoBh1C,IAAI4B,EAAKU,IAEnE,GAAI+D,EAAY,CAGZ,IAAI6B,EAEJ,GAJAtG,EAAKyE,WAAaA,EAIdpE,EAAQmC,QAAU,EAAAd,UAAUe,OAASzC,EAAK8E,YAAa,CACvD,GAAI9E,EAAKyE,WAAW0vC,gBAChB,OAAOn0C,EAAKyE,WAAW0vC,gBAAgB9zC,EAASL,GAGpD,MAAMO,EAAOP,EAAKO,KAAK2F,IAAIkuC,GAChB/zC,EAAQ6zC,UAAU7zC,EAAQuzB,SAASwgB,KAG9C,GAAI7zC,EAAK2E,MAAM,CAACkvC,EAAK72C,IAAM62C,IAAQp0C,EAAKO,KAAKhD,IACzC,OAAOyC,EAGXsG,EAAS,IAAI,EAAA/B,SAASvE,EAAKU,GAAIH,QAE/B+F,EAAS7B,EAAW/G,KAAK2C,EAASL,GAGtC,OAAOsG,EAGX,MAAM,IAAI1C,MAAM,uBAAuB5D,EAAKU,OAGhD,cAAcV,EAAgBK,GAC1B,GAAIA,EAAQmC,QAAU,EAAAd,UAAUe,MAAO,CACnC,MAAMvB,EAAQb,EAAQuzB,SAAS5zB,EAAKkB,OAC9BC,EAAed,EAAQuzB,SAAS5zB,EAAKmB,cAC3C,OAAO,IAAI,EAAAoE,SACPlF,EAAQ6zC,UAAUhzC,GAClBb,EAAQ6zC,UAAU/yC,GAElBnB,EAAKoB,MAAM8E,IAAI,EAAEpH,EAAKN,MAClB,MAAM8C,EAAIjB,EAAQuzB,SAASp1B,GAC3B,MAAO,CAACM,EAAKuB,EAAQ6zC,UAAU5yC,OAGpC,CACH,MAAMJ,EAAQb,EAAQuzB,SAAS5zB,EAAKkB,OAEpC,GAAqB,iBAAVA,EACP,MAAM,IAAI0C,MAAM,UAAU1C,uBAG9B,GAAIA,EAAQlB,EAAKoB,MAAM,GAAG,GACtB,OAAOf,EAAQuzB,SAAS5zB,EAAKmB,cAGjC,IAAIu8B,EAAQ19B,EAAKoB,MAAM2yC,UAAUz0C,GAAKA,EAAE,GAAK4B,GAM7C,OAJe,IAAXw8B,IACAA,EAAQ19B,EAAKoB,MAAMK,QAGhBpB,EAAQuzB,SAAS5zB,EAAKoB,MAAMs8B,EAAQ,GAAG,KAItD,qBAAqB19B,EAAuBK,GACxC,GAAIA,EAAQmC,QAAU,EAAAd,UAAUe,MAAO,CACnC,MAAMvB,EAAQb,EAAQuzB,SAAS5zB,EAAKkB,OACpC,OAAO,IAAI,EAAAuE,gBACPzF,EAAKtB,KACL2B,EAAQ6zC,UAAUhzC,GAClBlB,EAAKoB,MAAM8E,IAAI,EAAEpH,EAAKN,MAClB,MAAM8C,EAAIjB,EAAQuzB,SAASp1B,GAC3B,MAAO,CAACM,EAAKuB,EAAQ6zC,UAAU5yC,OAGpC,CACH,MAAM+yC,EAAQh0C,EAAQuzB,SAAS5zB,EAAKkB,OAEpC,GAAqB,iBAAVmzC,EACP,MAAM,IAAIzwC,MAAM,0BAGpB,GAAqB,UAAjB5D,EAAKtB,KAAK,GACV,OArXhB,SACI2B,EACAi0C,EACA71C,GAEA,GAAIA,EAAI61C,EAAOlzC,MAAM,GAAG,GACpB,OAAOiyC,EAAahzC,EAASi0C,EAAOlzC,MAAM,GAAG,IAC1C,GAAI3C,GAAK61C,EAAOlzC,MAAMkzC,EAAOlzC,MAAMK,OAAS,GAAG,GAClD,OAAO4xC,EAAahzC,EAASi0C,EAAOlzC,MAAMkzC,EAAOlzC,MAAMK,OAAS,GAAG,IAIvE,MAAM8yC,EAAKD,EAAOlzC,MAAM2yC,UAAUS,GAAQA,EAAK,GAAK/1C,GAC9Cg2C,EAAKjrC,KAAKS,IAAI,EAAGsqC,EAAK,GACtBG,EAAY,IAAPD,EAAWF,EAAKE,EAAK,EAC1BE,EAAKJ,EAAKD,EAAOlzC,MAAMK,OAAS,EAAI8yC,EAAK,EAAIA,EAAK,EAGlDK,EAAKN,EAAOlzC,MAAMszC,GAAI,GACtBG,EAAKP,EAAOlzC,MAAMqzC,GAAI,GACtBK,EAAKR,EAAOlzC,MAAMmzC,GAAI,GAGtBQ,EAAiB,IAAXD,EAAKD,GACXG,EAAKD,GAAMF,EAAKD,GAChBK,EAAKF,GAJAT,EAAOlzC,MAAMuzC,GAAI,GAING,GAChBz1C,GAAKZ,EAAIo2C,IAAOC,EAAKD,GACrBK,EAAK71C,EAAIA,EACT81C,EAAMD,EAAK71C,EAGX+1C,GAAMJ,EAAKG,EAAM,EAAIH,EAAKE,EAAKF,EAAK31C,EACpCg2C,GAAM,EAAIL,GAAMG,IAAQ,IAAM,EAAIH,GAAME,IAAO,GAAMF,GAAM31C,EAAI,EAC/Di2C,IAAO,EAAIL,GAAME,GAAO,IAAMF,GAAMC,EAAK,GAAM71C,EAC/Ck2C,EAAKN,EAAKE,EAAMF,EAAKC,EAGrBM,EAAKnC,EAAahzC,EAASi0C,EAAOlzC,MAAMszC,GAAI,IAC5C5K,EAAKuJ,EAAahzC,EAASi0C,EAAOlzC,MAAMqzC,GAAI,IAC5CzK,EAAKqJ,EAAahzC,EAASi0C,EAAOlzC,MAAMmzC,GAAI,IAC5CkB,EAAKpC,EAAahzC,EAASi0C,EAAOlzC,MAAMuzC,GAAI,IAElD,GACkB,iBAAPa,GACO,iBAAP1L,GACO,iBAAPE,GACO,iBAAPyL,EAEP,OAAOL,EAAKI,EAAKH,EAAKvL,EAAKwL,EAAKtL,EAAKuL,EAAKE,EACvC,GACHD,aAAc,EAAAvxC,MACd6lC,aAAc,EAAA7lC,MACd+lC,aAAc,EAAA/lC,MACdwxC,aAAc,EAAAxxC,KAEd,OAAO,IAAI,EAAAA,KACP1E,EAAMkJ,UAAU6B,MAAM8qC,EAAKI,EAAGn3C,EAAIg3C,EAAKvL,EAAGzrC,EAAIi3C,EAAKtL,EAAG3rC,EAAIk3C,EAAKE,EAAGp3C,EAAG,EAAG,GACxEkB,EAAMkJ,UAAU6B,MAAM8qC,EAAKI,EAAG5gC,EAAIygC,EAAKvL,EAAGl1B,EAAI0gC,EAAKtL,EAAGp1B,EAAI2gC,EAAKE,EAAG7gC,EAAG,EAAG,GACxErV,EAAMkJ,UAAU6B,MAAM8qC,EAAKI,EAAG3rC,EAAIwrC,EAAKvL,EAAGjgC,EAAIyrC,EAAKtL,EAAGngC,EAAI0rC,EAAKE,EAAG5rC,EAAG,EAAG,GACxEtK,EAAMkJ,UAAU6B,MAAM8qC,EAAKI,EAAG7rC,EAAI0rC,EAAKvL,EAAGngC,EAAI2rC,EAAKtL,EAAGrgC,EAAI4rC,EAAKE,EAAG9rC,EAAG,EAAG,IAEzE,GACH6rC,aAAc,EAAAtxC,QACd4lC,aAAc,EAAA5lC,QACd8lC,aAAc,EAAA9lC,QACduxC,aAAc,EAAAvxC,OAEd,OAAO,IAAI,EAAAA,OAAOkxC,EAAKI,EAAGh3C,MAAQ62C,EAAKvL,EAAGtrC,MAAQ82C,EAAKtL,EAAGxrC,MAAQ+2C,EAAKE,EAAGj3C,OACvE,GACHg3C,aAAcj2C,EAAMkV,OACpBq1B,aAAcvqC,EAAMkV,OACpBu1B,aAAczqC,EAAMkV,OACpBghC,aAAcl2C,EAAMkV,MAEpB,OAAO,IAAIlV,EAAMkV,MACb2gC,EAAKI,EAAGn3C,EAAIg3C,EAAKvL,EAAGzrC,EAAIi3C,EAAKtL,EAAG3rC,EAAIk3C,EAAKE,EAAGp3C,EAC5C+2C,EAAKI,EAAG5gC,EAAIygC,EAAKvL,EAAGl1B,EAAI0gC,EAAKtL,EAAGp1B,EAAI2gC,EAAKE,EAAG7gC,EAC5CwgC,EAAKI,EAAG3rC,EAAIwrC,EAAKvL,EAAGjgC,EAAIyrC,EAAKtL,EAAGngC,EAAI0rC,EAAKE,EAAG5rC,GAE7C,GACH2rC,aAAcj2C,EAAMoG,SACpBmkC,aAAcvqC,EAAMoG,SACpBqkC,aAAczqC,EAAMoG,SACpB8vC,aAAcl2C,EAAMoG,QAEpB,OAAO,IAAIpG,EAAMoG,QACbyvC,EAAKI,EAAG5vC,EAAIyvC,EAAKvL,EAAGlkC,EAAI0vC,EAAKtL,EAAGpkC,EAAI2vC,EAAKE,EAAG7vC,EAC5CwvC,EAAKI,EAAG3vC,EAAIwvC,EAAKvL,EAAGjkC,EAAIyvC,EAAKtL,EAAGnkC,EAAI0vC,EAAKE,EAAG5vC,GAE7C,GACH2vC,aAAcj2C,EAAMuG,SACpBgkC,aAAcvqC,EAAMuG,SACpBkkC,aAAczqC,EAAMuG,SACpB2vC,aAAcl2C,EAAMuG,QAEpB,OAAO,IAAIvG,EAAMuG,QACbsvC,EAAKI,EAAG5vC,EAAIyvC,EAAKvL,EAAGlkC,EAAI0vC,EAAKtL,EAAGpkC,EAAI2vC,EAAKE,EAAG7vC,EAC5CwvC,EAAKI,EAAG3vC,EAAIwvC,EAAKvL,EAAGjkC,EAAIyvC,EAAKtL,EAAGnkC,EAAI0vC,EAAKE,EAAG5vC,EAC5CuvC,EAAKI,EAAGzvC,EAAIsvC,EAAKvL,EAAG/jC,EAAIuvC,EAAKtL,EAAGjkC,EAAIwvC,EAAKE,EAAG1vC,GAE7C,GACHyvC,aAAcj2C,EAAMyG,SACpB8jC,aAAcvqC,EAAMyG,SACpBgkC,aAAczqC,EAAMyG,SACpByvC,aAAcl2C,EAAMyG,QAEpB,OAAO,IAAIzG,EAAMyG,QACbovC,EAAKI,EAAG5vC,EAAIyvC,EAAKvL,EAAGlkC,EAAI0vC,EAAKtL,EAAGpkC,EAAI2vC,EAAKE,EAAG7vC,EAC5CwvC,EAAKI,EAAG3vC,EAAIwvC,EAAKvL,EAAGjkC,EAAIyvC,EAAKtL,EAAGnkC,EAAI0vC,EAAKE,EAAG5vC,EAC5CuvC,EAAKI,EAAGzvC,EAAIsvC,EAAKvL,EAAG/jC,EAAIuvC,EAAKtL,EAAGjkC,EAAIwvC,EAAKE,EAAG1vC,EAC5CqvC,EAAKI,EAAGvvC,EAAIovC,EAAKvL,EAAG7jC,EAAIqvC,EAAKtL,EAAG/jC,EAAIsvC,EAAKE,EAAGxvC,GAE7C,GAAI1E,MAAMC,QAAQg0C,IAAOj0C,MAAMC,QAAQsoC,IAAOvoC,MAAMC,QAAQwoC,IAAOzoC,MAAMC,QAAQi0C,GAAK,CACzF,MAAMp2B,EAAIm2B,EAAG/zC,OACPpD,EAAc,GACpB,IAAK,IAAId,EAAI,EAAGA,EAAI8hB,IAAK9hB,EACrBc,EAAEd,GAAK63C,EAAKI,EAAGj4C,GAAK83C,EAAKvL,EAAGvsC,GAAK+3C,EAAKtL,EAAGzsC,GAAKg4C,EAAKE,EAAGl4C,GAE1D,OAAOc,EAGX,MAAM,IAAIuF,MAAM,gCA4PG8xC,CAAiBr1C,EAASL,EAAMq0C,GAG3C,MAAMsB,EAAW31C,EAAKoB,MAAM2yC,UAAUS,GAAQA,EAAK,GAAKH,GAExD,IAAkB,IAAdsB,EAEA,OAAOt1C,EAAQuzB,SAAS5zB,EAAKoB,MAAMpB,EAAKoB,MAAMK,OAAS,GAAG,IACvD,GAAiB,IAAbk0C,EACP,OAAOt1C,EAAQuzB,SAAS5zB,EAAKoB,MAAM,GAAG,IAG1C,MAAOtC,EAAKN,GAASwB,EAAKoB,MAAMu0C,IACzBC,EAASC,GAAa71C,EAAKoB,MAAMu0C,EAAW,GAE7C7L,EAAKuJ,EAAahzC,EAASw1C,GAEjC,IAAIp3C,EAAI,EAER,OAAQuB,EAAKtB,KAAK,IACd,IAAK,WACD,OAAOorC,EAEX,IAAK,SACDrrC,GAAK41C,EAAQuB,IAAY92C,EAAM82C,GAC/B,MAEJ,IAAK,cAAe,CAChB,MAAME,EAAO91C,EAAKtB,KAAK,GACvBD,GAAK+K,KAAKgS,IAAIs6B,EAAMzB,EAAQuB,GAAW,IAAMpsC,KAAKgS,IAAIs6B,EAAMh3C,EAAM82C,GAAW,GAC7E,MAGJ,QACI,MAAM,IAAIhyC,MACN,sBAAsBgE,KAAKC,UAAU7H,EAAKtB,0BAItD,MAAMsrC,EAAKqJ,EAAahzC,EAAS7B,GAEjC,GAAkB,iBAAPsrC,GAAiC,iBAAPE,EACjC,OAAOzqC,EAAMkJ,UAAUmN,KAAKk0B,EAAIE,EAAIvrC,GACjC,GAAIqrC,aAAc,EAAA7lC,MAAQ+lC,aAAc,EAAA/lC,KAC3C,OAAO6lC,EAAGwB,QAAQ11B,KAAKo0B,EAAIvrC,GACxB,GAAIqrC,aAAc,EAAA5lC,QAAU8lC,aAAc,EAAA9lC,OAC7C,OAAO,IAAI,EAAAA,OAAO3E,EAAMkJ,UAAUmN,KAAKk0B,EAAGtrC,MAAOwrC,EAAGxrC,MAAOC,IACxD,GAAIqrC,aAAcvqC,EAAMkV,OAASu1B,aAAczqC,EAAMkV,MACxD,OAAOq1B,EAAGwB,QAAQ11B,KAAKo0B,EAAIvrC,GACxB,GAAIqrC,aAAcvqC,EAAMoG,SAAWqkC,aAAczqC,EAAMoG,QAC1D,OAAOmkC,EAAGwB,QAAQ11B,KAAKo0B,EAAIvrC,GACxB,GAAIqrC,aAAcvqC,EAAMuG,SAAWkkC,aAAczqC,EAAMuG,QAC1D,OAAOgkC,EAAGwB,QAAQ11B,KAAKo0B,EAAIvrC,GACxB,GAAIqrC,aAAcvqC,EAAMyG,SAAWgkC,aAAczqC,EAAMyG,QAC1D,OAAO8jC,EAAGwB,QAAQ11B,KAAKo0B,EAAIvrC,GACxB,GAAI8C,MAAMC,QAAQsoC,IAAOvoC,MAAMC,QAAQwoC,IAAOF,EAAGroC,SAAWuoC,EAAGvoC,OAClE,OAAOqoC,EAAG5jC,IAAI,CAACN,EAAGrI,IAAMgC,EAAMkJ,UAAUmN,KAAKhQ,EAAIokC,EAAgBzsC,GAAIkB,IAGzE,MAAM,IAAImF,MAAM,aAAagE,KAAKC,UAAUiiC,OAAQliC,KAAKC,UAAUmiC,OAAQvrC,QArQvF,kBA0QAgB,EAAcs2C,gBAAgB,EAAAC,eAC9Bv2C,EAAcs2C,gBAAgB,EAAAE,qBAC9Bx2C,EAAcs2C,gBAAgB,EAAAG,eAC9Bz2C,EAAcs2C,gBAAgB,EAAAI,iBAC9B12C,EAAcs2C,gBAAgB,EAAAK,gBAC9B32C,EAAcs2C,gBAAgB,EAAAM,eAC9B52C,EAAcs2C,gBAAgB,EAAAO,eAC9B72C,EAAcs2C,gBAAgB,EAAAQ,eAC9B92C,EAAcs2C,gBAAgB,EAAAS,gBAC9B/2C,EAAcs2C,gBAAgB,EAAAU,iBAC9Bh3C,EAAcs2C,gBAAgB,EAAAW,kBAC9Bj3C,EAAcs2C,gBAAgB,EAAAY,cAC9Bl3C,EAAcs2C,gBAAgB,EAAAa,kB,sGCnhB9B,aAGMC,EAAsB,CAAC,UAAW,SAAU,UAElD,SAASC,EAAkB1C,EAAWrL,GAClC,KAAMqL,aAAe,EAAA3wC,mBAAuBozC,EAAoBhD,SAASO,EAAI51C,QACzE,MAAM,IAAIoF,MACN,wDAAwDgE,KAAKC,UAAUusC,OAI/E,MAAM2C,EAAK3C,EAAI51C,MAEfuqC,EAAMvoC,QAAQ,CAACmqC,EAASjN,KACpB,UAAWiN,IAAYoM,EACnB,MAAM,IAAInzC,MAAM,mCAAmC85B,mBAAuBqZ,QAiBtF,SAASC,EAAW32C,EAA+B+zC,GAC/C,MAAM51C,EAAQ6B,EAAQuzB,SAASwgB,GAC/B,IAAK7yC,MAAMC,QAAQhD,GACf,MAAM,IAAIoF,MAAM,IAAIpF,sBAExB,OAAOA,EAGX,MAAMy4C,EAAY,CACdlO,MAAO,CACHrrC,KAAM,CAAC2C,EAA+B3C,KAClC,OAAQA,EAAK6C,KAAKkB,QACd,KAAK,EACD,MAAM,IAAImC,MAAM,wBACpB,KAAK,EACD,OAAOozC,EAAW32C,EAAS3C,EAAK6C,KAAK,IACzC,KAAK,EAAG,CACJ,MAAMwoC,EAAQiO,EAAW32C,EAAS3C,EAAK6C,KAAK,IAE5C,OADAu2C,EAAkBp5C,EAAK6C,KAAK,GAAIwoC,GACzBA,EAEX,KAAK,EAAG,CACJ,MAAMA,EAAQiO,EAAW32C,EAAS3C,EAAK6C,KAAK,IAG5C,OArCpB,SAA0B6zC,EAAWrL,GACjC,KAAMqL,aAAe,EAAA5wC,mBACjB,MAAM,IAAII,MAAM,uCAGpB,MAAMnC,EAAS2yC,EAAI51C,MAEnB,GAAIuqC,EAAMtnC,SAAWA,EACjB,MAAM,IAAImC,MAAM,uBAAuBnC,gBA2B3By1C,CAAiBx5C,EAAK6C,KAAK,GAAIwoC,GAC/B+N,EAAkBp5C,EAAK6C,KAAK,GAAIwoC,GACzBA,EAEX,QACI,MAAM,IAAInlC,MAAM,yBAIhC,aAAc,CACVlG,KAAM,CAAC2C,EAA+B3C,KAClC,GAAyB,IAArBA,EAAK6C,KAAKkB,OACV,MAAM,IAAImC,MAAM,wBAEpB,MAAO,IAAIlG,EAAK6C,KAAK2F,IAAIkuC,GAAO/zC,EAAQuzB,SAASwgB,OAGzD+C,GAAI,CACAz5C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAM6C,EAAO7C,EAAK6C,KACZm9B,EAAQr9B,EAAQuzB,SAASrzB,EAAK,IACpC,GAAqB,iBAAVm9B,EACP,MAAM,IAAI95B,MAAM,iDAEpB,MAAMpF,EAAQ6B,EAAQuzB,SAASrzB,EAAK,IACpC,IAAKgB,MAAMC,QAAQhD,GACf,MAAM,IAAIoF,MAAM,qBAEpB,OAAO85B,GAAS,GAAKA,EAAQl/B,EAAMiD,OAASjD,EAAMk/B,GAAS,QAK1D,EAAA8Y,eAAwCS,G,qGCtFrD,MAAMA,EAAY,CACd,aAAc,CACVv5C,KAAM,CAAC2C,EAA+B3C,IAC3B4O,QAAQjM,EAAQuzB,SAASl2B,EAAK6C,KAAK,MAIlD,YAAa,CACT7C,KAAM,CAAC2C,EAA+B3C,IAC3BoP,OAAOzM,EAAQuzB,SAASl2B,EAAK6C,KAAK,MAIjD,YAAa,CACT7C,KAAM,CAAC2C,EAA+B3C,KAClC,IAAK,MAAM02C,KAAO12C,EAAK6C,KAAM,CACzB,MAAM/B,EAAQkO,OAAOrM,EAAQuzB,SAASwgB,IACtC,IAAK/qC,MAAM7K,GACP,OAAOA,EAGf,MAAM,IAAIoF,MAAM,2CAKf,EAAAoyC,cAAuCiB,G,sGC7BpD,aAEA,QAGA,QAEMA,EAAY,CACd9D,MAAO,CACHz1C,KAAM,CAAC2C,EAA+B3C,KAClC,IAAIgY,EAA2BrV,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAK1D,MAJqB,iBAAVmV,IACPA,EAAQ,EAAAC,wBAAwBD,IAEL,iBAAVA,EAAqB,EAAAhB,WAAWa,gBAAgBG,GAAS,IAItF0hC,KAAM,CACF15C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMW,EAAIgC,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/BqU,EAAIvU,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/BsJ,EAAIxJ,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/BoJ,EAAItJ,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACrC,GACiB,iBAANlC,GACM,iBAANuW,GACM,iBAAN/K,GACM,iBAANF,GACPtL,GAAK,GACLuW,GAAK,GACL/K,GAAK,GACLF,GAAK,GACLA,GAAK,EAEL,OA6ChB,SAAmBtL,EAAWuW,EAAW/K,EAAWF,GAEhD,OAAO,EAAA+K,WAAWC,eACdpV,EAAMkJ,UAAU6B,MAAMjM,EAAG,EAAG,KAAO,IACnCkB,EAAMkJ,UAAU6B,MAAMsK,EAAG,EAAG,KAAO,IACnCrV,EAAMkJ,UAAU6B,MAAMT,EAAG,EAAG,KAAO,IACnCtK,EAAMkJ,UAAU6B,MAAMX,EAAG,EAAG,IAnDb0tC,CAAUh5C,EAAGuW,EAAG/K,EAAGF,GAE9B,MAAM,IAAI/F,MAAM,uBAAuBvF,KAAKuW,KAAK/K,KAAKF,SAG9D2tC,IAAK,CACD55C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMW,EAAIgC,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/BqU,EAAIvU,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/BsJ,EAAIxJ,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACrC,GACiB,iBAANlC,GACM,iBAANuW,GACM,iBAAN/K,GACPxL,GAAK,GACLuW,GAAK,GACL/K,GAAK,EAEL,OAqChB,SAAkBxL,EAAWuW,EAAW/K,GACpC,OAAO,EAAA6K,WAAWI,cACdvV,EAAMkJ,UAAU6B,MAAMjM,EAAG,EAAG,KAAO,IACnCkB,EAAMkJ,UAAU6B,MAAMsK,EAAG,EAAG,KAAO,IACnCrV,EAAMkJ,UAAU6B,MAAMT,EAAG,EAAG,KAAO,KAzCpB0tC,CAASl5C,EAAGuW,EAAG/K,GAE1B,MAAM,IAAIjG,MAAM,sBAAsBvF,KAAKuW,KAAK/K,SAKxD2tC,IAAK,CACD95C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMsX,EAAI3U,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/BjB,EAAIe,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/B/C,EAAI6C,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACrC,GACiB,iBAANyU,GACM,iBAAN1V,GACM,iBAAN9B,GACPwX,GAAK,GACL1V,GAAK,GACL9B,GAAK,EAEL,OAyBhB,SAAkBwX,EAAW1V,EAAW9B,GACpC,OAAO,EAAAkX,WAAWK,cACdxV,EAAMkJ,UAAUgvC,gBAAgBziC,EAAG,KAAO,IAC1CzV,EAAMkJ,UAAU6B,MAAMhL,EAAG,EAAG,KAAO,IACnCC,EAAMkJ,UAAU6B,MAAM9M,EAAG,EAAG,KAAO,KA7BpBk6C,CAAS1iC,EAAG1V,EAAG9B,GAE1B,MAAM,IAAIoG,MAAM,sBAAsBoR,KAAK1V,MAAM9B,WA+BhD,EAAA44C,eAAwCa,G,6BCvGrD,SAASU,EAAQt3C,EAA+B3C,EAAgBk6C,GAAkB,GAC9E,MAAMh4B,EAAOvf,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAClCs3C,EAAQx3C,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAEzC,KAEyB,iBAATqf,GAAsC,iBAAVi4B,GACnB,iBAATj4B,GAAsC,iBAAVi4B,IAGpCD,EACA,MAAM,IAAIh0C,MAAM,qBAAqBgc,WAAci4B,oBAAwBn6C,EAAKgD,OAIxF,OAAQhD,EAAKgD,IACT,IAAK,IACD,OAAOkf,EAAOi4B,EAClB,IAAK,IACD,OAAOj4B,EAAOi4B,EAClB,IAAK,KACD,OAAOj4B,GAAQi4B,EACnB,IAAK,KACD,OAAOj4B,GAAQi4B,EACnB,QACI,MAAM,IAAIj0C,MAAM,gCAAgClG,EAAKgD,Q,8EAIjE,MAAMu2C,EAAY,CACd,IAAK,CACDv5C,KAAM,CAAC2C,EAA+B3C,KAC1B2C,EAAQuzB,SAASl2B,EAAK6C,KAAK,KAI3C,KAAM,CACF7C,KAAM,CAAC2C,EAA+B3C,IACrB2C,EAAQuzB,SAASl2B,EAAK6C,KAAK,MAC1BF,EAAQuzB,SAASl2B,EAAK6C,KAAK,KAKjD,KAAM,CACF7C,KAAM,CAAC2C,EAA+B3C,IACrB2C,EAAQuzB,SAASl2B,EAAK6C,KAAK,MAC1BF,EAAQuzB,SAASl2B,EAAK6C,KAAK,KAKjD,IAAK,CAAE7C,KAAM,CAAC2C,EAA+B3C,IAAmBi6C,EAAQt3C,EAAS3C,IACjF,IAAK,CAAEA,KAAM,CAAC2C,EAA+B3C,IAAmBi6C,EAAQt3C,EAAS3C,IACjF,KAAM,CAAEA,KAAM,CAAC2C,EAA+B3C,IAAmBi6C,EAAQt3C,EAAS3C,IAClF,KAAM,CAAEA,KAAM,CAAC2C,EAA+B3C,IAAmBi6C,EAAQt3C,EAAS3C,KAGzE,EAAAu4C,oBAA6CgB,G,wGC7D1D,cACA,OAIMA,EAAY,CACd,gBAAiB,CACbv5C,KAAM,CAAC2C,EAA+B3C,KAElC,OADqB2C,EAAQkC,IAAIuO,OAAO,kBAEpC,IAAK,QACD,MAAO,QACX,IAAK,OACD,MAAO,aACX,IAAK,UACD,MAAO,UACX,QACI,OAAO,QAIvB,gBAAiB,CACbnM,kBAAmB,KAAM,EACzBjH,KAAM,CAAC2C,EAA+B3C,K,QAClC,GAAI2C,EAAQmC,QAAU,EAAAd,UAAUmyB,QAC5B,MAAM,IAAIjwB,MAAM,gDAEpB,MAAM1E,EAAWmB,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC5C,GAAwB,iBAAbrB,EACP,MAAM,IAAI0E,MAAM,0DAEpB,MAAMk0C,EAAQz3C,EAAQkC,IAAIuO,OAAO,UACjC,OAAI,EAAAH,IAAImsB,MAAMgb,GACmB,QAA7B,EAAOA,EAAMhnC,OAAO5R,UAAS,QAAI,KAC1B44C,aAAiBx1C,KACE,QAA1B,EAAOw1C,EAAM15C,IAAIc,UAAS,QAEvB,OAGf8uB,GAAI,CACAtwB,KAAM,CAAC2C,EAA+B3C,K,MAClC,OAAgC,QAAhC,EAAO2C,EAAQkC,IAAIuO,OAAO,cAAM,QAAI,QAKnC,EAAA4lC,iBAA0CO,G,6BC5CvD,SAASc,EAAgB13C,EAA+B0V,EAAcxV,GAClE,OAAQwV,GACJ,IAAK,UACL,IAAK,SACL,IAAK,SACD,IAAK,MAAMtV,KAAaF,EAAM,CAC1B,MAAM/B,EAAQ6B,EAAQuzB,SAASnzB,GAC/B,UAAWjC,IAAUuX,EACjB,OAAOvX,EAGf,MAAM,IAAIoF,MAAM,eAAemS,MACnC,QACI,MAAM,IAAInS,MAAM,iBAAiBmS,O,wEAI7C,MAAMkhC,EAAY,CACde,IAAK,CACDt6C,KAAM,CAAC2C,EAA+B3C,KAClC,IAAK,MAAM+C,KAAa/C,EAAK6C,KACzB,IAAKF,EAAQuzB,SAASnzB,GAClB,OAAO,EAGf,OAAO,IAIfw3C,IAAK,CACDv6C,KAAM,CAAC2C,EAA+B3C,KAClC,IAAK,MAAM+C,KAAa/C,EAAK6C,KACzB,GAAIF,EAAQuzB,SAASnzB,GACjB,OAAO,EAGf,OAAO,IAIfy3C,KAAM,CACFx6C,KAAM,CAAC2C,EAA+B3C,KAClC,IAAK,MAAM+C,KAAa/C,EAAK6C,KACzB,GAAIF,EAAQuzB,SAASnzB,GACjB,OAAO,EAGf,OAAO,IAIf03C,QAAS,CACLz6C,KAAM,CAAC2C,EAA+B3C,IAC3Bq6C,EAAgB13C,EAAS,UAAW3C,EAAK6C,OAIxD63C,OAAQ,CACJ16C,KAAM,CAAC2C,EAA+B3C,IAC3Bq6C,EAAgB13C,EAAS,SAAU3C,EAAK6C,OAIvDsiC,OAAQ,CACJnlC,KAAM,CAAC2C,EAA+B3C,IAC3Bq6C,EAAgB13C,EAAS,SAAU3C,EAAK6C,QAK9C,EAAAg2C,cAAuCU,G,oGCzEpD,aAGMA,EAAY,CACd,YAAa,CACTv5C,KAAM,CAAC2C,EAA+B3C,IACpB2C,EAAQuzB,SAASl2B,EAAK6C,KAAK,KACrB7C,EAAK6C,KAAK,GAAMF,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAAiB,IAIxF,kBAAmB,CACfoE,kBAAmB,KACR,EAEXjH,KAAM,CAAC2C,EAA+B3C,KAClC,MAAM26C,EAASh4C,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACpC+3C,EAAc56C,EAAK6C,KAAK,GAAMF,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAAiB,EAC1Eye,EAAO3e,EAAQkC,IAAIuO,OAAO,SAGhC,OADUunC,GADQ7uC,KAAKgS,IAAI,EAAG,IAAMhS,KAAKgS,IAAI,EAAGwD,IACjBs5B,IAIvC,2BAA4B,CACxB3zC,kBAAmB,KACR,EAEXjH,KAAM,CAAC2C,EAA+B3C,KAClC,MAAM26C,EAASh4C,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACpC+3C,EAAc56C,EAAK6C,KAAK,GAAMF,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAAiB,EAC1Eye,EAAO3e,EAAQkC,IAAIuO,OAAO,SAGhC,OADUunC,GADgB7uC,KAAKgS,IAAI,EAAG,MAAQhS,KAAKgS,IAAI,EAAGhS,KAAKoD,MAAMoS,KAC9Bs5B,IAI/CC,IAAK,CACD76C,KAAO2C,IACH,MAAMk4C,EAAMl4C,EAAQkC,IAAIuO,OAAO,QAC/B,MAAmB,iBAARynC,EACAA,EAEJ,KAGfv5B,KAAM,CACFra,kBAAmB,KACR,EAEXjH,KAAM,CAAC2C,EAA+B3C,K,MAClC,OAAI2C,EAAQmC,QAAU,EAAAd,UAAUe,MACrB/E,EAEuB,QAAlC,EAAO2C,EAAQkC,IAAIuO,OAAO,gBAAQ,QAAI,QAKrC,EAAA6lC,aAAsCM,G,qGCxDnD,aAEMA,EAAY,CACd,IAAK,CACDv5C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMiM,EAAItJ,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/BsJ,EAAIxJ,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACrC,GAAiB,iBAANoJ,GAA+B,iBAANE,EAEhC,MAAM,IAAIjG,MACN,4BAA4B+F,kBAAkBE,uBAGtD,OAAOL,KAAKgS,IAAI7R,EAAGE,KAI3B,IAAK,CACDnM,KAAM,CAAC2C,EAA+B3C,KAClC,GAAyB,IAArBA,EAAK6C,KAAKkB,OAAc,CACxB,MAAMjD,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,2BAA2BpF,sBAG/C,OAAQA,EAGZ,MAAMmL,EAAItJ,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/BsJ,EAAIxJ,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACrC,GAAiB,iBAANoJ,GAA+B,iBAANE,EAChC,MAAM,IAAIjG,MACN,4BAA4B+F,kBAAkBE,uBAGtD,OAAOF,EAAIE,IAInB,IAAK,CACDnM,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMiM,EAAItJ,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/BsJ,EAAIxJ,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACrC,GAAiB,iBAANoJ,GAA+B,iBAANE,EAEhC,MAAM,IAAIjG,MACN,4BAA4B+F,kBAAkBE,uBAGtD,OAAOF,EAAIE,IAInB,IAAK,CACDnM,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMiM,EAAItJ,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/BsJ,EAAIxJ,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACrC,GAAiB,iBAANoJ,GAA+B,iBAANE,EAEhC,MAAM,IAAIjG,MACN,4BAA4B+F,kBAAkBE,uBAGtD,OAAOF,EAAIE,IAInB,IAAK,CACDnM,KAAM,CAAC2C,EAA+B3C,IAC3BA,EAAK6C,KAAKqW,OAAO,CAACjN,EAAGE,IAAM6C,OAAO/C,GAAK+C,OAAOrM,EAAQuzB,SAAS/pB,IAAK,IAInF,IAAK,CACDnM,KAAM,CAAC2C,EAA+B3C,IAC3BA,EAAK6C,KAAKqW,OAAO,CAACjN,EAAGE,IAAM6C,OAAO/C,GAAK+C,OAAOrM,EAAQuzB,SAAS/pB,IAAK,IAInF4sB,IAAK,CACD/4B,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,yBAExC,OAAOgL,KAAKitB,IAAIj4B,KAIxBg6C,KAAM,CACF96C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,0BAExC,OAAOgL,KAAKgvC,KAAKh6C,KAIzBs5B,KAAM,CACFp6B,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,0BAExC,OAAOgL,KAAKsuB,KAAKt5B,KAIzBqa,KAAM,CACFnb,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,0BAExC,OAAOgL,KAAKqP,KAAKra,KAIzBi6C,KAAM,CACF/6C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,0BAExC,OAAOgL,KAAKivC,KAAKj6C,KAIzB0gB,IAAK,CACDxhB,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,yBAExC,OAAOgL,KAAK0V,IAAI1gB,KAIxBqG,EAAG,CACCnH,KAAM,IACK8L,KAAKyuB,GAIpBrrB,MAAO,CACHlP,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,2BAExC,OAAOgL,KAAKoD,MAAMpO,KAI1Bk6C,GAAI,CACAh7C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,wBAExC,OAAOgL,KAAKgP,IAAIha,KAIxBm6C,IAAK,CACDj7C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,yBAExC,OAAOgL,KAAK8V,KAAK9gB,KAIzBo6C,MAAO,CACHl7C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,2BAExC,OAAOgL,KAAKovC,MAAMp6C,KAI1ByL,IAAK,CACDvM,KAAM,CAAC2C,EAA+B3C,IAC3B8L,KAAKS,OAAOvM,EAAK6C,KAAK2F,IAAI5E,GAAKoL,OAAOrM,EAAQuzB,SAAStyB,OAItEyI,IAAK,CACDrM,KAAM,CAAC2C,EAA+B3C,IAC3B8L,KAAKO,OAAOrM,EAAK6C,KAAK2F,IAAI5E,GAAKoL,OAAOrM,EAAQuzB,SAAStyB,OAYtEgJ,MAAO,CACH5M,KAAM,CAAC2C,EAA+B3C,KAClC,MAAM4D,EAAIjB,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC/BwJ,EAAM1J,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACjC0J,EAAM5J,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAEvC,GAAiB,iBAANe,GAAiC,iBAARyI,GAAmC,iBAARE,EAC3D,MAAM,IAAIrG,MAAM,qBAAqBtC,OAAOyI,MAAQE,0BAExD,OAAO1K,EAAMkJ,UAAU6B,MAAMhJ,EAAGyI,EAAKE,KAI7C4uC,GAAI,CACAn7C,KAAM,IACK8L,KAAKkP,IAIpBiH,MAAO,CACHjiB,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,2BAExC,OAAOgL,KAAKmW,MAAMnhB,KAI1Bgc,IAAK,CACD9c,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,yBAExC,OAAOgL,KAAKgR,IAAIhc,KAIxBq4B,KAAM,CACFn5B,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,0BAExC,OAAOgL,KAAKqtB,KAAKr4B,KAIzBia,IAAK,CACD/a,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAqB,iBAAV/B,EACP,MAAM,IAAIoF,MAAM,oBAAoBpF,yBAExC,OAAOgL,KAAKiP,IAAIja,MAKf,EAAA03C,cAAuCe,G,qGCzQpD,MAAMA,EAAY,CACdx1C,OAAQ,CACJ/D,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,GAAIgB,MAAMC,QAAQhD,IAA2B,iBAAVA,EAC/B,OAAOA,EAAMiD,OAEjB,MAAM,IAAImC,MAAM,oBAAoBpF,8BAG5Cs6C,SAAU,CACNp7C,KAAM,CAAC2C,EAA+B3C,KAClC,IAAK,MAAM+C,KAAa/C,EAAK6C,KAAM,CAC/B,MAAM/B,EAAQ6B,EAAQuzB,SAASnzB,GAC/B,GAAc,OAAVjC,EACA,OAAOA,EAGf,OAAO,QAKN,EAAA83C,cAAuCW,G,uGC1BpD,aAEA,QAGM73C,EAAiBnB,OAAOkB,UAAUC,eAExC,IAAK25C,EAKL,SAASC,EAAa34C,EAA+BE,EAAc04C,G,MAC/D,MAAMC,EAAa74C,EAAQuzB,SAASrzB,EAAK,IAEzC,GAA0B,iBAAf24C,EACP,MAAM,IAAIt1C,MAAM,qCAGpB,MAAM3E,EAASoB,EAAQuzB,SAASrzB,EAAK,IAErC,GAAItB,GAA4B,iBAAXA,EAAqB,CACtC,GAAI,EAAA0R,IAAImsB,MAAM79B,GAAS,CACnB,MAAMT,EAAiC,QAA5B,EAAGS,EAAO6R,OAAOooC,UAAW,QAAI,KAC3C,OAAOD,IAAeF,EAAW36C,IAAMI,EAAkB,OAAVA,EAEnD,GAAIY,EAAe1B,KAAKuB,EAAQi6C,GAC5B,OAAOD,IAAeF,EAAW36C,KAAMa,EAAOi6C,GAItD,OAAOD,IAAeF,EAAW36C,KAAM,MAxB3C,SAAK26C,GACD,iBACA,iBAFJ,CAAKA,MAAU,KA2Bf,MAAM9B,EAAY,CACdkC,GAAI,CACAz7C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMc,EAAQ6B,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACnCtB,EAASoB,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAC1C,OAAqB,iBAAV/B,GAAwC,iBAAXS,KAE7BsC,MAAMC,QAAQvC,KADdA,EAAO40C,SAASr1C,KAQnCJ,IAAK,CACDV,KAAM,CAAC2C,EAA+B3C,IAClCs7C,EAAa34C,EAAS3C,EAAK6C,KAAMw4C,EAAW36C,MAGpDsI,IAAK,CACDhJ,KAAM,CAAC2C,EAA+B3C,IAClCs7C,EAAa34C,EAAS3C,EAAK6C,KAAMw4C,EAAWryC,MAGpD,qBAAsB,CAClB/B,kBAAmB,KAAM,EACzBjH,KAAM,CAAC2C,EAA+B3C,IAC9B2C,EAAQmC,QAAU,EAAAd,UAAUmyB,QACrBxzB,EAAQkC,IAEZ7E,IAKN,EAAA+4C,gBAAyCQ,G,uGClEtD,MAAMA,EAAY,CACdjR,OAAQ,CACJtoC,KAAM,CAAC2C,EAA+B3C,IAC3B,GAAGsoC,UAAUtoC,EAAK6C,KAAK2F,IAAIyD,GAAKmD,OAAOzM,EAAQuzB,SAASjqB,OAIvEyvC,SAAU,CACN17C,KAAM,CAAC2C,EAA+B3C,IAC3BoP,OAAOzM,EAAQuzB,SAASl2B,EAAK6C,KAAK,KAAK84C,qBAItDC,OAAQ,CACJ57C,KAAM,CAAC2C,EAA+B3C,IAC3BoP,OAAOzM,EAAQuzB,SAASl2B,EAAK6C,KAAK,KAAKg5C,qBAItD,KAAM,CACF77C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMkiB,EAAOvf,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAClCs3C,EAAQx3C,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,MAAoB,iBAATqf,GAAsC,iBAAVi4B,IACH,IAAzBj4B,EAAKxL,QAAQyjC,KAMhC,KAAM,CACFn6C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMkiB,EAAOvf,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAClCs3C,EAAQx3C,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,MAAoB,iBAATqf,GAAsC,iBAAVi4B,GAC5Bj4B,EAAK3L,WAAW4jC,KAMnC,KAAM,CACFn6C,KAAM,CAAC2C,EAA+B3C,KAClC,MAAMkiB,EAAOvf,EAAQuzB,SAASl2B,EAAK6C,KAAK,IAClCs3C,EAAQx3C,EAAQuzB,SAASl2B,EAAK6C,KAAK,IACzC,MAAoB,iBAATqf,GAAsC,iBAAVi4B,GAC5Bj4B,EAAKzL,SAAS0jC,MAOxB,EAAA1B,gBAAyCc,G,qGC7CzC,EAAAZ,cARK,CACdmD,OAAQ,CACJ97C,KAAM,CAAC2C,EAA+B3C,WACpB2C,EAAQuzB,SAASl2B,EAAK6C,KAAK,O,uGCLrD,aAGA,OAMA,SAASk5C,EACLp5C,EACA3C,EACAqY,GAEA,IAAI2jC,EACJ,OAAQ3jC,GACJ,IAAK,UACD2jC,EAAOn6C,EAAMoG,QACb,MACJ,IAAK,UACD+zC,EAAOn6C,EAAMuG,QACb,MACJ,IAAK,UACD4zC,EAAOn6C,EAAMyG,QAGrB,IAAK,MAAMvF,KAAa/C,EAAK6C,KAAM,CAC/B,MAAM/B,EAAQ6B,EAAQuzB,SAASnzB,GAC/B,GAAIjC,aAAiBk7C,EACjB,OAAOl7C,EAGf,MAAM,IAAIoF,MAAM,eAAemS,MAGnC,SAAS4jC,EACLt5C,EACA3C,EACAqY,GAEA,IAAI6jC,EACApiC,EAEJ,OAAQzB,GACJ,IAAK,UACD6jC,EAAar6C,EAAMoG,QACnB6R,EAAa,EACb,MACJ,IAAK,UACDoiC,EAAar6C,EAAMuG,QACnB0R,EAAa,EACb,MACJ,IAAK,UACDoiC,EAAar6C,EAAMyG,QACnBwR,EAAa,EAIrB,IAAK,MAAM/W,KAAa/C,EAAK6C,KAAM,CAC/B,MAAM/B,EAAQ6B,EAAQuzB,SAASnzB,GAC/B,GAAIjC,aAAiBo7C,EACjB,OAAOp7C,EACJ,GACH+C,MAAMC,QAAQhD,IACdA,EAAMiD,SAAW+V,GACjBhZ,EAAM0G,MAAM5D,GAAkB,iBAANA,GAExB,OAAO,IAAIs4C,GAAaC,UAAUr7C,GAG1C,MAAM,IAAIoF,MAAM,eAAemS,MAGnC,MAAMkhC,EAAY,CACd,cAAe,CACXv5C,KAAM,CAAC2C,EAA+B3C,KAClC,QAAoByE,IAAhBzE,EAAKo8C,OACL,OAAOp8C,EAAKo8C,OAGhB,GAAIp8C,EAAK6C,KAAKkB,OAAS,EACnB,MAAM,IAAImC,MAAM,wBACb,GAAIlG,EAAK6C,KAAKkB,OAAS,EAC1B,MAAM,IAAImC,MAAM,sBAGpB,MAAM4T,EAAa9Z,EAAK6C,KAAK2F,IAAIkuC,GAAO/zC,EAAQuzB,SAASwgB,IAUzD,IAAI9tC,EAEJ,OAVAkR,EAAWhX,QAAQ,CAACmqC,EAASjN,KACzB,GAAuB,iBAAZiN,EACP,MAAM,IAAI/mC,MACN,sCAAsC85B,6BAO1ClmB,EAAW/V,QACf,KAAK,EACD6E,GAAS,IAAI/G,EAAMoG,SAAUk0C,UAAUriC,GACvC,MACJ,KAAK,EACDlR,GAAS,IAAI/G,EAAMuG,SAAU+zC,UAAUriC,GACvC,MACJ,KAAK,EACDlR,GAAS,IAAI/G,EAAMyG,SAAU6zC,UAAUriC,GACvC,MACJ,QACI,MAAM,IAAI5T,MAAM,sBAOxB,OAJIlG,EAAK6C,KAAK2E,MAAMkvC,GAAOA,aAAe,EAAA5wC,qBACtC9F,EAAKo8C,OAASxzC,GAGXA,IAGfyzC,QAAS,CACLr8C,KAAM,CAAC2C,EAA+B3C,IAAmB+7C,EAASp5C,EAAS3C,EAAM,YAErFs8C,QAAS,CACLt8C,KAAM,CAAC2C,EAA+B3C,IAAmB+7C,EAASp5C,EAAS3C,EAAM,YAErFu8C,QAAS,CACLv8C,KAAM,CAAC2C,EAA+B3C,IAAmB+7C,EAASp5C,EAAS3C,EAAM,YAErF,aAAc,CACVA,KAAM,CAAC2C,EAA+B3C,IAAmBi8C,EAASt5C,EAAS3C,EAAM,YAErF,aAAc,CACVA,KAAM,CAAC2C,EAA+B3C,IAAmBi8C,EAASt5C,EAAS3C,EAAM,YAErF,aAAc,CACVA,KAAM,CAAC2C,EAA+B3C,IAAmBi8C,EAASt5C,EAAS3C,EAAM,aAI5E,EAAAk5C,gBAAyCK,G,wGC5ItD,aAkCMiD,EAAW,IAdjB,MAcqBvpC,KAKrB,yBACI,qBAAqB3Q,EAAuBm6C,GACxC,OAAOn6C,EAGX,wBAAwBA,EAA0Bm6C,GAC9C,OAAOn6C,EAGX,uBAAuBA,EAAyBm6C,GAC5C,OAAOn6C,EAGX,uBAAuBA,EAAyBm6C,GAC5C,OAAOn6C,EAGX,uBAAuBA,EAAyBm6C,GAC5C,OAAOn6C,EAGX,aAAaA,EAAeK,GACxB,GAAIA,EAAQ+5C,UAAY/5C,EAAQ+5C,SAAS1zC,IAAI1G,EAAKlC,MAC9C,OAAOkC,EAEX,MAAMxB,EAAQ6B,EAAQkC,IAAIuO,OAAO9Q,EAAKlC,MACtC,OAAO,EAAAwF,YAAYmwC,eAAoBtxC,IAAV3D,EAAsBA,EAAQ,MAG/D,sBAAsBwB,EAAwBK,GAC1C,GAAIA,EAAQ+5C,UAAY/5C,EAAQ+5C,SAAS1zC,IAAI1G,EAAKlC,MAC9C,OAAOkC,EAEX,MAAMxB,OAA0C2D,IAAlC9B,EAAQkC,IAAIuO,OAAO9Q,EAAKlC,MACtC,OAAO,EAAAwF,YAAYmwC,UAAUj1C,GAGjC,cAAcwB,EAAgBK,GAC1B,MAAME,EAAOP,EAAKO,KAAK2F,IAAIkuC,GAAOA,EAAIl0C,OAAOC,KAAME,IACnD,OAAIE,EAAKqE,KAAK,CAAC+E,EAAGpM,IAAMoM,IAAM3J,EAAKO,KAAKhD,IAC7B,IAAI,EAAAgH,SAASvE,EAAKU,GAAIH,GAE1BP,EAGX,eAAe6T,EAAkBxT,GAC7B,MAAM7B,EAAQqV,EAAMrV,MAAM0B,OAAOC,KAAME,GAEvC,GAAI7B,aAAiB,EAAA8E,YAAa,CAC9B,MAAMjF,EAAIG,EAAMA,MAChB,IAAK,MAAO2H,EAAOC,KAASyN,EAAMhT,SAAU,CACxC,GAAIU,MAAMC,QAAQ2E,IAAWA,EAAgB0tC,SAASx1C,GAClD,OAAO+H,EAAKlG,OAAOC,KAAME,GACtB,GAAI8F,IAAU9H,EACjB,OAAO+H,EAAKlG,OAAOC,KAAME,GAGjC,OAAOwT,EAAM7S,SAASd,OAAOC,KAAME,GAGvC,IAAIg6C,EAAUxmC,EAAMrV,QAAUA,EAE9B,MAAMqC,EAAsCgT,EAAMhT,SAASqF,IAAI,EAAEC,EAAOpF,MACpE,MAAMu5C,EAAYv5C,EAAOb,OAAOC,KAAME,GAItC,OAHIi6C,IAAcv5C,IACds5C,GAAU,GAEP,CAACl0C,EAAOm0C,KAGbt5C,EAAW6S,EAAM7S,SAASd,OAAOC,KAAME,GAM7C,OAJIW,IAAa6S,EAAM7S,WACnBq5C,GAAU,GAGPA,EAAU,IAAI,EAAAt1C,UAAUvG,EAAOqC,EAAUG,GAAY6S,EAGhE,cAAc7T,EAAgBK,GAC1B,MAAMQ,EAAgC,GAEtC,IAAIw5C,GAAU,EAEd,IAAK,MAAOp5C,EAAWF,KAAWf,EAAKa,SAAU,CAC7C,MAAM05C,EAAet5C,EAAUf,OAAOC,KAAME,GACtCm6C,EAAOD,EAAat6C,eAC1B,GAAKgB,EAAU6D,aAAwC,IAAzB01C,EAAK36C,WAAW+P,KAKtC2qC,IAAiBt5C,IACjBo5C,GAAU,GAEdx5C,EAASwF,KAAK,CAACk0C,EAAcx5C,SAP7B,GAAIuL,QAAQiuC,EAAa3mB,SAASsmB,EAAU,EAAAx4C,UAAU+4C,YAClD,OAAO15C,EAAOb,OAAOC,KAAME,GAUvC,GAAwB,IAApBQ,EAASY,OAIT,OAAOzB,EAAKgB,SAASd,OAAOC,KAAME,GAGlCQ,EAASY,SAAWzB,EAAKa,SAASY,SAKlC44C,GAAU,GAKdx5C,EAASL,QAAQO,IACb,MAAM25C,EAAqB35C,EAAO,GAAGb,OAAOC,KAAME,GAE9Cq6C,IAAuB35C,EAAO,KAC9Bs5C,GAAU,GAGdt5C,EAAO,GAAK25C,IAGhB,MAAM15C,EAAWhB,EAAKgB,SAASd,OAAOC,KAAME,GAM5C,OAJIW,IAAahB,EAAKgB,WAClBq5C,GAAU,GAGTA,EAKE,IAAI,EAAAj1C,SAASvE,EAAUG,GAHnBhB,EAMf,cAAcA,EAAgBK,GAC1B,MAAMa,EAAQlB,EAAKkB,MAAMhB,OAAOC,KAAME,GAChCc,EAAenB,EAAKmB,aAAajB,OAAOC,KAAME,GAC9Ce,EAA+BpB,EAAKoB,MAAM8E,IAAI,EAAEpH,EAAKN,KAAW,CAClEM,EACAN,EAAM0B,OAAOC,KAAME,KAEvB,OAAO,IAAI,EAAAkF,SAASrE,EAAOC,EAAcC,GAG7C,qBAAqBpB,EAAuBK,GACxC,MAAMa,EAAQlB,EAAKkB,MAAMhB,OAAOC,KAAME,GAChCe,EAA+BpB,EAAKoB,MAAM8E,IAAI,EAAEpH,EAAKN,KAAW,CAClEM,EACAN,EAAM0B,OAAOC,KAAME,KAEvB,OAAO,IAAI,EAAAoF,gBAAgBzF,EAAKtB,KAAMwC,EAAOE,M,kGCnMrD,aAeA,IAAKu5C,EAwFAC,EArDL,SAASC,EAAQC,GACb,OAAQA,GACJ,KAAKH,EAAUI,IACf,KAAKJ,EAAUK,GACf,KAAKL,EAAUM,GACf,KAAKN,EAAUO,MACX,OAAO,EACX,QACI,OAAO,GAOnB,SAASC,EAASL,GACd,OAAOA,GAAaH,EAAUS,IAAMN,GAAaH,EAAUU,GAM/D,SAASC,EAASR,GACd,OACKA,GAAaH,EAAUhxC,GAAKmxC,GAAaH,EAAU50C,GACnD+0C,GAAaH,EAAUY,GAAKT,GAAaH,EAAUa,EAc5D,SAASC,EAAYX,GACjB,OARJ,SAA0BA,GACtB,OAAOQ,EAASR,IAAcK,EAASL,GAQnCY,CAAiBZ,IACjBA,IAAcH,EAAU75C,GACxBg6C,IAAcH,EAAUgB,QACxBb,IAAcH,EAAUiB,KACxBd,IAAcH,EAAUkB,UACxBf,IAAcH,EAAUmB,SAmChC,SAASC,EAAWC,GAChB,OAAQA,GACJ,KAAKpB,EAAMqB,IACP,MAAO,MACX,KAAKrB,EAAMh3C,MACP,MAAO,QACX,KAAKg3C,EAAMsB,WACP,MAAO,aACX,KAAKtB,EAAMluC,OACP,MAAO,SACX,KAAKkuC,EAAM9tC,OACP,MAAO,SACX,KAAK8tC,EAAMuB,MACP,MAAO,IACX,KAAKvB,EAAMwB,OACP,MAAO,IACX,KAAKxB,EAAMyB,OACP,MAAO,IACX,KAAKzB,EAAMiB,SACP,MAAO,IACX,KAAKjB,EAAMkB,SACP,MAAO,IACX,KAAKlB,EAAM0B,QACP,MAAO,IACX,KAAK1B,EAAM2B,WACP,MAAO,KACX,KAAK3B,EAAM4B,WACP,MAAO,KACX,KAAK5B,EAAM6B,YACP,MAAO,KACX,KAAK7B,EAAM8B,WACP,MAAO,KACX,KAAK9B,EAAM+B,aACP,MAAO,KACX,KAAK/B,EAAMgC,KACP,MAAO,IACX,KAAKhC,EAAMiC,QACP,MAAO,IACX,KAAKjC,EAAMkC,UACP,MAAO,KACX,KAAKlC,EAAMmC,aACP,MAAO,KACX,KAAKnC,EAAMoC,OACP,MAAO,KACX,KAAKpC,EAAMqC,OACP,MAAO,KACX,QACI,MAAM,IAAIr5C,MAAM,iBAAiBo4C,OAnK7C,SAAKrB,GACD,iBACA,gBACA,gBACA,sBACA,wBACA,wBACA,sBACA,kBACA,4BACA,8BACA,4BACA,gBACA,gBACA,cACA,cACA,cACA,cACA,eACA,kCACA,kCACA,0BACA,sBACA,sBACA,uBACA,wBACA,oBACA,0BACA,mBACA,kBA7BJ,CAAKA,MAAS,KAwFd,SAAKC,GACD,iBACA,qBACA,+BACA,uBACA,uBACA,qBACA,uBACA,uBACA,2BACA,2BACA,0BACA,gCACA,gCACA,kCACA,gCACA,oCACA,oBACA,0BACA,8BACA,oCACA,wBACA,wBAtBJ,CAAKA,MAAK,KAkFV,MAAMsC,EAMF,YAAqBt7C,GAAA,KAAAA,OALb,KAAAu7C,QAAiBvC,EAAMh3C,MACvB,KAAAw5C,QAAU,EACV,KAAAC,OAAiB1C,EAAUK,GAQnC,QACI,OAAO76C,KAAKg9C,QAMhB,OACI,OAAOh9C,KAAKm9C,QAAU,GAM1B,OAEI,GADAn9C,KAAKg9C,QAAUh9C,KAAKo9C,QAChBp9C,KAAKg9C,UAAYvC,EAAMh3C,MACvB,MAAM,IAAIA,MAAM,wBAAwBzD,KAAKk9C,UAEjD,OAAOl9C,KAAKg9C,QAGR,QACJh9C,KAAKk9C,OAASl9C,KAAKyB,KAAK47C,YAAYr9C,KAAKi9C,YAAc,EAGnD,QAEJ,IADAj9C,KAAKm9C,YAASn7C,EACP04C,EAAQ16C,KAAKk9C,SAChBl9C,KAAKs9C,QAET,GAAoB,IAAhBt9C,KAAKk9C,OACL,OAAOzC,EAAMqB,IAEjB,MAAMyB,EAAKv9C,KAAKk9C,OAEhB,OADAl9C,KAAKs9C,QACGC,GACJ,KAAK/C,EAAUyB,OACX,OAAOxB,EAAMwB,OACjB,KAAKzB,EAAU0B,OACX,OAAOzB,EAAMyB,OACjB,KAAK1B,EAAUkB,SACX,OAAOjB,EAAMiB,SACjB,KAAKlB,EAAUmB,SACX,OAAOlB,EAAMkB,SACjB,KAAKnB,EAAUwB,MACX,OAAOvB,EAAMuB,MACjB,KAAKxB,EAAUgD,YACf,KAAKhD,EAAUiD,YAAa,CACxB,MAAM1rB,EAAQ/xB,KAAKi9C,QAAU,EAC7B,KAAOj9C,KAAKk9C,QAAUl9C,KAAKk9C,SAAWK,GAElCv9C,KAAKs9C,QAET,GAAIt9C,KAAKk9C,SAAWK,EAChB,MAAM,IAAI95C,MAAM,6BAIpB,OAFAzD,KAAKs9C,QACLt9C,KAAKm9C,OAASn9C,KAAKyB,KAAKmN,UAAUmjB,EAAO/xB,KAAKi9C,QAAU,GACjDxC,EAAM9tC,OAEjB,KAAK6tC,EAAU2B,QACX,OAAIn8C,KAAKk9C,SAAW1C,EAAUkD,OAC1B19C,KAAKs9C,QACE7C,EAAM+B,cAEV/B,EAAM0B,QACjB,KAAK3B,EAAUmD,MACX,OAAI39C,KAAKk9C,SAAW1C,EAAUkD,OAC1B19C,KAAKs9C,QACE7C,EAAM4B,YAEV5B,EAAMh3C,MACjB,KAAK+2C,EAAUoD,MACX,OAAI59C,KAAKk9C,SAAW1C,EAAUkD,OAC1B19C,KAAKs9C,QACE7C,EAAM2B,YAEV3B,EAAMh3C,MACjB,KAAK+2C,EAAUkD,MACX,OAAI19C,KAAKk9C,SAAW1C,EAAUkD,OAC1B19C,KAAKs9C,QACE7C,EAAM8B,YAEV9B,EAAMh3C,MACjB,KAAK+2C,EAAUiC,KACX,OAAIz8C,KAAKk9C,SAAW1C,EAAUkD,OAC1B19C,KAAKs9C,QACE7C,EAAMkC,WAEVlC,EAAMgC,KACjB,KAAKjC,EAAUkC,QACX,OAAI18C,KAAKk9C,SAAW1C,EAAUkD,OAC1B19C,KAAKs9C,QACE7C,EAAMmC,cAEVnC,EAAMiC,QACjB,KAAKlC,EAAUqD,IACX,OAAI79C,KAAKk9C,SAAW1C,EAAUqD,KAC1B79C,KAAKs9C,QACE7C,EAAMoC,QAEVpC,EAAMh3C,MACjB,KAAK+2C,EAAUsD,IACX,OAAI99C,KAAKk9C,SAAW1C,EAAUsD,KAC1B99C,KAAKs9C,QACE7C,EAAMqC,QAEVrC,EAAMh3C,MACjB,QAAS,CACL,MAAMsuB,EAAQ/xB,KAAKi9C,QAAU,EAC7B,GACI9B,EAASoC,IACTA,IAAO/C,EAAU75C,GAChB48C,IAAO/C,EAAUgB,QAAUF,EAAYt7C,KAAKk9C,QAC/C,CACE,KAAO5B,EAAYt7C,KAAKk9C,SACpBl9C,KAAKs9C,QAGT,OADAt9C,KAAKm9C,OAASn9C,KAAKyB,KAAKmN,UAAUmjB,EAAO/xB,KAAKi9C,QAAU,GACjDxC,EAAMsB,WACV,GAAIf,EAASuC,GAAK,CACrB,KAAOvC,EAASh7C,KAAKk9C,SACjBl9C,KAAKs9C,QAET,GAAIt9C,KAAKk9C,SAAW1C,EAAUiB,IAE1B,IADAz7C,KAAKs9C,QACEtC,EAASh7C,KAAKk9C,SACjBl9C,KAAKs9C,QAIb,OADAt9C,KAAKm9C,OAASn9C,KAAKyB,KAAKmN,UAAUmjB,EAAO/xB,KAAKi9C,QAAU,GACjDxC,EAAMluC,OACV,GAAIgxC,IAAO/C,EAAUgB,OACxB,OAAIx7C,KAAKk9C,SAAW1C,EAAUkD,OAC1B19C,KAAKs9C,QACE7C,EAAM6B,aAEV7B,EAAMh3C,OAIzB,OAAOg3C,EAAMh3C,OAIrB,SAASs6C,EAAclC,GACnB,OAAQA,GACJ,KAAKpB,EAAM2B,WACP,MAAO,KACX,KAAK3B,EAAM4B,WACP,MAAO,KACX,KAAK5B,EAAM6B,YACP,MAAO,KACX,KAAK7B,EAAM8B,WACP,MAAO,KACX,KAAK9B,EAAM+B,aACP,MAAO,KACX,QACI,QAIZ,SAASwB,EAAgBnC,GACrB,OAAQA,GACJ,KAAKpB,EAAMgC,KACP,MAAO,IACX,KAAKhC,EAAMiC,QACP,MAAO,IACX,KAAKjC,EAAMkC,UACP,MAAO,KACX,KAAKlC,EAAMmC,aACP,MAAO,KACX,QACI,QAIZ,mBAGI,YAAYn7C,GACRzB,KAAKi+C,IAAM,IAAIlB,EAAMt7C,GACrBzB,KAAKi+C,IAAIzd,OAGb,QACI,OAAOxgC,KAAKk+C,iBAGR,SAASrC,GACb,GAAI77C,KAAKi+C,IAAIpC,UAAYA,EACrB,MAAM,IAAIp4C,MACN,iCAAiCm4C,EAAWC,WACxC,UAAUD,EAAW57C,KAAKi+C,IAAIpC,aAG1C77C,KAAKi+C,IAAIzd,OAGL,eACJ,OAAQxgC,KAAKi+C,IAAIpC,SACb,KAAKpB,EAAMsB,WAAY,CACnB,MAAMzmC,EAAOtV,KAAKi+C,IAAI3oC,OACtB,OAAQA,GACJ,IAAK,MACDtV,KAAKi+C,IAAIzd,OACTxgC,KAAKm+C,SAAS1D,EAAMwB,QACpB,MAAMmC,EAAep+C,KAAKi+C,IAAI3oC,OAG9B,OAFAtV,KAAKm+C,SAAS1D,EAAMsB,YACpB/7C,KAAKm+C,SAAS1D,EAAMyB,QACb,IAAI,EAAAh4C,iBAAiBk6C,GAChC,IAAK,SACDp+C,KAAKi+C,IAAIzd,OACTxgC,KAAKm+C,SAAS1D,EAAMwB,QACpB,MAAM59C,EAAQ2B,KAAKk+C,iBAEnB,OADAl+C,KAAKm+C,SAAS1D,EAAMyB,QACb,IAAI,EAAA93C,SAAS,SAAU,CAAC/F,IACnC,QACI,MAAMwB,EAAO,IAAI,EAAAkD,QAAQuS,GAEzB,OADAtV,KAAKi+C,IAAIzd,OACF3gC,GAInB,KAAK46C,EAAMwB,OAAQ,CACfj8C,KAAKi+C,IAAIzd,OACT,MAAM3gC,EAAOG,KAAKk+C,iBAElB,OADAl+C,KAAKm+C,SAAS1D,EAAMyB,QACbr8C,EAGX,QACI,OAAOG,KAAKq+C,gBAIhB,eACJ,OAAQr+C,KAAKi+C,IAAIpC,SACb,KAAKpB,EAAMluC,OAAQ,CACf,MAAM1M,EAAO,IAAI,EAAAwD,kBAAkBgvC,WAAWryC,KAAKi+C,IAAI3oC,SAEvD,OADAtV,KAAKi+C,IAAIzd,OACF3gC,EAEX,KAAK46C,EAAM9tC,OAAQ,CACf,MAAM9M,EAAO,IAAI,EAAAyD,kBAAkBtD,KAAKi+C,IAAI3oC,QAE5C,OADAtV,KAAKi+C,IAAIzd,OACF3gC,EAEX,QACI,MAAM,IAAI4D,MAAM,iBAIpB,aACJ,OAAIzD,KAAKi+C,IAAIpC,UAAYpB,EAAM0B,SAC3Bn8C,KAAKi+C,IAAIzd,OACF,IAAI,EAAAp8B,SAAS,IAAK,CAACpE,KAAKs+C,gBAE5Bt+C,KAAKu+C,eAGR,kBACJ,IAAI1+C,EAAOG,KAAKs+C,aAChB,OACI,GAAIt+C,KAAKi+C,IAAIpC,UAAYpB,EAAMsB,YAAkC,OAApB/7C,KAAKi+C,IAAI3oC,OAAiB,CACnEtV,KAAKi+C,IAAIzd,OACTxgC,KAAKm+C,SAAS1D,EAAMiB,UACpB,MAAMnR,EAAW,CAACvqC,KAAKq+C,gBACvB,KAAOr+C,KAAKi+C,IAAIpC,UAAYpB,EAAMuB,OAC9Bh8C,KAAKi+C,IAAIzd,OACT+J,EAASrkC,KAAKlG,KAAKq+C,gBAEvBr+C,KAAKm+C,SAAS1D,EAAMkB,UACpB97C,EAAO,IAAI,EAAAuE,SAAS,KAAM,CACtBvE,EACA,EAAAsD,YAAYmwC,UAAU/I,EAASxkC,IAAI,EAAG1H,WAAYA,UAEnD,CACH,MAAMkC,EAAKy9C,EAAgBh+C,KAAKi+C,IAAIpC,SACpC,QAAW75C,IAAPzB,EACA,MAEJP,KAAKi+C,IAAIzd,OACT,MAAMkX,EAAQ13C,KAAKs+C,aACnBz+C,EAAO,IAAI,EAAAuE,SAAS7D,EAAI,CAACV,EAAM63C,IAGvC,OAAO73C,EAGH,gBACJ,IAAIA,EAAOG,KAAKw+C,kBAChB,OAAa,CACT,IAAIj+C,EAAyBw9C,EAAc/9C,KAAKi+C,IAAIpC,SAEpD,QAAW75C,IAAPzB,EACA,MAGO,OAAPA,IACAA,EAAK,MAGTP,KAAKi+C,IAAIzd,OACT,MAAMkX,EAAQ13C,KAAKw+C,kBACnB3+C,EAAO,IAAI,EAAAuE,SAAS7D,EAAI,CAACV,EAAM63C,IAEnC,OAAO73C,EAGH,kBACJ,MAAMA,EAAOG,KAAKy+C,gBAElB,GAAIz+C,KAAKi+C,IAAIpC,UAAYpB,EAAMqC,OAC3B,OAAOj9C,EAGX,MAAM6+C,EAAsB,CAAC7+C,GAE7B,GACIG,KAAKi+C,IAAIzd,OACTke,EAAYx4C,KAAKlG,KAAKy+C,uBACjBz+C,KAAKi+C,IAAIpC,UAAYpB,EAAMqC,QAEpC,OAAO,IAAI,EAAA14C,SAAS,MAAOs6C,GAGvB,iBACJ,MAAM7+C,EAAOG,KAAK2+C,kBAElB,GAAI3+C,KAAKi+C,IAAIpC,UAAYpB,EAAMoC,OAC3B,OAAOh9C,EAGX,MAAM6+C,EAAsB,CAAC7+C,GAE7B,GACIG,KAAKi+C,IAAIzd,OACTke,EAAYx4C,KAAKlG,KAAK2+C,yBACjB3+C,KAAKi+C,IAAIpC,UAAYpB,EAAMoC,QAEpC,OAAO,IAAI,EAAAz4C,SAAS,MAAOs6C,M,4LCvhBnC,SAAiB3hC,GAUb,IAAYU,EAqCAmhC,EA1CC,EAAAC,kCAAoC,yBAKjD,SAAYphC,GACR,4BACA,oBACA,sBAHJ,CAAYA,EAAA,EAAAA,qBAAA,EAAAA,mBAAkB,KAyBd,EAAAU,qBAAhB,SAAqCnT,GACjC,OACIA,GAC2B,iBAApBA,EAAQ8R,SACS,iBAAjB9R,EAAQ4K,MACf5K,EAAQ4K,OAAS6H,EAAmBW,aAO5C,SAAYwgC,GACR,iCACA,mCAFJ,CAAYA,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAuCJ,EAAAE,sBAAhB,SAAsCjhC,GAClC,MAAO,wCAAwC0C,KAAK1C,EAAM7S,UAkC9C,EAAAgS,iBAAhB,SAAiChS,GAC7B,OACIA,GAC2B,iBAApBA,EAAQ8R,SACS,iBAAjB9R,EAAQ4K,MACf5K,EAAQ4K,OAAS6H,EAAmBshC,SAmB5B,EAAAC,kBAAhB,SAAkCh0C,GAC9B,OACIA,GAC2B,iBAApBA,EAAQ8R,SACS,iBAAjB9R,EAAQ4K,MACf5K,EAAQ4K,OAAS6H,EAAmBC,UAtJhD,CAAiB,EAAAX,wBAAA,EAAAA,sBAAqB,M,2GCGtC,SAAiBkiC,GAIb,IAAYL,GAAZ,SAAYA,GACR,iCACA,6BACA,6BAHJ,CAAYA,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAkBJ,EAAAM,uBAAhB,SAAuCl0C,GACnC,OACIA,GAAmC,iBAAjBA,EAAQ4K,MAAqB5K,EAAQ4K,OAASgpC,EAASO,eAgBjE,EAAAC,qBAAhB,SAAqCp0C,GACjC,OAAOA,GAAmC,iBAAjBA,EAAQ4K,MAAqB5K,EAAQ4K,OAASgpC,EAASS,aAgBpE,EAAAC,cAAhB,SAA8Bt0C,GAC1B,OAAOA,GAAmC,iBAAjBA,EAAQ4K,MAAqB5K,EAAQ4K,OAASgpC,EAASW,aA1DxF,CAAiB,EAAAN,sBAAA,EAAAA,oBAAmB,M,iICYpC,0BAQI,YACW57B,EAAmB,EACnBm8B,EAAmC,IAAIC,iBADvC,KAAAp8B,WACA,KAAAm8B,kBAGX,aACI,OAAOx/C,KAAKw/C,gBAAgBE,OAOhC,QACI1/C,KAAKw/C,gBAAgBG,UAO7B,SAAiBC,GAIb,IAAYC,EAuCAjB,GAvCZ,SAAYiB,GACR,gCADJ,CAAYA,EAAA,EAAAA,qBAAA,EAAAA,mBAAkB,KA2Bd,EAAAC,uBAAhB,SAAuC90C,GACnC,OACIA,GAC2B,iBAApBA,EAAQ8R,SACS,iBAAjB9R,EAAQ4K,MACf5K,EAAQ4K,OAASiqC,EAAmBE,eAO5C,SAAYnB,GACR,0CACA,sCAFJ,CAAYA,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAmBJ,EAAAoB,oBAAhB,SAAoCh1C,GAChC,OACIA,GACwB,iBAAjBA,EAAQ4K,MACf5K,EAAQ4K,OAASgpC,EAASqB,mBAkBlB,EAAAC,kBAAhB,SAAkCl1C,GAC9B,OACIA,GAAmC,iBAAjBA,EAAQ4K,MAAqB5K,EAAQ4K,OAASgpC,EAASuB,iBAtFrF,CAAiB,EAAAP,wBAAA,EAAAA,sBAAqB,M,wQC7BtC,8BAAmCv4C,GAC/B,OACIA,GACe,iBAARA,GACqB,iBAArBA,EAAI6J,cACkB,iBAAtB7J,EAAI8J,gB,0GCvBnB,cACA,OAEA,OACA,OACA,OAEA,QAEA,OAEA,MAAMivC,UAA2B,EAAApoC,WAAjC,c,oBAEa,KAAApC,KAAuB,EAAA3F,eAAegI,OAG/C,eAAe8B,GACX,OAAO,EAIX,YACIvI,EACAE,EACAvL,GAWA,OATKA,IACDA,EAAU,IAAI/G,EAAM0Z,MAExB3S,EAAOyD,IAAInE,GAAK4D,KAAKkP,GACrBpS,EAAOyD,IAAIlE,EAAe,IAAV2D,KAAKkP,GACrBpS,EAAOyD,IAAIhE,EAAI4L,EACfrL,EAAO2D,IAAIrE,EAAI4D,KAAKkP,GACpBpS,EAAO2D,IAAIpE,EAAc,GAAV2D,KAAKkP,GACpBpS,EAAO2D,IAAIlE,EAAI8L,EACRvL,EAIX,aACIwC,EACAxC,GASA,OAPKA,IAEDA,EAAS,CAAEV,EAAG,EAAGC,EAAG,EAAGE,EAAG,IAE9BO,EAAOV,EAAIrG,EAAMkJ,UAAUW,SAASN,EAASP,WAC7CjC,EAAOT,EAAItG,EAAMkJ,UAAUW,SAASN,EAASR,UAC7ChC,EAAOP,EAAI+C,EAASN,UAAY,EACzBlC,EAIX,eAAeyS,GAEX,OADiB,EAAA1Q,eAAegR,YAAYN,EAAWlT,EAAGkT,EAAWnT,EAAGmT,EAAWhT,GAKvF,kBAAkBgT,GACd,OAAOA,EAAWhT,EAItB,WACIqN,EACA9M,GAEKA,IACDA,EAAU,IAAI/G,EAAM0Z,MAExB,MAAMlP,EAAM5J,KAAKoQ,aACb,IAAI,EAAAlI,eAAe+K,EAAO7B,MAAO6B,EAAO3B,KAAM2B,EAAOzB,cAEnD1H,EAAM9J,KAAKoQ,aACb,IAAI,EAAAlI,eAAe+K,EAAO5B,MAAO4B,EAAO1B,KAAM0B,EAAOvB,cAoBzD,OAlBI,EAAA8H,WAAWrT,IACXA,EAAOyD,IAAInE,EAAImE,EAAInE,EACnBU,EAAOyD,IAAIlE,EAAIkE,EAAIlE,EACnBS,EAAOyD,IAAIhE,EAAIgE,EAAIhE,EACnBO,EAAO2D,IAAIrE,EAAIqE,EAAIrE,EACnBU,EAAO2D,IAAIpE,EAAIoE,EAAIpE,EACnBS,EAAO2D,IAAIlE,EAAIkE,EAAIlE,GACZ,EAAA6T,mBAAmBtT,KAC1B,EAAAmC,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO0J,OACrC,EAAAvH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO2J,OACrC,EAAAxH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO4J,OACrC5J,EAAOyJ,SAASnK,EAAsB,IAAjBmE,EAAInE,EAAIqE,EAAIrE,GACjCU,EAAOyJ,SAASlK,EAAsB,IAAjBkE,EAAIlE,EAAIoE,EAAIpE,GACjCS,EAAOyJ,SAAShK,EAAsB,IAAjBgE,EAAIhE,EAAIkE,EAAIlE,GACjCO,EAAO6J,QAAQvK,EAAsB,IAAjBqE,EAAIrE,EAAImE,EAAInE,GAChCU,EAAO6J,QAAQtK,EAAsB,IAAjBoE,EAAIpE,EAAIkE,EAAIlE,GAChCS,EAAO6J,QAAQpK,EAAIyD,KAAKS,IAAIyC,OAAOmN,QAA2B,IAAjB5P,EAAIlE,EAAIgE,EAAIhE,KAEtDO,EAIX,aAAawT,GACT,MAAMC,EAAS5Z,KAAKuQ,eAAeoJ,EAAS/P,KACtCiQ,EAAS7Z,KAAKuQ,eAAeoJ,EAAS7P,KAC5C,OAAO,EAAA+G,OAAOiJ,gBAAgBF,EAAQC,GAI1C,eAAejB,GACX,OAAOA,EAAWhT,EAItB,oBAAoBgT,GAEhB,OADAA,EAAWhT,EAAI,EACRgT,EAIX,cAAcmB,EAA0BC,GAQpC,YAPehY,IAAXgY,EACAA,EAAS,CAAEvU,EAAG,EAAGC,EAAG,EAAGE,EAAG,IAE1BoU,EAAOvU,EAAI,EACXuU,EAAOtU,EAAI,EACXsU,EAAOpU,EAAI,GAERoU,GAOF,EAAAqmC,mBAAiC,IAAID,EAAmB,I,wGCpIrE,aACA,QACA,OACA,OACA,OAGA,QACA,QACA,QAEA,OA8BA,SAASE,EAAqBl4C,GAC1B,MAAMm4C,EAAY,EAAIl3C,KAAKkP,GACrBioC,EAAgBn3C,KAAKoD,MAAM,GAAKrE,EAAYm4C,EAAY,IAC9D,OAAOnhD,EAAMkJ,UAAU6B,MAAMq2C,EAAe,EAAG,GAGnD,SAASC,EAAgB7nC,GAIrB,OAHUvP,KAAKqtB,KACX9d,EAAWnT,EAAImT,EAAWnT,EAAImT,EAAWlT,EAAIkT,EAAWlT,EAAIkT,EAAWhT,EAAIgT,EAAWhT,GAW9F,SAAS86C,EACLztC,EACA0G,EACAzJ,GAEA,MAAMywC,EAAiE,IAAzCzwC,GAAa+C,EAAOvB,aAAe,IAE3DkvC,EAAexhD,EAAMkJ,UAAUW,SAASgK,EAAO3B,MAC/CuvC,EAAezhD,EAAMkJ,UAAUW,SAASgK,EAAO1B,MAE/CuvC,EAAuBR,EAAqBM,GAC5CG,EAAuBT,EAAqBO,GAElD,IAAIG,EAAO33C,KAAK0V,IAAI6hC,GAChBK,EAAOD,EACPE,EAAO73C,KAAKgR,IAAIumC,GAChBO,EAAOD,EAEX,IACI,IAAIV,EAAgBM,EAAuB,EAC3CN,GAAiBO,EACjBP,IACF,CAEE,MAAM/6C,GAAM+6C,EAAgB,EAAK,KAAuB,EAAhBA,GAAqB,GAC7DQ,EAAO33C,KAAKO,IAAInE,EAAGu7C,GACnBC,EAAO53C,KAAKS,IAAIrE,EAAGw7C,GAGnB,MAAMv7C,GAAqB,EAAhB86C,KAAuC,EAAhBA,GAAqB,GACvDU,EAAO73C,KAAKO,IAAIlE,EAAGw7C,GACnBC,EAAO93C,KAAKS,IAAIpE,EAAGy7C,GAGvB,MAAMC,EAAkB/3C,KAAK0V,IAAI8hC,GACjCG,EAAO33C,KAAKO,IAAIw3C,EAAiBJ,GACjCC,EAAO53C,KAAKS,IAAIs3C,EAAiBH,GAEjC,MAAMI,EAAkBh4C,KAAKgR,IAAIwmC,GACjCK,EAAO73C,KAAKO,IAAIy3C,EAAiBH,GACjCC,EAAO93C,KAAKS,IAAIu3C,EAAiBF,GAEjC,MAAMG,GAAWL,EAAOD,GAAQL,EAC1BY,GAAWN,EAAOD,GAAQL,EAE1Ba,GAAWL,EAAOD,GAAQP,EAC1Bc,GAAWN,EAAOD,GAAQP,EAG1Be,EAActiD,EAAMkJ,UAAUW,SAASgK,EAAO7B,OAC9CuwC,EAAcviD,EAAMkJ,UAAUW,SAASgK,EAAO5B,OAE9CuwC,EAAOv4C,KAAKgR,IAAIsnC,GAChBE,EAAOx4C,KAAKgR,IAAIqnC,GAEhBI,GAAWF,EAAOC,GAAQlB,EAC1BoB,GAAWH,EAAOC,GAAQlB,EAShC,OAPAhnC,EAAS/P,IAAInE,EAAI67C,EAAUC,EAC3B5nC,EAAS/P,IAAIlE,EAAI87C,EAAUC,EAC3B9nC,EAAS/P,IAAIhE,EAAIk8C,EAAUC,EAC3BpoC,EAAS7P,IAAIrE,EAAI67C,EAAUC,EAC3B5nC,EAAS7P,IAAIpE,EAAI87C,EAAUC,EAC3B9nC,EAAS7P,IAAIlE,EAAIk8C,EAAUC,EAEpBpoC,EAwBX,MAAMqoC,UAAyB,EAAAhqC,WAA/B,c,oBAEa,KAAApC,KAAuB,EAAA3F,eAAegyC,UAG/C,YACIC,EACAroB,EACA1zB,EAAkB,IAAI/G,EAAM0Z,MAE5B,MAAMqpC,EAASniD,KAAKkQ,UAAY2pB,EAOhC,OANA1zB,EAAOyD,IAAInE,GAAK08C,EAChBh8C,EAAOyD,IAAIlE,GAAKy8C,EAChBh8C,EAAOyD,IAAIhE,GAAKu8C,EAChBh8C,EAAO2D,IAAIrE,EAAI08C,EACfh8C,EAAO2D,IAAIpE,EAAIy8C,EACfh8C,EAAO2D,IAAIlE,EAAIu8C,EACRh8C,EAIX,aACIwC,EACAxC,EAA2B,EAAAmC,UAAUyB,WAAW,EAAG,EAAG,IAEtD,OAxCR,SACIpB,EACAy5C,EACAlyC,GAEA,MAAMiyC,EAASjyC,GAAavH,EAASN,UAAY,GAC3CF,EAAW/I,EAAMkJ,UAAUW,SAASN,EAASR,UAC7CC,EAAYhJ,EAAMkJ,UAAUW,SAASN,EAASP,WAC9Ci6C,EAAch5C,KAAK0V,IAAI5W,GAI7B,OAHAi6C,EAAW38C,EAAI08C,EAASE,EAAch5C,KAAK0V,IAAI3W,GAC/Cg6C,EAAW18C,EAAIy8C,EAASE,EAAch5C,KAAKgR,IAAIjS,GAC/Cg6C,EAAWx8C,EAAIu8C,EAAS94C,KAAKgR,IAAIlS,GAC1Bi6C,EA4BIE,CAAQ35C,EAAUxC,EAAQnG,KAAKkQ,WAI1C,eAAeC,GACX,MAAMoyC,EAAmBpyC,EAAM1K,EAAI0K,EAAM1K,EAAI0K,EAAMzK,EAAIyK,EAAMzK,EACvD88C,EAAiBn5C,KAAKqtB,KAAK6rB,GAC3BphD,EAAIgP,EAAMvK,EAAI48C,EAEpB,GAAIt5C,MAAM/H,GACN,OAAO,EAAA+G,eAAegR,YAAY,EAAG,GAAIlZ,KAAKkQ,WAGlD,MAAMiyC,EAAS94C,KAAKqtB,KAAK6rB,EAAmBpyC,EAAMvK,EAAIuK,EAAMvK,GAE5D,OAAO,EAAAsC,eAAegR,YAClB7P,KAAKqP,KAAKvX,GACVkI,KAAKguB,MAAMlnB,EAAMzK,EAAGyK,EAAM1K,GAC1B08C,EAASniD,KAAKkQ,WAKtB,kBAAkBC,GACd,MAAMoyC,EAAmBpyC,EAAM1K,EAAI0K,EAAM1K,EAAI0K,EAAMzK,EAAIyK,EAAMzK,EAAIyK,EAAMvK,EAAIuK,EAAMvK,EACjF,OAAOyD,KAAKqtB,KAAK6rB,GAAoB,EAAAvwC,eAAeE,kBAIxD,WACIe,EACA9M,EAAkB,IAAI/G,EAAM0Z,MAE5B,GAAI,EAAAU,WAAWrT,GACX,OAAOu6C,EAASztC,EAAQ9M,EAAQnG,KAAKkQ,WAClC,GAAI,EAAAuJ,mBAAmBtT,GAAS,CACnC,GAAI8M,EAAO9B,eAAiB,GAAI,CAC5B,MAAMsxC,EAAS/B,EAASztC,EAAQ,IAAI7T,EAAM0Z,KAAoB9Y,KAAKkQ,WAUnE,OATA,EAAA5H,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO0J,OACrC,EAAAvH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO2J,OACrC,EAAAxH,UAAUyB,WAAW,EAAG,EAAG,EAAG5D,EAAO4J,OACrC5J,EAAOyJ,SAASnK,EAAoC,IAA/Bg9C,EAAO34C,IAAIrE,EAAIg9C,EAAO74C,IAAInE,GAC/CU,EAAOyJ,SAASlK,EAAoC,IAA/B+8C,EAAO34C,IAAIpE,EAAI+8C,EAAO74C,IAAIlE,GAC/CS,EAAOyJ,SAAShK,EAAoC,IAA/B68C,EAAO34C,IAAIlE,EAAI68C,EAAO74C,IAAIhE,GAC/CO,EAAO6J,QAAQvK,EAAoC,IAA/Bg9C,EAAO34C,IAAIrE,EAAIg9C,EAAO74C,IAAInE,GAC9CU,EAAO6J,QAAQtK,EAAoC,IAA/B+8C,EAAO34C,IAAIpE,EAAI+8C,EAAO74C,IAAIlE,GAC9CS,EAAO6J,QAAQpK,EAAoC,IAA/B68C,EAAO34C,IAAIlE,EAAI68C,EAAO74C,IAAIhE,GACvCO,EAGX,MAAM,MAAEiL,EAAK,KAAEE,EAAI,MAAED,EAAK,KAAEE,EAAMP,OAAQ0xC,GAAQzvC,EAC5C0vC,EAAOD,EAAIt6C,UACXw6C,EAAOF,EAAIv6C,SACX06C,EAAWx5C,KAAK0V,IAAI3f,EAAMkJ,UAAUW,SAASmI,IAC7C0xC,EAAWz5C,KAAKgR,IAAIjb,EAAMkJ,UAAUW,SAASmI,IAC7C2xC,EAAU15C,KAAK0V,IAAI3f,EAAMkJ,UAAUW,SAASqI,IAC5C0xC,EAAU35C,KAAKgR,IAAIjb,EAAMkJ,UAAUW,SAASqI,IAC5C2xC,EAAW55C,KAAK0V,IAAI3f,EAAMkJ,UAAUW,SAASoI,IAC7C6xC,EAAW75C,KAAKgR,IAAIjb,EAAMkJ,UAAUW,SAASoI,IAC7C8xC,EAAU95C,KAAK0V,IAAI3f,EAAMkJ,UAAUW,SAASsI,IAC5C6xC,EAAU/5C,KAAKgR,IAAIjb,EAAMkJ,UAAUW,SAASsI,IAC5C8xC,EAAUh6C,KAAK0V,IAAI3f,EAAMkJ,UAAUW,SAAS05C,IAC5CW,EAAUj6C,KAAKgR,IAAIjb,EAAMkJ,UAAUW,SAAS05C,IAC5CY,EAAUl6C,KAAK0V,IAAI3f,EAAMkJ,UAAUW,SAAS25C,IAC5CY,EAAUn6C,KAAKgR,IAAIjb,EAAMkJ,UAAUW,SAAS25C,IAWlD,IAAIjxC,EACA8mB,EACAle,EARJ,EAAAjS,UAAUyB,WAAWs5C,EAAUE,EAASD,EAAUC,EAASC,EAASr9C,EAAO4J,OAG3E,EAAAzH,UAAUyB,YAAYu5C,EAASD,EAAS,EAAGl9C,EAAO0J,OAClD,EAAAvH,UAAUyB,YAAYs5C,EAAUG,GAAUF,EAAUE,EAASD,EAASp9C,EAAO2J,OAMzEsB,GAAS,GAETO,EAAQtI,KAAKitB,IACTusB,GAAYQ,GAAWL,EAAUI,GAAWE,GAAWH,EAAUJ,KAIrEtqB,EAAO8qB,EAAUT,EAAWU,EAAUX,EAGtCtoC,EACIgpC,EAAUL,EACVM,EAAUP,GAAYI,EAAUF,EAAUG,EAAUF,KAEpD/xC,GAAS,GAETM,EAAQtI,KAAKitB,IACT2sB,GAAYI,GAAWL,EAAUI,GAAWE,GAAWH,EAAUJ,KAIrExoC,EAAOgpC,EAAUL,EAAWM,EAAUP,IAGtCtxC,EAAQtI,KAAKitB,IAAI+sB,GAAWL,EAAUI,GAAWE,GAAWH,EAAUJ,IAGtExoC,EACIgpC,EAAUL,EACVM,EAAUP,GAAYK,EAAUF,EAAUC,EAAUF,IAI5D1qB,EACI8qB,EAAUT,EACVU,EAAUX,GAAYQ,EAAUF,EAAUG,EAAUF,IAG5D,MAAMK,EAAsD,IAA9CzjD,KAAKkQ,WAAa+C,EAAOvB,aAAe,IAChDgyC,EAAsD,IAA9C1jD,KAAKkQ,WAAa+C,EAAOzB,aAAe,IAIhD9T,EAAI6lD,GAAWF,EAAUF,EAAUG,EAAUF,GAE7C1qB,EAAOrvB,KAAKO,IACdq5C,EAAWvlD,EAAIwlD,EAAWM,EAC1BX,EAAWnlD,EAAIolD,EAAWU,GAkB9B,OAfA,EAAAl7C,UAAUyB,WACN4H,EAAQ8xC,GACPlpC,EAAOke,GAAQgrB,EAChBA,EAAO/qB,EAAOgrB,EACdv9C,EAAO6J,SAGX,EAAA1H,UAAUyB,WAAW,GAAI0uB,EAAOle,GAAQkpC,EAAMA,EAAOA,EAAMt9C,EAAOyJ,UAtS9E,SACIC,EACAC,EACAC,EACA5O,GAEA,MAAMsE,EAAIoK,EAAMpK,EAAItE,EAAEsE,EAAIqK,EAAMrK,EAAItE,EAAEuE,EAAIqK,EAAMtK,EAAItE,EAAEyE,EAChDF,EAAImK,EAAMnK,EAAIvE,EAAEsE,EAAIqK,EAAMpK,EAAIvE,EAAEuE,EAAIqK,EAAMrK,EAAIvE,EAAEyE,EAChDA,EAAIiK,EAAMjK,EAAIzE,EAAEsE,EAAIqK,EAAMlK,EAAIzE,EAAEuE,EAAIqK,EAAMnK,EAAIzE,EAAEyE,EACtDzE,EAAEsE,EAAIA,EACNtE,EAAEuE,EAAIA,EACNvE,EAAEyE,EAAIA,EA6RE+qC,CAAMxqC,EAAO0J,MAAO1J,EAAO2J,MAAO3J,EAAO4J,MAAO5J,EAAOyJ,UAEvDzJ,EAAOyJ,SAASnK,EAAIU,EAAOyJ,SAASnK,EAAIU,EAAO4J,MAAMtK,EAAIU,EAAO6J,QAAQpK,EACxEO,EAAOyJ,SAASlK,EAAIS,EAAOyJ,SAASlK,EAAIS,EAAO4J,MAAMrK,EAAIS,EAAO6J,QAAQpK,EACxEO,EAAOyJ,SAAShK,EAAIO,EAAOyJ,SAAShK,EAAIO,EAAO4J,MAAMnK,EAAIO,EAAO6J,QAAQpK,EAEjEO,EAGX,MAAM,IAAI1C,MAAM,wBAIpB,aAAakgD,GACT,MAAM,IAAIlgD,MAAM,2BAIpB,eAAesW,GACX,OAAO,EAIX,eAAenB,GACX,OAAO6nC,EAAgB7nC,GAAc5Y,KAAKkQ,UAI9C,oBAAoB0I,GAChB,MAAMwG,EAAQpf,KAAKkQ,WAAauwC,EAAgB7nC,IAAe,GAI/D,OAHAA,EAAWnT,GAAK2Z,EAChBxG,EAAWlT,GAAK0Z,EAChBxG,EAAWhT,GAAKwZ,EACTxG,EAIX,cAAcA,EAAyBoB,QACpBhY,IAAXgY,IACAA,EAAS,CAAEvU,EAAG,EAAGC,EAAG,EAAGE,EAAG,IAE9B,MAAMwZ,EAAQ,GAAKqhC,EAAgB7nC,IAAe,GAIlD,OAHAoB,EAAOvU,EAAImT,EAAWnT,EAAI2Z,EAC1BpF,EAAOtU,EAAIkT,EAAWlT,EAAI0Z,EAC1BpF,EAAOpU,EAAIgT,EAAWhT,EAAIwZ,EACnBpF,EAIX,eACI3J,EACAC,EACAnK,GAEA,GAAIkK,IAAqB,EAAA6J,oBAAsB7J,IAAqB,EAAA4J,sBAAuB,CACvF,MAAM,EAAExU,EAAC,EAAEC,EAAC,EAAEE,GAAM0K,EACdpS,EAAI8B,KAAKkQ,UACT0zC,EAAKn+C,EAAIvH,EAAImL,KAAKkP,GAClBsrC,EAAKn+C,EAAIxH,EAAImL,KAAKkP,GAClBzS,EAAIuD,KAAKsP,IAAIkrC,GACbnmD,EAAIoI,EAAIA,EACRg+C,EAAM,EAAIh+C,GAAMpI,EAAI,GACpBqmD,GAAMrmD,EAAI,IAAMA,EAAI,GACpB0hB,EAAQlhB,EAAI0H,EAelB,YAbe5D,IAAXmE,IAEAA,EAAS,IAGbA,EAAOV,EAAI4D,KAAK0V,IAAI6kC,GAAME,EAAK1kC,EAC/BjZ,EAAOT,EAAI2D,KAAKgR,IAAIupC,GAAME,EAAK1kC,EAC/BjZ,EAAOP,EAAIm+C,EAAK3kC,EAEZ/O,IAAqB,EAAA4J,wBACrB9T,EAAOP,GAAKO,EAAOP,GAGhBO,EAGX,OAAOnD,MAAMmX,eAAe9J,EAAkBC,EAAUnK,GAI5D,kBACIgK,EACAhK,GAEA,IAAIwC,EACA,EAAAG,qBAAqBqH,IACrBnQ,KAAKoQ,aAAaD,EAAOhK,EAAOyJ,UAChCjH,EAAWwH,IAEX,EAAA7H,UAAU0B,YAAYmG,EAAOhK,EAAOyJ,UACpCjH,EAAW3I,KAAKuQ,eAAeJ,IAGnC,MAAMhI,EAAW/I,EAAMkJ,UAAUW,SAASN,EAASR,UAC7CC,EAAYhJ,EAAMkJ,UAAUW,SAASN,EAASP,WAE9C47C,EAAe36C,KAAK0V,IAAI3W,GACxB67C,EAAe56C,KAAKgR,IAAIjS,GACxBi6C,EAAch5C,KAAK0V,IAAI5W,GACvB+7C,EAAc76C,KAAKgR,IAAIlS,GAiB7B,OAfA,EAAAG,UAAUyB,WACNi6C,EAAe3B,EACf4B,EAAe5B,EACf6B,EACA/9C,EAAO4J,OAGX,EAAAzH,UAAUyB,YAAYk6C,EAAcD,EAAc,EAAG79C,EAAO0J,OAE5D,EAAAvH,UAAUyB,YACLi6C,EAAeE,GACfD,EAAeC,EAChB7B,EACAl8C,EAAO2J,OAEJ3J,GAIF,EAAAuuB,iBAA+B,IAAIstB,EAAiB,EAAAhwC,eAAeE,oB,gGCrbhF,cAMA,iBAaI,YAAqBynB,GAAA,KAAAA,eA0BrB,MAAM55B,GACFC,KAAKmkD,aAAa,EAAAzpC,QAAQI,mBAAmB,EAAG,EAAG,GAAI/a,GAY3D,aAAa6S,EAAkB7S,GAG3B,GAAKA,EAAO6S,EAFG5S,KAAK25B,aAAaxmB,UAAUP,IAM3C,IAAK,MAAMwxC,KAAcpkD,KAAK25B,aAAa0qB,eAAezxC,GACtD5S,KAAKmkD,aAAaC,EAAYrkD,M,uLCnE1C,cACA,QACA,QAQa,EAAAukD,iBAAmB,IAAI,EAAAC,aAChC,EAAA9pB,8BACA,EAAA9F,sC,+GCZJ,cACA,QACA,QAKa,EAAA6vB,wBAA0B,IAAI,EAAAD,aACvC,EAAA/pC,0BACA,EAAAP,wB,4GCTJ,cACA,QACA,QAOa,EAAAwqC,qBAAuB,IAAI,EAAAF,aAAa,EAAA/pC,0BAA2B,EAAAN,qB,yGCThF,cACA,QACA,QAMa,EAAAwqC,kBAAoB,IAAI,EAAAH,aACjC,EAAA/pC,0BACA,EAAAkf,+B,qGCUJ,yBAA8Bv4B,GAC1B,OAAOA,GAAoB,iBAARA,EAAEsE,GAAiC,iBAARtE,EAAEuE,GAAiC,iBAARvE,EAAEyE,I,uGCY/E,2BAAgC9G,GAC5B,MAAM6lD,EAAY7lD,EAClB,YAC2BkD,IAAvB2iD,EAAU/0C,eACU5N,IAApB2iD,EAAU90C,YACU7N,IAApB2iD,EAAU70C,YACU9N,IAApB2iD,EAAU50C,Q,oGCvClB,aAGA,SAAS60C,EACLC,EACA3lD,EACA4lD,EACA7zC,EACA3S,GAEA,MACMoG,EAAIogD,EAAKC,IAAI7lD,GACbizC,EAAI2S,EAAKC,IAAIF,GACnB,GAAIx7C,KAAKitB,IAAI6b,GAHG,MAKZ,OAAO9oC,KAAKitB,IAAI5xB,IAAMuM,EAI1B,MAAM+zC,EAAO,EAAI7S,EACXwC,GAAMjwC,EAAIuM,GAAU+zC,EACpBC,GAAMvgD,EAAIuM,GAAU+zC,EAkB1B,OAjBIrQ,EAAKsQ,GAEDA,EAAK3mD,EAAEsL,MACPtL,EAAEsL,IAAMq7C,GAERtQ,EAAKr2C,EAAEwL,MACPxL,EAAEwL,IAAM6qC,KAIRA,EAAKr2C,EAAEsL,MACPtL,EAAEsL,IAAM+qC,GAERsQ,EAAK3mD,EAAEwL,MACPxL,EAAEwL,IAAMm7C,IAGT3mD,EAAEsL,KAAOtL,EAAEwL,KAAOxL,EAAEwL,KAAO,EAGtC,MAAMo7C,EAAS,IAAI,EAAAv/C,QACbw/C,EAAO,CAAEv7C,KAAMC,IAAUC,IAAKD,KAEpC,MAAau7C,EA6CT,YAAYx1C,EAAoBy1C,EAA0Br1C,GAzCjD,KAAAJ,SAAW,IAAI,EAAAjK,QAKf,KAAAkK,MAAQ,IAAI,EAAAlK,QAAQ,EAAG,EAAG,GAK1B,KAAAmK,MAAQ,IAAI,EAAAnK,QAAQ,EAAG,EAAG,GAK1B,KAAAoK,MAAQ,IAAI,EAAApK,QAAQ,EAAG,EAAG,GAK1B,KAAAqK,QAAU,IAAI,EAAArK,aAsBF3D,IAAb4N,GACA5P,KAAK4P,SAAS01C,KAAK11C,QAGA5N,IAAnBqjD,GACAA,EAAeE,aAAavlD,KAAK6P,MAAO7P,KAAK8P,MAAO9P,KAAK+P,YAG7C/N,IAAZgO,GACAhQ,KAAKgQ,QAAQs1C,KAAKt1C,GAO1B,QACI,MAAMw1C,EAAS,IAAIJ,EAEnB,OADAI,EAAOF,KAAKtlD,MACLwlD,EAOX,KAAKl8C,GACDtJ,KAAK4P,SAAS01C,KAAKh8C,EAAMsG,UACzB5P,KAAK6P,MAAMy1C,KAAKh8C,EAAMuG,OACtB7P,KAAK8P,MAAMw1C,KAAKh8C,EAAMwG,OACtB9P,KAAK+P,MAAMu1C,KAAKh8C,EAAMyG,OACtB/P,KAAKgQ,QAAQs1C,KAAKh8C,EAAM0G,SAQ5B,UAAUgB,EAAS,IAAI,EAAArL,SACnB,OAAOqL,EAAOs0C,KAAKtlD,KAAK4P,UAQ5B,QAAQH,EAAO,IAAI,EAAA9J,SACf,OAAO8J,EAAK61C,KAAKtlD,KAAKgQ,SAASy1C,eAAe,GAOlD,kBAAkBC,EAAkB,IAAI,EAAAC,SACpC,OAAOD,EAAOE,UAAU5lD,KAAK6P,MAAO7P,KAAK8P,MAAO9P,KAAK+P,OAQzD,WAAW81C,GACP,MAAMC,EAAkB1kD,MAAMC,QAAQwkD,GAChCA,EACAA,EAAgBC,OAEtB,IAAK,MAAMC,KAASD,EAAQ,CACxB,MAAM5nD,EACFmL,KAAKitB,IAAIyvB,EAAM/rC,OAAO+qC,IAAI/kD,KAAK6P,OAAS7P,KAAKgQ,QAAQvK,GACrD4D,KAAKitB,IAAIyvB,EAAM/rC,OAAO+qC,IAAI/kD,KAAK8P,OAAS9P,KAAKgQ,QAAQtK,GACrD2D,KAAKitB,IAAIyvB,EAAM/rC,OAAO+qC,IAAI/kD,KAAK+P,OAAS/P,KAAKgQ,QAAQpK,GAIzD,GAFUmgD,EAAMC,gBAAgBhmD,KAAK4P,UAE7B1R,EAAI,EACR,OAAO,EAIf,OAAO,EASX,cAAc+nD,GAKV,GAHAd,EAAKv7C,KAAOC,IACZs7C,EAAKr7C,IAAMD,IACXq7C,EAAOI,KAAKtlD,KAAK4P,UAAUqM,IAAIgqC,EAAIC,QAC9BtB,EAAeqB,EAAIE,UAAWjB,EAAQllD,KAAK6P,MAAO7P,KAAKgQ,QAAQvK,EAAG0/C,IAGlEP,EAAeqB,EAAIE,UAAWjB,EAAQllD,KAAK8P,MAAO9P,KAAKgQ,QAAQtK,EAAGy/C,IAGlEP,EAAeqB,EAAIE,UAAWjB,EAAQllD,KAAK+P,MAAO/P,KAAKgQ,QAAQpK,EAAGu/C,GAIvE,OAAOA,EAAKv7C,IAAM,EAAIu7C,EAAKv7C,IAAMu7C,EAAKr7C,IAQ1C,SAASqG,GACL,MAAMi2C,EAAKj2C,EAAM1K,EAAIzF,KAAK4P,SAASnK,EAC7B4gD,EAAKl2C,EAAMzK,EAAI1F,KAAK4P,SAASlK,EAC7B4gD,EAAKn2C,EAAMvK,EAAI5F,KAAK4P,SAAShK,EAC7BH,EAAI4D,KAAKitB,IAAI8vB,EAAKpmD,KAAK6P,MAAMpK,EAAI4gD,EAAKrmD,KAAK6P,MAAMnK,EAAI4gD,EAAKtmD,KAAK6P,MAAMjK,GACrEF,EAAI2D,KAAKitB,IAAI8vB,EAAKpmD,KAAK8P,MAAMrK,EAAI4gD,EAAKrmD,KAAK8P,MAAMpK,EAAI4gD,EAAKtmD,KAAK8P,MAAMlK,GACrEA,EAAIyD,KAAKitB,IAAI8vB,EAAKpmD,KAAK+P,MAAMtK,EAAI4gD,EAAKrmD,KAAK+P,MAAMrK,EAAI4gD,EAAKtmD,KAAK+P,MAAMnK,GAC3E,QAAIH,EAAIzF,KAAKgQ,QAAQvK,GAAKC,EAAI1F,KAAKgQ,QAAQtK,GAAKE,EAAI5F,KAAKgQ,QAAQpK,GAWrE,gBAAgBuK,GACZ,OAAO9G,KAAKqtB,KAAK12B,KAAKumD,uBAAuBp2C,IAQjD,uBAAuBA,GACnB,MAAMzS,EAAI,IAAI,EAAAiI,QACdjI,EAAE8oD,WAAWr2C,EAAOnQ,KAAK4P,UAEzB,MAAM62C,EAAU,CAAC/oD,EAAEqnD,IAAI/kD,KAAK6P,OAAQnS,EAAEqnD,IAAI/kD,KAAK8P,OAAQpS,EAAEqnD,IAAI/kD,KAAK+P,QAElE,IAAI5J,EAAS,EAEb,IAAK,IAAI/I,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,MAAMkE,EAASmlD,EAAQrpD,GACjB6T,EAASjR,KAAKgQ,QAAQ02C,aAAatpD,GACzC,GAAIkE,GAAU2P,EAAQ,CAClB,MAAM01C,EAAK11C,EAAS3P,EACpB6E,GAAUwgD,EAAKA,OACZ,GAAIrlD,EAAS2P,EAAQ,CACxB,MAAM01C,EAAKrlD,EAAS2P,EACpB9K,GAAUwgD,EAAKA,GAIvB,OAAOxgD,GAhNf,kB,mLC7CA,aAMA,qBACI,YAAqBygD,GAAA,KAAAA,QAQrB,YAAYC,GACR,MAAMC,EAASthC,IACP,EAAAtkB,WAAWskB,MAGXqhC,EAAUrhC,GAKlB,QAA0BxjB,IAAtBhC,KAAK4mD,MAAMG,OACX,IAAK,MAAMC,KAAgBhnD,KAAK4mD,MAAMG,OAClC,QAAwC/kD,IAApChC,KAAK4mD,MAAMG,OAAOC,GAClB,IAAK,MAAMxhC,KAASxlB,KAAK4mD,MAAMG,OAAOC,GAClC,GAAIF,EAAMthC,GACN,OAAO,EAM3B,OAAO,K,yGC5Bf,cAUA,wCAEI,KAAAmH,qBAA+B,EAK/B,WAIA,WACI9P,EACAjK,EACAL,GAEA,YAAiCvQ,IAA7BhC,KAAKqsB,oBACE3N,QAAQC,OAAO,IAAIlb,MAAM,wBAG7BzD,KAAKinD,iBAAiBpqC,EAAMjK,EAAS5S,KAAKqsB,oBAAqB9Z,GAI1E,YACIsK,EACAjK,EACAL,GAEA,OAAOmM,QAAQ+Q,aAAQztB,GAI3B,UACIkuB,EACAruB,EACAmuB,EACAG,QAEiBnuB,IAAbkuB,IACAlwB,KAAKqsB,oBAAsB,IAAI,EAAA66B,kBAAkBh3B,EAAUruB,SAE7CG,IAAdguB,IACAhwB,KAAKgwB,UAAYA,QAELhuB,IAAZmuB,QAAwDnuB,IAA/BmuB,EAAQ+O,qBACjCl/B,KAAK2sB,qBAAuBwD,EAAQ+O,uB,gIChEhD,aAEA,OAsBA,SACA,QAIA,QACA,QACA,QAUM3iB,EAAS,EAAAC,cAAcvc,SAASvB,OAAO,qBAEvCyoD,EAA2B,EAAA1kC,yBAAoC,IAwErE,MAAM2kC,EAGF,SAAS5hC,GACL,GAAIA,EAAM6hC,UAAW,CACjB,MAAMC,EAAatnD,KAAKunD,YAAY/hC,GACpCA,EAAM6hC,UAAY7hC,EAAM6hC,UAAUtnD,OAAOC,UAAMgC,GAC/ChC,KAAKwnD,OAASF,GAItB,qBAAqBznD,EAAuB4nD,GACxC,OAAO5nD,EAGX,wBAAwBA,EAA0B4nD,GAC9C,OAAO5nD,EAGX,uBAAuBA,EAAyB4nD,GAC5C,OAAO5nD,EAGX,uBAAuBA,EAAyB4nD,GAC5C,OAAO5nD,EAGX,uBAAuBA,EAAyB4nD,GAC5C,OAAO5nD,EAGX,aAAaA,EAAe4nD,GACxB,OAAO5nD,EAGX,sBAAsBA,EAAwB4nD,GAC1C,OAAO5nD,EAGX,eAAeA,EAAiB4nD,GAC5B,OAAO5nD,EAGX,cAAcA,EAAgB4nD,GAC1B,OAAO5nD,EAGX,cAActC,EAAgBkqD,GAC1B,GAAgB,QAAZlqD,EAAKgD,GAAc,CAInB,MAAMmnD,EAAWnqD,EAAK6C,KACjB2F,IAAIzF,GAAaA,EAAUP,OAAOC,KAAMzC,IACxC8xB,OAAO/uB,QAA2B0B,IAAd1B,GAEzB,OAAO,IAAI,EAAA8D,SAAS7G,EAAKgD,GAAImnD,GAC1B,GAAID,EAAe,CAEtB,MAAME,EAAU3nD,KAAK4nD,yBAAyBrqD,GAE9C,GAAIoqD,EAAS,CACT,QAA0B3lD,IAAtBhC,KAAKwnD,OAAOv5B,OAAwC,WAAjB05B,EAAQhqD,KAS3C,YAHAqC,KAAKwnD,OAAOv5B,MAAQ05B,EAAQtpD,OAIzB,QAC2B2D,IAA9BhC,KAAKwnD,OAAOK,eACK,kBAAjBF,EAAQhqD,KAUR,YAHAqC,KAAKwnD,OAAOK,cAAgBF,EAAQtpD,QAQhD,OAAOd,EAGX,cAAcsC,EAAgB4nD,GAC1B,MAAM,IAAIhkD,MAAM,QAGpB,qBAAqB5D,EAAuB4nD,GACxC,MAAM,IAAIhkD,MAAM,QASZ,yBAAyBlG,GAC7B,GAAgB,OAAZA,EAAKgD,GAAa,CAClB,MAAMkf,EAAOliB,EAAK6C,KAAK,GACjBs3C,EAAQn6C,EAAK6C,KAAK,GAExB,GAAIqf,aAAgB,EAAA1c,SAAW20C,aAAiB,EAAAp0C,kBAC5C,MAAO,CAAE3F,KAAM8hB,EAAK9hB,KAAMU,MAAOq5C,EAAMr5C,OAG3C,GAAIq5C,aAAiB,EAAA30C,SAAW0c,aAAgB,EAAAnc,kBAC5C,MAAO,CAAE3F,KAAM+5C,EAAM/5C,KAAMU,MAAOohB,EAAKphB,QAY3C,YAAYmnB,GAChB,MAAMsiC,EAAQ9nD,KAAKwnD,OAEnB,OADAxnD,KAAKwnD,OAAShiC,EACPsiC,GAIf,MAAMC,EAOF,YAAY95B,EAA4BuZ,GACpCxnC,KAAKrB,IAAM,GACXqB,KAAKgH,IAAIinB,EAAOuZ,GAGpB,IACIvZ,EACAuZ,EACAplC,GAEA,IAAI4lD,GAA2B,EAC/B,QAAchmD,IAAVisB,EAAqB,CACrB,MAAMg6B,OAAmBjmD,IAARI,EAAoBA,EAAIuO,OAAO,eAAY3O,EAC5DisB,EAA4B,iBAAbg6B,EAAwBA,OAAWjmD,EAOtD,GALIhC,KAAKiuB,QAAUA,IACfjuB,KAAKiuB,MAAQA,EACb+5B,GAAkB,QAGDhmD,IAAjBwlC,EAA4B,CAC5B,MAAM0gB,OAA0BlmD,IAARI,EAAoBA,EAAIuO,OAAO,sBAAmB3O,EAC1EwlC,EAA0C,iBAApB0gB,EAA+BA,OAAkBlmD,EAU3E,OARIhC,KAAKwnC,eAAiBA,IACtBxnC,KAAKwnC,aAAeA,EACpBwgB,GAAkB,GAGlBA,GACAhoD,KAAKmoD,YAEFnoD,KAGH,iBACegC,IAAfhC,KAAKiuB,WAEqBjsB,IAAtBhC,KAAKwnC,aACLxnC,KAAKrB,IAAM,GAAGqB,KAAKiuB,SAASjuB,KAAKwnC,eAEjCxnC,KAAKrB,IAAM,GAAGqB,KAAKiuB,cAGGjsB,IAAtBhC,KAAKwnC,aACLxnC,KAAKrB,IAAM,IAAIqB,KAAKwnC,eAEpBxnC,KAAKrB,IAAM,MAGnBqB,KAAKooD,oBAAiBpmD,GAqoB9B,SAAgBqmD,EAAqB7mC,GACjC,MAAMrb,EAAoC,GAC1C,IAAK,MAAMmiD,KAAY9mC,EAAW,CAC9B,IAAKA,EAAUviB,eAAeqpD,GAC1B,SAGJ,IAAI5rB,EAAkBlb,EAAkB8mC,GAGf,iBAAd5rB,IACNA,EAAU6rB,WAAa7rB,EAAU8rB,WAAa9rB,EAAU+rB,aAEzD/rB,EAAY,EAAAv5B,YAAYmwC,UAAU5W,IAGlC,EAAAl7B,KAAKuG,OAAO20B,KACZA,EAAYA,EAAUgsB,UAGzBviD,EAAemiD,GAAY5rB,EAEhC,OAAQv2B,EAppBZ,0BAmBI,YAAY+pB,EAAoBruB,GAhBf,KAAA8mD,aAAmC,GACnC,KAAAC,WAAa,IAAI,EAAAC,SACjB,KAAAC,gBAAkB,IAAI3mD,IACtB,KAAA4mD,2BAA6B,IAAI3B,EACjC,KAAA4B,mBAAqB,IAAI7mD,IAEzB,KAAA8mD,sBAAwB,IAAI9mD,IAC5B,KAAA+mD,wBAA8C,IAAInB,EAClD,KAAAoB,WAAa,IAAI,EAAA34C,IAC1B,KAAA44C,sBAAkC,GAQtCppD,KAAKqpD,cAAgBxnD,EACrB7B,KAAKkwB,SAwkBb,SAA2BA,EAA8BruB,GACrD,OAAOquB,EAASnqB,IAAIyf,GAGxB,SAAS8jC,EACL9jC,EACA3jB,GAEA,GAAI,EAAAX,WAAWskB,GAAQ,CACnB,IAAK,EAAA+jC,oBAAoB/jC,GACrB,MAAM,IAAI/hB,MAAM,iEAGpB,MAAM+lD,EAAiBhkC,EAAM,GACvBnE,EAAMxf,GAAeA,EAAY2nD,GACvC,IAAKnoC,EACD,MAAM,IAAI5d,MAAM,sBAAsB+lD,kBAE1C,IAAK,EAAAC,2BAA2BpoC,GAC5B,MAAM,IAAI5d,MAAM,sBAAsB+lD,kCAG1C,OAAOF,EAAuBjoC,EAAKxf,GAGvC,OAAO,OAAP,UAAY2jB,GAxBiB8jC,CAAuB9jC,EAAO3jB,IAzkBvC6nD,CAAkBx5B,EAAUruB,GA6jBpD,SAAmCquB,GAC/B,IAAIy5B,EAAuB,EACvBC,EAAgB,EACpB,IAAK,MAAMpkC,KAAS0K,EAChB1K,EAAMqkC,eAAiBD,SACC5nD,IAApBwjB,EAAMhE,gBAAiDxf,IAAtBwjB,EAAMzD,cACvCyD,EAAMzD,YAAc4nC,KAlkBxBG,CAA0B9pD,KAAKkwB,UAC/BlwB,KAAK+pD,kBAaT,sBACI3nD,EACA6rB,EACAuZ,GAEA,GACIxnC,KAAKgqD,kBACLhqD,KAAKiqD,eACLjqD,KAAKopD,sBAAsBrkD,MAAM7F,IAAI,MAAC,OAAkB,QAAlB,EAAAc,KAAKiqD,qBAAa,eAAEt5C,OAAOzR,MAAOkD,EAAIuO,OAAOzR,KAEnF,OAAOc,KAAKgqD,iBAGhB,MAAM7jD,EAA6B,GACnCnG,KAAK8oD,gBAAgB7d,QAErB,MAAMif,EAAqBlqD,KAAKkpD,wBAChCgB,EAAmBljD,IAAIinB,EAAOuZ,EAAcplC,GAG5CpC,KAAKmqD,QAAUD,EAAmBj8B,MAClCjuB,KAAKoqD,eAAiBF,EAAmB1iB,aACzCxnC,KAAKqqD,YAAcjoD,EAAIuO,OAAO,SAE9B,MAAM25C,EAAmBtqD,KAAKuqD,qBAAqBL,GAEnD,IAAK,MAAMM,KAAaF,EACpB,GAAItqD,KAAKyqD,aAAaroD,EAAKooD,EAAWrkD,GAClC,MAOR,OAHAnG,KAAKgqD,iBAAmB7jD,EACxBnG,KAAKiqD,cAAgB7nD,EAEd+D,EAQX,WAAW8nB,GACP,OACIjuB,KAAKuqD,qBAAqBvqD,KAAKkpD,wBAAwBliD,IAAIinB,OAAOjsB,IAAYV,OAAS,EAU/F,aAAa2sB,EAAeuZ,GACxB,OACIxnC,KAAKuqD,qBAAqBvqD,KAAKkpD,wBAAwBliD,IAAIinB,EAAOuZ,IAC7DlmC,OAAS,EAStB,+BACI,OAAOtB,KAAK8oD,gBAQhB,kBACI,IAAK,MAAM4B,KAAa1qD,KAAK2oD,aACzB+B,EAAUC,YAAS3oD,EAEvBhC,KAAK2oD,aAAarnD,OAAS,EAC3BtB,KAAKgqD,sBAAmBhoD,EACxBhC,KAAKiqD,mBAAgBjoD,EAMzB,iBACI,OAAOhC,KAAK2oD,aAMhB,wBACI,OAAO3oD,KAAK2oD,aAAa5iD,IAAIsiD,GAGzB,qBAAqBuC,GACzB,QAAiC5oD,IAA7B4oD,EAAUxC,eACV,OAAOwC,EAAUxC,eAErB,IAAIyC,EAAoB7qD,KAAKgpD,mBAAmB/qD,IAAI2sD,EAAUjsD,KAC9D,YAA0BqD,IAAtB6oD,GACAD,EAAUxC,eAAiByC,EACpBA,IAEXA,EAAoB7qD,KAAK8qD,0BAA0BF,GACnD5qD,KAAKgpD,mBAAmBhiD,IAAI4jD,EAAUjsD,IAAKksD,GAC3CD,EAAUxC,eAAiByC,EACpBA,GAGH,0BAA0BD,GAC9B,MAAM,MAAE38B,EAAK,aAAEuZ,GAAiBojB,EAEhC,OAAO5qD,KAAKkwB,SAASb,OAAO7J,SACVxjB,IAAVisB,QAAuCjsB,IAAhBwjB,EAAMyI,OAAuBzI,EAAMyI,QAAUA,UAInDjsB,IAAjBwlC,QACwBxlC,IAAxBwjB,EAAMqiC,eACNriC,EAAMqiC,gBAAkBrgB,IAW5B,kBACJxnC,KAAKopD,sBAAwB,CAAC,SAAU,gBAAiB,SAEzDppD,KAAKkwB,SAAS7vB,QAAQmlB,GAASxlB,KAAK+qD,aAAavlC,IAGjDxlB,KAAKkwB,SAAS7vB,QAAQmlB,IAClBxlB,KAAKuqD,qBACDvqD,KAAKkpD,wBAAwBliD,IAAIwe,EAAMyI,MAAOzI,EAAMqiC,kBAUxD,aAAariC,GAGjB,GAFAxlB,KAAKgrD,4BAA4BxlC,QAEdxjB,IAAfwjB,EAAMylC,KACN,IACIzlC,EAAM6hC,UAAYjmD,MAAMC,QAAQmkB,EAAMylC,MAChC,EAAAzpD,KAAKmF,SAAS6e,EAAMylC,KAAMjrD,KAAKqpD,cAAerpD,KAAKipD,uBAEnD,EAAAznD,KAAKG,MAAM6jB,EAAMylC,MAKvBjrD,KAAK+oD,2BAA2BmC,SAAS1lC,QAEjBxjB,IAApBwjB,EAAM6hC,YACN7hC,EAAM6hC,UAAY7hC,EAAM6hC,UAAU8D,OAAOnrD,KAAK4oD,aAGlD,MAAMvO,EAAO70B,EAAM6hC,UAAUvnD,eAE7Bu6C,WAAM36C,WAAWW,QAAQ0M,IAChB/M,KAAKopD,sBAAsB1V,SAAS3mC,IACrC/M,KAAKopD,sBAAsBljD,KAAK6G,KAIpC,EAAA7L,WAAWskB,EAAM4E,gBACjB5E,EAAM4lC,kBAAoB,EAAA5pD,KAAKmF,SAAS6e,EAAM4E,cAAc+gC,OACxDnrD,KAAK4oD,aAIT,EAAA1nD,WAAWskB,EAAM6E,gBACjB7E,EAAM6lC,kBAAoB,EAAA7pD,KAAKmF,SAAS6e,EAAM6E,cAAc8gC,OACxDnrD,KAAK4oD,aAGf,MAAO3qC,GACL1B,EAAOlE,IACH,gCACA5Q,KAAKC,UAAU8d,EAAMylC,MACrB,QACAt+C,OAAOsR,KAmBf,aAAa7b,EAAUojB,EAAsBrf,GACjD,IAAKnG,KAAKsrD,eAAelpD,EAAKojB,GAC1B,OAAO,EAGX,QACqBxjB,IAAjBhC,KAAKmqD,cACWnoD,IAAhBwjB,EAAMyI,OACNzI,EAAMyI,QAAUjuB,KAAKmqD,QAErB,OAAO,EAEX,QAC4BnoD,IAAxBhC,KAAKoqD,qBACmBpoD,IAAxBwjB,EAAMqiC,eACNriC,EAAMqiC,gBAAkB7nD,KAAKoqD,eAE7B,OAAO,EAGX,GAAI5kC,EAAM6hC,UACN,IACI,IAAK7hC,EAAM6hC,UAAU5zB,SAASrxB,EAAK,EAAAb,UAAU+4C,UAAWt6C,KAAK8oD,iBAIzD,OAAO,EAEb,MAAOjrC,GAIL,OAHAtB,EAAOsB,MACH,kCAAkCpW,KAAKC,UAAU8d,EAAMylC,WAAWptC,MAE/D,EAIf,YAAwB7b,IAApBwjB,EAAMhE,YAIc,SAApBgE,EAAMhE,WACNrb,EAAOD,KAAKlG,KAAKurD,0BAA0BnpD,EAAKojB,KAG7B,IAAhBA,EAAMgmC,OAGT,eAAeppD,EAAUojB,GAC7B,QAA2BxjB,IAAvBwjB,EAAM4E,mBAAqDpoB,IAAvBwjB,EAAM6E,aAC1C,OAAO,EAGX,MAAMohC,EAAYzrD,KAAKqqD,YACvB,QAAkBroD,IAAdypD,EACA,OAAO,EAGX,QAA2BzpD,IAAvBwjB,EAAM4E,aAA4B,CAClC,IAAIA,EAAsB5E,EAAM4E,aAEhC,GAAI5E,EAAM4lC,kBAGN,IACIhhC,EAAe5E,EAAM4lC,kBAAkB33B,SACnCrxB,EACA,EAAAb,UAAU+4C,UACVt6C,KAAK8oD,iBAEX,MAAOjrC,GACLtB,EAAOsB,MACH,kCAAkCpW,KAAKC,UACnC8d,EAAM4lC,wBACHvtC,KAKnB,GAA4B,iBAAjBuM,GAA6BqhC,EAAYrhC,EAChD,OAAO,EAIf,QAA2BpoB,IAAvBwjB,EAAM6E,aAA4B,CAClC,IAAIA,EAAsB7E,EAAM6E,aAEhC,GAAI7E,EAAM6lC,kBACN,IACIhhC,EAAe7E,EAAM6lC,kBAAkB53B,SACnCrxB,EACA,EAAAb,UAAU+4C,UACVt6C,KAAK8oD,iBAEX,MAAOjrC,GACLtB,EAAOsB,MACH,kCAAkCpW,KAAKC,UACnC8d,EAAM6lC,wBACHxtC,KAKnB,GAA4B,iBAAjBwM,GAA6BohC,EAAYphC,EAChD,OAAO,EAIf,OAAO,EAGH,0BAA0BjoB,EAAUojB,GACxC,IAAIhE,EACJ,QAAiCxf,IAA7BwjB,EAAMkmC,mBAAkC,CACxC,MAAMC,EAAoB3rD,KAAK4rD,4BAA4BpmC,EAAOpjB,GAC5DzD,EAAMqB,KAAK6rD,uBAAuBrmC,EAAOmmC,GAC/CnqC,EAAYgE,EAAMkmC,mBAAoBztD,IAAIU,QACxBqD,IAAdwf,IACAA,EAAYxhB,KAAK8rD,gBAAgBtmC,EAAO7mB,EAAKgtD,GAC7CnmC,EAAMkmC,mBAAoB1kD,IAAIrI,EAAK6iB,SAGvCA,EAAYgE,EAAMumC,sBACA/pD,IAAdwf,IACAgE,EAAMumC,iBAAmBvqC,EAAYxhB,KAAK8rD,gBACtCtmC,EACA,GAAGA,EAAMqkC,iBACT,KASZ,YAJyB7nD,IAArBwf,EAAUmpC,SACVnpC,EAAUmpC,OAAS3qD,KAAK2oD,aAAarnD,OACrCtB,KAAK2oD,aAAaziD,KAAKsb,IAEpBA,EAGH,uBACJgE,EACAmmC,GAEA,MAAMK,EAAiBL,EAClB5lD,IAAI,EAAEkmD,EAAWvvB,UACI16B,IAAd06B,EACO,IAEAj1B,KAAKC,UAAUg1B,IAG7B4S,KAAK,KACV,MAAO,GAAG9pB,EAAMqkC,kBAAmBmC,IAG/B,4BAA4BxmC,G,MAChC,QAA0CxjB,IAAtCwjB,EAAM0mC,6BAAiE,SAApB1mC,EAAMhE,UACzD,OAGJgE,EAAM0mC,4BAA8B,GACpC1mC,EAAM2mC,0BAA4B,GAClC3mC,EAAM4mC,4BAA8B,GACpC5mC,EAAM6mC,kBAAoB,GAE1B,MAAMC,EAA2B9mC,EAAM2mC,0BACjCI,EAA6B/mC,EAAM0mC,4BACnCM,EAA6BhnC,EAAM4mC,4BACnCK,EAAyBjnC,EAAM6mC,kBAE/BK,EACF,EAAA/qC,qBAAqB6D,EAAMhE,YAAc2lC,EAEvCwF,EAAmB,CAACrE,EAAkB5rB,KACxC,QAAkB16B,IAAd06B,EAAJ,CAiBA,GAbI,EAAAx7B,WAAWw7B,GACXA,EAAY,EAAAl7B,KAAKmF,SACb+1B,EACA18B,KAAKqpD,cACLrpD,KAAKipD,uBACPkC,OAAOnrD,KAAK4oD,YACP,EAAA/hD,iCAAiC61B,KAExCA,EAAY,EAAAl7B,KAAKmF,SACb,EAAAG,yCAAyC41B,IAC3CyuB,OAAOnrD,KAAK4oD,aAGd,EAAApnD,KAAKuG,OAAO20B,GAAY,CACxB,MAAM2d,EAAO3d,EAAU58B,eAEnBu6C,EAAK55C,eACY,YAAb6nD,EACA/rC,EAAOlE,IAAI,kDAEXmN,EAAMonC,mBAAoB,GAIL,IAAzBvS,EAAK36C,WAAW+P,MAAeitB,EAAU/3B,cAEzC+3B,EAAYA,EAAUjJ,SAASzzB,KAAKmpD,aAI5C,GAAI,EAAA3nD,KAAKuG,OAAO20B,GAAY,CACxB,IAAImwB,EAAoCH,EAAoB5qC,WACxDwmC,QAGctmD,IAAd6qD,IAEAA,EAAY,EAAA7qC,UAAUC,mBAG1B,MAAMo4B,EAAO3d,EAAU58B,eAQvB,OANAu6C,EAAK36C,WAAWW,QAAQ0M,IACf/M,KAAKopD,sBAAsB1V,SAAS3mC,IACrC/M,KAAKopD,sBAAsBljD,KAAK6G,KAIhC8/C,GACJ,KAAK,EAAA7qC,UAAUE,gBACXoqC,EAAyBpmD,KAAK,CAACoiD,EAAU5rB,IACzC,MACJ,KAAK,EAAA1a,UAAUC,kBACXsqC,EAA2BrmD,KAAK,CAACoiD,EAAU5rB,IAC3C,MACJ,KAAK,EAAA1a,UAAUM,mBACkB,IAAzB+3B,EAAK36C,WAAW+P,KAChB+8C,EAA2BtmD,KAAK,CAACoiD,EAAU5rB,IAE3C6vB,EAA2BrmD,KAAK,CAACoiD,EAAU5rB,UAIhDA,SACP+vB,EAAuBvmD,KAAK,CAACoiD,EAAU5rB,MAIzCowB,EAAc,IAAI3qD,IAAoB,CACxC,CAAC,WAAY,aACb,CAAC,oBAAqB,wBAG1B,IAAK,MAAMjD,KAAKsmB,EAAO,CACnB,IAAKA,EAAMvmB,eAAeC,GACtB,SAEJ,GAAIA,EAAE4U,WAAW,KACb,SAEJ,GAAI,CAAC,OAAQ,YAAa,QAAS,OAAQ,eAAe4/B,SAASx0C,GAC/D,SAGJytD,EAD6B,QAArB,EAAGG,EAAY7uD,IAAIiB,UAAE,QAAIA,EACXsmB,EAActmB,IAGxC,QAAmB8C,IAAfwjB,EAAMyO,KACN,IAAK,MAAMq0B,KAAY9iC,EAAMyO,KACpBzO,EAAMyO,KAAKh1B,eAAeqpD,IAG/BqE,EAAiBrE,EAAW9iC,EAAMyO,KAAaq0B,IAInDiE,EAA2BjrD,OAAS,IACpCkkB,EAAMkmC,mBAAqB,IAAIvpD,KAI/B,4BAA4BqjB,EAAsBpjB,GACtD,YAA0CJ,IAAtCwjB,EAAM0mC,4BACC,GAGJ1mC,EAAM0mC,4BAA4BnmD,IAAI,EAAEuiD,EAAUyE,MACrD,IAMI,MAAO,CAACzE,EALeyE,EAASt5B,SAC5BrxB,EACA,EAAAb,UAAUe,MACVtC,KAAK8oD,kBAGX,MAAOjrC,GAEL,OADAtB,EAAOsB,MAAM,kCAAkCkvC,EAASrE,cAAc7qC,KAC/D,CAACyqC,EAAU,SAKtB,gBACJ9iC,EACA7mB,EACAquD,GAEA,MAAMxrC,EAAiB,GAEvB,GADAA,EAAU7jB,KAAO6nB,EAAMhE,eACSxf,IAA5BwjB,EAAM6mC,kBACN,IAAK,MAAO/D,EAAU5rB,KAAclX,EAAM6mC,kBACpB,OAAd3vB,IACAlb,EAAU8mC,GAAY5rB,GAIlC,IAAK,MAAO4rB,EAAU5rB,KAAcswB,EACd,OAAdtwB,IACAlb,EAAU8mC,GAAY5rB,GAI9B,QAAwC16B,IAApCwjB,EAAM2mC,0BACN,IAAK,MAAO7D,EAAU5rB,KAAclX,EAAM2mC,0BACtC3qC,EAAU8mC,GAAY5rB,EAI9B,QAA0C16B,IAAtCwjB,EAAM4mC,4BACN,IAAK,MAAO9D,EAAU5rB,KAAclX,EAAM4mC,4BACtC5qC,EAAU8mC,GAAY5rB,EAa9B,OATAlb,EAAUmpC,OAAS3qD,KAAK2oD,aAAarnD,OACrCkgB,EAAUqoC,eAAiBrkC,EAAMqkC,oBACV7nD,IAAnBwjB,EAAM0K,WACN1O,EAAUyrC,UAAYznC,EAAM0K,eAEAluB,IAA5BwjB,EAAMonC,oBACNprC,EAAUorC,kBAAoBpnC,EAAMonC,mBAExC5sD,KAAK2oD,aAAaziD,KAAKsb,GAChBA,IAgDf,0B,gGCx7BA,aAwBA,+BACqB,KAAA0rC,kBAAoB,IAAI/qD,IACxB,KAAAgrD,iBAAmB,IAAIhrD,IACvB,KAAAirD,iBAAmB,IAAIjrD,IACvB,KAAAkrD,iBAAmB,IAAIlrD,IACvB,KAAAmrD,gBAAuC,GACvC,KAAAC,WAAa,IAAIprD,IACjB,KAAAqrD,oBAAsB,IAAIrrD,IAC1B,KAAAsrD,aAA4B,GAC5B,KAAAC,YAA0B,GAC1B,KAAAC,mBAAwC,GACxC,KAAAC,YAA0B,GAC1B,KAAAC,YAAc,IAAI1rD,IASnC,IAAItC,GACA,OAAOA,EAAKE,OAAOC,UAAMgC,GAG7B,qBAAqBnC,EAAuBK,GACxC,OAAO,EAAAqD,gBAAgBtD,SAG3B,wBAAwBJ,EAA0BK,GAC9C,MAAMwE,EAAI1E,KAAKktD,kBAAkBjvD,IAAI4B,EAAKxB,OAC1C,OAAIqG,IAGJ1E,KAAKktD,kBAAkBlmD,IAAInH,EAAKxB,MAAOwB,GAChCA,GAGX,uBAAuBA,EAAyBK,GAC5C,MAAMwE,EAAI1E,KAAKmtD,iBAAiBlvD,IAAI4B,EAAKxB,OACzC,OAAIqG,IAGJ1E,KAAKmtD,iBAAiBnmD,IAAInH,EAAKxB,MAAOwB,GAC/BA,GAGX,uBAAuBA,EAAyBK,GAC5C,MAAMwE,EAAI1E,KAAKotD,iBAAiBnvD,IAAI4B,EAAKxB,OACzC,OAAIqG,IAGJ1E,KAAKotD,iBAAiBpmD,IAAInH,EAAKxB,MAAOwB,GAC/BA,GAGX,uBAAuBA,EAAyBK,GAC5C,MAAMwE,EAAI1E,KAAKqtD,iBAAiBpvD,IAAI4B,EAAKxB,OACzC,GAAIqG,EACA,OAAOA,EAGX,GAAItD,MAAMC,QAAQxB,EAAKxB,OAAQ,CAC3B,MAAMuqC,EAAQ/oC,EAAKxB,MAEbH,EAAI8B,KAAKstD,gBAAgBn2C,KAAK22C,IAChC,MAAMvjB,EAAWujB,EAAQzvD,MACzB,OAAIksC,EAASjpC,SAAWsnC,EAAMtnC,QAGvBsnC,EAAM7jC,MAAM,CAACU,EAAGrI,IAAMqI,IAAM8kC,EAASntC,MAGhD,QAAU4E,IAAN9D,EACA,OAAOA,EAGX8B,KAAKstD,gBAAgBpnD,KAAKrG,GAK9B,OAFAG,KAAKqtD,iBAAiBrmD,IAAInH,EAAKxB,MAAOwB,GAE/BA,EAGX,aAAaA,EAAeK,GACxB,MAAMwE,EAAI1E,KAAKutD,WAAWtvD,IAAI4B,EAAKlC,MACnC,OAAI+G,IAGJ1E,KAAKutD,WAAWvmD,IAAInH,EAAKlC,KAAMkC,GACxBA,GAGX,sBAAsBA,EAAwBK,GAC1C,MAAMwE,EAAI1E,KAAKwtD,oBAAoBvvD,IAAI4B,EAAKlC,MAC5C,OAAI+G,IAGJ1E,KAAKwtD,oBAAoBxmD,IAAInH,EAAKlC,KAAMkC,GACjCA,GAGX,eAAeA,EAAiBK,GAC5B,MAAM7B,EAAQwB,EAAKxB,MAAM0B,OAAOC,KAAME,GAChCQ,EAAiCb,EAAKa,SAASqF,IAAI,EAAEC,EAAOC,KAAU,CACxED,EACAC,EAAKlG,OAAOC,KAAME,KAEhBW,EAAWhB,EAAKgB,SAASd,OAAOC,KAAME,GAC5C,IAAK,MAAM8vC,KAAahwC,KAAKytD,aAAc,CACvC,GAAIzd,EAAU3xC,QAAUA,EACpB,SAEJ,GAAI2xC,EAAUnvC,WAAaA,EACvB,SAEJ,GAAImvC,EAAUtvC,SAASY,SAAWZ,EAASY,OACvC,SAEJ,IAAIysD,GAAmB,EACvB,IAAK,IAAI3wD,EAAI,EAAGA,EAAIsD,EAASY,OAAQlE,IACjC,GACIsD,EAAStD,GAAG,KAAO4yC,EAAUtvC,SAAStD,GAAG,IACzCsD,EAAStD,GAAG,KAAO4yC,EAAUtvC,SAAStD,GAAG,GAC3C,CACE2wD,GAAmB,EACnB,MAGR,GAAIA,EACA,OAAO/d,EAGf,MAAM9xC,EAAI,IAAI,EAAA0G,UAAUvG,EAAOqC,EAAUG,GAEzC,OADAb,KAAKytD,aAAavnD,KAAKhI,GAChBA,EAGX,cAAc2B,EAAgBK,GAC1B,MAAMQ,EAAiCb,EAAKa,SAASqF,IAAI,EAAEjF,EAAWmF,KAAU,CAC5EnF,EAAUf,OAAOC,KAAME,GACvB+F,EAAKlG,OAAOC,KAAME,KAEhBW,EAAWhB,EAAKgB,SAASd,OAAOC,KAAME,GAE5C,IAAK,MAAM8vC,KAAahwC,KAAK0tD,YAAa,CACtC,GAAI1d,EAAUnvC,WAAaA,EACvB,SAEJ,GAAImvC,EAAUtvC,SAASY,SAAWZ,EAASY,OACvC,SAEJ,IAAIysD,GAAmB,EACvB,IAAK,IAAI3wD,EAAI,EAAGA,EAAIsD,EAASY,OAAQlE,IACjC,GACIsD,EAAStD,GAAG,KAAO4yC,EAAUtvC,SAAStD,GAAG,IACzCsD,EAAStD,GAAG,KAAO4yC,EAAUtvC,SAAStD,GAAG,GAC3C,CACE2wD,GAAmB,EACnB,MAGR,GAAIA,EACA,OAAO/d,EAIf,MAAM9xC,EAAI,IAAI,EAAA+G,SAASvE,EAAUG,GAEjC,OADAb,KAAK0tD,YAAYxnD,KAAKhI,GACfA,EAGX,cAAc2B,EAAgBK,GAE1B,MAAMw+C,EAAc7+C,EAAKO,KAAK2F,IAAIzF,GAAaA,EAAUP,OAAOC,KAAME,IAEjEF,KAAK6tD,YAAYtnD,IAAI1G,EAAKU,KAC3BP,KAAK6tD,YAAY7mD,IAAInH,EAAKU,GAAI,IAGlC,MAAMytD,EAAQhuD,KAAK6tD,YAAY5vD,IAAI4B,EAAKU,IACxC,IAAK,MAAMhD,KAAQywD,EAAO,CAEtB,GAAIzwD,EAAK6C,KAAKkB,SAAWo9C,EAAYp9C,OACjC,SAGJ,IAAIi8B,EAAQ,EACZ,KAAOA,EAAQhgC,EAAK6C,KAAKkB,QACjB/D,EAAK6C,KAAKm9B,KAAWmhB,EAAYnhB,KADNA,GAKnC,GAAIA,IAAUhgC,EAAK6C,KAAKkB,OAEpB,OAAO/D,EAGf,MAAMmH,EAAI,IAAI,EAAAN,SAASvE,EAAKU,GAAIm+C,GAGhC,OAFAh6C,EAAEJ,WAAazE,EAAKyE,WACpB0pD,EAAM9nD,KAAKxB,GACJA,EAGX,cAAc7E,EAAgBK,GAC1B,GAAIF,KAAK4tD,YAAYla,SAAS7zC,GAC1B,OAAOA,EAEX,MAAMkB,EAAQlB,EAAKkB,MAAMhB,OAAOC,KAAME,GAChCc,EAAenB,EAAKmB,aAAajB,OAAOC,KAAME,GAC9Ce,EAA+BpB,EAAKoB,MAAM8E,IAAIsuC,IAChD,MAAM11C,EAAM01C,EAAK,GACXh2C,EAAQg2C,EAAK,GAAGt0C,OAAOC,KAAME,GACnC,OAAO7B,IAAUg2C,EAAK,GAAKA,EAAO,CAAC11C,EAAKN,KAE5C,IAAK,MAAMwZ,KAAQ7X,KAAK4tD,YACpB,GACI/1C,EAAK9W,QAAUA,GACf8W,EAAK7W,eAAiBA,GACtBC,EAAMK,SAAWuW,EAAK5W,MAAMK,QAC5BL,EAAM8D,MACF,EAAEpG,EAAKN,GAAQjB,IAAMuB,IAAQkZ,EAAK5W,MAAM7D,GAAG,IAAMiB,IAAUwZ,EAAK5W,MAAM7D,GAAG,IAG7E,OAAOya,EAGf,MAAMnT,EAAI,IAAI,EAAAU,SAASrE,EAAOC,EAAcC,GAE5C,OADAjB,KAAK4tD,YAAY1nD,KAAKxB,GACfA,EAGX,qBAAqB7E,EAAuBK,GACxC,GAAIF,KAAK2tD,mBAAmBja,SAAS7zC,GACjC,OAAOA,EAEX,MAAMkB,EAAQlB,EAAKkB,MAAMhB,OAAOC,KAAME,GAChCe,EAA+BpB,EAAKoB,MAAM8E,IAAIsuC,IAChD,MAAM11C,EAAM01C,EAAK,GACXh2C,EAAQg2C,EAAK,GAAGt0C,OAAOC,KAAME,GACnC,OAAO7B,IAAUg2C,EAAK,GAAKA,EAAO,CAAC11C,EAAKN,KAE5C,IAAK,MAAM81C,KAAUn0C,KAAK2tD,mBACtB,GACIxZ,EAAOpzC,QAAUA,GACjBozC,EAAO51C,KAAK,KAAOsB,EAAKtB,KAAK,IAC7B41C,EAAO51C,KAAK,KAAOsB,EAAKtB,KAAK,IAC7B0C,EAAMK,SAAW6yC,EAAOlzC,MAAMK,QAC9BL,EAAM8D,MACF,EAAEpG,EAAKN,GAAQjB,IAAMuB,IAAQw1C,EAAOlzC,MAAM7D,GAAG,IAAMiB,IAAU81C,EAAOlzC,MAAM7D,GAAG,IAGjF,OAAO+2C,EAGf,MAAMzvC,EAAI,IAAI,EAAAY,gBAAgBzF,EAAKtB,KAAMwC,EAAOE,GAEhD,OADAjB,KAAK2tD,mBAAmBznD,KAAKxB,GACtBA,K,sLC1Rf,aAEMupD,EAAgB,IAAI7uD,EAAMoG,QAC1B0oD,EAAe,IAAI9uD,EAAMoG,QACzB2oD,EAAgB,IAAI/uD,EAAMoG,QAC1B4oD,EAAe,IAAIhvD,EAAMoG,QAW/B,2BACI6oD,EACAC,EACA1iC,EACA2iC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAK,IAAIvxD,EAAI,EAAGA,EAAIoxD,EAAoBltD,SAAUlE,EAC9C,GAAIoxD,EAAoBpxD,GACpB,IAAmB,IAAfqxD,EAAqB,CACrB,MAAMG,EAAcN,EAAmB,EAAJlxD,EAC7ByxD,EAASD,EAAc,EACvBE,EAAcR,GAAiBlxD,EAAI,GAAKoxD,EAAoBltD,OAAU,EACtEytD,EAASD,EAAc,GAEH,IAAtBJ,GACAL,EAAYnoD,KAAK0oD,EAAaE,GAElCT,EAAYnoD,KAAK2oD,EAAQE,GAEzB,MAAMC,GAAqB,IAAN5xD,EAAUoxD,EAAoBltD,OAASlE,GAAK,EACjE,GAAIoxD,EAAoBQ,GACpB,QAAsBhtD,IAAlB2sD,EAA6B,CAC7B,MAAMM,EAAMV,EAAenxD,EAAIwuB,GACzBsjC,EAAMX,EAAenxD,EAAIwuB,EAAe,GACxCujC,EACFZ,GAAiBnxD,EAAI,GAAKoxD,EAAoBltD,OAAUsqB,GACtDwjC,EACFb,GACMnxD,EAAI,GAAKoxD,EAAoBltD,OAAUsqB,EAAe,GAGhEqiC,EAAcjnD,IAAIioD,EAAKC,GACvBhB,EAAalnD,IAAImoD,EAAKC,GACtBjB,EAAcnnD,IACVunD,EAAeS,EAAcpjC,GAC7B2iC,EAAeS,EAAcpjC,EAAe,IAEhDwiC,EAAapnD,IAAIinD,EAAcxoD,EAAGwoD,EAAcvoD,GAG5C0oD,EACKnyC,IAAIkyC,GACJkB,YACAtK,IAAImJ,EAAajyC,IAAIgyC,GAAeoB,cAAgBV,GAEzDN,EAAYnoD,KAAK0oD,EAAaC,QAGlCR,EAAYnoD,KAAK0oD,EAAaC,OAGnC,CACH,MAAMS,EAAShB,EAAelxD,EACxByxD,EAASP,GAAiBlxD,EAAI,GAAKoxD,EAAoBltD,OAC7D+sD,EAAYnoD,KAAKopD,EAAQT,M,wGCpEzC,eAcA,SAAiBU,GACb,SAAgBC,EAAqB/jC,GACjC,GAAIA,aAAkB4I,UAClB,MAAO,OACJ,GAAI5I,aAAkBne,WACzB,MAAO,QACJ,GAAIme,aAAkB6I,WACzB,MAAO,QACJ,GAAI7I,aAAkB0I,YACzB,MAAO,SACJ,GAAI1I,aAAkB8I,WACzB,MAAO,QACJ,GAAI9I,aAAkB2I,YACzB,MAAO,SACJ,GAAI3I,aAAkByI,aACzB,MAAO,QAGX,MAAM,IAAIzwB,MAAM,2BAA2B9F,QAG/C,SAAgB8xD,EACZC,GAEA,MAAMjkC,EAAUikC,EAAgB9mB,MAChC,MAAO,CACHjrC,KAAM+xD,EAAgB/xD,KACtB8tB,OAAQA,EAAOA,OACf7V,KAAM45C,EAAqB/jC,GAC3BkkC,UAAWD,EAAgBxlB,SAC3B0lB,WAAYF,EAAgBE,YA7BpB,EAAAJ,qBAAoB,EAoBpB,EAAAC,yBAAwB,EAaxB,EAAAI,oCAAhB,SACIH,GAEA,MAAM,IAAIjsD,MAAM,wBAGJ,EAAAqsD,wBAAhB,SACIC,EACAC,GAEA,MAAMC,EAAsC,GACtCC,EAAiBpyD,OAAOgxC,oBAAoBihB,EAAeI,YACjE,IAAK,MAAMxyD,KAAQuyD,EAAgB,CAC/B,MAEME,EAAkBX,EAFNM,EAAeI,WAAWxyD,IAG5CyyD,EAAgBzyD,KAAOA,EACvBsyD,EAAiB/pD,KAAKkqD,GAE1B,MAAM7yB,EACuB,OAAzBwyB,EAAexyB,MACTkyB,EAAyBM,EAAexyB,YACxCv7B,EAEV,IAAIioC,EAAQ,EACZ,QAAcjoC,IAAVu7B,EACA0M,EAAiC,OAAzB8lB,EAAexyB,MAAiB,EAAIwyB,EAAexyB,MAAM0M,UAC9D,CAEH,MAAMomB,EAAUN,EAAeI,WAAWvgD,SAC1C,QAAgB5N,IAAZquD,EACA,MAAM,IAAI5sD,MAAM,kDAEpBwmC,EAAQomB,EAAQpmB,MAGpB,MAAO,CACHr0B,KAAM,EAAA4e,aAAa87B,YACnBL,mBACA1yB,QACAqN,OAAQ,CAAC,CAAE7Y,MAAO,EAAGkY,QAAOzoB,UAAWwuC,MA1EnD,CAAiB,EAAAT,mBAAA,EAAAA,iBAAgB,M,0GCpBjC,aAQA,OACA,OAEA,QAEMhzC,EAAS,EAAAC,cAAcvc,SAASvB,OAAO,sBAY7C,MAAaozB,UAA2B,EAAAy+B,cAiBpC,YAAqB7zC,EAAoC8zC,GACrDxtD,MAAM0Z,GADW,KAAAA,YAAoC,KAAA8zC,YAErDxwD,KAAKwwD,UAAUC,UAZnB,aAAa/zC,EAAmB3G,GAC5B,OAAO,IAAI+b,EAAmBpV,EAAW3G,GAqBnC,cAAckH,GACpB,OAAI,EAAA2iC,sBAAsBI,oBAAoB/iC,GACnCjd,KAAK0wD,wBAAwBzzC,GAC7B,EAAA2iC,sBAAsBM,kBAAkBjjC,GACxCjd,KAAK2wD,sBAAsB1zC,GAE3Bja,MAAMyb,cAAcxB,GAUzB,cAAcjS,GAChB,EAAA40C,sBAAsBE,uBAAuB90C,GAC7ChL,KAAK4wD,2BAA2B5lD,GAEhCuR,EAAOsB,MAAM,IAAI7d,KAAK0c,+BAA+B1R,EAAQ4K,QAI7D,8BACJqH,GAEA,MAAMrK,EAAU,EAAA8H,QAAQS,eAAe8B,EAAQrK,SACzCL,EAAa,EAAAs+C,cAAc5zC,EAAQ1K,YAEnCud,QAAoB9vB,KAAKwwD,UAAUM,WAAW7zC,EAAQJ,KAAMjK,EAASL,GAErEoL,EAAkC,GAElCozC,EACFC,SAGkBhvD,IAAdgvD,GACAA,EAAUvlC,OAAOwlC,WAAa,IAC7BtzC,EAAa+1B,SAASsd,EAAUvlC,SAEjC9N,EAAazX,KAAK8qD,EAAUvlC,SAgCpC,OA5BAqE,EAAYpC,WAAWrtB,QAAQ6wD,I,UAM3B,GALqB,QAArB,EAAAA,EAAKjB,wBAAgB,SAAE5vD,QAAQ4zB,GAAQ88B,EAAwB98B,IAC/B,QAAhC,EAAAi9B,EAAKC,mCAA2B,SAAE9wD,QAAQ4zB,GAAQ88B,EAAwB98B,IAC1E88B,EAAwBG,EAAK3zB,OAC7BwzB,EAAwBG,EAAKE,WAGzBhwD,MAAMC,QAAQ6vD,EAAKG,WACM,IAAzBH,EAAKG,SAAS/vD,QACc,iBAArB4vD,EAAKG,SAAS,KACL,QADoB,EACpCH,EAAKG,SAAS,UAAE,eAAEpyD,eAAe,oBACnC,CACE,MAAMoI,EAAM6pD,EAAKG,SAAS,GAC1BN,EAAwB1pD,EAAIohB,iBAG5BrnB,MAAMC,QAAQ6vD,EAAKI,cACnBJ,EAAKI,YAAYjxD,QAAQkxD,IACrBR,EAAwBQ,EAAWh0B,OACnCwzB,EAAwBQ,EAAWH,eAK/CthC,EAAYrC,WAAWptB,QAAQmhB,IAC3B,EAAAgwC,yBAAyBhwC,EAAW7D,KAGjC,CACHJ,SAAUuS,EACVnS,gBAIA,sBACJV,GAEA,MAAMrK,EAAU,EAAA8H,QAAQS,eAAe8B,EAAQrK,SACzCL,EAAa,EAAAs+C,cAAc5zC,EAAQ1K,YAEzC,OAAOvS,KAAKwwD,UAAUiB,YAAYx0C,EAAQJ,KAAMjK,EAASL,GAAY+K,KAAKo0C,IAK/D,CACHn0C,SAAUm0C,EACV/zC,kBALa3b,IAAb0vD,QAAoD1vD,IAA1B0vD,EAAS/zC,aAC7B+zC,EAAS/zC,aACT,MAQV,2BAA2B3S,GAC/BhL,KAAKwwD,UAAUpgC,UACXplB,EAAQklB,SACRllB,EAAQnJ,YACRmJ,EAAQglB,UACRhlB,EAAQmlB,UApIpB,wB,oGCzBA,aACA,OACA,QACA,QAYA,MAAawhC,UAAqB,EAAApB,cAgB9B,YAAqB7zC,GACjB1Z,MAAM0Z,GADW,KAAAA,YAPrB,KAAAk1C,MAAgB,IAAI,EAAAC,aAHpB,aAAan1C,GACT,OAAO,IAAIi1C,EAAaj1C,GAoBlB,cAAcO,GACpB,OAAI,EAAAgiC,oBAAoBC,uBAAuBjiC,GACpCjd,KAAK8xD,2BAA2B70C,GAChC,EAAAgiC,oBAAoBG,qBAAqBniC,GACzCjd,KAAK+xD,yBAAyB90C,GAC9B,EAAAgiC,oBAAoBK,cAAcriC,GAClCjd,KAAKgyD,kBAAkB/0C,GAEvBja,MAAMyb,cAAcxB,GAI3B,wBACJA,GAEA,MAAMrK,EAAU,EAAA8H,QAAQS,eAAe8B,EAAQrK,SAG/C,MAAO,CAAE2K,eAFUvd,KAAK4xD,MAAM3zB,QAAQhhB,EAAQsgB,MAAO3qB,IAE1B,IAGvB,iCACJ5H,GAEA,MAAMjK,EAAiC,iBAAlBiK,EAAQjK,MAAqB,IAAIm8B,IAAIlyB,EAAQjK,OAASiK,EAAQjK,MAGnF,aAFMf,KAAK4xD,MAAMK,cAAcjnD,EAAQ6iB,GAAI9sB,GAEpC,CAAEwc,SAAU,IAGf,+BACJvS,GAEA,MAAMjK,EAAiC,iBAAlBiK,EAAQjK,MAAqB,IAAIm8B,IAAIlyB,EAAQjK,OAASiK,EAAQjK,MAInF,OAFAf,KAAK4xD,MAAM30B,YAAYjyB,EAAQ6iB,GAAI9sB,GAE5B,CAAEwc,SAAU,KAhE3B,kB,4GCfA,aACA,QAqBA,MAAakU,UAA6B,EAAA8+B,cA4BtC,YACI7zC,EAAoB,EAAAK,sBAAsB8hC,mCAE1C77C,MAAM0Z,GAVF,KAAAw1C,YAAc,IAAI/vD,IAKlB,KAAAgwD,WAAa,IAAIhwD,IAtBzB,qBAMI,YALuBH,IAAnBhC,KAAKoyD,YACLpyD,KAAKoyD,UAAY,IAAI3gC,EACjB,EAAA1U,sBAAsB8hC,oCAGvB7+C,KAAKoyD,UA6BhB,SAASC,GACLryD,KAAKkyD,YAAYlrD,IAAIqrD,EAAwBzgC,YAAaygC,EAAwBxgC,SAI5E,cAAc5U,GACpB,GAAIA,EAAQrH,OAAS,EAAAmH,sBAAsB6hC,SAAS0T,cAAe,CAE/D,QAAwBtwD,IADAhC,KAAKmyD,WAAWl0D,IAAIgf,EAAQs1C,iBAEhD,MAAM9uD,MAEF,yCAAyCwZ,EAAQs1C,oEAIzD,MAAM1gC,EAAU7xB,KAAKkyD,YAAYj0D,IAAIgf,EAAQu1C,mBAE7C,QAAgBxwD,IAAZ6vB,EACA,MAAMpuB,MAAM,yCAAyCwZ,EAAQu1C,sBAGjE,MAAM11C,EAAU+U,EAAQ5U,EAAQs1C,iBAChCvyD,KAAKmyD,WAAWnrD,IAAIiW,EAAQs1C,gBAAiBz1C,GAEjD,GAAIG,EAAQrH,OAAS,EAAAmH,sBAAsB6hC,SAAS6T,eAAgB,CAChE,MAAM31C,EAAU9c,KAAKmyD,WAAWl0D,IAAIgf,EAAQs1C,iBAC5C,QAAgBvwD,IAAZ8a,EACA,MAAMrZ,MAAM,4BAA4BwZ,EAAQs1C,oBAEpDz1C,EAAQ41C,UACR1yD,KAAKmyD,WAAWprD,OAAOkW,EAAQs1C,iBAGnC,OAAO7zC,QAAQ+Q,QAAQ,CACnBlS,SAAU,MAzEtB,0B,kGCtBA,aAWA,OAEA,mBA2CI,YACa+B,EACAY,EACAtN,EACAssB,EAA6B,GAH7B,KAAA5f,YACA,KAAAY,mBACA,KAAAtN,UACA,KAAAssB,qBAzCJ,KAAAyzB,qBAAuB,IAAI,EAAAvN,aAK3B,KAAAwN,WAAa,IAAIxzD,EAAM0Z,KAKvB,KAAA+5C,SAAW,IAAIzzD,EAAMuG,QAOrB,KAAAqL,OAAS,IAAI5R,EAAMuG,QA0BxB3F,KAAKiT,OAASjT,KAAK25B,aAAaxmB,UAAUP,GAC1C5S,KAAKkgB,iBAAiB5F,WAAWta,KAAKiT,OAAQjT,KAAK2yD,sBACnD3yD,KAAK2yD,qBAAqBG,UAAU9yD,KAAKgR,QACzChR,KAAK25B,aAAavmB,YAAYR,EAAS5S,KAAK4yD,YAC5C5yD,KAAK4yD,WAAWG,QAAQ/yD,KAAK6yD,UAC7B7yD,KAAKgzD,iBAAmB,IAAM3pD,KAAKgS,IAAI,GAAIrb,KAAKk/B,oBAOpD,mBACI,OAAO,EAAAslB,wBAOX,uBACI,OAAOxkD,KAAK25B,aAAapnB,c,uPCnFjC,cAGA,SACA,OAKA,QACA,QACA,SAKA,IAAY0gD,EA4BZ,SAAgBC,EAAgBC,GAC5B,OAAOA,EAAQhxC,OAAS8wC,EAAYG,OAMxC,SAAgBC,EAAgBF,GAC5B,OAAOA,EAAQhxC,OAAS8wC,EAAYK,OAMxC,SAAgBC,EAAmBJ,GAC/B,OAAOA,EAAQhxC,OAAS8wC,EAAYO,UAiBxC,SAAgBC,EAASC,EAAgCzwD,GACrD,GAAKywD,EAAWC,OAIhB,IAAK,MAAM1lC,KAASylC,EAAWC,OACtB1wD,EAAQ2wD,aAAc3wD,EAAQ2wD,WAAW3lC,IAC1C4lC,EAAc5lC,EAAOhrB,GAErBA,EAAQ6wD,eACR7wD,EAAQ6wD,cAAc7lC,GAQlC,SAAgB4lC,EAAc5lC,EAAkChrB,GAC5D,KAAKA,EAAQ2wD,YAAc3wD,EAAQ2wD,WAAW3lC,KACtCA,EAAMkQ,SACN,IAAK,MAAMD,KAAWjQ,EAAMkQ,SACxB,OAAQD,EAAQtoB,MACZ,KAAK,EAAAm+C,IAAIC,OAAOC,GAAGC,KAAKC,SAASC,QAC7B,MAEJ,KAAK,EAAAL,IAAIC,OAAOC,GAAGC,KAAKC,SAASE,MACzBpxD,EAAQqxD,mBACRrxD,EAAQqxD,kBAAkBp2B,GAE9B,MAEJ,KAAK,EAAA61B,IAAIC,OAAOC,GAAGC,KAAKC,SAASI,WACzBtxD,EAAQuxD,kBACRvxD,EAAQuxD,iBAAiBt2B,GAE7B,MAEJ,KAAK,EAAA61B,IAAIC,OAAOC,GAAGC,KAAKC,SAASM,QACzBxxD,EAAQyxD,qBACRzxD,EAAQyxD,oBAAoBx2B,GAQhDj7B,EAAQ6wD,eACR7wD,EAAQ6wD,cAAc7lC,IA7G9B,SAAYglC,GACR,uBACA,uBACA,6BAHJ,CAAYA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KA4BvB,oBAOA,oBAOA,uBAkBA,aAkBA,kBA6CA,MAAa0B,EACT,OACI1mC,EACAiQ,EACAj7B,GAEA,MAAM,KAAE4H,EAAI,OAAE6M,GAAWuW,EACnBkR,EAAOjB,EAAQiB,KAErB,GAAKA,GAASt0B,GAAS6M,EAIvB,IAAK,IAAIta,EAAI,EAAGA,EAAI+hC,EAAK79B,OAAQlE,GAAK,EAAG,CACrC,MAAMuB,EAAMkM,EAAKs0B,EAAK/hC,IAChBiB,EAAQqZ,EAAOynB,EAAK/hC,EAAI,IAC9B,IAAK6F,EAAQ2xD,eAAej2D,EAAKN,GAC7B,QAjBhB,sBAkCA,MAAaw2D,EACT,OAAO3mC,EAA2BjrB,GAC9B,IAAKirB,EACD,OAGJ,MAAM4mC,EAAgB5mC,EAAS5sB,OAE/B,IAAI0+B,EAAQ,EACRC,EAAQ,EAEZ,MAAM80B,EAAoB,GACpBC,EAAoB,GACpBC,EAA8B,GACpC,IAAK,IAAIC,EAAW,EAAGA,EAAWJ,GAAiB,CAE/C,MAAM3yC,EAA6B,EAArB+L,EAASgnC,GACjBjrB,EAAQ/b,EAASgnC,IAAa,EAIpC,KAFEA,EAEE/yC,IAAS8wC,EAAYG,QAAUjxC,IAAS8wC,EAAYK,OACpD,IAAK,IAAIz0D,EAAI,EAAGA,EAAIorC,IAASprC,EAAG,CAC5B,MAAMs2D,EAAKjnC,EAASgnC,KACdE,EAAKlnC,EAASgnC,KAGpBl1B,GAAUm1B,GAAM,IAAY,EAALA,GACvBl1B,GAAUm1B,GAAM,IAAY,EAALA,GACF,YAAjBnyD,EAAQ2S,OACRm/C,EAAQ7uD,KAAK85B,GACbg1B,EAAQ9uD,KAAK+5B,IAGjB,MAAMrwB,EAAW,IAAI,EAAApK,QAAQw6B,EAAOC,GACpCg1B,EAAS/uD,KAAK,CAAEic,OAAMvS,iBAEvB,CACH,IAAK,MAAMujD,KAAW8B,EAClBhyD,EAAQoyD,aAAalC,GAEzBlwD,EAAQoyD,aAAa,CAAElzC,SACvB4yC,EAAQzzD,OAAS,EACjB0zD,EAAQ1zD,OAAS,EACjB2zD,EAAS3zD,OAAS,GAI1B,GAAI2zD,EAAS3zD,OAAS,EAClB,IAAK,MAAM6xD,KAAW8B,EAClBhyD,EAAQoyD,aAAalC,IAlDrC,qBAwDA,MAAMmC,EAAqB,CACvB,cACA,aACA,cACA,WACA,YACA,YACA,aAoDJ,SAASC,EACLtnC,EACAiQ,EACAs3B,EAA8B,IAE9B,MAAMC,EAAQ,IAAId,EAEZxE,EAAuBqF,GAAqB,GASlD,OAPAC,EAAM11D,OAAOkuB,EAAOiQ,EAAS,CACzB02B,eAAgB,CAACj3D,EAAMU,KACnB8xD,EA1CZ,SAA6BxyD,GACzB,OAAQA,GACJ,IAAK,KACD,MAAO,MACX,QACI,OAAOA,GAqCI+3D,CAAoB/3D,IA5D3C,SAAyBU,GACrB,MAAMY,EAAiBnB,OAAOkB,UAAUC,eAExC,IAAK,MAAM02D,KAAYL,EACnB,GAAIr2D,EAAe1B,KAAKc,EAAOs3D,GAAW,CACtC,MAAMx0D,EAAI9C,EAAMs3D,GAEhB,QAAU3zD,IAANb,EACA,MAAM,IAAIsC,MAAM,4BAGpB,OAAO8J,EAAKqoD,OAAOz0D,GAAMA,EAAUoN,WAAapN,EAIxD,MAAM,IAAIsC,MAAM,iBA6CgCoyD,CAAgBx3D,IACjD,KAIR8xD,EAGX,SAAS2F,EACL7nC,EACAiQ,EACAsJ,EACArZ,EACA+Q,EACA3iB,EACA7L,GAEA,MAAMy/C,EAAuB,CACzBtxB,OAAQ5Q,EAAMtwB,KACdqhC,OAAQ7Q,EACR8Q,MAAO51B,KAAKS,IAAI,EAAGqkB,GAAgB+Q,GAAsB,IACzDJ,cAAe0I,GAIb1Y,EA1DV,SACIoP,EACA3hB,GAEA,GAAI2hB,EAAQj/B,eAAe,MAAO,CAC9B,MAAM4uB,EAAKqQ,EAAQrQ,GACnB,GAAkB,iBAAPA,EACP,OAAOA,EACJ,GAAIA,EAOP,YANe7rB,IAAXua,GAAwBsR,EAAGkoC,YAAYxpD,OAAOypD,mBAC9Cz5C,EAAOsB,MACH,gEACAqgB,GAGDrQ,EAAGtf,YA2CA0nD,CAAgB/3B,EAAS3hB,GAO3C,YANkBva,IAAd8sB,IACAqhC,EAAWr7B,IAAMhG,GAGrBymC,EAAetnC,EAAOiQ,EAASiyB,GAExB,IAAI,EAAAvxB,OAAOuxB,EAAYz/C,GAGlC,SAASwlD,EAAeh4B,GACpB,QAAgBl8B,IAAZk8B,EACA,OAAO,EAAAhqB,gBAAgBkgD,QAG3B,OAAQl2B,EAAQtoB,MACZ,KAAK,EAAAm+C,IAAIC,OAAOC,GAAGC,KAAKC,SAASC,QAC7B,OAAO,EAAAlgD,gBAAgBkgD,QAC3B,KAAK,EAAAL,IAAIC,OAAOC,GAAGC,KAAKC,SAASE,MAC7B,OAAO,EAAAngD,gBAAgBmgD,MAC3B,KAAK,EAAAN,IAAIC,OAAOC,GAAGC,KAAKC,SAASI,WAC7B,OAAO,EAAArgD,gBAAgBqgD,WAC3B,KAAK,EAAAR,IAAIC,OAAOC,GAAGC,KAAKC,SAASM,QAC7B,OAAO,EAAAvgD,gBAAgBugD,QAC3B,QACI,OAAO,EAAAvgD,gBAAgBkgD,SAQnC,+BAkBI,YAAY+B,EAA+B13B,EAA+BliB,GAjB1E,KAAAsR,GAAK,eAEY,KAAAuoC,mBAAqB,IAAIvB,EAgBtC70D,KAAKu+B,YAAc43B,EACnBn2D,KAAKusB,aAAekS,EACpBz+B,KAAKw+B,SAAWjiB,EAMpB,iBACI,OAAOvc,KAAKusB,aAMhB,eAAekS,GACXz+B,KAAKusB,aAAekS,EAMxB,WAAW5hB,GACP,OAAO,EAAA6hB,kBAAkB7hB,GAS7B,QAAQA,EAAuBoC,GAC3B,MAAM,QAAErM,GAAYqM,EACdo3C,EAAU,IAAI/oD,WAAWuP,GACzBy5C,EAAQ,EAAAvC,IAAIC,OAAOC,GAAGC,KAAKzxB,OAAO4zB,GAExCr2D,KAAKu2D,UAAY3jD,EAEjB6gD,EAAS6C,EAAOt2D,MAQpB,WAAWiuB,GACPjuB,KAAKmqD,QAAUl8B,EAEf,MAAME,EAAenuB,KAAKu2D,UAAUzjD,MAC9B6zB,EAAY1Y,EAAMtwB,KAExB,aAC0BqE,IAAtBhC,KAAKusB,eACJvsB,KAAKusB,aAAawb,WAAWpB,EAAWxY,IAajD,kBAAkB+P,GACd,QAAyBl8B,IAArBk8B,EAAQhQ,SACR,OAGJ,MAAMC,EAAenuB,KAAKu2D,UAAUzjD,MAC9B6zB,EAAY3mC,KAAKmqD,QAAQxsD,KACzB64D,EAAex2D,KAAKmqD,QAAQl5C,QAAU,KAE5C,QAC0BjP,IAAtBhC,KAAKusB,eACJvsB,KAAKusB,aAAayb,kBAAkBrB,EAAWuvB,EAAeh4B,GAAU/P,GAEzE,OAGJ,MAAMD,EAAsB,GAU5B,GATAluB,KAAKo2D,mBAAmBr2D,OAAOm+B,EAAQhQ,SAAU,CAC7CtY,KAAM,QACNy/C,aAAclC,IACND,EAAgBC,IAChBjlC,EAAShoB,KAAKitD,EAAQvjD,aAKV,IAApBse,EAAS5sB,OACT,OAGJ,MAAMc,EAAM0zD,EACR91D,KAAKmqD,QACLjsB,EACA,QACA/P,EACAnuB,KAAKu+B,YAAYW,mBACjBl/B,KAAKw+B,UAGTx+B,KAAKu+B,YAAY5P,oBAAoBgY,EAAW6vB,EAActoC,EAAU9rB,EAAK+rB,GAQjF,iBAAiB+P,GACb,QAAyBl8B,IAArBk8B,EAAQhQ,SACR,OAGJ,MAAMC,EAAenuB,KAAKu2D,UAAUzjD,MAC9B6zB,EAAY3mC,KAAKmqD,QAAQxsD,KACzB64D,EAAex2D,KAAKmqD,QAAQl5C,QAAU,KAE5C,QAC0BjP,IAAtBhC,KAAKusB,eACJvsB,KAAKusB,aAAa0b,iBAAiBtB,EAAWuvB,EAAeh4B,GAAU/P,GAExE,OAGJ,MAAMD,EAA4B,GAClC,IAAIwR,EAaJ,GAZA1/B,KAAKo2D,mBAAmBr2D,OAAOm+B,EAAQhQ,SAAU,CAC7CtY,KAAM,OACNy/C,aAAclC,IACND,EAAgBC,IAChBzzB,EAAY,CAACyzB,EAAQvjD,UACrBse,EAAShoB,KAAK,CAAEw5B,eACT2zB,EAAgBF,IACvBzzB,EAAUx5B,KAAKitD,EAAQvjD,aAKX,IAApBse,EAAS5sB,OACT,OAGJ,MAAMc,EAAM0zD,EACR91D,KAAKmqD,QACLjsB,EACA,OACA/P,EACAnuB,KAAKu+B,YAAYW,mBACjBl/B,KAAKw+B,UAGTx+B,KAAKu+B,YAAYxP,mBAAmB4X,EAAW6vB,EAActoC,EAAU9rB,EAAK+rB,GAQhF,oBAAoB+P,GAChB,QAAyBl8B,IAArBk8B,EAAQhQ,SACR,OAGJ,MAAMC,EAAenuB,KAAKu2D,UAAUzjD,MAC9B6zB,EAAY3mC,KAAKmqD,QAAQxsD,KACzB64D,EAAex2D,KAAKmqD,QAAQl5C,QAAU,KAE5C,QAC0BjP,IAAtBhC,KAAKusB,eACJvsB,KAAKusB,aAAa2b,oBAAoBvB,EAAWuvB,EAAeh4B,GAAU/P,GAE3E,OAGJ,MAAMD,EAA+B,GAC/BuoC,EAAmC,CAAE52B,MAAO,IAClD,IAAI62B,EAqBJ,GApBA12D,KAAKo2D,mBAAmBr2D,OAAOm+B,EAAQhQ,SAAU,CAC7CtY,KAAM,UACNy/C,aAAclC,IACND,EAAgBC,GAChBuD,EAAc,CAACvD,EAAQvjD,UAChByjD,EAAgBF,GACvBuD,EAAYxwD,KAAKitD,EAAQvjD,UAClB2jD,EAAmBJ,SACNnxD,IAAhB00D,GAA6BA,EAAYp1D,OAAS,IAClDo1D,EAAYxwD,KAAKwwD,EAAY,GAAGvrB,SAChCsrB,EAAe52B,MAAM35B,KAAKwwD,OAMtCD,EAAe52B,MAAMv+B,OAAS,GAC9B4sB,EAAShoB,KAAKuwD,GAGM,IAApBvoC,EAAS5sB,OACT,OAGJ,MAAMc,EAAM0zD,EACR91D,KAAKmqD,QACLjsB,EACA,UACA/P,EACAnuB,KAAKu+B,YAAYW,mBACjBl/B,KAAKw+B,UAGTx+B,KAAKu+B,YAAYrP,sBACbyX,EACA6vB,EACAtoC,EACA9rB,EACA+rB,M,cC7lBZhxB,EAAOD,QAAUqQ,EAKjB,IAAIopD,EAAO,KAEX,IACEA,EAAO,IAAIC,YAAYC,SAAS,IAAID,YAAYE,OAAO,IAAIxpD,WAAW,CACpE,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,MACvnC,IAAIpQ,QACT,MAAOwH,IAcT,SAAS6I,EAAKwpD,EAAKC,EAAM/oD,GAMrBjO,KAAK+2D,IAAY,EAANA,EAMX/2D,KAAKg3D,KAAc,EAAPA,EAMZh3D,KAAKiO,WAAaA,EAoCtB,SAAS2nD,EAAOvuD,GACZ,OAAsC,KAA9BA,GAAOA,EAAgB,YAXnCkG,EAAKvO,UAAUi4D,WAEfn5D,OAAOC,eAAewP,EAAKvO,UAAW,aAAc,CAAEX,OAAO,IAkB7DkP,EAAKqoD,OAASA,EAOd,IAAIsB,EAAY,GAOZC,EAAa,GAQjB,SAASC,EAAQ/4D,EAAO4P,GACpB,IAAI5G,EAAKgwD,EAAWn1D,EACpB,OAAI+L,GAEI/L,EAAS,IADb7D,KAAW,IACgBA,EAAQ,OAC/Bg5D,EAAYF,EAAW94D,IAEZg5D,GAEfhwD,EAAM+G,EAAS/P,GAAgB,EAARA,GAAa,GAAK,EAAI,GAAG,GAC5C6D,IACAi1D,EAAW94D,GAASgJ,GACjBA,IAGHnF,GAAU,MADd7D,GAAS,IACqBA,EAAQ,OAClCg5D,EAAYH,EAAU74D,IAEXg5D,GAEfhwD,EAAM+G,EAAS/P,EAAOA,EAAQ,GAAK,EAAI,GAAG,GACtC6D,IACAg1D,EAAU74D,GAASgJ,GAChBA,GAmBf,SAASq6B,EAAWrjC,EAAO4P,GACvB,GAAI/E,MAAM7K,GACN,OAAO4P,EAAWqpD,EAAQC,EAC9B,GAAItpD,EAAU,CACV,GAAI5P,EAAQ,EACR,OAAOi5D,EACX,GAAIj5D,GAASm5D,EACT,OAAOC,MACR,CACH,GAAIp5D,IAAUq5D,EACV,OAAOC,EACX,GAAIt5D,EAAQ,GAAKq5D,EACb,OAAOE,EAEf,OAAIv5D,EAAQ,EACDqjC,GAAYrjC,EAAO4P,GAAU4pD,MACjCzpD,EAAU/P,EAAQy5D,EAAkB,EAAIz5D,EAAQy5D,EAAkB,EAAG7pD,GAmBhF,SAASG,EAAS2pD,EAASC,EAAU/pD,GACjC,OAAO,IAAIV,EAAKwqD,EAASC,EAAU/pD,GA5CvCV,EAAK6pD,QAAUA,EAkCf7pD,EAAKm0B,WAAaA,EAsBlBn0B,EAAKa,SAAWA,EAShB,IAAI6pD,EAAU5uD,KAAKgS,IASnB,SAAS68C,EAAWzpD,EAAKR,EAAUkqD,GAC/B,GAAmB,IAAf1pD,EAAInN,OACJ,MAAMmC,MAAM,gBAChB,GAAY,QAARgL,GAAyB,aAARA,GAA8B,cAARA,GAA+B,cAARA,EAC9D,OAAO8oD,EASX,GARwB,iBAAbtpD,GAEPkqD,EAAQlqD,EACRA,GAAW,GAEXA,IAAcA,GAElBkqD,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAM70B,WAAW,SAErB,IAAIpkC,EACJ,IAAKA,EAAIuP,EAAIwF,QAAQ,MAAQ,EACzB,MAAMxQ,MAAM,mBACX,GAAU,IAANvE,EACL,OAAOg5D,EAAWzpD,EAAIG,UAAU,GAAIX,EAAUkqD,GAAON,MAQzD,IAHA,IAAIO,EAAe12B,EAAWu2B,EAAQE,EAAO,IAEzChyD,EAASoxD,EACJn6D,EAAI,EAAGA,EAAIqR,EAAInN,OAAQlE,GAAK,EAAG,CACpC,IAAIqS,EAAOpG,KAAKO,IAAI,EAAG6E,EAAInN,OAASlE,GAChCiB,EAAQiY,SAAS7H,EAAIG,UAAUxR,EAAGA,EAAIqS,GAAO0oD,GACjD,GAAI1oD,EAAO,EAAG,CACV,IAAI4oD,EAAQ32B,EAAWu2B,EAAQE,EAAO1oD,IACtCtJ,EAASA,EAAOmyD,IAAID,GAAOl4D,IAAIuhC,EAAWrjC,SAG1C8H,GADAA,EAASA,EAAOmyD,IAAIF,IACJj4D,IAAIuhC,EAAWrjC,IAIvC,OADA8H,EAAO8H,SAAWA,EACX9H,EAoBX,SAASmtC,EAAUp7B,EAAKjK,GACpB,MAAmB,iBAARiK,EACAwpB,EAAWxpB,EAAKjK,GACR,iBAARiK,EACAggD,EAAWhgD,EAAKjK,GAEpBG,EAAS8J,EAAI6+C,IAAK7+C,EAAI8+C,KAA0B,kBAAb/oD,EAAyBA,EAAWiK,EAAIjK,UAftFV,EAAK2qD,WAAaA,EAyBlB3qD,EAAK+lC,UAAYA,EAUjB,IAcIwkB,EAAiBS,WAOjBf,EAAiBM,EAAiBA,EAOlCJ,EAAiBF,EAAiB,EAOlCgB,EAAapB,EA5BI,GAAK,IAkCtBG,EAAOH,EAAQ,GAMnB7pD,EAAKgqD,KAAOA,EAMZ,IAAID,EAAQF,EAAQ,GAAG,GAMvB7pD,EAAK+pD,MAAQA,EAMb,IAAImB,EAAMrB,EAAQ,GAMlB7pD,EAAKkrD,IAAMA,EAMX,IAAIC,EAAOtB,EAAQ,GAAG,GAMtB7pD,EAAKmrD,KAAOA,EAMZ,IAAIC,EAAUvB,GAAS,GAMvB7pD,EAAKorD,QAAUA,EAMf,IAAIf,EAAYxpD,GAAS,EAAc,YAAc,GAMrDb,EAAKqqD,UAAYA,EAMjB,IAAIH,EAAqBrpD,GAAS,GAAc,GAAc,GAM9Db,EAAKkqD,mBAAqBA,EAM1B,IAAIE,EAAYvpD,EAAS,GAAG,YAAc,GAM1Cb,EAAKoqD,UAAYA,EAMjB,IAAIiB,EAAgBrrD,EAAKvO,UAMzB45D,EAAcC,MAAQ,WAClB,OAAO74D,KAAKiO,SAAWjO,KAAK+2D,MAAQ,EAAI/2D,KAAK+2D,KAOjD6B,EAAcrqD,SAAW,WACrB,OAAIvO,KAAKiO,UACIjO,KAAKg3D,OAAS,GAAKc,GAAmB93D,KAAK+2D,MAAQ,GACzD/2D,KAAKg3D,KAAOc,GAAkB93D,KAAK+2D,MAAQ,IAUtD6B,EAAcxtD,SAAW,SAAkB+sD,GAEvC,IADAA,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAM70B,WAAW,SACrB,GAAItjC,KAAK84D,SACL,MAAO,IACX,GAAI94D,KAAK+4D,aAAc,CACnB,GAAI/4D,KAAKg5D,GAAGrB,GAAY,CAGpB,IAAIsB,EAAYv3B,EAAWy2B,GACvBe,EAAMl5D,KAAKk5D,IAAID,GACfE,EAAOD,EAAIZ,IAAIW,GAAWh9C,IAAIjc,MAClC,OAAOk5D,EAAI9tD,SAAS+sD,GAASgB,EAAKN,QAAQztD,SAAS+sD,GAEnD,MAAO,IAAMn4D,KAAK63D,MAAMzsD,SAAS+sD,GAQzC,IAHA,IAAIC,EAAe12B,EAAWu2B,EAAQE,EAAO,GAAIn4D,KAAKiO,UAClDmrD,EAAMp5D,KACNmG,EAAS,KACA,CACT,IAAIkzD,EAASD,EAAIF,IAAId,GAEjBkB,GADSF,EAAIn9C,IAAIo9C,EAAOf,IAAIF,IAAeS,UAAY,GACvCztD,SAAS+sD,GAE7B,IADAiB,EAAMC,GACEP,SACJ,OAAOQ,EAASnzD,EAEhB,KAAOmzD,EAAOh4D,OAAS,GACnBg4D,EAAS,IAAMA,EACnBnzD,EAAS,GAAKmzD,EAASnzD,IASnCyyD,EAAcW,YAAc,WACxB,OAAOv5D,KAAKg3D,MAOhB4B,EAAcY,oBAAsB,WAChC,OAAOx5D,KAAKg3D,OAAS,GAOzB4B,EAAca,WAAa,WACvB,OAAOz5D,KAAK+2D,KAOhB6B,EAAcc,mBAAqB,WAC/B,OAAO15D,KAAK+2D,MAAQ,GAOxB6B,EAAce,cAAgB,WAC1B,GAAI35D,KAAK+4D,aACL,OAAO/4D,KAAKg5D,GAAGrB,GAAa,GAAK33D,KAAK63D,MAAM8B,gBAEhD,IADA,IAAIzhD,EAAmB,GAAblY,KAAKg3D,KAAYh3D,KAAKg3D,KAAOh3D,KAAK+2D,IACnC6C,EAAM,GAAIA,EAAM,GACK,IAArB1hD,EAAO,GAAK0hD,GADOA,KAG5B,OAAoB,GAAb55D,KAAKg3D,KAAY4C,EAAM,GAAKA,EAAM,GAO7ChB,EAAcE,OAAS,WACnB,OAAqB,IAAd94D,KAAKg3D,MAA2B,IAAbh3D,KAAK+2D,KAOnC6B,EAAciB,IAAMjB,EAAcE,OAMlCF,EAAcG,WAAa,WACvB,OAAQ/4D,KAAKiO,UAAYjO,KAAKg3D,KAAO,GAOzC4B,EAAckB,WAAa,WACvB,OAAO95D,KAAKiO,UAAYjO,KAAKg3D,MAAQ,GAOzC4B,EAAcmB,MAAQ,WAClB,OAA0B,IAAP,EAAX/5D,KAAK+2D,MAOjB6B,EAAcoB,OAAS,WACnB,OAA0B,IAAP,EAAXh6D,KAAK+2D,MAQjB6B,EAAcqB,OAAS,SAAgB3wD,GAGnC,OAFKssD,EAAOtsD,KACRA,EAAQgqC,EAAUhqC,KAClBtJ,KAAKiO,WAAa3E,EAAM2E,UAAajO,KAAKg3D,OAAS,IAAQ,GAAM1tD,EAAM0tD,OAAS,IAAQ,KAErFh3D,KAAKg3D,OAAS1tD,EAAM0tD,MAAQh3D,KAAK+2D,MAAQztD,EAAMytD,MAS1D6B,EAAcI,GAAKJ,EAAcqB,OAOjCrB,EAAcsB,UAAY,SAAmB5wD,GACzC,OAAQtJ,KAAKg5D,GAAmB1vD,IASpCsvD,EAAcuB,IAAMvB,EAAcsB,UAQlCtB,EAAcwB,GAAKxB,EAAcsB,UAOjCtB,EAAcyB,SAAW,SAAkB/wD,GACvC,OAAOtJ,KAAKs6D,KAAqBhxD,GAAS,GAS9CsvD,EAAc2B,GAAK3B,EAAcyB,SAOjCzB,EAAc4B,gBAAkB,SAAyBlxD,GACrD,OAAOtJ,KAAKs6D,KAAqBhxD,IAAU,GAS/CsvD,EAAc6B,IAAM7B,EAAc4B,gBAQlC5B,EAAc8B,GAAK9B,EAAc4B,gBAOjC5B,EAAc7C,YAAc,SAAqBzsD,GAC7C,OAAOtJ,KAAKs6D,KAAqBhxD,GAAS,GAS9CsvD,EAAc+B,GAAK/B,EAAc7C,YAOjC6C,EAAcgC,mBAAqB,SAA4BtxD,GAC3D,OAAOtJ,KAAKs6D,KAAqBhxD,IAAU,GAS/CsvD,EAAciC,IAAMjC,EAAcgC,mBAQlChC,EAAckC,GAAKlC,EAAcgC,mBAQjChC,EAAcphB,QAAU,SAAiBluC,GAGrC,GAFKssD,EAAOtsD,KACRA,EAAQgqC,EAAUhqC,IAClBtJ,KAAKg5D,GAAG1vD,GACR,OAAO,EACX,IAAIyxD,EAAU/6D,KAAK+4D,aACfiC,EAAW1xD,EAAMyvD,aACrB,OAAIgC,IAAYC,GACJ,GACPD,GAAWC,EACL,EAENh7D,KAAKiO,SAGF3E,EAAM0tD,OAAS,EAAMh3D,KAAKg3D,OAAS,GAAO1tD,EAAM0tD,OAASh3D,KAAKg3D,MAAS1tD,EAAMytD,MAAQ,EAAM/2D,KAAK+2D,MAAQ,GAAO,EAAI,EAFhH/2D,KAAKic,IAAI3S,GAAOyvD,cAAgB,EAAI,GAYnDH,EAAc0B,KAAO1B,EAAcphB,QAMnCohB,EAAcqC,OAAS,WACnB,OAAKj7D,KAAKiO,UAAYjO,KAAKg5D,GAAGrB,GACnBA,EACJ33D,KAAKk7D,MAAM/6D,IAAIs4D,IAQ1BG,EAAcf,IAAMe,EAAcqC,OAOlCrC,EAAcz4D,IAAM,SAAag7D,GACxBvF,EAAOuF,KACRA,EAAS7nB,EAAU6nB,IAIvB,IAAIC,EAAMp7D,KAAKg3D,OAAS,GACpBqE,EAAkB,MAAZr7D,KAAKg3D,KACXsE,EAAMt7D,KAAK+2D,MAAQ,GACnBwE,EAAiB,MAAXv7D,KAAK+2D,IAEXyE,EAAML,EAAOnE,OAAS,GACtByE,EAAoB,MAAdN,EAAOnE,KACb0E,EAAMP,EAAOpE,MAAQ,GAGrB4E,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAYrC,OAVAD,IADAC,GAAOP,GAHgB,MAAbJ,EAAOpE,QAIF,GAGf6E,IADAC,GAAOP,EAAMI,KACE,GAGfC,IADAC,GAAOP,EAAMI,KACE,GAEfE,GAAOP,EAAMI,EAENptD,GANPytD,GAAO,QAMiB,IATxBC,GAAO,QAQPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C57D,KAAKiO,WAQ/D2qD,EAAcmD,SAAW,SAAkBC,GAGvC,OAFKpG,EAAOoG,KACRA,EAAa1oB,EAAU0oB,IACpBh8D,KAAKG,IAAI67D,EAAWnE,QAS/Be,EAAc38C,IAAM28C,EAAcmD,SAOlCnD,EAAcqD,SAAW,SAAkBC,GACvC,GAAIl8D,KAAK84D,SACL,OAAOvB,EAKX,GAJK3B,EAAOsG,KACRA,EAAa5oB,EAAU4oB,IAGvBvF,EAKA,OAAOvoD,EAJGuoD,EAAK2B,IAAIt4D,KAAK+2D,IACL/2D,KAAKg3D,KACLkF,EAAWnF,IACXmF,EAAWlF,MACTL,EAAKwF,WAAYn8D,KAAKiO,UAG/C,GAAIiuD,EAAWpD,SACX,OAAOvB,EACX,GAAIv3D,KAAKg5D,GAAGrB,GACR,OAAOuE,EAAWnC,QAAUpC,EAAYJ,EAC5C,GAAI2E,EAAWlD,GAAGrB,GACd,OAAO33D,KAAK+5D,QAAUpC,EAAYJ,EAEtC,GAAIv3D,KAAK+4D,aACL,OAAImD,EAAWnD,aACJ/4D,KAAK63D,MAAMS,IAAI4D,EAAWrE,OAE1B73D,KAAK63D,MAAMS,IAAI4D,GAAYrE,MACnC,GAAIqE,EAAWnD,aAClB,OAAO/4D,KAAKs4D,IAAI4D,EAAWrE,OAAOA,MAGtC,GAAI73D,KAAKu6D,GAAG/B,IAAe0D,EAAW3B,GAAG/B,GACrC,OAAO92B,EAAW1hC,KAAKuO,WAAa2tD,EAAW3tD,WAAYvO,KAAKiO,UAKpE,IAAImtD,EAAMp7D,KAAKg3D,OAAS,GACpBqE,EAAkB,MAAZr7D,KAAKg3D,KACXsE,EAAMt7D,KAAK+2D,MAAQ,GACnBwE,EAAiB,MAAXv7D,KAAK+2D,IAEXyE,EAAMU,EAAWlF,OAAS,GAC1ByE,EAAwB,MAAlBS,EAAWlF,KACjB0E,EAAMQ,EAAWnF,MAAQ,GACzBqF,EAAuB,MAAjBF,EAAWnF,IAEjB4E,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAqBrC,OAnBAD,IADAC,GAAOP,EAAMa,KACE,GAGfR,IADAC,GAAOP,EAAMc,KACE,GACfP,GAAO,MAEPD,IADAC,GAAON,EAAMG,KACE,GAGfC,IADAC,GAAOP,EAAMe,KACE,GACfR,GAAO,MAEPD,IADAC,GAAON,EAAMI,KACE,GACfE,GAAO,MAEPD,IADAC,GAAOL,EAAME,KACE,GAEfE,GAAOP,EAAMgB,EAAMf,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE1CptD,GAZPytD,GAAO,QAYiB,IAlBxBC,GAAO,QAiBPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C57D,KAAKiO,WAS/D2qD,EAAcN,IAAMM,EAAcqD,SAQlCrD,EAAcyD,OAAS,SAAgBC,GAGnC,GAFK1G,EAAO0G,KACRA,EAAUhpB,EAAUgpB,IACpBA,EAAQxD,SACR,MAAMr1D,MAAM,oBAaZ,IAWA84D,EAAQnD,EAAKoD,EArBjB,GAAI7F,EAIA,OAAK32D,KAAKiO,WACS,aAAfjO,KAAKg3D,OACY,IAAjBsF,EAAQvF,MAAgC,IAAlBuF,EAAQtF,KAU3B5oD,GANIpO,KAAKiO,SAAW0oD,EAAK8F,MAAQ9F,EAAK+F,OACzC18D,KAAK+2D,IACL/2D,KAAKg3D,KACLsF,EAAQvF,IACRuF,EAAQtF,MAESL,EAAKwF,WAAYn8D,KAAKiO,UARhCjO,KAWf,GAAIA,KAAK84D,SACL,OAAO94D,KAAKiO,SAAWqpD,EAAQC,EAEnC,GAAKv3D,KAAKiO,SA6BH,CAKH,GAFKquD,EAAQruD,WACTquD,EAAUA,EAAQK,cAClBL,EAAQ3B,GAAG36D,MACX,OAAOs3D,EACX,GAAIgF,EAAQ3B,GAAG36D,KAAK48D,KAAK,IACrB,OAAOlE,EACX8D,EAAMlF,MAtCU,CAGhB,GAAIt3D,KAAKg5D,GAAGrB,GACR,OAAI2E,EAAQtD,GAAGP,IAAQ6D,EAAQtD,GAAGL,GACvBhB,EACF2E,EAAQtD,GAAGrB,GACTc,GAIP8D,EADev8D,KAAK68D,IAAI,GACN3D,IAAIoD,GAASQ,IAAI,IACxB9D,GAAGzB,GACH+E,EAAQvD,aAAeN,EAAME,GAEpCS,EAAMp5D,KAAKic,IAAIqgD,EAAQhE,IAAIiE,IAC3BC,EAAMD,EAAOp8D,IAAIi5D,EAAIF,IAAIoD,KAI9B,GAAIA,EAAQtD,GAAGrB,GAClB,OAAO33D,KAAKiO,SAAWqpD,EAAQC,EACnC,GAAIv3D,KAAK+4D,aACL,OAAIuD,EAAQvD,aACD/4D,KAAK63D,MAAMqB,IAAIoD,EAAQzE,OAC3B73D,KAAK63D,MAAMqB,IAAIoD,GAASzE,MAC5B,GAAIyE,EAAQvD,aACf,OAAO/4D,KAAKk5D,IAAIoD,EAAQzE,OAAOA,MACnC2E,EAAMjF,EAmBV,IADA6B,EAAMp5D,KACCo5D,EAAIyB,IAAIyB,IAAU,CAGrBC,EAASlzD,KAAKS,IAAI,EAAGT,KAAKoD,MAAM2sD,EAAI7qD,WAAa+tD,EAAQ/tD,aAWzD,IAPA,IAAI4Q,EAAO9V,KAAKivC,KAAKjvC,KAAKgP,IAAIkkD,GAAUlzD,KAAK0zD,KACzClhD,EAASsD,GAAQ,GAAM,EAAI84C,EAAQ,EAAG94C,EAAO,IAI7C69C,EAAYt7B,EAAW66B,GACvBU,EAAYD,EAAU1E,IAAIgE,GACvBW,EAAUlE,cAAgBkE,EAAUtC,GAAGvB,IAG1C6D,GADAD,EAAYt7B,EADZ66B,GAAU1gD,EACqB7b,KAAKiO,WACdqqD,IAAIgE,GAK1BU,EAAUlE,WACVkE,EAAYvE,GAEhB+D,EAAMA,EAAIr8D,IAAI68D,GACd5D,EAAMA,EAAIn9C,IAAIghD,GAElB,OAAOT,GASX5D,EAAcM,IAAMN,EAAcyD,OAOlCzD,EAAcsE,OAAS,SAAgBZ,GAKnC,OAJK1G,EAAO0G,KACRA,EAAUhpB,EAAUgpB,IAGpB3F,EAOOvoD,GANIpO,KAAKiO,SAAW0oD,EAAKwG,MAAQxG,EAAKyG,OACzCp9D,KAAK+2D,IACL/2D,KAAKg3D,KACLsF,EAAQvF,IACRuF,EAAQtF,MAESL,EAAKwF,WAAYn8D,KAAKiO,UAGxCjO,KAAKic,IAAIjc,KAAKk5D,IAAIoD,GAAShE,IAAIgE,KAS1C1D,EAAcyE,IAAMzE,EAAcsE,OAQlCtE,EAAcQ,IAAMR,EAAcsE,OAMlCtE,EAAcsC,IAAM,WAChB,OAAO9sD,GAAUpO,KAAK+2D,KAAM/2D,KAAKg3D,KAAMh3D,KAAKiO,WAQhD2qD,EAAc0E,IAAM,SAAah0D,GAG7B,OAFKssD,EAAOtsD,KACRA,EAAQgqC,EAAUhqC,IACf8E,EAASpO,KAAK+2D,IAAMztD,EAAMytD,IAAK/2D,KAAKg3D,KAAO1tD,EAAM0tD,KAAMh3D,KAAKiO,WAQvE2qD,EAAc2E,GAAK,SAAYj0D,GAG3B,OAFKssD,EAAOtsD,KACRA,EAAQgqC,EAAUhqC,IACf8E,EAASpO,KAAK+2D,IAAMztD,EAAMytD,IAAK/2D,KAAKg3D,KAAO1tD,EAAM0tD,KAAMh3D,KAAKiO,WAQvE2qD,EAAc4E,IAAM,SAAal0D,GAG7B,OAFKssD,EAAOtsD,KACRA,EAAQgqC,EAAUhqC,IACf8E,EAASpO,KAAK+2D,IAAMztD,EAAMytD,IAAK/2D,KAAKg3D,KAAO1tD,EAAM0tD,KAAMh3D,KAAKiO,WAQvE2qD,EAAc6E,UAAY,SAAmBC,GAGzC,OAFI9H,EAAO8H,KACPA,EAAUA,EAAQ7E,SACE,IAAnB6E,GAAW,IACL19D,KACF09D,EAAU,GACRtvD,EAASpO,KAAK+2D,KAAO2G,EAAU19D,KAAKg3D,MAAQ0G,EAAY19D,KAAK+2D,MAAS,GAAK2G,EAAW19D,KAAKiO,UAE3FG,EAAS,EAAGpO,KAAK+2D,KAAQ2G,EAAU,GAAK19D,KAAKiO,WAS5D2qD,EAAckE,IAAMlE,EAAc6E,UAOlC7E,EAAc+E,WAAa,SAAoBD,GAG3C,OAFI9H,EAAO8H,KACPA,EAAUA,EAAQ7E,SACE,IAAnB6E,GAAW,IACL19D,KACF09D,EAAU,GACRtvD,EAAUpO,KAAK+2D,MAAQ2G,EAAY19D,KAAKg3D,MAAS,GAAK0G,EAAW19D,KAAKg3D,MAAQ0G,EAAS19D,KAAKiO,UAE5FG,EAASpO,KAAKg3D,MAAS0G,EAAU,GAAK19D,KAAKg3D,MAAQ,EAAI,GAAK,EAAGh3D,KAAKiO,WASnF2qD,EAAciE,IAAMjE,EAAc+E,WAOlC/E,EAAcgF,mBAAqB,SAA4BF,GAI3D,GAHI9H,EAAO8H,KACPA,EAAUA,EAAQ7E,SAEN,KADhB6E,GAAW,IAEP,OAAO19D,KAEP,IAAIg3D,EAAOh3D,KAAKg3D,KAChB,OAAI0G,EAAU,GAEHtvD,EADGpO,KAAK+2D,MACU2G,EAAY1G,GAAS,GAAK0G,EAAW1G,IAAS0G,EAAS19D,KAAKiO,UAE9EG,EADY,KAAZsvD,EACS1G,EAEAA,IAAU0G,EAAU,GAFd,EAAG19D,KAAKiO,WAY1C2qD,EAAcgE,KAAOhE,EAAcgF,mBAQnChF,EAAciF,MAAQjF,EAAcgF,mBAMpChF,EAAckF,SAAW,WACrB,OAAK99D,KAAKiO,SAEHG,EAASpO,KAAK+2D,IAAK/2D,KAAKg3D,MAAM,GAD1Bh3D,MAQf44D,EAAc+D,WAAa,WACvB,OAAI38D,KAAKiO,SACEjO,KACJoO,EAASpO,KAAK+2D,IAAK/2D,KAAKg3D,MAAM,IAQzC4B,EAAcmF,QAAU,SAAiBrD,GACrC,OAAOA,EAAK16D,KAAKg+D,YAAch+D,KAAKi+D,aAOxCrF,EAAcoF,UAAY,WACtB,IAAI1vD,EAAKtO,KAAKg3D,KACV3oD,EAAKrO,KAAK+2D,IACd,MAAO,CACS,IAAZ1oD,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,GACK,IAAZC,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,KAQfsqD,EAAcqF,UAAY,WACtB,IAAI3vD,EAAKtO,KAAKg3D,KACV3oD,EAAKrO,KAAK+2D,IACd,MAAO,CACHzoD,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,EACAD,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,IAWRd,EAAK2wD,UAAY,SAAmB7uD,EAAOpB,EAAUysD,GACjD,OAAOA,EAAKntD,EAAK4wD,YAAY9uD,EAAOpB,GAAYV,EAAK6wD,YAAY/uD,EAAOpB,IAS5EV,EAAK4wD,YAAc,SAAqB9uD,EAAOpB,GAC3C,OAAO,IAAIV,EACP8B,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZpB,IAURV,EAAK6wD,YAAc,SAAqB/uD,EAAOpB,GAC3C,OAAO,IAAIV,EACP8B,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACNA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACNpB,K,6BCryCR,IAiCgBgmD,EATJD,EATJD,EAfJsK,EAAY,EAAQ,KAGpBC,EAAUD,EAAUp7B,OAAQs7B,EAAQF,EAAU7zD,KAG9Cg0D,EAAQH,EAAUI,MAAe,UAAMJ,EAAUI,MAAe,QAAI,IAExED,EAAMzK,MAOEA,EAAM,IAENC,SAOIA,EAAS,IAENC,KAOCA,EAAK,IAENC,KAAO,WAiBN,SAASA,EAAKx0D,GAEV,GADAM,KAAK2zD,OAAS,GACVj0D,EACA,IAAK,IAAImL,EAAO/M,OAAO+M,KAAKnL,GAAatC,EAAI,EAAGA,EAAIyN,EAAKvJ,SAAUlE,EACpC,MAAvBsC,EAAWmL,EAAKzN,MAChB4C,KAAK6K,EAAKzN,IAAMsC,EAAWmL,EAAKzN,KA8HhC,IACRshE,EAAiBhnD,EAgxBzB,OAt4BAw8C,EAAKl1D,UAAU20D,OAAS4K,EAAMxyD,WAa9BmoD,EAAKzxB,OAAS,SAAgBW,EAAQ9hC,GAC5B8hC,aAAkBk7B,IACpBl7B,EAASk7B,EAAQ5/D,OAAO0kC,IAE5B,IADA,IAAIO,OAAiB3hC,IAAXV,EAAuB8hC,EAAO7C,IAAM6C,EAAOnC,IAAM3/B,EAAQ0J,EAAU,IAAIwzD,EAAMzK,IAAIC,OAAOC,GAAGC,KAC9F9wB,EAAOnC,IAAM0C,GAAK,CACrB,IAAIg7B,EAAMv7B,EAAO5B,SACjB,OAAQm9B,IAAQ,GAChB,KAAK,EACK3zD,EAAQ2oD,QAAU3oD,EAAQ2oD,OAAOryD,SACnC0J,EAAQ2oD,OAAS,IACrB3oD,EAAQ2oD,OAAOztD,KAAKs4D,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK0K,MAAMn8B,OAAOW,EAAQA,EAAO5B,WACzE,MACJ,QACI4B,EAAOc,SAAe,EAANy6B,IAIxB,OAAO3zD,GAaXkpD,EAAK2K,gBAAkB,SAAyBz7B,GAG5C,OAFMA,aAAkBk7B,IACpBl7B,EAAS,IAAIk7B,EAAQl7B,IAClBpjC,KAAKyiC,OAAOW,EAAQA,EAAO5B,WAWtC0yB,EAAK4K,WAAa,SAAoBhgE,GAClC,GAAIA,aAAkB0/D,EAAMzK,IAAIC,OAAOC,GAAGC,KACtC,OAAOp1D,EACX,IAAIkM,EAAU,IAAIwzD,EAAMzK,IAAIC,OAAOC,GAAGC,KACtC,GAAIp1D,EAAO60D,OAAQ,CACf,IAAKvyD,MAAMC,QAAQvC,EAAO60D,QACtB,MAAMoL,UAAU,8CACpB/zD,EAAQ2oD,OAAS,GACjB,IAAK,IAAIv2D,EAAI,EAAGA,EAAI0B,EAAO60D,OAAOryD,SAAUlE,EAAG,CAC3C,GAAgC,iBAArB0B,EAAO60D,OAAOv2D,GACrB,MAAM2hE,UAAU,+CACpB/zD,EAAQ2oD,OAAOv2D,GAAKohE,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK0K,MAAME,WAAWhgE,EAAO60D,OAAOv2D,KAGpF,OAAO4N,GAYXkpD,EAAK8K,SAAW,SAAkBh0D,EAASmlB,GAClCA,IACDA,EAAU,IACd,IAAIrxB,EAAS,GAGb,IAFIqxB,EAAQ8uC,QAAU9uC,EAAQ+uC,YAC1BpgE,EAAO60D,OAAS,IAChB3oD,EAAQ2oD,QAAU3oD,EAAQ2oD,OAAOryD,OAAQ,CACzCxC,EAAO60D,OAAS,GAChB,IAAK,IAAIpqB,EAAI,EAAGA,EAAIv+B,EAAQ2oD,OAAOryD,SAAUioC,EACzCzqC,EAAO60D,OAAOpqB,GAAKi1B,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK0K,MAAMI,SAASh0D,EAAQ2oD,OAAOpqB,GAAIpZ,GAEtF,OAAOrxB,GAUXo1D,EAAKl1D,UAAU0pD,OAAS,WACpB,OAAO1oD,KAAKmL,YAAY6zD,SAASh/D,KAAMq+D,EAAU7zD,KAAK0E,gBAY1DglD,EAAKC,UACGuK,EAAa,IAAIhnD,EAAS5Z,OAAOY,OAAOggE,IACrCA,EAAW,GAAK,WAAa,EACpChnD,EAAOgnD,EAAW,GAAK,SAAW,EAClChnD,EAAOgnD,EAAW,GAAK,cAAgB,EACvChnD,EAAOgnD,EAAW,GAAK,WAAa,EAC7BhnD,GAGXw8C,EAAK5xD,MAAQ,WAuBT,SAASA,EAAM5C,GACX,GAAIA,EACA,IAAK,IAAImL,EAAO/M,OAAO+M,KAAKnL,GAAatC,EAAI,EAAGA,EAAIyN,EAAKvJ,SAAUlE,EACpC,MAAvBsC,EAAWmL,EAAKzN,MAChB4C,KAAK6K,EAAKzN,IAAMsC,EAAWmL,EAAKzN,KAmPhD,OA1OAkF,EAAMtD,UAAUmgE,YAAc,GAQ9B78D,EAAMtD,UAAUogE,WAAa,EAQ7B98D,EAAMtD,UAAUqgE,YAAc,EAQ9B/8D,EAAMtD,UAAUsgE,SAAWf,EAAMhxD,KAAOgxD,EAAMhxD,KAAKa,SAAS,EAAE,GAAE,GAAS,EAQzE9L,EAAMtD,UAAUugE,UAAYhB,EAAMhxD,KAAOgxD,EAAMhxD,KAAKa,SAAS,EAAE,GAAE,GAAQ,EAQzE9L,EAAMtD,UAAUwgE,UAAYjB,EAAMhxD,KAAOgxD,EAAMhxD,KAAKa,SAAS,EAAE,GAAE,GAAS,EAQ1E9L,EAAMtD,UAAUygE,WAAY,EAa5Bn9D,EAAMmgC,OAAS,SAAgBW,EAAQ9hC,GAC7B8hC,aAAkBk7B,IACpBl7B,EAASk7B,EAAQ5/D,OAAO0kC,IAE5B,IADA,IAAIO,OAAiB3hC,IAAXV,EAAuB8hC,EAAO7C,IAAM6C,EAAOnC,IAAM3/B,EAAQ0J,EAAU,IAAIwzD,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK5xD,MACnG8gC,EAAOnC,IAAM0C,GAAK,CACrB,IAAIg7B,EAAMv7B,EAAO5B,SACjB,OAAQm9B,IAAQ,GAChB,KAAK,EACD3zD,EAAQm0D,YAAc/7B,EAAOV,SAC7B,MACJ,KAAK,EACD13B,EAAQo0D,WAAah8B,EAAO53B,QAC5B,MACJ,KAAK,EACDR,EAAQq0D,YAAcj8B,EAAOd,SAC7B,MACJ,KAAK,EACDt3B,EAAQs0D,SAAWl8B,EAAOvB,QAC1B,MACJ,KAAK,EACD72B,EAAQu0D,UAAYn8B,EAAOxB,SAC3B,MACJ,KAAK,EACD52B,EAAQw0D,UAAYp8B,EAAOtB,SAC3B,MACJ,KAAK,EACD92B,EAAQy0D,UAAYr8B,EAAOpB,OAC3B,MACJ,QACIoB,EAAOc,SAAe,EAANy6B,IAIxB,OAAO3zD,GAaX1I,EAAMu8D,gBAAkB,SAAyBz7B,GAG7C,OAFMA,aAAkBk7B,IACpBl7B,EAAS,IAAIk7B,EAAQl7B,IAClBpjC,KAAKyiC,OAAOW,EAAQA,EAAO5B,WAWtCl/B,EAAMw8D,WAAa,SAAoBhgE,GACnC,GAAIA,aAAkB0/D,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK5xD,MAC3C,OAAOxD,EACX,IAAIkM,EAAU,IAAIwzD,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK5xD,MAoC3C,OAnC0B,MAAtBxD,EAAOqgE,cACPn0D,EAAQm0D,YAAcxyD,OAAO7N,EAAOqgE,cACf,MAArBrgE,EAAOsgE,aACPp0D,EAAQo0D,WAAa7yD,OAAOzN,EAAOsgE,aACb,MAAtBtgE,EAAOugE,cACPr0D,EAAQq0D,YAAc9yD,OAAOzN,EAAOugE,cACjB,MAAnBvgE,EAAOwgE,WACHf,EAAMhxD,MACLvC,EAAQs0D,SAAWf,EAAMhxD,KAAK+lC,UAAUx0C,EAAOwgE,WAAWrxD,UAAW,EACtC,iBAApBnP,EAAOwgE,SACnBt0D,EAAQs0D,SAAWhpD,SAASxX,EAAOwgE,SAAU,IACb,iBAApBxgE,EAAOwgE,SACnBt0D,EAAQs0D,SAAWxgE,EAAOwgE,SACM,iBAApBxgE,EAAOwgE,WACnBt0D,EAAQs0D,SAAW,IAAIf,EAAM5yD,SAAS7M,EAAOwgE,SAASvI,MAAQ,EAAGj4D,EAAOwgE,SAAStI,OAAS,GAAGzoD,aAC7E,MAApBzP,EAAOygE,YACHhB,EAAMhxD,MACLvC,EAAQu0D,UAAYhB,EAAMhxD,KAAK+lC,UAAUx0C,EAAOygE,YAAYtxD,UAAW,EACvC,iBAArBnP,EAAOygE,UACnBv0D,EAAQu0D,UAAYjpD,SAASxX,EAAOygE,UAAW,IACd,iBAArBzgE,EAAOygE,UACnBv0D,EAAQu0D,UAAYzgE,EAAOygE,UACM,iBAArBzgE,EAAOygE,YACnBv0D,EAAQu0D,UAAY,IAAIhB,EAAM5yD,SAAS7M,EAAOygE,UAAUxI,MAAQ,EAAGj4D,EAAOygE,UAAUvI,OAAS,GAAGzoD,UAAS,KACzF,MAApBzP,EAAO0gE,YACHjB,EAAMhxD,MACLvC,EAAQw0D,UAAYjB,EAAMhxD,KAAK+lC,UAAUx0C,EAAO0gE,YAAYvxD,UAAW,EACvC,iBAArBnP,EAAO0gE,UACnBx0D,EAAQw0D,UAAYlpD,SAASxX,EAAO0gE,UAAW,IACd,iBAArB1gE,EAAO0gE,UACnBx0D,EAAQw0D,UAAY1gE,EAAO0gE,UACM,iBAArB1gE,EAAO0gE,YACnBx0D,EAAQw0D,UAAY,IAAIjB,EAAM5yD,SAAS7M,EAAO0gE,UAAUzI,MAAQ,EAAGj4D,EAAO0gE,UAAUxI,OAAS,GAAGzoD,aAChF,MAApBzP,EAAO2gE,YACPz0D,EAAQy0D,UAAYtzD,QAAQrN,EAAO2gE,YAChCz0D,GAYX1I,EAAM08D,SAAW,SAAkBh0D,EAASmlB,GACnCA,IACDA,EAAU,IACd,IAAIrxB,EAAS,GACb,GAAIqxB,EAAQ+uC,SAAU,CAIlB,GAHApgE,EAAOqgE,YAAc,GACrBrgE,EAAOsgE,WAAa,EACpBtgE,EAAOugE,YAAc,EACjBd,EAAMhxD,KAAM,CACZ,IAAImyD,EAAO,IAAInB,EAAMhxD,KAAK,EAAG,GAAG,GAChCzO,EAAOwgE,SAAWnvC,EAAQhhB,QAAUxC,OAAS+yD,EAAKt0D,WAAa+kB,EAAQhhB,QAAU5C,OAASmzD,EAAKnxD,WAAamxD,OAE5G5gE,EAAOwgE,SAAWnvC,EAAQhhB,QAAUxC,OAAS,IAAM,EACnD4xD,EAAMhxD,MACFmyD,EAAO,IAAInB,EAAMhxD,KAAK,EAAG,GAAG,GAChCzO,EAAOygE,UAAYpvC,EAAQhhB,QAAUxC,OAAS+yD,EAAKt0D,WAAa+kB,EAAQhhB,QAAU5C,OAASmzD,EAAKnxD,WAAamxD,GAE7G5gE,EAAOygE,UAAYpvC,EAAQhhB,QAAUxC,OAAS,IAAM,EACpD4xD,EAAMhxD,MACFmyD,EAAO,IAAInB,EAAMhxD,KAAK,EAAG,GAAG,GAChCzO,EAAO0gE,UAAYrvC,EAAQhhB,QAAUxC,OAAS+yD,EAAKt0D,WAAa+kB,EAAQhhB,QAAU5C,OAASmzD,EAAKnxD,WAAamxD,GAE7G5gE,EAAO0gE,UAAYrvC,EAAQhhB,QAAUxC,OAAS,IAAM,EACxD7N,EAAO2gE,WAAY,EAyBvB,OAvB2B,MAAvBz0D,EAAQm0D,aAAuBn0D,EAAQ/L,eAAe,iBACtDH,EAAOqgE,YAAcn0D,EAAQm0D,aACP,MAAtBn0D,EAAQo0D,YAAsBp0D,EAAQ/L,eAAe,gBACrDH,EAAOsgE,WAAajvC,EAAQvuB,OAAS4K,SAASxB,EAAQo0D,YAAczyD,OAAO3B,EAAQo0D,YAAcp0D,EAAQo0D,YAClF,MAAvBp0D,EAAQq0D,aAAuBr0D,EAAQ/L,eAAe,iBACtDH,EAAOugE,YAAclvC,EAAQvuB,OAAS4K,SAASxB,EAAQq0D,aAAe1yD,OAAO3B,EAAQq0D,aAAer0D,EAAQq0D,aACxF,MAApBr0D,EAAQs0D,UAAoBt0D,EAAQ/L,eAAe,cACnB,iBAArB+L,EAAQs0D,SACfxgE,EAAOwgE,SAAWnvC,EAAQhhB,QAAUxC,OAASA,OAAO3B,EAAQs0D,UAAYt0D,EAAQs0D,SAEhFxgE,EAAOwgE,SAAWnvC,EAAQhhB,QAAUxC,OAAS4xD,EAAMhxD,KAAKvO,UAAUoM,SAAS7N,KAAKyN,EAAQs0D,UAAYnvC,EAAQhhB,QAAU5C,OAAS,IAAIgyD,EAAM5yD,SAASX,EAAQs0D,SAASvI,MAAQ,EAAG/rD,EAAQs0D,SAAStI,OAAS,GAAGzoD,WAAavD,EAAQs0D,UAC/M,MAArBt0D,EAAQu0D,WAAqBv0D,EAAQ/L,eAAe,eACnB,iBAAtB+L,EAAQu0D,UACfzgE,EAAOygE,UAAYpvC,EAAQhhB,QAAUxC,OAASA,OAAO3B,EAAQu0D,WAAav0D,EAAQu0D,UAElFzgE,EAAOygE,UAAYpvC,EAAQhhB,QAAUxC,OAAS4xD,EAAMhxD,KAAKvO,UAAUoM,SAAS7N,KAAKyN,EAAQu0D,WAAapvC,EAAQhhB,QAAU5C,OAAS,IAAIgyD,EAAM5yD,SAASX,EAAQu0D,UAAUxI,MAAQ,EAAG/rD,EAAQu0D,UAAUvI,OAAS,GAAGzoD,UAAS,GAAQvD,EAAQu0D,WACvN,MAArBv0D,EAAQw0D,WAAqBx0D,EAAQ/L,eAAe,eACnB,iBAAtB+L,EAAQw0D,UACf1gE,EAAO0gE,UAAYrvC,EAAQhhB,QAAUxC,OAASA,OAAO3B,EAAQw0D,WAAax0D,EAAQw0D,UAElF1gE,EAAO0gE,UAAYrvC,EAAQhhB,QAAUxC,OAAS4xD,EAAMhxD,KAAKvO,UAAUoM,SAAS7N,KAAKyN,EAAQw0D,WAAarvC,EAAQhhB,QAAU5C,OAAS,IAAIgyD,EAAM5yD,SAASX,EAAQw0D,UAAUzI,MAAQ,EAAG/rD,EAAQw0D,UAAUxI,OAAS,GAAGzoD,WAAavD,EAAQw0D,WACnN,MAArBx0D,EAAQy0D,WAAqBz0D,EAAQ/L,eAAe,eACpDH,EAAO2gE,UAAYz0D,EAAQy0D,WACxB3gE,GAUXwD,EAAMtD,UAAU0pD,OAAS,WACrB,OAAO1oD,KAAKmL,YAAY6zD,SAASh/D,KAAMq+D,EAAU7zD,KAAK0E,gBAGnD5M,EA9QE,GAiRb4xD,EAAKyL,QAAU,WAoBX,SAASA,EAAQjgE,GAGb,GAFAM,KAAKm/B,KAAO,GACZn/B,KAAKkuB,SAAW,GACZxuB,EACA,IAAK,IAAImL,EAAO/M,OAAO+M,KAAKnL,GAAatC,EAAI,EAAGA,EAAIyN,EAAKvJ,SAAUlE,EACpC,MAAvBsC,EAAWmL,EAAKzN,MAChB4C,KAAK6K,EAAKzN,IAAMsC,EAAWmL,EAAKzN,KAuNhD,OA9MAuiE,EAAQ3gE,UAAU6uB,GAAK0wC,EAAMhxD,KAAOgxD,EAAMhxD,KAAKa,SAAS,EAAE,GAAE,GAAQ,EAQpEuxD,EAAQ3gE,UAAUmgC,KAAOo/B,EAAMxyD,WAQ/B4zD,EAAQ3gE,UAAU4W,KAAO,EAQzB+pD,EAAQ3gE,UAAUkvB,SAAWqwC,EAAMxyD,WAanC4zD,EAAQl9B,OAAS,SAAgBW,EAAQ9hC,GAC/B8hC,aAAkBk7B,IACpBl7B,EAASk7B,EAAQ5/D,OAAO0kC,IAE5B,IADA,IAAIO,OAAiB3hC,IAAXV,EAAuB8hC,EAAO7C,IAAM6C,EAAOnC,IAAM3/B,EAAQ0J,EAAU,IAAIwzD,EAAMzK,IAAIC,OAAOC,GAAGC,KAAKyL,QACnGv8B,EAAOnC,IAAM0C,GAAK,CACrB,IAAIg7B,EAAMv7B,EAAO5B,SACjB,OAAQm9B,IAAQ,GAChB,KAAK,EACD3zD,EAAQ6iB,GAAKuV,EAAOxB,SACpB,MACJ,KAAK,EAGD,GAFM52B,EAAQm0B,MAAQn0B,EAAQm0B,KAAK79B,SAC/B0J,EAAQm0B,KAAO,IACD,IAAP,EAANw/B,GAED,IADA,IAAIiB,EAAOx8B,EAAO5B,SAAW4B,EAAOnC,IAC7BmC,EAAOnC,IAAM2+B,GAChB50D,EAAQm0B,KAAKj5B,KAAKk9B,EAAO5B,eAE7Bx2B,EAAQm0B,KAAKj5B,KAAKk9B,EAAO5B,UAC7B,MACJ,KAAK,EACDx2B,EAAQ4K,KAAOwtB,EAAO3B,QACtB,MACJ,KAAK,EAGD,GAFMz2B,EAAQkjB,UAAYljB,EAAQkjB,SAAS5sB,SACvC0J,EAAQkjB,SAAW,IACL,IAAP,EAANywC,GAED,IADIiB,EAAOx8B,EAAO5B,SAAW4B,EAAOnC,IAC7BmC,EAAOnC,IAAM2+B,GAChB50D,EAAQkjB,SAAShoB,KAAKk9B,EAAO5B,eAEjCx2B,EAAQkjB,SAAShoB,KAAKk9B,EAAO5B,UACjC,MACJ,QACI4B,EAAOc,SAAe,EAANy6B,IAIxB,OAAO3zD,GAaX20D,EAAQd,gBAAkB,SAAyBz7B,GAG/C,OAFMA,aAAkBk7B,IACpBl7B,EAAS,IAAIk7B,EAAQl7B,IAClBpjC,KAAKyiC,OAAOW,EAAQA,EAAO5B,WAWtCm+B,EAAQb,WAAa,SAAoBhgE,GACrC,GAAIA,aAAkB0/D,EAAMzK,IAAIC,OAAOC,GAAGC,KAAKyL,QAC3C,OAAO7gE,EACX,IAAIkM,EAAU,IAAIwzD,EAAMzK,IAAIC,OAAOC,GAAGC,KAAKyL,QAU3C,GATiB,MAAb7gE,EAAO+uB,KACH0wC,EAAMhxD,MACLvC,EAAQ6iB,GAAK0wC,EAAMhxD,KAAK+lC,UAAUx0C,EAAO+uB,KAAK5f,UAAW,EAChC,iBAAdnP,EAAO+uB,GACnB7iB,EAAQ6iB,GAAKvX,SAASxX,EAAO+uB,GAAI,IACP,iBAAd/uB,EAAO+uB,GACnB7iB,EAAQ6iB,GAAK/uB,EAAO+uB,GACM,iBAAd/uB,EAAO+uB,KACnB7iB,EAAQ6iB,GAAK,IAAI0wC,EAAM5yD,SAAS7M,EAAO+uB,GAAGkpC,MAAQ,EAAGj4D,EAAO+uB,GAAGmpC,OAAS,GAAGzoD,UAAS,KACxFzP,EAAOqgC,KAAM,CACb,IAAK/9B,MAAMC,QAAQvC,EAAOqgC,MACtB,MAAM4/B,UAAU,oDACpB/zD,EAAQm0B,KAAO,GACf,IAAK,IAAI/hC,EAAI,EAAGA,EAAI0B,EAAOqgC,KAAK79B,SAAUlE,EACtC4N,EAAQm0B,KAAK/hC,GAAK0B,EAAOqgC,KAAK/hC,KAAO,EAE7C,OAAQ0B,EAAO8W,MACf,IAAK,UACL,KAAK,EACD5K,EAAQ4K,KAAO,EACf,MACJ,IAAK,QACL,KAAK,EACD5K,EAAQ4K,KAAO,EACf,MACJ,IAAK,aACL,KAAK,EACD5K,EAAQ4K,KAAO,EACf,MACJ,IAAK,UACL,KAAK,EACD5K,EAAQ4K,KAAO,EAGnB,GAAI9W,EAAOovB,SAAU,CACjB,IAAK9sB,MAAMC,QAAQvC,EAAOovB,UACtB,MAAM6wC,UAAU,wDAEpB,IADA/zD,EAAQkjB,SAAW,GACV9wB,EAAI,EAAGA,EAAI0B,EAAOovB,SAAS5sB,SAAUlE,EAC1C4N,EAAQkjB,SAAS9wB,GAAK0B,EAAOovB,SAAS9wB,KAAO,EAErD,OAAO4N,GAYX20D,EAAQX,SAAW,SAAkBh0D,EAASmlB,GACrCA,IACDA,EAAU,IACd,IAAIrxB,EAAS,GAKb,IAJIqxB,EAAQ8uC,QAAU9uC,EAAQ+uC,YAC1BpgE,EAAOqgC,KAAO,GACdrgC,EAAOovB,SAAW,IAElBiC,EAAQ+uC,SAAU,CAClB,GAAIX,EAAMhxD,KAAM,CACZ,IAAImyD,EAAO,IAAInB,EAAMhxD,KAAK,EAAG,GAAG,GAChCzO,EAAO+uB,GAAKsC,EAAQhhB,QAAUxC,OAAS+yD,EAAKt0D,WAAa+kB,EAAQhhB,QAAU5C,OAASmzD,EAAKnxD,WAAamxD,OAEtG5gE,EAAO+uB,GAAKsC,EAAQhhB,QAAUxC,OAAS,IAAM,EACjD7N,EAAO8W,KAAOua,EAAQ/gB,QAAUzC,OAAS,UAAY,EAOzD,GALkB,MAAd3B,EAAQ6iB,IAAc7iB,EAAQ/L,eAAe,QACnB,iBAAf+L,EAAQ6iB,GACf/uB,EAAO+uB,GAAKsC,EAAQhhB,QAAUxC,OAASA,OAAO3B,EAAQ6iB,IAAM7iB,EAAQ6iB,GAEpE/uB,EAAO+uB,GAAKsC,EAAQhhB,QAAUxC,OAAS4xD,EAAMhxD,KAAKvO,UAAUoM,SAAS7N,KAAKyN,EAAQ6iB,IAAMsC,EAAQhhB,QAAU5C,OAAS,IAAIgyD,EAAM5yD,SAASX,EAAQ6iB,GAAGkpC,MAAQ,EAAG/rD,EAAQ6iB,GAAGmpC,OAAS,GAAGzoD,UAAS,GAAQvD,EAAQ6iB,IAChN7iB,EAAQm0B,MAAQn0B,EAAQm0B,KAAK79B,OAAQ,CACrCxC,EAAOqgC,KAAO,GACd,IAAK,IAAIoK,EAAI,EAAGA,EAAIv+B,EAAQm0B,KAAK79B,SAAUioC,EACvCzqC,EAAOqgC,KAAKoK,GAAKv+B,EAAQm0B,KAAKoK,GAItC,GAFoB,MAAhBv+B,EAAQ4K,MAAgB5K,EAAQ/L,eAAe,UAC/CH,EAAO8W,KAAOua,EAAQ/gB,QAAUzC,OAAS6xD,EAAMzK,IAAIC,OAAOC,GAAGC,KAAKC,SAASnpD,EAAQ4K,MAAQ5K,EAAQ4K,MACnG5K,EAAQkjB,UAAYljB,EAAQkjB,SAAS5sB,OAErC,IADAxC,EAAOovB,SAAW,GACTqb,EAAI,EAAGA,EAAIv+B,EAAQkjB,SAAS5sB,SAAUioC,EAC3CzqC,EAAOovB,SAASqb,GAAKv+B,EAAQkjB,SAASqb,GAE9C,OAAOzqC,GAUX6gE,EAAQ3gE,UAAU0pD,OAAS,WACvB,OAAO1oD,KAAKmL,YAAY6zD,SAASh/D,KAAMq+D,EAAU7zD,KAAK0E,gBAGnDywD,EAjPI,GAoPfzL,EAAK0K,MAAQ,WAsBT,SAASA,EAAMl/D,GAIX,GAHAM,KAAKm+B,SAAW,GAChBn+B,KAAK6K,KAAO,GACZ7K,KAAK0X,OAAS,GACVhY,EACA,IAAK,IAAImL,EAAO/M,OAAO+M,KAAKnL,GAAatC,EAAI,EAAGA,EAAIyN,EAAKvJ,SAAUlE,EACpC,MAAvBsC,EAAWmL,EAAKzN,MAChB4C,KAAK6K,EAAKzN,IAAMsC,EAAWmL,EAAKzN,KAmOhD,OA1NAwhE,EAAM5/D,UAAU6gE,QAAU,EAQ1BjB,EAAM5/D,UAAUrB,KAAO,GAQvBihE,EAAM5/D,UAAUm/B,SAAWogC,EAAMxyD,WAQjC6yD,EAAM5/D,UAAU6L,KAAO0zD,EAAMxyD,WAQ7B6yD,EAAM5/D,UAAU0Y,OAAS6mD,EAAMxyD,WAQ/B6yD,EAAM5/D,UAAUiS,OAAS,KAazB2tD,EAAMn8B,OAAS,SAAgBW,EAAQ9hC,GAC7B8hC,aAAkBk7B,IACpBl7B,EAASk7B,EAAQ5/D,OAAO0kC,IAE5B,IADA,IAAIO,OAAiB3hC,IAAXV,EAAuB8hC,EAAO7C,IAAM6C,EAAOnC,IAAM3/B,EAAQ0J,EAAU,IAAIwzD,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK0K,MACnGx7B,EAAOnC,IAAM0C,GAAK,CACrB,IAAIg7B,EAAMv7B,EAAO5B,SACjB,OAAQm9B,IAAQ,GAChB,KAAK,GACD3zD,EAAQ60D,QAAUz8B,EAAO5B,SACzB,MACJ,KAAK,EACDx2B,EAAQrN,KAAOylC,EAAOV,SACtB,MACJ,KAAK,EACK13B,EAAQmzB,UAAYnzB,EAAQmzB,SAAS78B,SACvC0J,EAAQmzB,SAAW,IACvBnzB,EAAQmzB,SAASj4B,KAAKs4D,EAAMzK,IAAIC,OAAOC,GAAGC,KAAKyL,QAAQl9B,OAAOW,EAAQA,EAAO5B,WAC7E,MACJ,KAAK,EACKx2B,EAAQH,MAAQG,EAAQH,KAAKvJ,SAC/B0J,EAAQH,KAAO,IACnBG,EAAQH,KAAK3E,KAAKk9B,EAAOV,UACzB,MACJ,KAAK,EACK13B,EAAQ0M,QAAU1M,EAAQ0M,OAAOpW,SACnC0J,EAAQ0M,OAAS,IACrB1M,EAAQ0M,OAAOxR,KAAKs4D,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK5xD,MAAMmgC,OAAOW,EAAQA,EAAO5B,WACzE,MACJ,KAAK,EACDx2B,EAAQiG,OAASmyB,EAAO5B,SACxB,MACJ,QACI4B,EAAOc,SAAe,EAANy6B,IAIxB,IAAK3zD,EAAQ/L,eAAe,WACxB,MAAMs/D,EAAM1vD,cAAc,6BAA8B,CAAE5O,SAAU+K,IACxE,IAAKA,EAAQ/L,eAAe,QACxB,MAAMs/D,EAAM1vD,cAAc,0BAA2B,CAAE5O,SAAU+K,IACrE,OAAOA,GAaX4zD,EAAMC,gBAAkB,SAAyBz7B,GAG7C,OAFMA,aAAkBk7B,IACpBl7B,EAAS,IAAIk7B,EAAQl7B,IAClBpjC,KAAKyiC,OAAOW,EAAQA,EAAO5B,WAWtCo9B,EAAME,WAAa,SAAoBhgE,GACnC,GAAIA,aAAkB0/D,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK0K,MAC3C,OAAO9/D,EACX,IAAIkM,EAAU,IAAIwzD,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK0K,MAK3C,GAJsB,MAAlB9/D,EAAO+gE,UACP70D,EAAQ60D,QAAU/gE,EAAO+gE,UAAY,GACtB,MAAf/gE,EAAOnB,OACPqN,EAAQrN,KAAOgP,OAAO7N,EAAOnB,OAC7BmB,EAAOq/B,SAAU,CACjB,IAAK/8B,MAAMC,QAAQvC,EAAOq/B,UACtB,MAAM4gC,UAAU,sDACpB/zD,EAAQmzB,SAAW,GACnB,IAAK,IAAI/gC,EAAI,EAAGA,EAAI0B,EAAOq/B,SAAS78B,SAAUlE,EAAG,CAC7C,GAAkC,iBAAvB0B,EAAOq/B,SAAS/gC,GACvB,MAAM2hE,UAAU,uDACpB/zD,EAAQmzB,SAAS/gC,GAAKohE,EAAMzK,IAAIC,OAAOC,GAAGC,KAAKyL,QAAQb,WAAWhgE,EAAOq/B,SAAS/gC,KAG1F,GAAI0B,EAAO+L,KAAM,CACb,IAAKzJ,MAAMC,QAAQvC,EAAO+L,MACtB,MAAMk0D,UAAU,kDAEpB,IADA/zD,EAAQH,KAAO,GACNzN,EAAI,EAAGA,EAAI0B,EAAO+L,KAAKvJ,SAAUlE,EACtC4N,EAAQH,KAAKzN,GAAKuP,OAAO7N,EAAO+L,KAAKzN,IAE7C,GAAI0B,EAAO4Y,OAAQ,CACf,IAAKtW,MAAMC,QAAQvC,EAAO4Y,QACtB,MAAMqnD,UAAU,oDAEpB,IADA/zD,EAAQ0M,OAAS,GACRta,EAAI,EAAGA,EAAI0B,EAAO4Y,OAAOpW,SAAUlE,EAAG,CAC3C,GAAgC,iBAArB0B,EAAO4Y,OAAOta,GACrB,MAAM2hE,UAAU,qDACpB/zD,EAAQ0M,OAAOta,GAAKohE,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK5xD,MAAMw8D,WAAWhgE,EAAO4Y,OAAOta,KAKpF,OAFqB,MAAjB0B,EAAOmS,SACPjG,EAAQiG,OAASnS,EAAOmS,SAAW,GAChCjG,GAYX4zD,EAAMI,SAAW,SAAkBh0D,EAASmlB,GACnCA,IACDA,EAAU,IACd,IAAIrxB,EAAS,GAab,IAZIqxB,EAAQ8uC,QAAU9uC,EAAQ+uC,YAC1BpgE,EAAOq/B,SAAW,GAClBr/B,EAAO+L,KAAO,GACd/L,EAAO4Y,OAAS,IAEhByY,EAAQ+uC,WACRpgE,EAAOnB,KAAO,GACdmB,EAAOmS,OAAS,KAChBnS,EAAO+gE,QAAU,GAED,MAAhB70D,EAAQrN,MAAgBqN,EAAQ/L,eAAe,UAC/CH,EAAOnB,KAAOqN,EAAQrN,MACtBqN,EAAQmzB,UAAYnzB,EAAQmzB,SAAS78B,OAAQ,CAC7CxC,EAAOq/B,SAAW,GAClB,IAAK,IAAIoL,EAAI,EAAGA,EAAIv+B,EAAQmzB,SAAS78B,SAAUioC,EAC3CzqC,EAAOq/B,SAASoL,GAAKi1B,EAAMzK,IAAIC,OAAOC,GAAGC,KAAKyL,QAAQX,SAASh0D,EAAQmzB,SAASoL,GAAIpZ,GAE5F,GAAInlB,EAAQH,MAAQG,EAAQH,KAAKvJ,OAE7B,IADAxC,EAAO+L,KAAO,GACL0+B,EAAI,EAAGA,EAAIv+B,EAAQH,KAAKvJ,SAAUioC,EACvCzqC,EAAO+L,KAAK0+B,GAAKv+B,EAAQH,KAAK0+B,GAEtC,GAAIv+B,EAAQ0M,QAAU1M,EAAQ0M,OAAOpW,OAEjC,IADAxC,EAAO4Y,OAAS,GACP6xB,EAAI,EAAGA,EAAIv+B,EAAQ0M,OAAOpW,SAAUioC,EACzCzqC,EAAO4Y,OAAO6xB,GAAKi1B,EAAMzK,IAAIC,OAAOC,GAAGC,KAAK5xD,MAAM08D,SAASh0D,EAAQ0M,OAAO6xB,GAAIpZ,GAMtF,OAJsB,MAAlBnlB,EAAQiG,QAAkBjG,EAAQ/L,eAAe,YACjDH,EAAOmS,OAASjG,EAAQiG,QACL,MAAnBjG,EAAQ60D,SAAmB70D,EAAQ/L,eAAe,aAClDH,EAAO+gE,QAAU70D,EAAQ60D,SACtB/gE,GAUX8/D,EAAM5/D,UAAU0pD,OAAS,WACrB,OAAO1oD,KAAKmL,YAAY6zD,SAASh/D,KAAMq+D,EAAU7zD,KAAK0E,gBAGnD0vD,EAhQE,GAmQN1K,EAr6BD,GAw6BHD,GAGJD,GAGJD,GAGX52D,EAAOD,QAAUshE,G,6BCp9BjBrhE,EAAOD,QAAU,EAAQ,M,6BCFzB,IAAI4iE,EAAW5iE,EA2Bf,SAASkzB,IACL0vC,EAASt1D,KAAK8E,aACdwwD,EAAS3/B,OAAO7wB,WAAWwwD,EAAS1/B,cACpC0/B,EAAS78B,OAAO3zB,WAAWwwD,EAAS58B,cAtBxC48B,EAASC,MAAQ,UAGjBD,EAAS3/B,OAAe,EAAQ,IAChC2/B,EAAS1/B,aAAe,EAAQ,KAChC0/B,EAAS78B,OAAe,EAAQ,IAChC68B,EAAS58B,aAAe,EAAQ,KAGhC48B,EAASt1D,KAAe,EAAQ,GAChCs1D,EAASE,IAAe,EAAQ,KAChCF,EAASrB,MAAe,EAAQ,KAChCqB,EAAS1vC,UAAeA,EAcxBA,K,cCnCA,IAAI3b,EAGJA,EAAI,WACH,OAAOzU,KADJ,GAIJ,IAECyU,EAAIA,GAAK,IAAIwrD,SAAS,cAAb,GACR,MAAOv7D,GAEc,iBAAXmH,SAAqB4I,EAAI5I,QAOrC1O,EAAOD,QAAUuX,G,6BClBjBtX,EAAOD,QAmBP,SAAmBojC,EAAI4/B,GACnB,IAAIx1C,EAAU,IAAItpB,MAAM++D,UAAU7+D,OAAS,GACvC01B,EAAU,EACVuG,EAAU,EACV6iC,GAAU,EACd,KAAO7iC,EAAQ4iC,UAAU7+D,QACrBopB,EAAOsM,KAAYmpC,UAAU5iC,KACjC,OAAO,IAAI7e,SAAQ,SAAkB+Q,EAAS9Q,GAC1C+L,EAAOsM,GAAU,SAAkB/Y,GAC/B,GAAImiD,EAEA,GADAA,GAAU,EACNniD,EACAU,EAAOV,OACN,CAGD,IAFA,IAAIyM,EAAS,IAAItpB,MAAM++D,UAAU7+D,OAAS,GACtC01B,EAAS,EACNA,EAAStM,EAAOppB,QACnBopB,EAAOsM,KAAYmpC,UAAUnpC,GACjCvH,EAAQkhB,MAAM,KAAMjmB,KAIhC,IACI4V,EAAGqQ,MAAMuvB,GAAO,KAAMx1C,GACxB,MAAOzM,GACDmiD,IACAA,GAAU,EACVzhD,EAAOV,U,6BCxCvB,IAAI3S,EAASpO,EAOboO,EAAOhK,OAAS,SAAgBohC,GAC5B,IAAIxjC,EAAIwjC,EAAOphC,OACf,IAAKpC,EACD,OAAO,EAEX,IADA,IAAIL,EAAI,IACCK,EAAI,EAAI,GAA0B,MAArBwjC,EAAOh0B,OAAOxP,MAC9BL,EACN,OAAOwK,KAAKivC,KAAqB,EAAhB5V,EAAOphC,QAAc,EAAIzC,GAU9C,IANA,IAAIwhE,EAAM,IAAIj/D,MAAM,IAGhBk/D,EAAM,IAAIl/D,MAAM,KAGXhE,EAAI,EAAGA,EAAI,IAChBkjE,EAAID,EAAIjjE,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,EAAIA,EAAI,GAAK,IAAMA,IASrFkO,EAAOi1D,OAAS,SAAgB90C,EAAQsG,EAAO4R,GAM3C,IALA,IAIIrlC,EAJAkiE,EAAQ,KACRC,EAAQ,GACRrjE,EAAI,EACJmsC,EAAI,EAEDxX,EAAQ4R,GAAK,CAChB,IAAIj6B,EAAI+hB,EAAOsG,KACf,OAAQwX,GACJ,KAAK,EACDk3B,EAAMrjE,KAAOijE,EAAI32D,GAAK,GACtBpL,GAAS,EAAJoL,IAAU,EACf6/B,EAAI,EACJ,MACJ,KAAK,EACDk3B,EAAMrjE,KAAOijE,EAAI/hE,EAAIoL,GAAK,GAC1BpL,GAAS,GAAJoL,IAAW,EAChB6/B,EAAI,EACJ,MACJ,KAAK,EACDk3B,EAAMrjE,KAAOijE,EAAI/hE,EAAIoL,GAAK,GAC1B+2D,EAAMrjE,KAAOijE,EAAQ,GAAJ32D,GACjB6/B,EAAI,EAGRnsC,EAAI,QACHojE,IAAUA,EAAQ,KAAKt6D,KAAKyG,OAAO+zD,aAAa/vB,MAAMhkC,OAAQ8zD,IAC/DrjE,EAAI,GASZ,OANImsC,IACAk3B,EAAMrjE,KAAOijE,EAAI/hE,GACjBmiE,EAAMrjE,KAAO,GACH,IAANmsC,IACAk3B,EAAMrjE,KAAO,KAEjBojE,GACIpjE,GACAojE,EAAMt6D,KAAKyG,OAAO+zD,aAAa/vB,MAAMhkC,OAAQ8zD,EAAMn6D,MAAM,EAAGlJ,KACzDojE,EAAMlxB,KAAK,KAEf3iC,OAAO+zD,aAAa/vB,MAAMhkC,OAAQ8zD,EAAMn6D,MAAM,EAAGlJ,KAa5DkO,EAAOm3B,OAAS,SAAgBC,EAAQjX,EAAQuL,GAI5C,IAHA,IAEI14B,EAFAyzB,EAAQiF,EACRuS,EAAI,EAECnsC,EAAI,EAAGA,EAAIslC,EAAOphC,QAAS,CAChC,IAAI7D,EAAIilC,EAAOi+B,WAAWvjE,KAC1B,GAAU,KAANK,GAAY8rC,EAAI,EAChB,MACJ,QAAqBvnC,KAAhBvE,EAAI6iE,EAAI7iE,IACT,MAAMgG,MAnBI,oBAoBd,OAAQ8lC,GACJ,KAAK,EACDjrC,EAAIb,EACJ8rC,EAAI,EACJ,MACJ,KAAK,EACD9d,EAAOuL,KAAY14B,GAAK,GAAS,GAAJb,IAAW,EACxCa,EAAIb,EACJ8rC,EAAI,EACJ,MACJ,KAAK,EACD9d,EAAOuL,MAAiB,GAAJ14B,IAAW,GAAS,GAAJb,IAAW,EAC/Ca,EAAIb,EACJ8rC,EAAI,EACJ,MACJ,KAAK,EACD9d,EAAOuL,MAAiB,EAAJ14B,IAAU,EAAIb,EAClC8rC,EAAI,GAIhB,GAAU,IAANA,EACA,MAAM9lC,MA1CQ,oBA2ClB,OAAOuzB,EAASjF,GAQpBzmB,EAAOiV,KAAO,SAAcmiB,GACxB,MAAO,mEAAmEniB,KAAKmiB,K,6BChInF,SAASn3B,IAOLvL,KAAK4gE,WAAa,GAftBzjE,EAAOD,QAAUqO,EAyBjBA,EAAavM,UAAU6hE,GAAK,SAAYC,EAAKxgC,EAAI4/B,GAK7C,OAJClgE,KAAK4gE,WAAWE,KAAS9gE,KAAK4gE,WAAWE,GAAO,KAAK56D,KAAK,CACvDo6B,GAAMA,EACN4/B,IAAMA,GAAOlgE,OAEVA,MASXuL,EAAavM,UAAU+hE,IAAM,SAAaD,EAAKxgC,GAC3C,QAAYt+B,IAAR8+D,EACA9gE,KAAK4gE,WAAa,QAElB,QAAW5+D,IAAPs+B,EACAtgC,KAAK4gE,WAAWE,GAAO,QAGvB,IADA,IAAIE,EAAYhhE,KAAK4gE,WAAWE,GACvB1jE,EAAI,EAAGA,EAAI4jE,EAAU1/D,QACtB0/D,EAAU5jE,GAAGkjC,KAAOA,EACpB0gC,EAAUt2B,OAAOttC,EAAG,KAElBA,EAGlB,OAAO4C,MASXuL,EAAavM,UAAUiiE,KAAO,SAAcH,GACxC,IAAIE,EAAYhhE,KAAK4gE,WAAWE,GAChC,GAAIE,EAAW,CAGX,IAFA,IAAI5gE,EAAO,GACPhD,EAAI,EACDA,EAAI+iE,UAAU7+D,QACjBlB,EAAK8F,KAAKi6D,UAAU/iE,MACxB,IAAKA,EAAI,EAAGA,EAAI4jE,EAAU1/D,QACtB0/D,EAAU5jE,GAAGkjC,GAAGqQ,MAAMqwB,EAAU5jE,KAAK8iE,IAAK9/D,GAElD,OAAOJ,O,6BCaX,SAAS6xB,EAAQ30B,GAwNb,MArN4B,oBAAjBg3B,aAA8B,WAErC,IAAIgtC,EAAM,IAAIhtC,aAAa,EAAG,IAC1BitC,EAAM,IAAI7zD,WAAW4zD,EAAIz1C,QACzBivC,EAAiB,MAAXyG,EAAI,GAEd,SAASC,EAAmBlpD,EAAK8oB,EAAKC,GAClCigC,EAAI,GAAKhpD,EACT8oB,EAAIC,GAAWkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GAGvB,SAASE,EAAmBnpD,EAAK8oB,EAAKC,GAClCigC,EAAI,GAAKhpD,EACT8oB,EAAIC,GAAWkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GAQvB,SAASG,EAAkBtgC,EAAKC,GAK5B,OAJAkgC,EAAI,GAAKngC,EAAIC,GACbkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACZigC,EAAI,GAGf,SAASK,EAAkBvgC,EAAKC,GAK5B,OAJAkgC,EAAI,GAAKngC,EAAIC,GACbkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACZigC,EAAI,GAjBfhkE,EAAQmlC,aAAeq4B,EAAK0G,EAAqBC,EAEjDnkE,EAAQskE,aAAe9G,EAAK2G,EAAqBD,EAmBjDlkE,EAAQ4mC,YAAc42B,EAAK4G,EAAoBC,EAE/CrkE,EAAQukE,YAAc/G,EAAK6G,EAAoBD,EA9CV,GAiD9B,WAEP,SAASI,EAAmBC,EAAWzpD,EAAK8oB,EAAKC,GAC7C,IAAI73B,EAAO8O,EAAM,EAAI,EAAI,EAGzB,GAFI9O,IACA8O,GAAOA,GACC,IAARA,EACAypD,EAAU,EAAIzpD,EAAM,EAAmB,EAAqB,WAAY8oB,EAAKC,QAC5E,GAAI/3B,MAAMgP,GACXypD,EAAU,WAAY3gC,EAAKC,QAC1B,GAAI/oB,EAAM,qBACXypD,GAAWv4D,GAAQ,GAAK,cAAgB,EAAG43B,EAAKC,QAC/C,GAAI/oB,EAAM,sBACXypD,GAAWv4D,GAAQ,GAAKC,KAAKmW,MAAMtH,EAAM,yBAA4B,EAAG8oB,EAAKC,OAC5E,CACD,IAAInpB,EAAWzO,KAAKoD,MAAMpD,KAAKgP,IAAIH,GAAO7O,KAAK0zD,KAE/C4E,GAAWv4D,GAAQ,GAAK0O,EAAW,KAAO,GAD0B,QAArDzO,KAAKmW,MAAMtH,EAAM7O,KAAKgS,IAAI,GAAIvD,GAAY,YACI,EAAGkpB,EAAKC,IAO7E,SAAS2gC,EAAkBC,EAAU7gC,EAAKC,GACtC,IAAI6gC,EAAOD,EAAS7gC,EAAKC,GACrB73B,EAAsB,GAAd04D,GAAQ,IAAU,EAC1BhqD,EAAWgqD,IAAS,GAAK,IACzBC,EAAkB,QAAPD,EACf,OAAoB,MAAbhqD,EACDiqD,EACAC,IACA54D,GAAOS,KACM,IAAbiO,EACO,qBAAP1O,EAA+B24D,EAC/B34D,EAAOC,KAAKgS,IAAI,EAAGvD,EAAW,MAAQiqD,EAAW,SAd3D7kE,EAAQmlC,aAAeq/B,EAAmB9iE,KAAK,KAAMqjE,GACrD/kE,EAAQskE,aAAeE,EAAmB9iE,KAAK,KAAMsjE,GAgBrDhlE,EAAQ4mC,YAAc89B,EAAkBhjE,KAAK,KAAMujE,GACnDjlE,EAAQukE,YAAcG,EAAkBhjE,KAAK,KAAMwjE,GAvC5C,GA4CiB,oBAAjBC,aAA8B,WAErC,IAAIC,EAAM,IAAID,aAAa,EAAE,IACzBlB,EAAM,IAAI7zD,WAAWg1D,EAAI72C,QACzBivC,EAAiB,MAAXyG,EAAI,GAEd,SAASoB,EAAoBrqD,EAAK8oB,EAAKC,GACnCqhC,EAAI,GAAKpqD,EACT8oB,EAAIC,GAAWkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GAGvB,SAASqB,EAAoBtqD,EAAK8oB,EAAKC,GACnCqhC,EAAI,GAAKpqD,EACT8oB,EAAIC,GAAWkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GACnBngC,EAAIC,EAAM,GAAKkgC,EAAI,GAQvB,SAASsB,EAAmBzhC,EAAKC,GAS7B,OARAkgC,EAAI,GAAKngC,EAAIC,GACbkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACZqhC,EAAI,GAGf,SAASI,EAAmB1hC,EAAKC,GAS7B,OARAkgC,EAAI,GAAKngC,EAAIC,GACbkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACnBkgC,EAAI,GAAKngC,EAAIC,EAAM,GACZqhC,EAAI,GAzBfplE,EAAQqlC,cAAgBm4B,EAAK6H,EAAsBC,EAEnDtlE,EAAQylE,cAAgBjI,EAAK8H,EAAsBD,EA2BnDrlE,EAAQ6mC,aAAe22B,EAAK+H,EAAqBC,EAEjDxlE,EAAQ0lE,aAAelI,EAAKgI,EAAqBD,EA9DZ,GAiE9B,WAEP,SAASI,EAAoBlB,EAAWmB,EAAMC,EAAM7qD,EAAK8oB,EAAKC,GAC1D,IAAI73B,EAAO8O,EAAM,EAAI,EAAI,EAGzB,GAFI9O,IACA8O,GAAOA,GACC,IAARA,EACAypD,EAAU,EAAG3gC,EAAKC,EAAM6hC,GACxBnB,EAAU,EAAIzpD,EAAM,EAAmB,EAAqB,WAAY8oB,EAAKC,EAAM8hC,QAChF,GAAI75D,MAAMgP,GACbypD,EAAU,EAAG3gC,EAAKC,EAAM6hC,GACxBnB,EAAU,WAAY3gC,EAAKC,EAAM8hC,QAC9B,GAAI7qD,EAAM,sBACbypD,EAAU,EAAG3gC,EAAKC,EAAM6hC,GACxBnB,GAAWv4D,GAAQ,GAAK,cAAgB,EAAG43B,EAAKC,EAAM8hC,OACnD,CACH,IAAIhB,EACJ,GAAI7pD,EAAM,uBAENypD,GADAI,EAAW7pD,EAAM,UACM,EAAG8oB,EAAKC,EAAM6hC,GACrCnB,GAAWv4D,GAAQ,GAAK24D,EAAW,cAAgB,EAAG/gC,EAAKC,EAAM8hC,OAC9D,CACH,IAAIjrD,EAAWzO,KAAKoD,MAAMpD,KAAKgP,IAAIH,GAAO7O,KAAK0zD,KAC9B,OAAbjlD,IACAA,EAAW,MAEf6pD,EAAqB,kBADrBI,EAAW7pD,EAAM7O,KAAKgS,IAAI,GAAIvD,MACY,EAAGkpB,EAAKC,EAAM6hC,GACxDnB,GAAWv4D,GAAQ,GAAK0O,EAAW,MAAQ,GAAgB,QAAXiqD,EAAqB,WAAa,EAAG/gC,EAAKC,EAAM8hC,KAQ5G,SAASC,EAAmBnB,EAAUiB,EAAMC,EAAM/hC,EAAKC,GACnD,IAAI5yB,EAAKwzD,EAAS7gC,EAAKC,EAAM6hC,GACzBx0D,EAAKuzD,EAAS7gC,EAAKC,EAAM8hC,GACzB35D,EAAoB,GAAZkF,GAAM,IAAU,EACxBwJ,EAAWxJ,IAAO,GAAK,KACvByzD,EAAW,YAAmB,QAALzzD,GAAgBD,EAC7C,OAAoB,OAAbyJ,EACDiqD,EACAC,IACA54D,GAAOS,KACM,IAAbiO,EACO,OAAP1O,EAAgB24D,EAChB34D,EAAOC,KAAKgS,IAAI,EAAGvD,EAAW,OAASiqD,EAAW,kBAf5D7kE,EAAQqlC,cAAgBsgC,EAAoBjkE,KAAK,KAAMqjE,EAAa,EAAG,GACvE/kE,EAAQylE,cAAgBE,EAAoBjkE,KAAK,KAAMsjE,EAAa,EAAG,GAiBvEhlE,EAAQ6mC,aAAei/B,EAAmBpkE,KAAK,KAAMujE,EAAY,EAAG,GACpEjlE,EAAQ0lE,aAAeI,EAAmBpkE,KAAK,KAAMwjE,EAAY,EAAG,GAnD7D,GAuDJllE,EAKX,SAAS+kE,EAAY/pD,EAAK8oB,EAAKC,GAC3BD,EAAIC,GAAyB,IAAb/oB,EAChB8oB,EAAIC,EAAM,GAAM/oB,IAAQ,EAAK,IAC7B8oB,EAAIC,EAAM,GAAM/oB,IAAQ,GAAK,IAC7B8oB,EAAIC,EAAM,GAAM/oB,IAAQ,GAG5B,SAASgqD,EAAYhqD,EAAK8oB,EAAKC,GAC3BD,EAAIC,GAAY/oB,IAAQ,GACxB8oB,EAAIC,EAAM,GAAM/oB,IAAQ,GAAK,IAC7B8oB,EAAIC,EAAM,GAAM/oB,IAAQ,EAAK,IAC7B8oB,EAAIC,EAAM,GAAmB,IAAb/oB,EAGpB,SAASiqD,EAAWnhC,EAAKC,GACrB,OAAQD,EAAIC,GACJD,EAAIC,EAAM,IAAM,EAChBD,EAAIC,EAAM,IAAM,GAChBD,EAAIC,EAAM,IAAM,MAAQ,EAGpC,SAASmhC,EAAWphC,EAAKC,GACrB,OAAQD,EAAIC,IAAY,GAChBD,EAAIC,EAAM,IAAM,GAChBD,EAAIC,EAAM,IAAM,EAChBD,EAAIC,EAAM,MAAQ,EA3U9B9jC,EAAOD,QAAU20B,EAAQA,I,0DCOzB,SAASpmB,QAAQw3D,YACb,IACI,IAAI5F,IAAM6F,KAAK,QAAQtwB,QAAQ,IAAI,MAAzBswB,CAAgCD,YAC1C,GAAI5F,MAAQA,IAAI/7D,QAAUxD,OAAO+M,KAAKwyD,KAAK/7D,QACvC,OAAO+7D,IACb,MAAO34D,IACT,OAAO,KAdXvH,OAAOD,QAAUuO,S,6BCMjB,IAAIC,EAAOxO,EAOXwO,EAAKpK,OAAS,SAAqBohC,GAG/B,IAFA,IAAInC,EAAM,EACN9iC,EAAI,EACCL,EAAI,EAAGA,EAAIslC,EAAOphC,SAAUlE,GACjCK,EAAIilC,EAAOi+B,WAAWvjE,IACd,IACJmjC,GAAO,EACF9iC,EAAI,KACT8iC,GAAO,EACe,QAAZ,MAAJ9iC,IAAkE,QAAZ,MAA3BilC,EAAOi+B,WAAWvjE,EAAI,OACrDA,EACFmjC,GAAO,GAEPA,GAAO,EAEf,OAAOA,GAUX70B,EAAKs4B,KAAO,SAAmBvY,EAAQsG,EAAO4R,GAE1C,GADUA,EAAM5R,EACN,EACN,MAAO,GAKX,IAJA,IAGIzzB,EAHAkiE,EAAQ,KACRC,EAAQ,GACRrjE,EAAI,EAED20B,EAAQ4R,IACXrlC,EAAImtB,EAAOsG,MACH,IACJ0uC,EAAMrjE,KAAOkB,EACRA,EAAI,KAAOA,EAAI,IACpBmiE,EAAMrjE,MAAY,GAAJkB,IAAW,EAAsB,GAAlBmtB,EAAOsG,KAC/BzzB,EAAI,KAAOA,EAAI,KACpBA,IAAU,EAAJA,IAAU,IAAwB,GAAlBmtB,EAAOsG,OAAkB,IAAwB,GAAlBtG,EAAOsG,OAAkB,EAAsB,GAAlBtG,EAAOsG,MAAiB,MAC1G0uC,EAAMrjE,KAAO,OAAUkB,GAAK,IAC5BmiE,EAAMrjE,KAAO,OAAc,KAAJkB,IAEvBmiE,EAAMrjE,MAAY,GAAJkB,IAAW,IAAwB,GAAlBmtB,EAAOsG,OAAkB,EAAsB,GAAlBtG,EAAOsG,KACnE30B,EAAI,QACHojE,IAAUA,EAAQ,KAAKt6D,KAAKyG,OAAO+zD,aAAa/vB,MAAMhkC,OAAQ8zD,IAC/DrjE,EAAI,GAGZ,OAAIojE,GACIpjE,GACAojE,EAAMt6D,KAAKyG,OAAO+zD,aAAa/vB,MAAMhkC,OAAQ8zD,EAAMn6D,MAAM,EAAGlJ,KACzDojE,EAAMlxB,KAAK,KAEf3iC,OAAO+zD,aAAa/vB,MAAMhkC,OAAQ8zD,EAAMn6D,MAAM,EAAGlJ,KAU5DsO,EAAKi3B,MAAQ,SAAoBD,EAAQjX,EAAQuL,GAI7C,IAHA,IACIme,EACAguB,EAFApxC,EAAQiF,EAGH55B,EAAI,EAAGA,EAAIslC,EAAOphC,SAAUlE,GACjC+3C,EAAKzS,EAAOi+B,WAAWvjE,IACd,IACLquB,EAAOuL,KAAYme,EACZA,EAAK,MACZ1pB,EAAOuL,KAAYme,GAAM,EAAU,IACnC1pB,EAAOuL,KAAuB,GAAXme,EAAgB,KACV,QAAZ,MAALA,IAA0E,QAAZ,OAAjCguB,EAAKzgC,EAAOi+B,WAAWvjE,EAAI,MAChE+3C,EAAK,QAAiB,KAALA,IAAgB,KAAY,KAALguB,KACtC/lE,EACFquB,EAAOuL,KAAYme,GAAM,GAAU,IACnC1pB,EAAOuL,KAAYme,GAAM,GAAK,GAAK,IACnC1pB,EAAOuL,KAAYme,GAAM,EAAK,GAAK,IACnC1pB,EAAOuL,KAAuB,GAAXme,EAAgB,MAEnC1pB,EAAOuL,KAAYme,GAAM,GAAU,IACnC1pB,EAAOuL,KAAYme,GAAM,EAAK,GAAK,IACnC1pB,EAAOuL,KAAuB,GAAXme,EAAgB,KAG3C,OAAOne,EAASjF,I,6BCtGpB50B,EAAOD,QA6BP,SAAcmkC,EAAO/6B,EAAOmJ,GACxB,IAAI2zD,EAAS3zD,GAAQ,KACjB4zD,EAASD,IAAS,EAClBE,EAAS,KACTtsC,EAASosC,EACb,OAAO,SAAoB3zD,GACvB,GAAIA,EAAO,GAAKA,EAAO4zD,EACnB,OAAOhiC,EAAM5xB,GACbunB,EAASvnB,EAAO2zD,IAChBE,EAAOjiC,EAAM+hC,GACbpsC,EAAS,GAEb,IAAIgK,EAAM16B,EAAM/I,KAAK+lE,EAAMtsC,EAAQA,GAAUvnB,GAG7C,OAFa,EAATunB,IACAA,EAAwB,GAAL,EAATA,IACPgK,K,6BC5Cf7jC,EAAOD,QAAUyO,EAEjB,IAAInB,EAAO,EAAQ,GAUnB,SAASmB,EAAS0C,EAAIC,GASlBtO,KAAKqO,GAAKA,IAAO,EAMjBrO,KAAKsO,GAAKA,IAAO,EAQrB,IAAIi1D,EAAO53D,EAAS43D,KAAO,IAAI53D,EAAS,EAAG,GAE3C43D,EAAKh1D,SAAW,WAAa,OAAO,GACpCg1D,EAAKxhC,SAAWwhC,EAAKl/B,SAAW,WAAa,OAAOrkC,MACpDujE,EAAKjiE,OAAS,WAAa,OAAO,GAOlC,IAAIwM,EAAWnC,EAASmC,SAAW,mBAOnCnC,EAAS+1B,WAAa,SAAoBrjC,GACtC,GAAc,IAAVA,EACA,OAAOklE,EACX,IAAIn6D,EAAO/K,EAAQ,EACf+K,IACA/K,GAASA,GACb,IAAIgQ,EAAKhQ,IAAU,EACfiQ,GAAMjQ,EAAQgQ,GAAM,aAAe,EAUvC,OATIjF,IACAkF,GAAMA,IAAO,EACbD,GAAMA,IAAO,IACPA,EAAK,aACPA,EAAK,IACCC,EAAK,aACPA,EAAK,KAGV,IAAI3C,EAAS0C,EAAIC,IAQ5B3C,EAAS1B,KAAO,SAAc5L,GAC1B,GAAqB,iBAAVA,EACP,OAAOsN,EAAS+1B,WAAWrjC,GAC/B,GAAImM,EAAKkC,SAASrO,GAAQ,CAEtB,IAAImM,EAAK+C,KAGL,OAAO5B,EAAS+1B,WAAWprB,SAASjY,EAAO,KAF3CA,EAAQmM,EAAK+C,KAAK2qD,WAAW75D,GAIrC,OAAOA,EAAM04D,KAAO14D,EAAM24D,KAAO,IAAIrrD,EAAStN,EAAM04D,MAAQ,EAAG14D,EAAM24D,OAAS,GAAKuM,GAQvF53D,EAAS3M,UAAUuP,SAAW,SAAkBN,GAC5C,IAAKA,GAAYjO,KAAKsO,KAAO,GAAI,CAC7B,IAAID,EAAgB,GAAVrO,KAAKqO,KAAW,EACtBC,GAAMtO,KAAKsO,KAAW,EAG1B,OAFKD,IACDC,EAAKA,EAAK,IAAM,KACXD,EAAU,WAALC,GAElB,OAAOtO,KAAKqO,GAAe,WAAVrO,KAAKsO,IAQ1B3C,EAAS3M,UAAUwkE,OAAS,SAAgBv1D,GACxC,OAAOzD,EAAK+C,KACN,IAAI/C,EAAK+C,KAAe,EAAVvN,KAAKqO,GAAkB,EAAVrO,KAAKsO,GAAQnC,QAAQ8B,IAEhD,CAAE8oD,IAAe,EAAV/2D,KAAKqO,GAAQ2oD,KAAgB,EAAVh3D,KAAKsO,GAAQL,SAAU9B,QAAQ8B,KAGnE,IAAI0yD,EAAah0D,OAAO3N,UAAU2hE,WAOlCh1D,EAASwC,SAAW,SAAkBH,GAClC,OAAIA,IAASF,EACFy1D,EACJ,IAAI53D,GACLg1D,EAAWpjE,KAAKyQ,EAAM,GACtB2yD,EAAWpjE,KAAKyQ,EAAM,IAAM,EAC5B2yD,EAAWpjE,KAAKyQ,EAAM,IAAM,GAC5B2yD,EAAWpjE,KAAKyQ,EAAM,IAAM,MAAQ,GAEpC2yD,EAAWpjE,KAAKyQ,EAAM,GACtB2yD,EAAWpjE,KAAKyQ,EAAM,IAAM,EAC5B2yD,EAAWpjE,KAAKyQ,EAAM,IAAM,GAC5B2yD,EAAWpjE,KAAKyQ,EAAM,IAAM,MAAQ,IAQ9CrC,EAAS3M,UAAU6O,OAAS,WACxB,OAAOlB,OAAO+zD,aACO,IAAjB1gE,KAAKqO,GACLrO,KAAKqO,KAAO,EAAK,IACjBrO,KAAKqO,KAAO,GAAK,IACjBrO,KAAKqO,KAAO,GACK,IAAjBrO,KAAKsO,GACLtO,KAAKsO,KAAO,EAAK,IACjBtO,KAAKsO,KAAO,GAAK,IACjBtO,KAAKsO,KAAO,KAQpB3C,EAAS3M,UAAU+iC,SAAW,WAC1B,IAAI5rB,EAASnW,KAAKsO,IAAM,GAGxB,OAFAtO,KAAKsO,KAAQtO,KAAKsO,IAAM,EAAItO,KAAKqO,KAAO,IAAM8H,KAAU,EACxDnW,KAAKqO,IAAQrO,KAAKqO,IAAM,EAAsB8H,KAAU,EACjDnW,MAOX2L,EAAS3M,UAAUqlC,SAAW,WAC1B,IAAIluB,IAAmB,EAAVnW,KAAKqO,IAGlB,OAFArO,KAAKqO,KAAQrO,KAAKqO,KAAO,EAAIrO,KAAKsO,IAAM,IAAM6H,KAAU,EACxDnW,KAAKsO,IAAQtO,KAAKsO,KAAO,EAAqB6H,KAAU,EACjDnW,MAOX2L,EAAS3M,UAAUsC,OAAS,WACxB,IAAImiE,EAASzjE,KAAKqO,GACdq1D,GAAS1jE,KAAKqO,KAAO,GAAKrO,KAAKsO,IAAM,KAAO,EAC5Cq1D,EAAS3jE,KAAKsO,KAAO,GACzB,OAAiB,IAAVq1D,EACU,IAAVD,EACED,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EACxBC,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EAC1BC,EAAQ,IAAM,EAAI,K,6BCrM7BxmE,EAAOD,QAAUkjC,EAGjB,IAAID,EAAS,EAAQ,KACpBC,EAAaphC,UAAYlB,OAAOY,OAAOyhC,EAAOnhC,YAAYmM,YAAci1B,EAEzE,IAAI51B,EAAO,EAAQ,GAQnB,SAAS41B,IACLD,EAAO5iC,KAAKyC,MAwChB,SAAS4jE,EAAkB1rD,EAAK8oB,EAAKC,GAC7B/oB,EAAI5W,OAAS,GACbkJ,EAAKkB,KAAKi3B,MAAMzqB,EAAK8oB,EAAKC,GACrBD,EAAI/zB,UACT+zB,EAAI/zB,UAAUiL,EAAK+oB,GAEnBD,EAAI2B,MAAMzqB,EAAK+oB,GA3CvBb,EAAa9wB,WAAa,WAOtB8wB,EAAaiB,MAAQ72B,EAAK2C,oBAE1BizB,EAAayjC,iBAAmBr5D,EAAKwC,QAAUxC,EAAKwC,OAAOhO,qBAAqBsO,YAAiD,QAAnC9C,EAAKwC,OAAOhO,UAAUgI,IAAIrJ,KAClH,SAA8Bua,EAAK8oB,EAAKC,GACxCD,EAAIh6B,IAAIkR,EAAK+oB,IAIb,SAA+B/oB,EAAK8oB,EAAKC,GACzC,GAAI/oB,EAAIotC,KACNptC,EAAIotC,KAAKtkB,EAAKC,EAAK,EAAG/oB,EAAI5W,aACvB,IAAK,IAAIlE,EAAI,EAAGA,EAAI8a,EAAI5W,QAC3B0/B,EAAIC,KAAS/oB,EAAI9a,OAQ7BgjC,EAAaphC,UAAUqQ,MAAQ,SAA4BhR,GACnDmM,EAAKkC,SAASrO,KACdA,EAAQmM,EAAK0C,aAAa7O,EAAO,WACrC,IAAIkiC,EAAMliC,EAAMiD,SAAW,EAI3B,OAHAtB,KAAKwhC,OAAOjB,GACRA,GACAvgC,KAAKuhC,MAAMnB,EAAayjC,iBAAkBtjC,EAAKliC,GAC5C2B,MAeXogC,EAAaphC,UAAU0jC,OAAS,SAA6BrkC,GACzD,IAAIkiC,EAAM/1B,EAAKwC,OAAOikD,WAAW5yD,GAIjC,OAHA2B,KAAKwhC,OAAOjB,GACRA,GACAvgC,KAAKuhC,MAAMqiC,EAAmBrjC,EAAKliC,GAChC2B,MAWXogC,EAAa9wB,c,6BCnFbnS,EAAOD,QAAUgmC,EAGjB,IAAID,EAAS,EAAQ,KACpBC,EAAalkC,UAAYlB,OAAOY,OAAOukC,EAAOjkC,YAAYmM,YAAc+3B,EAEzE,IAAI14B,EAAO,EAAQ,GASnB,SAAS04B,EAAazX,GAClBwX,EAAO1lC,KAAKyC,KAAMyrB,GAStByX,EAAa5zB,WAAa,WAElB9E,EAAKwC,SACLk2B,EAAalkC,UAAU6kC,OAASr5B,EAAKwC,OAAOhO,UAAUsH,QAO9D48B,EAAalkC,UAAU0jC,OAAS,WAC5B,IAAInC,EAAMvgC,KAAKwhC,SACf,OAAOxhC,KAAKghC,IAAI8iC,UACV9jE,KAAKghC,IAAI8iC,UAAU9jE,KAAKihC,IAAKjhC,KAAKihC,IAAM53B,KAAKO,IAAI5J,KAAKihC,IAAMV,EAAKvgC,KAAKugC,MACtEvgC,KAAKghC,IAAI51B,SAAS,QAASpL,KAAKihC,IAAKjhC,KAAKihC,IAAM53B,KAAKO,IAAI5J,KAAKihC,IAAMV,EAAKvgC,KAAKugC,OAUxF2C,EAAa5zB,c,6BC5CHpS,EA6BN6mE,QAAU,EAAQ,M,6BClCtB5mE,EAAOD,QAAU6mE,EAEjB,IAAIv5D,EAAO,EAAQ,GAsCnB,SAASu5D,EAAQC,EAASC,EAAkBC,GAExC,GAAuB,mBAAZF,EACP,MAAMjF,UAAU,8BAEpBv0D,EAAKe,aAAahO,KAAKyC,MAMvBA,KAAKgkE,QAAUA,EAMfhkE,KAAKikE,iBAAmB93D,QAAQ83D,GAMhCjkE,KAAKkkE,kBAAoB/3D,QAAQ+3D,IA1DpCH,EAAQ/kE,UAAYlB,OAAOY,OAAO8L,EAAKe,aAAavM,YAAYmM,YAAc44D,EAwE/EA,EAAQ/kE,UAAUmlE,QAAU,SAASA,EAAQC,EAAQC,EAAaC,EAAcrnD,EAASsnD,GAErF,IAAKtnD,EACD,MAAM8hD,UAAU,6BAEpB,IAAIjzD,EAAO9L,KACX,IAAKukE,EACD,OAAO/5D,EAAKa,UAAU84D,EAASr4D,EAAMs4D,EAAQC,EAAaC,EAAcrnD,GAE5E,GAAKnR,EAAKk4D,QAKV,IACI,OAAOl4D,EAAKk4D,QACRI,EACAC,EAAYv4D,EAAKm4D,iBAAmB,kBAAoB,UAAUhnD,GAAS8lB,UAC3E,SAAqB9kB,EAAKV,GAEtB,GAAIU,EAEA,OADAnS,EAAKm1D,KAAK,QAAShjD,EAAKmmD,GACjBG,EAAStmD,GAGpB,GAAiB,OAAbV,EAAJ,CAKA,KAAMA,aAAoB+mD,GACtB,IACI/mD,EAAW+mD,EAAax4D,EAAKo4D,kBAAoB,kBAAoB,UAAU3mD,GACjF,MAAOU,GAEL,OADAnS,EAAKm1D,KAAK,QAAShjD,EAAKmmD,GACjBG,EAAStmD,GAKxB,OADAnS,EAAKm1D,KAAK,OAAQ1jD,EAAU6mD,GACrBG,EAAS,KAAMhnD,GAdlBzR,EAAK63B,KAAqB,MAiBxC,MAAO1lB,GAGL,OAFAnS,EAAKm1D,KAAK,QAAShjD,EAAKmmD,QACxBI,YAAW,WAAaD,EAAStmD,KAAS,QAnC1CumD,YAAW,WAAaD,EAAS9gE,MAAM,oBAAsB,IA6CrEsgE,EAAQ/kE,UAAU2kC,IAAM,SAAa8gC,GAOjC,OANIzkE,KAAKgkE,UACAS,GACDzkE,KAAKgkE,QAAQ,KAAM,KAAM,MAC7BhkE,KAAKgkE,QAAU,KACfhkE,KAAKihE,KAAK,OAAOF,OAEd/gE,O,6BC3IX7C,EAAOD,QAAU,I,wHCKjB,aA4CA,SACA,SACA,OACA,SACA,OAEA,OAWA,QACA,QAOA,QAIA,SACA,SAKA,SACA,SAGMqf,EAAS,EAAAC,cAAcvc,SAASvB,OAAO,yBAEvCgmE,EAAiB,IAAItlE,EAAMuG,QAC3Bg/D,EAAiB,IAAIvlE,EAAMuG,QAC3Bi/D,EAAiB,IAAIxlE,EAAMuG,QAC3Bk/D,EAAe,IAAIzlE,EAAMuG,QACzBm/D,EAAe,IAAI1lE,EAAMuG,QAEzBo/D,EAAQ,IAAI3lE,EAAMoG,QAClBw/D,EAAS,IAAI5lE,EAAMoG,QACnBy/D,EAAQ,IAAI7lE,EAAMuG,QAClBu/D,EAAS,IAAI9lE,EAAMuG,QACnBw/D,EAAQ,IAAI/lE,EAAMuG,QAElBy/D,EAAS,IAAIhmE,EAAMoG,QACnB6/D,EAAS,IAAIjmE,EAAMoG,QACnB8/D,EAAsB,IAAIlmE,EAAMoG,QAEhC+/D,EAAY,IAAInmE,EAAMuG,QACtB6/D,EAAY,IAAIpmE,EAAMuG,QACtB8/D,EAAY,IAAIrmE,EAAMuG,QACtB+/D,EAAY,IAAItmE,EAAMuG,QACtBggE,EAAY,IAAIvmE,EAAMuG,QACtBigE,EAAU,IAAIxmE,EAAMymE,MAwBpBC,EAAmBz8D,KAAKkP,GAAK,EAOnC,SAASwtD,EACLx7B,EACAy7B,EACAroE,EAAe,SAEf,MAAMiY,EAAOowD,EAAW,MAAQ,SAAW,SAG3C,MAAO,CACHrW,UAAW,EACXhyD,OACA8tB,QALqB,WAAT7V,EAAoB,IAAIwe,YAAYmW,GAAY,IAAIpW,YAAYoW,IACzD9e,OAKnB7V,QAKR,MAAMqwD,EA+BF,YAAqBrwD,GAAA,KAAAA,OA9BZ,KAAA8pB,UAAsB,GACtB,KAAAwmC,QAAoB,GACpB,KAAAC,mBAA+B,GAC/B,KAAAC,OAAmB,GACnB,KAAAC,cAA0B,GAC1B,KAAAh9B,QAAoB,GACpB,KAAAi9B,YAAwB,GACxB,KAAA17B,OAAkB,GAClB,KAAA27B,MAAkB,GAClB,KAAAC,YAAwB,GACxB,KAAAC,cAA2C,GAC3C,KAAAC,cAA0B,GAK1B,KAAAC,cAA0B,GAM1B,KAAAtV,SAA2B,GAM3B,KAAAuV,iBAA6B,GAItC,QAAQtxD,GACJ,IAAIioB,EAAQv9B,KAAKymE,cAAcxyD,QAAQqB,GAMvC,OAJIioB,EAAQ,IACRA,EAAQv9B,KAAKymE,cAAcnlE,OAC3BtB,KAAKymE,cAAcvgE,KAAKoP,IAErBioB,GAIf,IAAYspC,GAAZ,SAAYA,GACR,uBACA,yBAFJ,CAAYA,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAMpB,MAAMxyD,EAAW,IAAIjV,EAAMkV,MAE3B,8BAeI,YACqBwyD,EACAz6C,EACAI,EACAC,EACAE,EACAC,GALA,KAAAi6C,eACA,KAAAz6C,sBACA,KAAAI,4BACA,KAAAC,oBACA,KAAAE,2BACA,KAAAC,cAnBJ,KAAAk6C,cAAgB,IAAI5kE,IAEpB,KAAA6kE,aAA2B,GAC3B,KAAAC,iBAAmC,GACnC,KAAAC,qBAA2C,GAC3C,KAAAC,iBAAmC,GACnC,KAAAC,gBAAiC,GACjC,KAAAC,cAAiC,GACjC,KAAAC,aAAgC,GAEhC,KAAAC,UAAsB,GAC/B,KAAAC,oBAA8B,EAWtC,iBACI,OAAOxnE,KAAK8mE,aAAa5mD,iBAG7B,aACI,OAAOlgB,KAAK8mE,aAAa91D,OAY7B,oBACIid,EACAje,EACAke,EACAhuB,EACAutB,G,MAEA,MAAMrrB,EAAMlC,EAAQkC,IACpBpC,KAAKynE,qBAAqBrlE,GAE1B,IAAK,MAAMof,KAAaiM,EAAY,CAChC,QAAkBzrB,IAAdwf,EACA,SAGJ,MAAMwuC,EAAiBxuC,EAAUmpC,OAC3B+c,EAAc1nE,KAAK2nE,wBAAwB3X,EAAgB,EAAAx7B,aAAa4K,OAE9E,QAAoBp9B,IAAhB0lE,EACA,SAGJ,MAAM,UAAEhoC,EAAS,MAAE6mC,EAAK,cAAEG,EAAa,SAAErV,EAAQ,iBAAEuV,GAAqBc,EAElEE,EACF,EAAA5yC,gBAAgBxT,IAAc,EAAAyT,eAAezT,GAEjD,IAAI0D,EACJ,MAAM2iD,EAAW,EAAA5yC,eAAezT,GAEhC,GAAIqmD,EAAU,CACV,MAAMC,EAAetmD,EAIrB,GAHA0D,EAAe,EAAAiQ,sBAAsBj1B,EAAS4nE,EAAa5iD,mBAG9BljB,IAAzB8lE,EAAa9iD,QACbE,EAAe,EAAAiQ,sBAAsBj1B,EAAS4nE,EAAa9iD,cACxD,GAAyC,iBAA9B8iD,EAAa7iD,aAA2B,CAEtDC,EAD0B9iB,EAAIuO,OAAOm3D,EAAa7iD,mBAE/C,GAA8C,iBAAnC6iD,EAAa3iD,kBAAgC,CAC3D,MAAM4iD,EAAoB3lE,EAAIuO,OAAOm3D,EAAa3iD,mBAClDD,EAAe,EAAA8iD,4BAA4BD,EAAmBD,IAItE,MAAMh5C,EAAY,EAAAm5C,aAAa7lE,EAAIqO,SACnC,IAAK,MAAMwwB,KAAO/S,EAAU,CACxB,GAAI05C,EAA4B,CAC5B,MAAMM,EAAgB1mD,EAChBlM,EAAO,EAAA6yD,eAAejoE,EAASgoE,EAAeloE,KAAK6sB,kBAE5C7qB,IAATsT,GAAsBA,EAAKhU,OAAS,EACpCilE,EAAMrgE,KAAKwhE,EAAYU,QAAQ9yD,IAE/BixD,EAAMrgE,MAvKF,GA6KR0hE,EACA,EAAA3nD,4BAA4BjQ,EAAShQ,KAAK8mE,aAAc7lC,EAAKgkC,GAE7D,EAAAoD,2BAA2Br4D,EAAShQ,KAAK8mE,aAAc7lC,EAAKgkC,GAEhEvlC,EAAUx5B,KAAK++D,EAAMx/D,EAAGw/D,EAAMv/D,EAAGu/D,EAAMr/D,GACvCyrD,EAASnrD,KAAKlG,KAAKysB,0BAA4BrqB,EAAIqO,QAAUqe,GAC7D83C,EAAiB1gE,KAA+C,QAAzC,EAAA9D,EAAIuO,OAAO,2BAA8B,QAAI,GAEhEk3D,SACqB7lE,IAAjBkjB,EACAwhD,EAAcxgE,MAxLV,GA0LJwgE,EAAcxgE,KAAKwhE,EAAYU,QAAQljD,OAkB3D,mBACI+I,EACAje,EACAke,EACAhuB,EACAutB,EACAqB,GAEA,MAAM1sB,EAAMlC,EAAQkC,IACpBpC,KAAKynE,qBAAqBrlE,GAE1B,MAAMkmE,EAAyB,GACzBC,EAAyB,GACzBC,EAAkB,GAClBC,EAAsB,GACtB9V,EAAuB3yD,KAAK8mE,aAAanU,qBAE/C,IAAI+V,EAEJ,MAAMC,EAA6C,EAAjChW,EAAqB3iD,QAAQvK,EACzCmjE,EAA8C,EAAjCjW,EAAqB3iD,QAAQtK,EAC1CmjE,EAAgBx/D,KAAKS,IAAI6+D,EAAWC,GAE1C,IAAIE,EACAC,EAEJ,MAAMC,OAAmDhnE,IAAjCksB,EAAS,GAAGqR,iBAGpC,IAAI0pC,GAA4B,EAC5BC,GAA4B,EAGhC,IAAK,MAAM1nD,KAAaiM,EACpB,QAAkBzrB,IAAdwf,EAAJ,CAGA,GAAKsnD,EAGE,CAEH,MAAMK,EAAoBnpE,KAAKopE,yBAAyB5nD,GACxD,EAAA9M,YAA6B1S,IAAtBmnE,GAAmCJ,IAAsBI,QALhEL,EAAmB9oE,KAAKqpE,wBAAwB7nD,GAChDunD,EAAoB/oE,KAAKopE,yBAAyB5nD,GAOtDynD,EACIA,GAA6B,EAAAK,6BAA6B9nD,GAE9D0nD,EAA4BA,IAA8BD,EAG9D,IAAK,MAAMM,KAAYr7C,EAAU,CAG7B,MAAMs7C,EAAwB,GAC9B,IAAIC,EAAW,EAqBf,GApBIT,IACAhpE,KAAK8mE,aAAa5mD,iBAAiB9P,aAC/Bm5D,EAAShqC,iBAAkB,GAC3B2lC,GAEJqE,EAAShqC,iBAAkBl/B,QAAQ4gC,IAE/BjhC,KAAK8mE,aAAa5mD,iBAAiB9P,aAAa6wB,EAAKgkC,GACrDwE,GAAYxE,EAAMyE,WAAWxE,GAC7BA,EAAO5f,KAAK2f,GAGZjlE,KAAK8mE,aAAa5mD,iBAAiB9P,aAAa6wB,EAAI2uB,aAAcqV,GAClEuE,EAAYtjE,KAAK++D,EAAMx/D,EAAGw/D,EAAMv/D,EAAGu/D,EAAMr/D,EAAG6jE,MAOhDR,EAA2B,CAC3BP,EAAoB,GAGpB,IAAIiB,EAAa,EACjB,MAAMC,EAAaL,EAAS7pC,UAAUp+B,OACtC,GAAIsoE,EAAa,EAAG,CAChB,IAAIC,EAAoB,EAExB,IAAK,IAAIzsE,EAAI,EAAGA,EAAIwsE,EAAa,EAAGxsE,IAAK,CACrC,MAAM0sE,EAAsB,GACtBC,EAAsB,GACtBC,EAAoB,GACpBC,EAA2B,GAE3BC,EAAOX,EAAS7pC,UAAUtiC,GAC1B+sE,EAAOZ,EAAS7pC,UAAUtiC,EAAI,GAMpC,GALA,EAAA6iB,4BAA4BjQ,EAAShQ,KAAK8mE,aAAcoD,EAAMjF,GAC9D8E,EAAU7jE,KAAK++D,EAAMx/D,EAAGw/D,EAAMv/D,EAAGu/D,EAAMr/D,GACvC,EAAAqa,4BAA4BjQ,EAAShQ,KAAK8mE,aAAcqD,EAAMhF,GAC9D4E,EAAU7jE,KAAKi/D,EAAM1/D,EAAG0/D,EAAMz/D,EAAGy/D,EAAMv/D,GAEnCkjE,EAAkB,CAClB,CACI,MAAM,EAAEl4B,EAAC,EAAEzvC,GAAM2nE,EAAiBoB,EAAMl6D,GACxCg6D,EAAQ9jE,KAAK0qC,EAAGzvC,GAEpB,CACI,MAAM,EAAEyvC,EAAC,EAAEzvC,GAAM2nE,EAAiBqB,EAAMn6D,GACxCg6D,EAAQ9jE,KAAK0qC,EAAGzvC,IAGxB,GAAI6nE,EAAiB,CAGjB,IAAIhyC,EACAh3B,KAAKoqE,2BAA2BnF,EAAOuE,GAAeC,EAC1DQ,EAAe/jE,KAAK8wB,GACpBA,EAASh3B,KAAKoqE,2BAA2BjF,EAAOqE,GAAeC,EAC/DQ,EAAe/jE,KAAK8wB,OACjB,CACHizC,EAAe/jE,KAAK2jE,GAGpB,MAAMQ,EAAgBpF,EAAMyE,WAAWvE,GACvCwE,GAAcU,EACdR,GAAqBQ,EACrBJ,EAAe/jE,KAAK2jE,GAGxB5E,EAAMhpD,IAAIjc,KAAK8mE,aAAa91D,QAC5B84D,EAAU5jE,KAAK++D,EAAMx/D,EAAGw/D,EAAMv/D,EAAGu/D,EAAMr/D,GACvCu/D,EAAMlpD,IAAIjc,KAAK8mE,aAAa91D,QAC5B84D,EAAU5jE,KAAKi/D,EAAM1/D,EAAG0/D,EAAMz/D,EAAGy/D,EAAMv/D,GAEvC8iE,EAAmBxiE,KAAK4jE,GACxBvB,EAAWriE,KAAK6jE,GAChBvB,EAAItiE,KAAK8jE,GACTvB,EAAQviE,KAAK+jE,IAIrB,IAAKjB,GAAmBW,EAAa,EAEjC,IAAK,MAAMW,KAAc7B,EACrB6B,EAAWjqE,QAAQ,CAACkqE,EAAMhtC,KACtB+sC,EAAW/sC,GAASgtC,EAAOZ,IAO3C,GAAIT,EAA2B,CAC3B,MAAMY,EAAsB,GACtBC,EAAsB,GACtBC,EAAoB,GACpBQ,EAAwB,GAC9BjB,EAAS7pC,UAAUr/B,QAAQ4gC,IAIvB,GAHA,EAAAhhB,4BAA4BjQ,EAAShQ,KAAK8mE,aAAc7lC,EAAKgkC,GAC7D8E,EAAU7jE,KAAK++D,EAAMx/D,EAAGw/D,EAAMv/D,EAAGu/D,EAAMr/D,GAEnCkjE,EAAkB,CAClB,MAAM,EAAEl4B,EAAC,EAAEzvC,GAAM2nE,EAAiB7nC,EAAKjxB,GACvCg6D,EAAQ9jE,KAAK0qC,EAAGzvC,GAEpB,GAAI6nE,EAAiB,CAGjB,MAAMhyC,EACFh3B,KAAKoqE,2BAA2BnF,EAAOuE,GAAeC,EAC1De,EAAYtkE,KAAK8wB,GAErBiuC,EAAMhpD,IAAIjc,KAAK8mE,aAAa91D,QAC5B84D,EAAU5jE,KAAK++D,EAAMx/D,EAAGw/D,EAAMv/D,EAAGu/D,EAAMr/D,KAE3C0iE,EAAWpiE,KAAK4jE,GAChBvB,EAAWriE,KAAK6jE,GAChBvB,EAAItiE,KAAK8jE,GACTvB,EAAQviE,KAAKskE,IAIrB,MAAMC,EAAazqE,KAAK8mE,aAAal0D,QAAQE,OAAS,GAEtD,IAAK,MAAM0O,KAAaiM,EAAY,CAChC,QAAkBzrB,IAAdwf,EACA,SAEJ,MAAMwuC,EAAiBxuC,EAAUmpC,OAC3B+f,EAAgBlpD,EAAU7jB,KAEhC,GAAI,EAAAgtE,gBAAgBnpD,IAAc,EAAAopD,qBAAqBppD,GAAY,CAC/D,MAAMie,EAAe,EAAAkrC,gBAAgBnpD,GAC/BxhB,KAAKqnE,cACLrnE,KAAKsnE,aAELuD,EAAW,EAAAF,gBAAgBnpD,GAAaqlD,EAASiE,OAASjE,EAASkE,QAErE9B,IACA,EAAAv0D,YAC2B1S,IAAvB0mE,EACA,mFAIJ1oE,KAAKgrE,mBACDvrC,EACAje,EACAwuC,EACA6a,EACAzoE,EAAIqO,QACJi4D,EACAxoE,EACAF,KAAKopE,yBAAyB5nD,GAAagnD,OAAMxmE,EACjDymE,IAGJH,EAAWhnE,OAAS,GACpBtB,KAAKgrE,mBACDvrC,EACAje,EACAwuC,EACA6a,EACAzoE,EAAIqO,QACJ63D,EACApoE,EACAF,KAAKopE,yBAAyB5nD,GAAagnD,OAAMxmE,EACjDgnE,EAAkBP,OAAUzmE,QAGjC,GACH,EAAAgzB,gBAAgBxT,IAChB,EAAAyT,eAAezT,IACf,EAAA0T,sBAAsB1T,GACxB,CACE,MAAM0mD,EAAgB1mD,EAChBlM,EAAO,EAAA6yD,eAAejoE,EAASgoE,EAAeloE,KAAK6sB,aAEzD,QAAa7qB,IAATsT,GAAsC,IAAhBA,EAAKhU,OAC3B,SAEJ,IAAI2pE,EAAyB,GAE7B,GAAIjrE,KAAK0sB,kBAAmB,CAKxB,MAAMw+C,EAAqBrC,EAAgB7oE,KAAK8mE,aAAa9T,iBACvDmY,EA1dK,EA4dP71D,EAAKhU,OACL4pE,EAhdO,GAkdLE,EACFD,EAA0BA,EAE9BF,EAAajrE,KAAKqrE,gBACd9C,EACA6C,EACAtF,QAGJmF,EAAa1C,EAGjB,GAA0B,IAAtB0C,EAAW3pE,OACX,SAGJ,GAAI,EAAA0zB,gBAAgBxT,GAAY,CAC5B,QAAaxf,IAATsT,EACA,SAEJ,IAAK,MAAMg2D,KAAQL,EAAY,CAC3B,MAAMM,EAAgB,EAAAp/B,OAAOU,yBAAyBy+B,GACtDtrE,KAAKknE,qBAAqBhhE,KAAK,CAC3Bsb,UAAWwuC,EACXsb,OACAC,gBACAj2D,KAAM3I,OAAO2I,GACb+7C,SAAUrxD,KAAKysB,0BACTrqB,EAAIqO,QACJ,EAAAw3D,aAAa7lE,EAAIqO,gBAG5B,CACH,MAAM+6D,EAAsBhqD,EAE5B,IAAI0D,EAAe,EAAAiQ,sBACfj1B,EACAsrE,EAAoBtmD,cAOxB,GAAqD,iBAA1CsmD,EAAoBrmD,kBAAgC,CAE3DD,EAD0B9iB,EAAIuO,OAAO66D,EAAoBrmD,mBAEH,iBAA3CqmD,EAAoBpmD,qBAC3BF,EAAesmD,EAAoBpmD,mBAAqBF,GAEL,iBAA5CsmD,EAAoBnmD,sBAC3BH,GAA8BsmD,EAAoBnmD,qBAI1D,IAAK,MAAMomD,KAASR,EAChBjrE,KAAKonE,gBAAgBlhE,KAAK,CACtBsb,UAAWwuC,EACXtwB,UAAW,CACP/hC,KAAM,WACNiY,KAAM,QACN6V,OAAQ,IAAIyI,aAAau3C,GAAOhgD,OAChCkkC,UAAW,GAEf4W,MAAO,CAAC,GACRE,cAAe,CAACnxD,EAAM4P,GACtBwhD,cAAe,CAAC,GAChBrV,SAAUrxD,KAAKysB,0BACT,CAACrqB,EAAIqO,SACL,CAAC,EAAAw3D,aAAa7lE,EAAIqO,kBAIjC,GAAI,EAAAi7D,8BAA8BlqD,GACrC,IAAK,MAAM8pD,KAAQ/C,EAAY,CAC3B,MAAMoD,EAA2B,GACjC,IAAK,IAAIvuE,EAAI,EAAGA,EAAIkuE,EAAKhqE,OAAQlE,GAAK,EAClCuuE,EAAUzlE,MAAK,IAAI9G,EAAMuG,SAAU+zC,UAAU4xB,EAAMluE,IAEvD4C,KAAKmnE,iBAAiBjhE,KAAK,CACvBolE,KAAMK,SAGX,GAAI,EAAAhhD,wBAAwBnJ,GAAY,CAC3C,MAAMkmD,EAAc1nE,KAAK2nE,wBACrB3X,EACA,EAAAx7B,aAAao3C,cAEjB,QAAoB5pE,IAAhB0lE,EACA,SAEJ,MAAM,UAAEhoC,EAAS,QAAE2J,EAAO,OAAEuB,EAAM,cAAE+7B,EAAa,SAAEtV,GAAaqW,EAC1D31C,EAAQsX,EAAQ/nC,OAEhB0kB,EAAY,EAAAmP,sBAA8Bj1B,EAASshB,EAAUwE,WAEnE,QAAkBhkB,IAAdgkB,EACA,SAGJ,MAAM6lD,EAAgB,EAAA12C,sBAClBj1B,EACAshB,EAAUsqD,KACV,UAGEC,EAAYtB,GAAgC,WAAlBoB,EAEhCvD,EAAWjoE,QAAQorE,IACf,EAAAO,gBAAgBP,EAAOzlD,EAAW0Z,EAAW2J,EAAS0iC,GACtDpF,EAAczgE,KAAK6rB,GACnBs/B,EAASnrD,KACLlG,KAAKysB,0BAA4BrqB,EAAIqO,QAAU,EAAAw3D,aAAa7lE,EAAIqO,YAIxE,MAAMw5B,EAAQZ,EAAQ/nC,OAASywB,EAC/B6Y,EAAO1kC,KAAK,CAAE6rB,QAAOkY,QAAOzoB,UAAWwuC,SAEvCzzC,EAAOyV,KACH,0FACG04C,gBAA4BtoE,EAAIqO,QAAQouB,YAgB3D,sBACI5Q,EACAje,EACAke,EACAhuB,EACAutB,EACAqB,GAEA,MAAM1sB,EAAMlC,EAAQkC,IACpBpC,KAAKynE,qBAAqBrlE,GAE1BqrB,EAAWptB,QAAQmhB,IACf,QAAkBxf,IAAdwf,EACA,OAGJ,MAAMwuC,EAAiBxuC,EAAUmpC,OAEjC,QAAuB3oD,IAAnBguD,EACA,MAAM,IAAIvsD,MACN,oFAKR,IAAIwoE,EAEJ,MAAMC,EAAO9pE,EAAIuO,OAAO,QACxB,GAAIvP,MAAMC,QAAQ6qE,GAAO,CACrB,MAAO56D,EAAMF,EAAOG,EAAMF,GAAS66D,EAC7Bj5D,EAAS,IAAI,EAAApC,OACf,IAAI,EAAA3I,eAAekJ,EAAOE,GAC1B,IAAI,EAAApJ,eAAemJ,EAAOE,IAE9B06D,EAAe,IAAI7sE,EAAM0Z,KACzB,EAAAmB,sBAAsBK,WAAWrH,EAAQg5D,GAG7C,MAAME,EAAqB,GAErB1d,EAAa,EAAA1jC,2BAA2BvJ,GACxC4qD,EAAW,EAAAthD,gBAAgBtJ,GAC3B6qD,EAAa,EAAArhD,oBAAoBxJ,GAEjC8qD,EACF7d,GACA2d,GACAC,GACC,EAAAnhD,kBAAkB1J,IAAsC,SAAxBA,EAAUiJ,UACzCq+C,EAAmB9oE,KAAKqpE,wBAAwB7nD,EAAWyqD,GAC3DrgD,OAAoC5pB,IAArB8mE,EAAiC,EAAI,EAE1D,IAAIyD,EAEJ,IAAK,MAAM3sC,KAAW1R,EAAU,CAC5B,MAAM2R,EAAgB,GAEtB,IAAK,MAAMC,KAAWF,EAAQC,MAAO,CACjC,MAAM2sC,EAAwB,GAE9B,IAAIC,EAAS3sC,EAEb,GAAIssC,GAAYC,EAAY,CACEI,EAAOhoE,KAC7BvF,GAAKA,EAAEuG,EAAI,GAAKvG,EAAEuG,EAAIuK,GAAW9Q,EAAEwG,EAAI,GAAKxG,EAAEwG,EAAIsK,KAI7Cu8D,IACDA,EAAW,CACP,IAAIntE,EAAMoG,QAAQ,EAAG,GACrB,IAAIpG,EAAMoG,QAAQwK,EAAS,GAC3B,IAAI5Q,EAAMoG,QAAQwK,EAASA,GAC3B,IAAI5Q,EAAMoG,QAAQ,EAAGwK,KAI7By8D,EAAS,EAAAC,YAAYD,EAAQF,IAIrC,GAAsB,IAAlBE,EAAOnrE,OAAX,CAIA,IAAK,MAAMqrE,KAASF,EAEhB,GADAD,EAAYtmE,KAAKymE,EAAMlnE,EAAGknE,EAAMjnE,QACP1D,IAArB8mE,EAAgC,CAChC,MAAM,EAAEl4B,EAAC,EAAEzvC,GAAM2nE,EAAiB6D,EAAO38D,GACzCw8D,EAAYtmE,KAAK0qC,EAAGzvC,GAI5B0+B,EAAM35B,KAAK,IAAI,EAAA0mE,KAAK58D,EAAS4b,EAAc4gD,KAG1B,IAAjB3sC,EAAMv+B,QAIV6qE,EAASjmE,KAAK25B,GAGlB,MAAMgtC,EAAS,EAAAjC,qBAAqBppD,IAAc,EAAAmpD,gBAAgBnpD,GAClE,GAAI8qD,EACAtsE,KAAK8sE,sBACDX,EACA3qD,EACAwuC,EACAlhC,EACA5uB,EACA8P,QAED,GAAI68D,EAAQ,CACf,MAAMptC,EACiB,SAAnBje,EAAU7jB,KAAkBqC,KAAKqnE,cAAgBrnE,KAAKsnE,aAEpDuD,EAA8B,SAAnBrpD,EAAU7jB,KAAkBkpE,EAASiE,OAASjE,EAASkE,QAIlEgC,EAA6B,EAAAzD,6BAA6B9nD,GAEhE2qD,EAAS9rE,QAAQw/B,IACb,MAAMmtC,EAAoB,GACpBvE,EAAkCsE,EAClC,QACA/qE,EACN69B,EAAMx/B,QAAQ0/B,IACV,MAAMz+B,EAASy+B,EAAKlU,QAAQvqB,OAASy+B,EAAKnU,aAC1C,IAAInE,EAAiB,GAGjBwlD,EAAa,EACbpD,EAAoB,EACpBI,EAAuC8C,EACrC,QACA/qE,EAEN,IAAK,IAAI5E,EAAI,EAAGA,EAAIkE,IAAUlE,EAAG,CACzB2vE,GAA8BtlD,EAAKnmB,OAAS,IAE5CmmB,EAAO,GACPwiD,EAAiB,IAGrB,MAAMiD,GAAW9vE,EAAI,GAAKkE,EACpB0+B,EAAQD,EAAKlU,QAAQzuB,EAAI2iC,EAAKnU,cAC9BqU,EAAQF,EAAKlU,QAAQzuB,EAAI2iC,EAAKnU,aAAe,GAC7CuhD,EAAQptC,EAAKlU,QAAQqhD,EAAUntC,EAAKnU,cACpCwhD,EAAQrtC,EAAKlU,QAAQqhD,EAAUntC,EAAKnU,aAAe,GAEnDyhD,IACDrtC,GAAS,GAAKmtC,GAAS,GACvBntC,GAASD,EAAK/vB,SAAWm9D,GAASptC,EAAK/vB,SACvCiwB,GAAS,GAAKmtC,GAAS,GACvBntC,GAASF,EAAK/vB,SAAWo9D,GAASrtC,EAAK/vB,SAG5C,GAAKq9D,GAA6B,IAAhB5lD,EAAKnmB,QAGhB,GAAI+rE,GAA6B,IAAhB5lD,EAAKnmB,SACzB,EAAA+mE,2BACIr4D,EACAhQ,KAAK8mE,aACL/B,EAAM/9D,IAAIg5B,EAAOC,GACjBglC,GAEJx9C,EAAKvhB,KAAK++D,EAAMx/D,EAAGw/D,EAAMv/D,EAAGu/D,EAAMr/D,GAE9BmnE,GAA4B,CAE5B,EAAA1E,2BACIr4D,EACAhQ,KAAK8mE,aACL/B,EAAM/9D,IAAImmE,EAAOC,GACjBjI,GAEJ19C,EAAKvhB,KAAKi/D,EAAM1/D,EAAG0/D,EAAMz/D,EAAGy/D,EAAMv/D,GAElCqkE,EAAgB/jE,KAAK2jE,GAGrB,MAAMQ,EAAgBpF,EAAMyE,WAAWvE,GACvC8H,GAAc5C,EACdR,GAAqBQ,EACrBJ,EAAgB/jE,KAAK2jE,SA3BzBmD,EAAM9mE,KAAKuhB,GACXA,EAAO,GA6BP4lD,IAAcN,IACd,EAAA1E,2BACIr4D,EACAhQ,KAAK8mE,aACL/B,EAAM/9D,IAAImmE,EAAOC,GACjBnI,GAEJx9C,EAAKvhB,KAAK++D,EAAMx/D,EAAGw/D,EAAMv/D,EAAGu/D,EAAMr/D,IAGlCmnE,GAA8BtlD,EAAKnmB,OAAS,GAAK2rE,EAAa,IAG9DhD,EAAgB5pE,QAAQ,CAACkqE,EAAMhtC,KAC3B0sC,EAAgB1sC,GAASgtC,EAAO0C,IAIpCD,EAAM9mE,KAAKuhB,GACXghD,EAASviE,KAAK+jE,KAIjB8C,GAA8BtlD,EAAKnmB,OAAS,GAC7C0rE,EAAM9mE,KAAKuhB,KAIE,IAAjBulD,EAAM1rE,QAIVtB,KAAKgrE,mBACDvrC,EACAje,EACAwuC,EACA6a,EACAzoE,EAAIqO,QACJu8D,EACA9sE,OACA8B,EACAymE,QAYpB,iBACIzoE,KAAKstE,mBACLttE,KAAKutE,mBAAmBvtE,KAAKqnE,eAC7BrnE,KAAKwtE,aAAaxtE,KAAKsnE,cAEvB,MAAMx3C,EAA2B,CAC7BrC,WAAYztB,KAAKqsB,oBAAoBohD,kBACrC//C,WAAY1tB,KAAKgnE,aACjB/2C,gBAAYjuB,GAkBhB,OAhBIhC,KAAKinE,iBAAiB3lE,OAAS,IAC/BwuB,EAAY49C,eAAiB1tE,KAAKinE,kBAElCjnE,KAAKonE,gBAAgB9lE,OAAS,IAC9BwuB,EAAY69C,cAAgB3tE,KAAKonE,iBAEjCpnE,KAAKknE,qBAAqB5lE,OAAS,IACnCwuB,EAAY89C,mBAAqB5tE,KAAKknE,sBAEtClnE,KAAKmnE,iBAAiB7lE,OAAS,IAC/BwuB,EAAY+9C,eAAiB7tE,KAAKmnE,kBAER,IAA1BnnE,KAAKunE,UAAUjmE,SACfwuB,EAAYg+C,mBAAqB9tE,KAAKunE,WAE1Cz3C,EAAYi+C,kBAAoB/tE,KAAKwnE,oBAC9B13C,EAYD,gBACNk9C,EACA5B,EACA4C,GAEA,MAAM/C,EAAyB,GAEzBgD,EAA4B,CAC9BxC,EACAyC,EACAC,KAEA,IAAI31C,EAAOjsB,OAAOypD,iBACdr9B,EAAOpsB,OAAO6hE,iBACd31C,EAAOlsB,OAAOypD,iBACdz7C,EAAOhO,OAAO6hE,iBAClB,IAAK,IAAIhxE,EAAI8wE,EAAY9wE,EAAI+wE,EAAU/wE,GAAK,EAAG,CAC3C,MAAMqI,EAAIgmE,EAAMruE,GACVsI,EAAI+lE,EAAMruE,EAAI,GAChBqI,EAAI+yB,IACJA,EAAO/yB,GAEPA,EAAIkzB,IACJA,EAAOlzB,GAEPC,EAAI+yB,IACJA,EAAO/yB,GAEPA,EAAI6U,IACJA,EAAO7U,GAIf,OAAQizB,EAAOH,IAASG,EAAOH,IAASje,EAAOke,IAASle,EAAOke,IAI7D41C,EAAerB,EAAM1mE,QAE3B,KAAO+nE,EAAa/sE,OAAS,GAAG,CAC5B,MAAMgqE,EAAO+C,EAAal/B,MAE1B,QAAantC,IAATspE,GAAsBA,EAAKhqE,OAAS,EACpC,SAGJ,IAAIgtE,GAAc,EAElB,IAAK,IAAIlxE,EAAI,EAAGA,EAAIkuE,EAAKhqE,OAAS,EAAGlE,GAAK,EAAG,CACzCgoE,EAAOp+D,IAAIskE,EAAKluE,GAAIkuE,EAAKluE,EAAI,IAC7BioE,EAAOr+D,IAAIskE,EAAKluE,EAAI,GAAIkuE,EAAKluE,EAAI,IACjC,MAAMmxE,EAAUlJ,EAAOppD,IAAImpD,GAAQ/V,YAEnC,GAAIjyD,EAAI,EAAG,CACP,MAAMoxE,EAAQnlE,KAAKguB,MACfiuC,EAAoB7/D,EAAI8oE,EAAQ7oE,EAAI6oE,EAAQ9oE,EAAI6/D,EAAoB5/D,EACpE6oE,EAAQxpB,IAAIugB,IAGhB,GAAIj8D,KAAKitB,IAAIk4C,GAASR,EAAgB,CAClCM,EAAalxE,EACb,OAGRkoE,EAAoBt+D,IAAIunE,EAAQ9oE,EAAG8oE,EAAQ7oE,GAG/C,GAAI4oE,EAAa,EAAG,CAEhB,MAAMG,EAAqBR,EAA0B3C,EAAM,EAAGgD,EAAa,GAErEI,EAAsBT,EACxB3C,EACAgD,EACAhD,EAAKhqE,QAGLmtE,EAAqBrD,GAErBH,EAAW/kE,KAAKolE,EAAKhlE,MAAM,EAAGgoE,EAAa,IAG3CI,EAAsBtD,GAGtBiD,EAAanoE,KAAKolE,EAAKhlE,MAAMgoE,QAE9B,CAImBL,EAA0B3C,EAAM,EAAGA,EAAKhqE,QAE1C8pE,GAChBH,EAAW/kE,KAAKolE,IAK5B,OAAOL,EAGH,yBAAyBzpD,GAG7B,OACK,EAAAsJ,gBAAgBtJ,IACb,EAAAopD,qBAAqBppD,IACrB,EAAAuJ,2BAA2BvJ,KAC/BxhB,KAAK4sB,yBAEE,EAAAyG,sBAAsBs7C,UAG1B,EAAAtjD,sBAAsB7J,GAGzB,wBACJA,EACAyqD,GAIA,OAFqBjsE,KAAKopE,yBAAyB5nD,IAG/C,KAAK,EAAA6R,sBAAsBs7C,UACvB,MAAO,CAACC,EAAwBC,KAC5B,MAAQppE,EAAGmrC,EAAGlrC,EAAGvE,IAAM,IAAI/B,EAAMoG,SAC5B8/C,KAAKspB,GACLE,aAAaD,GAClB,MAAO,CAAEj+B,IAAGzvC,EAAG,EAAIA,IAG3B,KAAK,EAAAkyB,sBAAsB07C,qBACvB,MAAO,CAACH,EAAwB5+D,KAC5B,MAAMM,EAAW,EAAAoP,WAAW1P,EAAShQ,KAAK8mE,aAAc8H,GAAS,EAAO5J,IAChEv/D,EAAGmrC,EAAGlrC,EAAGvE,GAAM,EAAAwzB,oCAAoCxa,eACvD,EAAAF,sBACA,IAAI7a,EAAMuG,QAAQ2K,EAAS7K,EAAG6K,EAAS5K,EAAG,IAE9C,MAAO,CAAEkrC,IAAGzvC,MAGpB,KAAK,EAAAkyB,sBAAsB27C,aACvB,IAAK/C,EACD,OAEJ,MAAO,CAAC2C,EAAwB5+D,KAC5B,MAAM84B,EAAK,EAAAppB,WAAW1P,EAAShQ,KAAK8mE,aAAc8H,GAAS,EAAO5J,GAOlE,OANIiH,IACAnjC,EAAGrjC,GAAKwmE,EAAariE,IAAInE,EACzBqjC,EAAGpjC,GAAKumE,EAAariE,IAAIlE,EACzBojC,EAAGrjC,GAAKwmE,EAAaniE,IAAIrE,EAAIwmE,EAAariE,IAAInE,EAC9CqjC,EAAGpjC,GAAKumE,EAAaniE,IAAIpE,EAAIumE,EAAariE,IAAIlE,GAE3C,CAAEkrC,EAAG9H,EAAGrjC,EAAGtE,EAAG,EAAI2nC,EAAGpjC,IAGpC,QACI,QAIJ,mBACJupE,EACAztD,EACAwuC,EACA6a,EAAWhE,EAASkE,QACpBmE,EACAlC,EACA9sE,EACAsoE,EACAC,GAEA,IAAI0G,EACJ,MAAMC,EAAsBH,EAAc93D,KAAKs0D,GAASA,EAAMjqD,YAAcwuC,GACtEqf,OAA2BrtE,IAARwmE,EACzB,QAA4BxmE,IAAxBotE,EAAmC,CACnCD,EAAY,IAAI,EAAAG,UAAUD,OAAkBrtE,EAAW6oE,IAAahE,EAASiE,QAC7E,MAAMW,EAAuB,CACzB71D,KAAMi1D,IAAahE,EAASkE,QAAU,EAAAv2C,aAAa+6C,UAAY,EAAA/6C,aAAa3F,KAC5ErN,UAAWwuC,EACXgd,MAAOmC,IAGgB,EAAAh6C,sBACvBj1B,EACAshB,EAAUY,WACV,IAEuBpiB,KAAKysB,4BAE5Bg/C,EAAMpa,SAAW,CAAC6d,GAClBzD,EAAM9E,cAAgB,CAAC,IAG3BsI,EAAc/oE,KAAKulE,QAEnB0D,EAAYC,EAAoBpC,MAG5BhtE,KAAKysB,2BACL2iD,EAAoB/d,UACpB+d,EAAoBzI,gBAIpByI,EAAoB/d,SAASnrD,KAAKgpE,GAClCE,EAAoBzI,cAAczgE,KAAKipE,EAAU9lC,QAAQ/nC,SAGjE,IAAIlE,EAAI,EACR4vE,EAAM3sE,QAAQorE,IACV0D,EAAUhvE,IACNH,KAAK8mE,aAAa91D,OAClBy6D,EACAzrE,KAAKuS,WACLk2D,EAAUA,EAAQrrE,QAAK4E,EACvBwmE,EAAMA,EAAIprE,QAAK4E,GAEnB5E,MAIA,sBACJ+uE,EACA3qD,EACAwuC,EACAlhC,EACA5uB,EACA8P,GAEA,MAAMy+C,EAAa,EAAA1jC,2BAA2BvJ,GAExCgmB,EAAeinB,EAAa,EAAAj6B,aAAag7C,gBAAkB,EAAAh7C,aAAamL,QACxE+nC,EAAc1nE,KAAK2nE,wBAAwB3X,EAAgBxoB,GAEjE,QAAoBxlC,IAAhB0lE,EACA,OAGJ,MAAM+H,EAA2BjuD,EAC3BkuD,EAAgBluD,EAChBoI,GAA2D,IAA3C6lD,EAAyB7lD,cAEzCwiD,EAAW,EAAAthD,gBAAgBtJ,GAC3BmuD,EAAe3vE,KAAKopE,yBAAyB5nD,GAEnD,IAAI+H,EAAS,EAAA4L,sBAA8Bj1B,EAASuvE,EAAyBlmD,QAEzEC,EAAc,EAAA2L,sBACdj1B,EACAuvE,EAAyBjmD,aAG7B,QAAexnB,IAAXunB,EAAsB,CAEtB,MAAMqmD,EAAgB1vE,EAAQkC,IAAIuO,OAAO,UACnCk/D,EAAwB,EAAA16C,sBAC1Bj1B,EAEAuvE,EAAyB/lD,eAE7BH,OACsBvnB,IAAlB4tE,EACMA,OAC0B5tE,IAA1B6tE,EACAA,EACA,EAGd,QAAoB7tE,IAAhBwnB,EAA2B,CAC3B,MAAMsmD,EAAmB5vE,EAAQkC,IAAIuO,OAAO,cAC5C6Y,OAAmCxnB,IAArB8tE,GAAmC1D,EAA8B,EAAnB0D,EAKhEvmD,EAASlgB,KAAKS,IAAI0f,EAAc,EAAAumD,qBAAqBC,oBAAqBzmD,GAE1E,MAAM0mD,EAAyB,EAAAC,eAC3BT,EAAyB9lD,gBACzB,GAGJ3pB,KAAK8mE,aAAalU,WAAWE,UAAU4R,GAEvC,MAAM,UACFhlC,EAAS,QACTwmC,EAAO,mBACPC,EAAkB,OAClBC,EAAM,cACNC,EAAa,QACbh9B,EAAO,YACPi9B,EAAW,OACX17B,GACA88B,EAEEyI,OAAiCnuE,IAAjB2tE,EAA6B,EAAI,EACjD/jD,EAAeukD,EAAgB,EAC/BC,EAAcpwE,KAAK8mE,aAAa5mD,iBAAiBtK,OAAS,EAAA3F,eAAegyC,UAOzEouB,GALY5hB,EACZghB,EAAyBzpD,WAAa,EACtComD,GACAsD,EAAc1pD,WACd,GACuB,EAE7B,IAAIzQ,EACJ,GAAI,EAAAwV,2BAA2BvJ,IACvB,EAAA0uD,eAAe1uD,EAAUqG,cAAc,GAAQ,CAC/C,IAAIyoD,EAAa,EAAAn7C,sBAAkCj1B,EAASshB,EAAUjM,OACtE,QAAmBvT,IAAfsuE,EAA0B,CAC1B,MAAMC,EAAerwE,EAAQkC,IAAIuO,OAAO,SACpC3Q,KAAKwwE,mBAAmBD,KACxBD,EAAa3jE,OAAO4jE,SAGTvuE,IAAfsuE,IACAA,EAAa,EAAAn7C,sBACTj1B,EACAshB,EAAUiI,aACV,SAIWznB,IAAfsuE,IACAA,EAAa,GAEjBj8D,EAASrN,IAAIspE,GAEb/6D,EAAQlB,EAIhB,IAAK,MAAMurB,KAAWusC,EAAU,CAC5B,MAAMsE,EAAkBpnC,EAAQ/nC,OAEhC,IAAK,IAAIovE,EAAY,EAAGA,EAAY9wC,EAAQt+B,QAAU,CAClD,MAAMqvE,EAAqB,GACrBC,EAAoBlxC,EAAUp+B,OAAS,GAEvC,QAAEuqB,EAAO,QAAEC,GAAY8T,EAAQ8wC,KACrC,IAAK,IAAItzE,EAAI,EAAGA,EAAIyuB,EAAQvqB,OAAS6uE,IAAiB/yE,EAAG,CAGrD,IAAK,IAAImsC,EAAI,EAAGA,EAAI4mC,IAAiB5mC,EACjConC,EAASzqE,MAAY,IAANqjC,GAAW,EAAI,GAAK1d,EAAQzuB,EAAI+yE,EAAgB5mC,IAInE,MAAM2jC,GAAW9vE,EAAI,IAAMyuB,EAAQvqB,OAAS6uE,GACtCnwC,EAAQnU,EAAQzuB,EAAI+yE,GACpBlwC,EAAQpU,EAAQzuB,EAAI+yE,EAAgB,GACpChD,EAAQthD,EAAQqhD,EAAUiD,GAC1B/C,EAAQvhD,EAAQqhD,EAAUiD,EAAgB,GAC1CU,IACD7wC,GAAS,GAAKmtC,GAAS,GACvBntC,GAAShwB,GAAWm9D,GAASn9D,GAC7BiwB,GAAS,GAAKmtC,GAAS,GACvBntC,GAASjwB,GAAWo9D,GAASp9D,GAGlC2gE,EAASzqE,KACL2qE,EAAgB3D,GAAW,EAC3BtjD,GAAiBinD,EAAgB3D,GAAW,GAMpD,MAAM4D,EAAkB,GACxB,KAAOJ,EAAY9wC,EAAQt+B,QAAUs+B,EAAQ8wC,GAAW5kD,UAAYA,GAAS,CACzE,MAAMwiC,EAAeqiB,EAASrvE,OAASsqB,EACvCklD,EAAM5qE,KAAKooD,GAEX,MAAMyiB,EAAOnxC,EAAQ8wC,KAAa7kD,QAClC,IAAK,IAAIzuB,EAAI,EAAGA,EAAI2zE,EAAKzvE,OAAS6uE,IAAiB/yE,EAAG,CAGlD,IAAK,IAAImsC,EAAI,EAAGA,EAAI4mC,IAAiB5mC,EACjConC,EAASzqE,MAAY,IAANqjC,GAAW,EAAI,GAAKwnC,EAAK3zE,EAAI+yE,EAAgB5mC,IAIhE,MAAM2jC,GAAW9vE,EAAI,IAAM2zE,EAAKzvE,OAAS6uE,GACnCnwC,EAAQ+wC,EAAK3zE,EAAI+yE,GACjBlwC,EAAQ8wC,EAAK3zE,EAAI+yE,EAAgB,GACjChD,EAAQ4D,EAAK7D,EAAUiD,GACvB/C,EAAQ2D,EAAK7D,EAAUiD,EAAgB,GACvCU,IACD7wC,GAAS,GAAKmtC,GAAS,GACvBntC,GAAShwB,GAAWm9D,GAASn9D,GAC7BiwB,GAAS,GAAKmtC,GAAS,GACvBntC,GAASjwB,GAAWo9D,GAASp9D,GAGlC2gE,EAASzqE,KACL2qE,EAAgBviB,EAAe4e,GAAW,EAC1CtjD,GAAiBinD,EAAgBviB,EAAe4e,GAAW,IAKvE,IAEI,MAAM8D,EAAY,UAAOL,EAAUG,EAAOllD,GACpCqlD,EAAsBN,EAASrvE,OAASsqB,EAG9C,GAAIwkD,EAAa,CACb,MAAMlf,EAAO,IAAI9xD,EAAM8xE,eAEjBC,EAAgB,GAChBC,EAAU,GACVC,EAAY,GACZC,EAAY,GAIlB,IAAK,IAAIl0E,EAAI,EAAGA,EAAIuzE,EAASrvE,OAAQlE,GAAKwuB,EAAc,CACpD,MAAMtb,EAAW,EAAAoP,WACb1P,EACAhQ,KAAK8mE,aACL/B,EAAM/9D,IAAI2pE,EAASvzE,GAAIuzE,EAASvzE,EAAI,KACpC,EACA4nE,GAEJmM,EAAcjrE,KAAKoK,EAAS7K,EAAG6K,EAAS5K,EAAG,QACtB1D,IAAjB2tE,GACAyB,EAAQlrE,KAAKyqE,EAASvzE,EAAI,GAAIuzE,EAASvzE,EAAI,IAE/Ci0E,EAAUnrE,KAAKyqE,EAASvzE,EAAI+yE,IAC5BmB,EAAUprE,KAAKyqE,EAASvzE,EAAI+yE,EAAgB,IAIhD,MAAM9f,EAAU,IAAIjxD,EAAMmyE,gBACtB,IAAIr9C,aAAai9C,GACjB,GAGJ,IAAItoC,EADJqoB,EAAKsgB,aAAa,WAAYnhB,QAETruD,IAAjB2tE,IACA9mC,EAAS,IAAIzpC,EAAMmyE,gBAAgB,IAAIr9C,aAAak9C,GAAU,GAC9DlgB,EAAKsgB,aAAa,KAAM3oC,IAE5B,MAAME,EAAW,IAAI3pC,EAAMmyE,gBAAgB,IAAIr9C,aAAam9C,GAAY,GACxEngB,EAAKsgB,aAAa,OAAQzoC,GAC1B,MAAME,EAAW,IAAI7pC,EAAMmyE,gBAAgB,IAAIr9C,aAAao9C,GAAY,GACxEpgB,EAAKsgB,aAAa,OAAQzoC,GAC1B,MAAMxL,EAAQwoC,EAA2BiL,EAAW3gB,EAAQpmB,MAAQ,GAC9Dd,EACa,WAAf5L,EAAM3nB,KACA,IAAIxW,EAAMqyE,sBAAsBl0C,EAAM9R,OAAQ,GAC9C,IAAIrsB,EAAMsyE,sBAAsBn0C,EAAM9R,OAAQ,GACxDylC,EAAK9mB,SAASjB,GAId,MAAMsiB,EAAYzrD,KAAK8mE,aAAal0D,QAAQE,MAC5C,GAAI24C,GAAa,GAAKA,EAAY,EAAG,CACjC,MAAMkmB,EAActoE,KAAKgS,IAAI,EAAG,EAAIowC,IAC9B,OAAEx4C,GAAWjT,KAAK8mE,aACH,IAAI,EAAA8K,sCACrBD,EACA1+D,EACA,EAAA4+D,gBAAgBC,YAChB,EAAA73D,uBAES83D,OAAO7gB,GAIP,IAAI,EAAA8gB,qCACjB5yE,EAAMkJ,UAAUW,SAAS,IACzB,EAAAgR,uBAEK83D,OAAO7gB,GAIhByf,EAASrvE,OAAS,EAClB0vE,EAAU1vE,OAAS,EACnB,IAAK,IAAIlE,EAAI,EAAGA,EAAIizD,EAAQznB,MAAMtnC,OAAQlE,GAAK,EAAG,CAC9C,MAAMwxE,EAAU,EAAAqD,WACZjiE,EACAhQ,KAAK8mE,aACL/B,EAAM/9D,IAAIqpD,EAAQznB,MAAMxrC,GAAIizD,EAAQznB,MAAMxrC,EAAI,KAC9C,EACA4nE,GAEJ2L,EAASzqE,KAAK0oE,EAAQnpE,EAAGmpE,EAAQlpE,QACZ1D,IAAjB2tE,IACAgB,EAASzqE,KAAK2iC,EAAQD,MAAOxrC,EAAI,EAAK,IACtCuzE,EAASzqE,KAAK2iC,EAAQD,MAAOxrC,EAAI,EAAK,EAAI,KAE9CuzE,EAASzqE,KAAK6iC,EAASH,MAAMxrC,EAAI,IACjCuzE,EAASzqE,KAAK+iC,EAASL,MAAMxrC,EAAI,IAGrC,MAAM80E,EAAYhhB,EAAK9nB,WACL,OAAd8oC,GACAlB,EAAU9qE,QAASgsE,EAAUtpC,OAKrCg8B,EAAe59D,IAAI,EAAG,EAAG,GAGzB,IAAK,IAAI5J,EAAI,EAAGA,EAAIuzE,EAASrvE,OAAQlE,GAAKwuB,EAAc,CACpD,EAAAy8C,2BACIr4D,EACAhQ,KAAK8mE,aACL/B,EAAM/9D,IAAI2pE,EAASvzE,GAAIuzE,EAASvzE,EAAI,IACpC6nE,GACA,GAGJ,IAAI9sB,EAAc,EACdsW,IAAyC,IAA3BwhB,IACdtL,EAAe39D,IACX09D,EAAej/D,EAAIw/D,EAAMx/D,EACzBi/D,EAAeh/D,EAAIu/D,EAAMv/D,EACzBg/D,EAAe9+D,EAAIq/D,EAAMr/D,GAE7BuyC,EAAcn4C,KAAK8mE,aAAa5mD,iBAAiBiyD,eAC7CxN,IAGR3kE,KAAKwnE,oBAAsBn+D,KAAKS,IAC5B9J,KAAKwnE,oBACLrvB,EAAc5uB,GAGd6mD,GACAxL,EACK59D,IAAIi+D,EAAMx/D,EAAGw/D,EAAMv/D,EAAGu/D,EAAMr/D,GAC5BzF,IAAIH,KAAKgR,QACTq+C,YAGTwV,EAAavf,KAAKsf,GAAgBnf,eAAej8B,EAAc2uB,GAC/DzY,EAAUx5B,KACN++D,EAAMx/D,EAAIo/D,EAAap/D,EACvBw/D,EAAMv/D,EAAIm/D,EAAan/D,EACvBu/D,EAAMr/D,EAAIi/D,EAAaj/D,QAEN5D,IAAjB2tE,GACAxJ,EAAmBjgE,KAAKyqE,EAASvzE,EAAI,GAAIuzE,EAASvzE,EAAI,IAEtD4C,KAAK4sB,0BACLs5C,EAAQhgE,QAAQ0+D,EAAen7B,WAE/BglB,IACAqW,EAAaxf,KAAKsf,GAAgBnf,eAAel8B,EAAS4uB,GAC1DzY,EAAUx5B,KACN++D,EAAMx/D,EAAIq/D,EAAar/D,EACvBw/D,EAAMv/D,EAAIo/D,EAAap/D,EACvBu/D,EAAMr/D,EAAIk/D,EAAal/D,GAE3BygE,EAAcngE,KACV,EACA,EACA,EACA,EACA4+D,EAAar/D,EAAIo/D,EAAap/D,EAC9Bq/D,EAAap/D,EAAIm/D,EAAan/D,EAC9Bo/D,EAAal/D,EAAIi/D,EAAaj/D,EAC9B,QAEiB5D,IAAjB2tE,GACAxJ,EAAmBjgE,KAAKyqE,EAASvzE,EAAI,GAAIuzE,EAASvzE,EAAI,IAEtD4C,KAAK4sB,0BACLs5C,EAAQhgE,QAAQ0+D,EAAen7B,gBAErBznC,IAAVuT,GACA6wD,EAAOlgE,KAAKqP,EAAMrX,EAAGqX,EAAMd,EAAGc,EAAM7L,EAAG6L,EAAMrX,EAAGqX,EAAMd,EAAGc,EAAM7L,IAM3E,IAAK,IAAItM,EAAI,EAAGA,EAAI4zE,EAAU1vE,OAAQlE,GAAK,EACvC,GAAIqxD,EAAY,CAGZ,MAAMna,EAAKs8B,EAAuC,EAAnBI,EAAU5zE,EAAI,GAAS,EAChDg3C,EAAKw8B,EAAuC,EAAnBI,EAAU5zE,EAAI,GAAS,EAChDg1E,EAAKxB,EAAuC,EAAnBI,EAAU5zE,EAAI,GAAS,EACtDisC,EAAQnjC,KAAKouC,EAAIF,EAAIg+B,OAClB,CACH,MAAM99B,EAAKs8B,EAAoBI,EAAU5zE,EAAI,GACvCg3C,EAAKw8B,EAAoBI,EAAU5zE,EAAI,GACvCg1E,EAAKxB,EAAoBI,EAAU5zE,EAAI,GAC7CisC,EAAQnjC,KAAKouC,EAAIF,EAAIg+B,GAKzB/B,GACArwE,KAAKqyE,SACDzB,EACAK,EACArlD,EACAukD,EACAzwC,EACAixC,EACArK,EACA7X,EACAghB,EAAyB5lD,UACzB4lD,EAAyB3lD,UAG7B2kC,GACAzuD,KAAKsyE,SACD1B,EACAK,EACArlD,EACAukD,EACAQ,EACAtnC,GAGV,MAAOprB,GACL1B,EAAOsB,MAAM,8BAA+BI,IAIhDje,KAAKysB,4BACLi7C,EAAYrW,SAASnrD,KAAKhG,EAAQkC,IAAIqO,SACtCi3D,EAAYf,cAAczgE,KAAKuqE,IAGnC,MAAMxmC,EAAQZ,EAAQ/nC,OAASmvE,EAC3BxmC,EAAQ,GACRW,EAAO1kC,KAAK,CACR6rB,MAAO0+C,EACPxmC,QACAzoB,UAAWwuC,KAMnB,mBACJhwD,KAAK+mE,cAAc1mE,QAAQ,CAACqnE,EAAa6K,KACrC,GAAqC,IAAjC7K,EAAYhoC,UAAUp+B,OACtB,OAGJ,IACKtB,KAAKqsB,oBAAoBoB,YAC1BztB,KAAKqsB,oBAAoBoB,WAAWnsB,QAAUixE,EAE9C,MAAM,IAAI9uE,MAAM,2BAGpB,MAAM+d,EAAYxhB,KAAKqsB,oBAAoBoB,WAAW8kD,GACtD,QAAkBvwE,IAAdwf,EACA,OAGJ,MAAMgxD,EAAmB,IAAIt+C,aAAawzC,EAAYhoC,WAEtD,GAAIgoC,EAAYnB,MAAMjlE,OAAS,GAAK,EAAA0zB,gBAAgBxT,GAahD,YAZAxhB,KAAKinE,iBAAiB/gE,KAAK,CACvBw5B,UAAW,CACP/hC,KAAM,WACNiY,KAAM,QACN6V,OAAQ+mD,EAAiB/mD,OACzBkkC,UAAW,GAEf4W,MAAOmB,EAAYnB,MACnB/kD,UAAW+wD,EACX9L,cAAeiB,EAAYjB,cAC3BpV,SAAUqW,EAAYrW,WAK9B,GAAIqW,EAAYnB,MAAMjlE,OAAS,GAAK,EAAA2zB,eAAezT,GAe/C,YAdAxhB,KAAKonE,gBAAgBlhE,KAAK,CACtBw5B,UAAW,CACP/hC,KAAM,WACNiY,KAAM,QACN6V,OAAQ+mD,EAAiB/mD,OACzBkkC,UAAW,GAEf4W,MAAOmB,EAAYnB,MACnB/kD,UAAW+wD,EACX9L,cAAeiB,EAAYjB,cAC3BC,cAAegB,EAAYhB,cAC3BrV,SAAUqW,EAAYrW,SACtBuV,iBAAkBc,EAAYd,mBAKJ,IAA9Bc,EAAY98B,OAAOtpC,QAGnBomE,EAAY98B,OAAO1kC,KAAK,CACpB6rB,MAAO,EACPkY,MAAOuoC,EAAiBlxE,OAAS,EACjCkgB,UAAW+wD,IAInB,MAAMtiB,EAAsC,CACxC,CACItyD,KAAM,WACN8tB,OAAQ+mD,EAAiB/mD,OACzBkkC,UAAW,EACX/5C,KAAM,UAIRsY,EAAqB,CACvBtY,KAAM8xD,EAAY9xD,KAClBq6C,mBACArlB,OAAQ88B,EAAY98B,QAGxB,GAAI88B,EAAYxB,QAAQ5kE,OAAS,EAAG,CAChC,MAAM4kE,EAAU,IAAIhyC,aAAawzC,EAAYxB,SAC7C,EAAAxxD,OACIwxD,EAAQ5kE,SAAWkxE,EAAiBlxE,OACpC,gFAIJ2uD,EAAiB/pD,KAAK,CAClBvI,KAAM,SACN8tB,OAAQy6C,EAAQz6C,OAChBkkC,UAAW,EACX/5C,KAAM,UAId,GAAI8xD,EAAYtB,OAAO9kE,OAAS,EAAG,CAC/B,MAAM8kE,EAAS,IAAIlyC,aAAawzC,EAAYtB,QAC5C,EAAA1xD,OACI0xD,EAAO9kE,SAAWkxE,EAAiBlxE,OACnC,+EAIJ2uD,EAAiB/pD,KAAK,CAClBvI,KAAM,QACN8tB,OAAQ26C,EAAO36C,OACfkkC,UAAW,EACX/5C,KAAM,UAId,MAAM68D,EAAgB/K,EAAYhoC,UAAUp+B,OAAS,EAErD,GAAIomE,EAAYvB,mBAAmB7kE,OAAS,EAAG,CAC3C,MAAMoxE,EAAgBhL,EAAYvB,mBAAmB7kE,OAAS,EAC9D,EAAAoT,OACIg+D,IAAkBD,EAClB,0FAIJ,MAAMtM,EAAqB,IAAIjyC,aAAawzC,EAAYvB,oBACxDlW,EAAiB/pD,KAAK,CAClBvI,KAAM,KACN8tB,OAAQ06C,EAAmB16C,OAC3BkkC,UAAW,EACX/5C,KAAM,UAId,GAAI8xD,EAAYrB,cAAc/kE,OAAS,EAAG,CACtC,MAAM+kE,EAAgB,IAAInyC,aAAawzC,EAAYrB,eACnD,EAAA3xD,OACI2xD,EAAc/kE,OAAS,GAAMkxE,EAAiBlxE,OAAS,EACvD,sFAIJ2uD,EAAiB/pD,KAAK,CAClBvI,KAAM,gBACN8tB,OAAQ46C,EAAc56C,OACtBkkC,UAAW,EACX/5C,KAAM,UAIV8xD,EAAYr+B,QAAQ/nC,OAAS,IAC7B4sB,EAASqP,MAAQwoC,EAA2B2B,EAAYr+B,QAASopC,EAAgB,IAGjF/K,EAAYpB,YAAYhlE,OAAS,IACjC4sB,EAASkjC,UAAY2U,EACjB2B,EAAYpB,YACZmM,EAAgB,EAChB,cAIRvkD,EAASy4C,cAAgBe,EAAYf,cACrCz4C,EAASmjC,SAAWqW,EAAYrW,SAEhCrxD,KAAKgnE,aAAa9gE,KAAKgoB,KAIvB,aAAaykD,GACjBA,EAAWtyE,QAAQ4uE,IACf,MAAM,SAAE0B,EAAQ,QAAEtnC,GAAY4lC,EAAcjC,MACtCxrD,EAAYytD,EAAcztD,UAC1BiK,EAAS,IAAIyI,aAAay8C,GAAUllD,OACpC8R,EAAQwoC,EACV18B,EACAsnC,EAASrvE,OAAS2tE,EAAcjC,MAAM/gD,OAAS,GAE7CgI,EAAmC,CACrCre,KAAM,QACNqW,OAAQgjD,EAAcjC,MAAM/gD,OAC5BR,SACA0kC,WAAY8e,EAAcjC,MAAM/c,kBAE9B/hC,EAAqB,CACvBtY,KAAM,EAAA4e,aAAa+6C,UACnBhyC,QACA4zB,4BAA6B,CAACl9B,GAC9B2W,OAAQ,CAAC,CAAE7Y,MAAO,EAAGkY,MAAOZ,EAAQ/nC,OAAQkgB,cAC5CyuC,iBAAkB,GAClB0W,cAAesI,EAActI,cAC7BtV,SAAU4d,EAAc5d,UAG5BrxD,KAAKgnE,aAAa9gE,KAAKgoB,KAIvB,mBAAmBykD,GACvBA,EAAWtyE,QAAQ4uE,IACf,MAAM,SAAE0B,EAAQ,QAAEtnC,GAAY4lC,EAAcjC,MACtCxrD,EAAYytD,EAAcztD,UAE1ByS,EAAwB,CAC1BxI,OAFW,IAAIyI,aAAay8C,GAAUllD,OAGtCkkC,UAAW,EACX/5C,KAAM,QACNjY,KAAM,YAEJuwB,EAAqB,CACvBtY,KAAM,EAAA4e,aAAa3F,KACnB0O,MAAOwoC,EAA2B18B,EAASsnC,EAASrvE,OAAS2yB,EAAK07B,UAAY,GAC9EM,iBAAkB,CAACh8B,GACnB2W,OAAQ,CAAC,CAAE7Y,MAAO,EAAGkY,MAAOZ,EAAQ/nC,OAAQkgB,cAC5CmlD,cAAesI,EAActI,cAC7BtV,SAAU4d,EAAc5d,UAG5BrxD,KAAKgnE,aAAa9gE,KAAKgoB,KAIvB,wBAAwBqP,EAAe3nB,GAC3C,IAAIg9D,EAAU5yE,KAAK+mE,cAAc9oE,IAAIs/B,GAErC,YAAgBv7B,IAAZ4wE,EACIA,EAAQh9D,OAASA,OACjB2G,EAAOsB,MAAM,gDAAgD,EAAA2W,aAAa5e,oCAC5D,EAAA4e,aAAao+C,EAAQh9D,UAGhCg9D,GAEXA,EAAU,IAAI3M,EAAYrwD,GAC1B5V,KAAK+mE,cAAc//D,IAAIu2B,EAAOq1C,GACvBA,GAGH,qBAAqBxwE,GACzB,MAAMu8B,EAASv8B,EAAIuO,OAAO,UACJ,iBAAXguB,GAAkC,KAAXA,IACzB3+B,KAAKunE,UAAU7zB,SAAS/U,IACzB3+B,KAAKunE,UAAUrhE,KAAKy4B,IAKxB,mBAAmBppB,GACvB,MAAwB,iBAAVA,GAAsBA,EAAMjU,OAAS,EAG/C,SACJuxE,EACAC,EACAlnD,EACAukD,EACAzwC,EACAixC,EACAtnC,EACAolB,EACAskB,EACAjpD,GAEA,MAAMkpD,EAAW,IAAI5zE,EAAMuG,QACrBstE,EAAW,IAAI7zE,EAAMuG,QAC3B,IAAIutE,EACAC,EACAC,EAAiB,EACjBC,EAAgB,EAEpB,KAAOD,EAAiBN,GAAoB,CACxC,KAAOM,IAAmBF,GAAiB,MACflxE,IAApBkxE,IACAA,EAAkBE,GAElBA,EAAiBN,IACjBO,EAAgBhqE,KAAKS,IAAIupE,EAAeD,IAG5C,MAAME,EAAiB3C,EAASyC,EAAiBxnD,EAAeukD,GAChE,GAAImD,EAAiB,EACjB,MAEA,GAAK7kB,EAiBD,IAXqB,IAAjBskB,GACA1pC,EAAQnjC,KACJ2sE,EAAqC,EAAjBO,EACpBP,EAAqC,EAAjBS,GAG5BjqC,EAAQnjC,KACJ2sE,EAAqC,EAAjBO,EAAqB,EACzCP,EAAqC,EAAjBS,EAAqB,QAG5BtxE,IAAb8nB,GACA,QAAuB9nB,IAAnBmxE,EAA8B,CAC9B,MAAMI,EAAqD,GAA1CV,EAAqC,EAAjBM,GAC/BK,EAAqD,GAA1CX,EAAqC,EAAjBO,GAC/BK,EAAqD,GAA1CZ,EAAqC,EAAjBS,GACrCN,EACKhsE,IACG04B,EAAU8zC,GAAW9zC,EAAU6zC,GAC/B7zC,EAAU8zC,EAAU,GAAK9zC,EAAU6zC,EAAU,GAC7C7zC,EAAU8zC,EAAU,GAAK9zC,EAAU6zC,EAAU,IAEhDlkB,YACL4jB,EACKjsE,IACG04B,EAAU+zC,GAAW/zC,EAAU8zC,GAC/B9zC,EAAU+zC,EAAU,GAAK/zC,EAAU8zC,EAAU,GAC7C9zC,EAAU+zC,EAAU,GAAK/zC,EAAU8zC,EAAU,IAEhDnkB,YACD2jB,EAASjuB,IAAIkuB,IAAanpD,GAC1Buf,EAAQnjC,KACJ2sE,EAAqC,EAAjBO,EACpBP,EAAqC,EAAjBO,EAAqB,SAKrD/pC,EAAQnjC,KACJ2sE,EAAqC,EAAjBO,EACpBP,EAAqC,EAAjBO,EAAqB,QA7CjD/pC,EAAQnjC,KACJ2sE,EAAoBO,EACpBP,EAAoBS,GA+C5BH,EAAiBC,EACjBA,EAAiBE,EAGzBF,EAAiBC,EAAgB,EACjCH,OAAkBlxE,EAClBmxE,OAAiBnxE,GAIjB,SACJ6wE,EACAC,EACAlnD,EACAukD,EACAQ,EACAtnC,GAEA,IAAI6pC,EACAE,EAAiB,EACjBC,EAAgB,EAEpB,KAAOD,EAAiBN,GAAoB,CACxC,KAAOM,IAAmBF,GAAiB,MACflxE,IAApBkxE,IACAA,EAAkBE,GAElBA,EAAiBN,IACjBO,EAAgBhqE,KAAKS,IAAIupE,EAAeD,IAG5C,MAAME,EAAiB3C,EAASyC,EAAiBxnD,EAAeukD,EAAgB,GAChF,GAAImD,EAAiB,EACjB,MAEAjqC,EAAQnjC,KACJ2sE,EAAqC,EAAjBO,EACpBP,EAAqC,EAAjBO,EAAqB,EACzCP,EAAqC,EAAjBS,EAAqB,EACzCT,EAAqC,EAAjBS,EAAqB,EACzCT,EAAqC,EAAjBS,EACpBT,EAAqC,EAAjBO,GAG5BA,EAAiBE,EAErBF,EAAiBC,EAAgB,EACjCH,OAAkBlxE,GAIlB,2BAA2B9C,EAAkBuoB,GACjD,IAAIgiD,EAAW5/D,IACX6pE,EAAa,EACjB,IAAK,IAAIt2E,EAAI,EAAGA,EAAIqqB,EAAKnmB,OAAQlE,GAAK,EAAG,CAErCwoE,EAAQ5+D,IACJu+D,EAAUv+D,IAAIygB,EAAKrqB,GAAIqqB,EAAKrqB,EAAI,GAAIqqB,EAAKrqB,EAAI,IAC7CooE,EAAUx+D,IAAIygB,EAAKrqB,EAAI,GAAIqqB,EAAKrqB,EAAI,GAAIqqB,EAAKrqB,EAAI,KAErDwoE,EAAQ+N,oBAAoBz0E,GAAG,EAAMumE,GAIrC,MAAMmO,EAAOnO,EAAUiE,WAAWxqE,GAC9B00E,EAAOnK,IACP/D,EAAUpgB,KAAKmgB,GACfE,EAAUrgB,KAAKigB,GACfkE,EAAWmK,EACXF,EAAajsD,EAAKrqB,EAAI,IAI9B,OAAOs2E,EAAahO,EAAUgE,WAAW/D,M,gKCzgEjD,aACA,OAGMkO,EAAO,IAAIz0E,EAAMuG,QACjBmuE,EAAY,IAAI10E,EAAMuG,QACtBouE,EAAc,IAAI30E,EAAMuG,QACxBquE,EAAc,IAAI50E,EAAMuG,QACxBsuE,EAAe,IAAI70E,EAAMuG,QAsBzBuuE,EAA2C,CAC7C/jB,WAAY,CAKR,CAAExyD,KAAM,iBAAkBusC,SAAU,EAAGlT,OAAQ,GAC/C,CAAEr5B,KAAM,WAAYusC,SAAU,EAAGlT,OAAQ,GACzC,CAAEr5B,KAAM,UAAWusC,SAAU,EAAGlT,OAAQ,GACxC,CAAEr5B,KAAM,YAAausC,SAAU,EAAGlT,OAAQ,IAE9C/K,OAAQ,IAINkoD,EAAgD,CAClDhkB,WAAY,CACR,CAAExyD,KAAM,KAAMusC,SAAU,EAAGlT,OAAQk9C,EAAuBjoD,QAC1D,CAAEtuB,KAAM,SAAUusC,SAAU,EAAGlT,OAAQk9C,EAAuBjoD,OAAS,IAE3EA,OAAQ,GAINmoD,EAA+C,CACjDjkB,WAAY,IAAI+jB,EAAuB/jB,cAAegkB,EAA4BhkB,YAClFlkC,OAAQioD,EAAuBjoD,OAASkoD,EAA4BloD,QAOlEooD,EAA8C,CAChDlkB,WAAY,CACR,CAAExyD,KAAM,iBAAkBusC,SAAU,EAAGlT,OAAQ,GAC/C,CAAEr5B,KAAM,WAAYusC,SAAU,EAAGlT,OAAQ,GACzC,CAAEr5B,KAAM,cAAeusC,SAAU,EAAGlT,OAAQ,GAC5C,CAAEr5B,KAAM,UAAWusC,SAAU,EAAGlT,OAAQ,GACxC,CAAEr5B,KAAM,YAAausC,SAAU,EAAGlT,OAAQ,KAE9C/K,OAAQ,IAINqoD,EAAkD,CACpDnkB,WAAY,IACLkkB,EAA0BlkB,cAC1BgkB,EAA4BhkB,YAEnClkC,OAAQooD,EAA0BpoD,OAASkoD,EAA4BloD,QAM3E,MAAasoD,EAAb,cACI,KAAA5D,SAAqB,GACrB,KAAA9oD,aAAyB,GACzB,KAAAwhB,QAAoB,IAGxB,SAASmrC,EAAoBnF,EAA2BoF,GACpD,OAAIA,EACOpF,EAAmBiF,EAAgCD,EAEnDhF,EAAmB+E,EAA6BF,EAe/D,SAAgBQ,EACZ1jE,EACAu4D,EACAh3D,EACAk2D,EACAD,EACApC,EACAl4C,EAAW,IAAIqmD,EACfE,GAAyB,GAEzB,GAAwB,IAApBlL,EAASjoE,OACT,OAAO4sB,EAGX,MAAMjC,EAASuoD,OAA4BxyE,IAARwmE,EAAmBiM,GAAexoD,OAE/D29C,EAAaL,EAASjoE,OAAS,EAC/BqzE,EAAW,IAAIvzE,MAAcwoE,GAC7BgL,EAAW,IAAIxzE,MAAcmoE,EAASjoE,OAAS,GAC/CuzE,EAAa3mD,EAASyiD,SAASrvE,OAAS2qB,EAExC6oD,OAAgC9yE,IAAZymE,GAAyBA,EAAQnnE,OAAS,EAC9DyzE,OAAuB/yE,IAARwmE,GAAqBA,EAAIlnE,OAAS,EACjDumB,OAA0B7lB,IAAXokE,GAAwBA,EAAO9kE,QAAUioE,EAASjoE,OAEvE,EAAAoT,QAAQogE,GAAqBrM,EAASnnE,SAAWsoE,GACjD,EAAAl1D,QAAQqgE,GAAgBvM,EAAKlnE,OAAS,IAAMsoE,GAC5C,EAAAl1D,QAAQmT,GAAgBu+C,EAAQ9kE,SAAWioE,EAASjoE,QAGpD,IAAI0zE,EApIe,GAqInBL,EAAS,GAAKK,EACd,IAAK,IAAI53E,EAAI,EAAGA,EAAIwsE,EAAa,IAAKxsE,EAAG,CACrC,IAAI63E,EAAY,EAChB,IAAK,IAAI1rC,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,MAAM7rC,EAAI6rE,EAAmB,GAATnsE,EAAI,GAASmsC,GAAKggC,EAAa,EAAJnsE,EAAQmsC,GACvDqrC,EAAa,EAAJx3E,EAAQmsC,GAAK7rC,EACtBu3E,GAAav3E,EAAIA,EAGrBs3E,GADY3rE,KAAKqtB,KAAKu+C,GAEtBN,EAASv3E,EAAI,GAAK43E,EAGtB,MAAME,EAAeJ,EACfzrE,KAAKitB,IAAImyC,EAASA,EAASnnE,OAAS,GAAKmnE,EAAS,IAClD,EACAkB,EAAagL,EAASA,EAASrzE,OAAS,GAAK4zE,EAGnD,GAAIJ,EACA,IAAK,IAAI13E,EAAI,EAAGA,EAAIwsE,IAAcxsE,EAC9Bu3E,EAASv3E,GAAKqrE,EAASrrE,GAAKusE,EA1JjB,GA+JnB,IAAIwL,GAAW,EACf,IAAK,IAAI5rC,EAAI,EAAGA,EAAI,IAAKA,EACrB4rC,EAAWA,GAAY5L,EAAShgC,KAAOggC,EAASA,EAASjoE,OAAS,EAAIioC,GAG1E,MAAM6rC,EAAwB,GAExBC,EAAgB,CAClBj4E,EACAk4E,EACAC,EACAC,EACAC,KAEAL,EAAY9zE,OAAS,EAGrB4sB,EAASyiD,SAASzqE,KAAKsvE,GAA2B,EAAlBC,EAAqB9L,GACrDyL,EAAYlvE,KAAKsvE,EAA0B,EAAjBC,EAAoB9L,GAG9C,IAAK,IAAIpgC,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,GAAKkrC,EAGE,CACH,MAAMiB,EAAWrsE,KAAKssE,OAAOpM,EAAa,EAAJnsE,EAAQmsC,IACxCqsC,EAAUrM,EAAa,EAAJnsE,EAAQmsC,GAAKmsC,EACtCxnD,EAASyiD,SAASzqE,KAAKwvE,EAAUE,GACjCR,EAAYlvE,KAAKwvE,EAAUE,QAN3B1nD,EAASyiD,SAASzqE,KAAKqjE,EAAa,EAAJnsE,EAAQmsC,IACxC6rC,EAAYlvE,KAAKqjE,EAAa,EAAJnsE,EAAQmsC,IAOtCuqC,EAAU+B,aAAatsC,EAAGggC,EAAa,EAAJnsE,EAAQmsC,IAI/C,IAAK,IAAIA,EAAI,EAAGA,EAAI,IAAKA,EACrBwqC,EAAY8B,aAAatsC,EAAGqrC,EAASU,EAAK/rC,IAC1CyqC,EAAY6B,aAAatsC,EAAGqrC,EAASW,EAAKhsC,IAE9CwqC,EAAY1kB,YACZnhC,EAASyiD,SAASzqE,KAAK6tE,EAAYtuE,EAAGsuE,EAAYruE,EAAGquE,EAAYnuE,GACjEwvE,EAAYlvE,KAAK6tE,EAAYtuE,EAAGsuE,EAAYruE,EAAGquE,EAAYnuE,GAC3DkuE,EAAU3zE,IAAI6Q,GACduB,EAAWujE,cAAchC,EAAWA,GACpC,MAAMiC,EA8Qd,SACIl3E,EACA61C,EACAC,EACAqhC,GAEA,IAAID,EAAQ,EACPrhC,EAAGulB,OAAOtlB,KACXohC,EAAQ1sE,KAAKgvC,KAAK3D,EAAGqQ,IAAIpQ,IAAOtrC,KAAKD,KAAKvK,EAAEkmD,IAAI8uB,EAAKvuB,KAAK5Q,GAAIuhC,MAAMthC,KAChEpoC,OAAOrD,MAAM6sE,KACbA,EAAQ,IAQhB,OALAC,EAAG1wB,KAAK5Q,GACHv0C,IAAIw0C,GACJ0a,YACA4mB,MAAMp3E,GACNwwD,YACE0mB,EAhSWG,CACVpC,EACAC,EACAC,EAAY3kB,YACZ4kB,GAEJ/lD,EAASyiD,SAASzqE,KAAK+tE,EAAaxuE,EAAGwuE,EAAavuE,EAAGuuE,EAAaruE,EAAGmwE,GACvEX,EAAYlvE,KAAK+tE,EAAaxuE,EAAGwuE,EAAavuE,EAAGuuE,EAAaruE,EAAGmwE,GAE7DhB,IAEA7mD,EAASyiD,SAASzqE,KAAKsiE,EAAS,EAAJprE,GAAQorE,EAAS,EAAJprE,EAAQ,IACjDg4E,EAAYlvE,KAAKsiE,EAAS,EAAJprE,GAAQorE,EAAS,EAAJprE,EAAQ,IAE3C8wB,EAASyiD,SAASzqE,KAAK4tE,EAAUruE,EAAGquE,EAAUpuE,EAAGouE,EAAUluE,GAC3DwvE,EAAYlvE,KAAK4tE,EAAUruE,EAAGquE,EAAUpuE,EAAGouE,EAAUluE,IAGzDsoB,EAASyiD,SAASzqE,QAAQkvE,GAGtBvtD,IACAqG,EAASrG,aAAa3hB,KAAKkgE,EAAY,EAAJhpE,GAAQgpE,EAAY,EAAJhpE,EAAQ,GAAIgpE,EAAY,EAAJhpE,EAAQ,IAC/E8wB,EAASrG,aAAa3hB,KAAKkgE,EAAY,EAAJhpE,GAAQgpE,EAAY,EAAJhpE,EAAQ,GAAIgpE,EAAY,EAAJhpE,EAAQ,MAIvF,IAAK,IAAIA,EAAI,EAAGA,EAAIwsE,IAAcxsE,EAAG,CAEjC,MAAMk4E,EAAKH,GAAkB,IAAN/3E,EAAUw3E,EAAStzE,OAAS,EAAyB,EAArB+H,KAAKS,IAAI,EAAG1M,EAAI,GACjEm4E,EAAKJ,GAAY/3E,IAAMwsE,EAAa,EAAI,EAAIvgE,KAAKO,IAAQ,EAAJxM,EAAOw3E,EAAStzE,OAAS,GAGhFlE,EAAI,GACJi4E,EAAcj4E,EAAGk4E,EAAIC,EAAIZ,EAASv3E,EAAI,GAAIu3E,EAASv3E,IAInDA,EAAI,EAAIwsE,GACRyL,EACIj4E,EACAk4E,EACAC,GAC8C,EAA9CZ,EAAStrE,KAAKO,IAAIxM,EAAGu3E,EAASrzE,OAAS,IACvCqzE,EAAStrE,KAAKO,IAAIxM,EAAI,EAAGu3E,EAASrzE,OAAS,KAMvD,IAAK,IAAIlE,EAAI,EAAGA,EAAIwsE,EAAa,IAAKxsE,EAAG,CACrC,MAAMu4C,EAAOk/B,EAAiB,EAAJz3E,EAC1B8wB,EAASmb,QAAQnjC,KAAKyvC,EAAMA,EAAO,EAAGA,EAAO,EAAGA,EAAO,EAAGA,EAAO,EAAGA,EAAO,GAG/E,OAAOznB,EAUX,SAAgBioD,EACZ5M,EACAnD,EACAl4C,EAAW,IAAIqmD,GAEf,GAAwB,IAApBhL,EAASjoE,OACT,OAAO4sB,EAGX,MAAM07C,EAAaL,EAASjoE,OAAS,EACrC,IAAIi8B,EAAQrP,EAASyiD,SAASrvE,OAAS,EAEvC,MAAMumB,OAA0B7lB,IAAXokE,GAAwBA,EAAO9kE,QAAUioE,EAASjoE,OAEvE,IAAK,IAAIlE,EAAI,EAAGA,EAAIwsE,IAAcxsE,EAAGmgC,IAAS,CACtCngC,EAAI,GACJ8wB,EAASmb,QAAQnjC,KAAKq3B,GAEtBngC,EAAIwsE,EAAa,GACjB17C,EAASmb,QAAQnjC,KAAKq3B,GAE1B,IAAK,IAAIgM,EAAI,EAAGA,EAAI,IAAKA,EACrBrb,EAASyiD,SAASzqE,KAAKqjE,EAAa,EAAJnsE,EAAQmsC,IACpC1hB,GACAqG,EAASrG,aAAa3hB,KAAKkgE,EAAY,EAAJhpE,EAAQmsC,IAKvD,OAAOrb,EA5NX,iBAyBA,uBAsKA,6BAmCA,MAAaohD,EAiET,YACaD,GAA4B,EAC5BoF,GAAyB,EACzB2B,GAAoB,GAFpB,KAAA/G,mBACA,KAAAoF,gBACA,KAAA2B,WAETp2E,KAAKq2E,WAAa,IAAI9B,EA1D1B,sBACI5D,EACAvK,EACA/8B,EACAnb,EACAmhD,GAA4B,EAC5BoF,GAAgB,EAChB2B,GAAW,GAEX,GAAIA,EAYA,OAXAloD,EAASsjD,aACL,WACA,IAAIpyE,EAAMmyE,gBAAgB,IAAIr9C,aAAay8C,GAAW,IAEtDvK,EAAO9kE,SAAWqvE,EAASrvE,QAC3B4sB,EAASsjD,aACL,QACA,IAAIpyE,EAAMmyE,gBAAgB,IAAIr9C,aAAakyC,GAAS,IAG5Dl4C,EAASkc,SAAS,IAAIhrC,EAAMmyE,gBAAgB,IAAIn9C,YAAYiV,GAAU,IAC/Dnb,EACJ,CACH,MAAMooD,EAAmB9B,EAAoBnF,EAAkBoF,GAEzDhpD,EAAS,IAAIrsB,EAAMm3E,kBACrB,IAAIriD,aAAay8C,GACjB2F,EAAiBrqD,QAoBrB,OAlBAqqD,EAAiBnmB,WAAW9vD,QAAQm2E,IAChC,MAAMxlB,EAAY,IAAI5xD,EAAMq3E,2BACxBhrD,EACA+qD,EAAMtsC,SACNssC,EAAMx/C,QACN,GAEJ9I,EAASsjD,aAAagF,EAAM74E,KAAMqzD,KAElCoV,EAAO9kE,SAAWqvE,EAASrvE,QAC3B4sB,EAASsjD,aACL,QACA,IAAIpyE,EAAMmyE,gBAAgB,IAAIr9C,aAAakyC,GAAS,IAI5Dl4C,EAASkc,SAAS,IAAIhrC,EAAMmyE,gBAAgB,IAAIn9C,YAAYiV,GAAU,IAE/Dnb,GAiBf,QACIluB,KAAKq2E,WAAW1F,SAAW,GAC3B3wE,KAAKq2E,WAAWxuD,aAAe,GAC/B7nB,KAAKq2E,WAAWhtC,QAAU,GAY9B,IACIr4B,EACAgb,EACAzZ,EACAk2D,EACAD,EACApC,GAiBA,OAfKpmE,KAAKo2E,SAaND,EAAyBnqD,EAAQo6C,EAAQpmE,KAAKq2E,aAZ9C,EAAA3hE,QAAQ1U,KAAKqvE,uBAA4BrtE,IAARwmE,GACjCkM,EACI1jE,EACAgb,EACAzZ,EACAk2D,EACAD,EACApC,EACApmE,KAAKq2E,WACLr2E,KAAKy0E,gBAKNz0E,KAMX,eACI,OAAOA,KAAKq2E,WAAW1F,SAM3B,mBACI,OAAO3wE,KAAKq2E,WAAWxuD,aAM3B,cACI,OAAO7nB,KAAKq2E,WAAWhtC,QAM3B,uBACI,OAAOmrC,EAAoBx0E,KAAKqvE,iBAAkBrvE,KAAKy0E,eAAetkB,WAM1E,aACI,OAAOqkB,EAAoBx0E,KAAKqvE,iBAAkBrvE,KAAKy0E,eAAexoD,OAM1E,eAAeiC,GAIX,YAHiBlsB,IAAbksB,IACAA,EAAW,IAAI9uB,EAAM8xE,gBAElB5B,EAAUoH,eACb12E,KAAKq2E,WAAW1F,SAChB3wE,KAAKq2E,WAAWxuD,aAChB7nB,KAAKq2E,WAAWhtC,QAChBnb,EACAluB,KAAKqvE,iBACLrvE,KAAKy0E,gBArKjB,e,kKCzTA,aAEMkC,EAAS,IAAIv3E,EAAMuG,QAAQ,EAAG,EAAG,GACjCixE,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACzBC,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGjDC,EAAOztE,KAAKkP,GADQ,EAa1B,SAASwzD,EACLtmE,EACAC,EACAqxE,EACA50B,EACAwuB,EACAtnC,GAEA,MAAMwrC,EAAalE,EAASrvE,OAAS,EAGrCqvE,EAASzqE,KAAKT,EAAGC,EAAG,GAEpB,IAAK,IAAItI,EAAI,EAAGA,EAAI45E,IAAyB55E,EAAG,CAC5C,MAAM24E,EAAQe,EAAO15E,EAAIiM,KAAKkP,GAAK,EAAIw+D,EACvCpG,EAASzqE,KAAKT,EAAI08C,EAAS94C,KAAK0V,IAAIg3D,GAAQrwE,EAAIy8C,EAAS94C,KAAKgR,IAAI07D,GAAQ,GAE1E1sC,EAAQnjC,KACJ2uE,EACAA,EAAaz3E,EAAI,EACjBy3E,GAAez3E,EAAI,GAAK,EAA2B,IAW/D,2BAAgC4oB,GAC5B,OAAOgxD,GAaX,2BACIhrD,EACAra,EACAg/D,EACAtnC,EACA4tC,GAAkB,EAClBC,EAAgBD,GAEhB,GAAIjrD,EAAO1qB,OAAS,EAChB,OAIJ,MAAM61E,EAAW,IAAI/3E,EAAMoG,QAE3B,GAAIyxE,EAAiB,CAEjB,MAAMF,EACgB,IAAlB/qD,EAAO1qB,OACD61E,EAASnwE,IAAIglB,EAAO,GAAKA,EAAO,GAAIA,EAAO,GAAKA,EAAO,IAAI+pD,QAC3D,EAEVhK,EAAU//C,EAAO,GAAIA,EAAO,GAAI+qD,EAAWplE,EAAOg/D,EAAUtnC,GAGhE,MAAMwrC,EAAalE,EAASrvE,OAAS,EAG/B81E,EAAS,IAAIh4E,EAAMuG,QACnBzG,EAAI,IAAIE,EAAMuG,QACd9G,EAAI,IAAIO,EAAMuG,QACdqwE,EAAK,IAAI52E,EAAMuG,QACf0xE,EAAY,IAAIj4E,EAAMuG,QACtB2E,EAAK,IAAIlL,EAAMuG,QACf4E,EAAK,IAAInL,EAAMuG,QACf2xE,EAAK,IAAIl4E,EAAMuG,QACf4xE,EAAK,IAAIn4E,EAAMuG,QAEfuZ,EAAI8M,EAAO1qB,OAAS,EAE1B,IAAIgtD,EAAe,EACnB,IAAK,IAAIlxD,EAAI,EAAGA,EAAI8hB,IAAK9hB,EAAG,CACxB,IAAIo6E,GAAW,EAGf,GAFAt4E,EAAE8H,IAAIglB,EAAW,EAAJ5uB,GAAQ4uB,EAAW,EAAJ5uB,EAAQ,GAAI4uB,EAAW,EAAJ5uB,EAAQ,IAEnDA,EAAI,EAAI8hB,EAAG,CAUX,GATArgB,EAAEmI,IAAIglB,EAAiB,GAAT5uB,EAAI,IAAS4uB,EAAiB,GAAT5uB,EAAI,GAAS,GAAI4uB,EAAiB,GAAT5uB,EAAI,GAAS,IAEzE44E,EAAG1wB,KAAKzmD,GACHod,IAAI/c,GACJmwD,YACA4mB,MAAMU,GAEXU,EAAU/xB,KAAK0wB,GAEX54E,EAAI,IACJi6E,EAAUl3E,IAAIi3E,GAAQ3xB,eAAe,EAAM,GAAMuwB,EAAGjxB,IAAIqyB,IAExDI,EAAWJ,EAAOK,QAAQzB,GAAM3sE,KAAKkP,GAAK,EAEtCi/D,GAAU,CACV,MAAME,EAAe/lE,EAAQtI,KAAK0V,IAAIi3D,EAAGyB,QAAQL,GAAU,GAE3D9sE,EAAGg7C,KAAK0wB,GACH71E,IAAIi3E,GACJ/nB,YACA5J,gBAAgBiyB,GAChBv3E,IAAIjB,GAETqL,EAAG+6C,KAAK8xB,GACH3xB,eAAe9zC,GACfxR,IAAIjB,GAGTo4E,EAAGhyB,KAAK0wB,GACH71E,IAAIi3E,GACJ/nB,YACA5J,eAAeiyB,GACfv3E,IAAIjB,GAETq4E,EAAGjyB,KAAK0wB,GACHvwB,eAAe9zC,GACfxR,IAAIjB,GAIbs4E,EACA7G,EAASzqE,KACLoE,EAAG7E,EACH6E,EAAG5E,EACH4E,EAAG1E,EACH2E,EAAG9E,EACH8E,EAAG7E,EACH6E,EAAG3E,EACH0xE,EAAG7xE,EACH6xE,EAAG5xE,EACH4xE,EAAG1xE,EACH2xE,EAAG9xE,EACH8xE,EAAG7xE,EACH6xE,EAAG3xE,IAGP0E,EAAGg7C,KAAK+xB,GACH5xB,gBAAgB9zC,GAChBxR,IAAIjB,GAETqL,EAAG+6C,KAAK+xB,GACH5xB,eAAe9zC,GACfxR,IAAIjB,GAETyxE,EAASzqE,KAAKoE,EAAG7E,EAAG6E,EAAG5E,EAAG4E,EAAG1E,EAAG2E,EAAG9E,EAAG8E,EAAG7E,EAAG6E,EAAG3E,IAGnDwxE,EAAO9xB,KAAK0wB,QAEZ1rE,EAAGg7C,KAAK8xB,GACH3xB,gBAAgB9zC,GAChBxR,IAAIjB,GAETqL,EAAG+6C,KAAK8xB,GACH3xB,eAAe9zC,GACfxR,IAAIjB,GAETyxE,EAASzqE,KAAKoE,EAAG7E,EAAG6E,EAAG5E,EAAG4E,EAAG1E,EAAG2E,EAAG9E,EAAG8E,EAAG7E,EAAG6E,EAAG3E,GAG/CxI,IAAM8hB,EAAI,KACTs4D,EAAWX,EAAeD,GAAQv2E,QAAQxC,GACvCwrC,EAAQnjC,KAAK2uE,EAAavmB,EAAezwD,IAE7CywD,GAAgBkpB,EAAW,EAAI,GAIvC,GAAIN,EAAe,CACf,MAAMH,EACgB,IAAlB/qD,EAAO1qB,OACD61E,EACKnwE,IACGglB,EAAiB,GAAT9M,EAAI,IAAU8M,EAAiB,GAAT9M,EAAI,IAClC8M,EAAiB,GAAT9M,EAAI,GAAS,GAAK8M,EAAiB,GAAT9M,EAAI,GAAS,IAElD62D,QACL1sE,KAAKkP,GAEfwzD,EACI//C,EAAiB,GAAT9M,EAAI,IACZ8M,EAAiB,GAAT9M,EAAI,GAAS,GACrB63D,EACAplE,EACAg/D,EACAtnC,KAYZ,2BAAgCsuC,EAAwBC,GACpD,MAAMC,EAAY,IAAI3jD,aAAayjD,EAASr2E,OAAS,GAErD,IAAK,IAAIlE,EAAkB,EAAdw6E,EAAiBxF,EAAS,EAAJh1E,EAAOA,EAAIy6E,EAAUv2E,OAAQlE,GAAK,EAAGg1E,GAAM,EAC1EyF,EAAUz6E,GAAKu6E,EAASvF,GAA0C,IAAnCuF,EAASvF,EAAK,GAAKuF,EAASvF,IAC3DyF,EAAUz6E,EAAI,GAAKu6E,EAASvF,EAAK,GAAiD,IAA3CuF,EAASvF,EAAK,EAAI,GAAKuF,EAASvF,EAAK,IAC5EyF,EAAUz6E,EAAI,GAAKu6E,EAASvF,EAAK,GAAiD,IAA3CuF,EAASvF,EAAK,EAAI,GAAKuF,EAASvF,EAAK,IAEhF,OAAOyF,GASX,gCAAqCF,EAAwBzJ,GACzD,MAAM4J,EAAKH,EAAsB,EAAbzJ,EAAiB,GAAKyJ,EAAsB,EAAbzJ,GAC7C6J,EAAKJ,EAAsB,EAAbzJ,EAAiB,EAAI,GAAKyJ,EAAsB,EAAbzJ,EAAiB,GAClE8J,EAAKL,EAAsB,EAAbzJ,EAAiB,EAAI,GAAKyJ,EAAsB,EAAbzJ,EAAiB,GAExE,MAAgD,GAAzC7kE,KAAKqtB,KAAKohD,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,K,6BC1P9C,SAASC,EAAOp7D,EAAMq7D,EAAaC,GAE/BA,EAAMA,GAAO,EAEb,IAOI3/C,EAAMC,EAAME,EAAMpe,EAAM9U,EAAGC,EAAG0yE,EAP9BC,EAAWH,GAAeA,EAAY52E,OACtCg3E,EAAWD,EAAWH,EAAY,GAAKC,EAAMt7D,EAAKvb,OAClDi3E,EAAYC,EAAW37D,EAAM,EAAGy7D,EAAUH,GAAK,GAC/CnH,EAAY,GAEhB,IAAKuH,GAAaA,EAAU/3C,OAAS+3C,EAAUE,KAAM,OAAOzH,EAO5D,GAHIqH,IAAUE,EAqPlB,SAAwB17D,EAAMq7D,EAAaK,EAAWJ,GAClD,IACI/6E,EAAGmjC,EAAKxO,EAAO4R,EAAK+0C,EADpBC,EAAQ,GAGZ,IAAKv7E,EAAI,EAAGmjC,EAAM23C,EAAY52E,OAAQlE,EAAImjC,EAAKnjC,IAC3C20B,EAAQmmD,EAAY96E,GAAK+6E,EACzBx0C,EAAMvmC,EAAImjC,EAAM,EAAI23C,EAAY96E,EAAI,GAAK+6E,EAAMt7D,EAAKvb,QACpDo3E,EAAOF,EAAW37D,EAAMkV,EAAO4R,EAAKw0C,GAAK,MAC5BO,EAAKl4C,OAAMk4C,EAAKE,SAAU,GACvCD,EAAMzyE,KAAK2yE,EAAYH,IAM3B,IAHAC,EAAMG,KAAKC,GAGN37E,EAAI,EAAGA,EAAIu7E,EAAMr3E,OAAQlE,IAC1B47E,EAAcL,EAAMv7E,GAAIm7E,GACxBA,EAAYU,EAAaV,EAAWA,EAAU/3C,MAGlD,OAAO+3C,EAzQmBW,CAAer8D,EAAMq7D,EAAaK,EAAWJ,IAGnEt7D,EAAKvb,OAAS,GAAK62E,EAAK,CACxB3/C,EAAOG,EAAO9b,EAAK,GACnB4b,EAAOle,EAAOsC,EAAK,GAEnB,IAAK,IAAIzf,EAAI+6E,EAAK/6E,EAAIk7E,EAAUl7E,GAAK+6E,GACjC1yE,EAAIoX,EAAKzf,IAEDo7B,IAAMA,EAAO/yB,IADrBC,EAAImX,EAAKzf,EAAI,IAELq7B,IAAMA,EAAO/yB,GACjBD,EAAIkzB,IAAMA,EAAOlzB,GACjBC,EAAI6U,IAAMA,EAAO7U,GAKzB0yE,EAAsB,KADtBA,EAAU/uE,KAAKS,IAAI6uB,EAAOH,EAAMje,EAAOke,IACb,EAAI2/C,EAAU,EAK5C,OAFAe,EAAaZ,EAAWvH,EAAWmH,EAAK3/C,EAAMC,EAAM2/C,GAE7CpH,EAIX,SAASwH,EAAW37D,EAAMkV,EAAO4R,EAAKw0C,EAAKiB,GACvC,IAAIh8E,EAAGi8E,EAEP,GAAID,IAAeE,EAAWz8D,EAAMkV,EAAO4R,EAAKw0C,GAAO,EACnD,IAAK/6E,EAAI20B,EAAO30B,EAAIumC,EAAKvmC,GAAK+6E,EAAKkB,EAAOE,EAAWn8E,EAAGyf,EAAKzf,GAAIyf,EAAKzf,EAAI,GAAIi8E,QAE9E,IAAKj8E,EAAIumC,EAAMw0C,EAAK/6E,GAAK20B,EAAO30B,GAAK+6E,EAAKkB,EAAOE,EAAWn8E,EAAGyf,EAAKzf,GAAIyf,EAAKzf,EAAI,GAAIi8E,GAQzF,OALIA,GAAQpf,EAAOof,EAAMA,EAAK74C,QAC1Bg5C,EAAWH,GACXA,EAAOA,EAAK74C,MAGT64C,EAIX,SAASJ,EAAalnD,EAAO4R,GACzB,IAAK5R,EAAO,OAAOA,EACd4R,IAAKA,EAAM5R,GAEhB,IACI0nD,EADAv6E,EAAI6yB,EAER,GAGI,GAFA0nD,GAAQ,EAEHv6E,EAAE05E,UAAY3e,EAAO/6D,EAAGA,EAAEshC,OAAqC,IAA5BzU,EAAK7sB,EAAEu5E,KAAMv5E,EAAGA,EAAEshC,MAOtDthC,EAAIA,EAAEshC,SAP8D,CAGpE,GAFAg5C,EAAWt6E,IACXA,EAAIykC,EAAMzkC,EAAEu5E,QACFv5E,EAAEshC,KAAM,MAClBi5C,GAAQ,SAKPA,GAASv6E,IAAMykC,GAExB,OAAOA,EAIX,SAASw1C,EAAaO,EAAK1I,EAAWmH,EAAK3/C,EAAMC,EAAM2/C,EAASuB,GAC5D,GAAKD,EAAL,EAGKC,GAAQvB,GAqRjB,SAAoBrmD,EAAOyG,EAAMC,EAAM2/C,GACnC,IAAIl5E,EAAI6yB,EACR,GACgB,OAAR7yB,EAAE0G,IAAY1G,EAAE0G,EAAIg0E,EAAO16E,EAAEuG,EAAGvG,EAAEwG,EAAG8yB,EAAMC,EAAM2/C,IACrDl5E,EAAE26E,MAAQ36E,EAAEu5E,KACZv5E,EAAE46E,MAAQ56E,EAAEshC,KACZthC,EAAIA,EAAEshC,WACDthC,IAAM6yB,GAEf7yB,EAAE26E,MAAMC,MAAQ,KAChB56E,EAAE26E,MAAQ,KAOd,SAAoBnB,GAChB,IAAIt7E,EAAG8B,EAAGgtB,EAAGxnB,EAAGm8B,EAAMk5C,EAAWC,EAAOC,EACpCC,EAAS,EAEb,EAAG,CAMC,IALAh7E,EAAIw5E,EACJA,EAAO,KACP73C,EAAO,KACPk5C,EAAY,EAEL76E,GAAG,CAIN,IAHA66E,IACA7tD,EAAIhtB,EACJ86E,EAAQ,EACH58E,EAAI,EAAGA,EAAI88E,IACZF,IACA9tD,EAAIA,EAAE4tD,OAFc18E,KAOxB,IAFA68E,EAAQC,EAEDF,EAAQ,GAAMC,EAAQ,GAAK/tD,GAEhB,IAAV8tD,IAA0B,IAAVC,IAAgB/tD,GAAKhtB,EAAE0G,GAAKsmB,EAAEtmB,IAC9ClB,EAAIxF,EACJA,EAAIA,EAAE46E,MACNE,MAEAt1E,EAAIwnB,EACJA,EAAIA,EAAE4tD,MACNG,KAGAp5C,EAAMA,EAAKi5C,MAAQp1E,EAClBg0E,EAAOh0E,EAEZA,EAAEm1E,MAAQh5C,EACVA,EAAOn8B,EAGXxF,EAAIgtB,EAGR2U,EAAKi5C,MAAQ,KACbI,GAAU,QAELH,EAAY,GAnDrBI,CAAWj7E,GAjSWk7E,CAAWV,EAAKlhD,EAAMC,EAAM2/C,GAMlD,IAJA,IACIK,EAAMj4C,EADN6T,EAAOqlC,EAIJA,EAAIjB,OAASiB,EAAIl5C,MAIpB,GAHAi4C,EAAOiB,EAAIjB,KACXj4C,EAAOk5C,EAAIl5C,KAEP43C,EAAUiC,EAAYX,EAAKlhD,EAAMC,EAAM2/C,GAAWkC,EAAMZ,GAExD1I,EAAU9qE,KAAKuyE,EAAKr7E,EAAI+6E,GACxBnH,EAAU9qE,KAAKwzE,EAAIt8E,EAAI+6E,GACvBnH,EAAU9qE,KAAKs6B,EAAKpjC,EAAI+6E,GAExBqB,EAAWE,GAGXA,EAAMl5C,EAAKA,KACX6T,EAAO7T,EAAKA,UAQhB,IAHAk5C,EAAMl5C,KAGM6T,EAAM,CAETslC,EAIe,IAATA,EAEPR,EADAO,EAAMa,EAAuBtB,EAAaS,GAAM1I,EAAWmH,GACzCnH,EAAWmH,EAAK3/C,EAAMC,EAAM2/C,EAAS,GAGvC,IAATuB,GACPa,EAAYd,EAAK1I,EAAWmH,EAAK3/C,EAAMC,EAAM2/C,GAT7Ce,EAAaF,EAAaS,GAAM1I,EAAWmH,EAAK3/C,EAAMC,EAAM2/C,EAAS,GAYzE,QAMZ,SAASkC,EAAMZ,GACX,IAAIlwE,EAAIkwE,EAAIjB,KACR/uE,EAAIgwE,EACJj8E,EAAIi8E,EAAIl5C,KAEZ,GAAIzU,EAAKviB,EAAGE,EAAGjM,IAAM,EAAG,OAAO,EAK/B,IAFA,IAAIyB,EAAIw6E,EAAIl5C,KAAKA,KAEVthC,IAAMw6E,EAAIjB,MAAM,CACnB,GAAIgC,EAAgBjxE,EAAE/D,EAAG+D,EAAE9D,EAAGgE,EAAEjE,EAAGiE,EAAEhE,EAAGjI,EAAEgI,EAAGhI,EAAEiI,EAAGxG,EAAEuG,EAAGvG,EAAEwG,IACrDqmB,EAAK7sB,EAAEu5E,KAAMv5E,EAAGA,EAAEshC,OAAS,EAAG,OAAO,EACzCthC,EAAIA,EAAEshC,KAGV,OAAO,EAGX,SAAS65C,EAAYX,EAAKlhD,EAAMC,EAAM2/C,GAClC,IAAI5uE,EAAIkwE,EAAIjB,KACR/uE,EAAIgwE,EACJj8E,EAAIi8E,EAAIl5C,KAEZ,GAAIzU,EAAKviB,EAAGE,EAAGjM,IAAM,EAAG,OAAO,EAgB/B,IAbA,IAAIi9E,EAAQlxE,EAAE/D,EAAIiE,EAAEjE,EAAK+D,EAAE/D,EAAIhI,EAAEgI,EAAI+D,EAAE/D,EAAIhI,EAAEgI,EAAMiE,EAAEjE,EAAIhI,EAAEgI,EAAIiE,EAAEjE,EAAIhI,EAAEgI,EACnEk1E,EAAQnxE,EAAE9D,EAAIgE,EAAEhE,EAAK8D,EAAE9D,EAAIjI,EAAEiI,EAAI8D,EAAE9D,EAAIjI,EAAEiI,EAAMgE,EAAEhE,EAAIjI,EAAEiI,EAAIgE,EAAEhE,EAAIjI,EAAEiI,EACnEk1E,EAAQpxE,EAAE/D,EAAIiE,EAAEjE,EAAK+D,EAAE/D,EAAIhI,EAAEgI,EAAI+D,EAAE/D,EAAIhI,EAAEgI,EAAMiE,EAAEjE,EAAIhI,EAAEgI,EAAIiE,EAAEjE,EAAIhI,EAAEgI,EACnEo1E,EAAQrxE,EAAE9D,EAAIgE,EAAEhE,EAAK8D,EAAE9D,EAAIjI,EAAEiI,EAAI8D,EAAE9D,EAAIjI,EAAEiI,EAAMgE,EAAEhE,EAAIjI,EAAEiI,EAAIgE,EAAEhE,EAAIjI,EAAEiI,EAGnEgzB,EAAOkhD,EAAOc,EAAOC,EAAOniD,EAAMC,EAAM2/C,GACxCx/C,EAAOghD,EAAOgB,EAAOC,EAAOriD,EAAMC,EAAM2/C,GAExCl5E,EAAIw6E,EAAIG,MACRh7E,EAAI66E,EAAII,MAGL56E,GAAKA,EAAE0G,GAAK8yB,GAAQ75B,GAAKA,EAAE+G,GAAKgzB,GAAM,CACzC,GAAI15B,IAAMw6E,EAAIjB,MAAQv5E,IAAMw6E,EAAIl5C,MAC5Bi6C,EAAgBjxE,EAAE/D,EAAG+D,EAAE9D,EAAGgE,EAAEjE,EAAGiE,EAAEhE,EAAGjI,EAAEgI,EAAGhI,EAAEiI,EAAGxG,EAAEuG,EAAGvG,EAAEwG,IACrDqmB,EAAK7sB,EAAEu5E,KAAMv5E,EAAGA,EAAEshC,OAAS,EAAG,OAAO,EAGzC,GAFAthC,EAAIA,EAAE26E,MAEFh7E,IAAM66E,EAAIjB,MAAQ55E,IAAM66E,EAAIl5C,MAC5Bi6C,EAAgBjxE,EAAE/D,EAAG+D,EAAE9D,EAAGgE,EAAEjE,EAAGiE,EAAEhE,EAAGjI,EAAEgI,EAAGhI,EAAEiI,EAAG7G,EAAE4G,EAAG5G,EAAE6G,IACrDqmB,EAAKltB,EAAE45E,KAAM55E,EAAGA,EAAE2hC,OAAS,EAAG,OAAO,EACzC3hC,EAAIA,EAAEi7E,MAIV,KAAO56E,GAAKA,EAAE0G,GAAK8yB,GAAM,CACrB,GAAIx5B,IAAMw6E,EAAIjB,MAAQv5E,IAAMw6E,EAAIl5C,MAC5Bi6C,EAAgBjxE,EAAE/D,EAAG+D,EAAE9D,EAAGgE,EAAEjE,EAAGiE,EAAEhE,EAAGjI,EAAEgI,EAAGhI,EAAEiI,EAAGxG,EAAEuG,EAAGvG,EAAEwG,IACrDqmB,EAAK7sB,EAAEu5E,KAAMv5E,EAAGA,EAAEshC,OAAS,EAAG,OAAO,EACzCthC,EAAIA,EAAE26E,MAIV,KAAOh7E,GAAKA,EAAE+G,GAAKgzB,GAAM,CACrB,GAAI/5B,IAAM66E,EAAIjB,MAAQ55E,IAAM66E,EAAIl5C,MAC5Bi6C,EAAgBjxE,EAAE/D,EAAG+D,EAAE9D,EAAGgE,EAAEjE,EAAGiE,EAAEhE,EAAGjI,EAAEgI,EAAGhI,EAAEiI,EAAG7G,EAAE4G,EAAG5G,EAAE6G,IACrDqmB,EAAKltB,EAAE45E,KAAM55E,EAAGA,EAAE2hC,OAAS,EAAG,OAAO,EACzC3hC,EAAIA,EAAEi7E,MAGV,OAAO,EAIX,SAASS,EAAuBxoD,EAAOi/C,EAAWmH,GAC9C,IAAIj5E,EAAI6yB,EACR,EAAG,CACC,IAAIvoB,EAAItK,EAAEu5E,KACN/uE,EAAIxK,EAAEshC,KAAKA,MAEVy5B,EAAOzwD,EAAGE,IAAMoxE,EAAWtxE,EAAGtK,EAAGA,EAAEshC,KAAM92B,IAAMqxE,EAAcvxE,EAAGE,IAAMqxE,EAAcrxE,EAAGF,KAExFwnE,EAAU9qE,KAAKsD,EAAEpM,EAAI+6E,GACrBnH,EAAU9qE,KAAKhH,EAAE9B,EAAI+6E,GACrBnH,EAAU9qE,KAAKwD,EAAEtM,EAAI+6E,GAGrBqB,EAAWt6E,GACXs6E,EAAWt6E,EAAEshC,MAEbthC,EAAI6yB,EAAQroB,GAEhBxK,EAAIA,EAAEshC,WACDthC,IAAM6yB,GAEf,OAAOknD,EAAa/5E,GAIxB,SAASs7E,EAAYzoD,EAAOi/C,EAAWmH,EAAK3/C,EAAMC,EAAM2/C,GAEpD,IAAI5uE,EAAIuoB,EACR,EAAG,CAEC,IADA,IAAIroB,EAAIF,EAAEg3B,KAAKA,KACR92B,IAAMF,EAAEivE,MAAM,CACjB,GAAIjvE,EAAEpM,IAAMsM,EAAEtM,GAAK49E,EAAgBxxE,EAAGE,GAAI,CAEtC,IAAIjM,EAAIw9E,EAAazxE,EAAGE,GASxB,OANAF,EAAIyvE,EAAazvE,EAAGA,EAAEg3B,MACtB/iC,EAAIw7E,EAAax7E,EAAGA,EAAE+iC,MAGtB24C,EAAa3vE,EAAGwnE,EAAWmH,EAAK3/C,EAAMC,EAAM2/C,QAC5Ce,EAAa17E,EAAGuzE,EAAWmH,EAAK3/C,EAAMC,EAAM2/C,GAGhD1uE,EAAIA,EAAE82B,KAEVh3B,EAAIA,EAAEg3B,WACDh3B,IAAMuoB,GA2BnB,SAASgnD,EAASvvE,EAAGE,GACjB,OAAOF,EAAE/D,EAAIiE,EAAEjE,EAInB,SAASuzE,EAAcjI,EAAMwH,GAEzB,GADAA,EAWJ,SAAwBxH,EAAMwH,GAC1B,IAII/6E,EAJA0B,EAAIq5E,EACJ2C,EAAKnK,EAAKtrE,EACV01E,EAAKpK,EAAKrrE,EACV01E,GAAMvxE,IAKV,EAAG,CACC,GAAIsxE,GAAMj8E,EAAEwG,GAAKy1E,GAAMj8E,EAAEshC,KAAK96B,GAAKxG,EAAEshC,KAAK96B,IAAMxG,EAAEwG,EAAG,CACjD,IAAID,EAAIvG,EAAEuG,GAAK01E,EAAKj8E,EAAEwG,IAAMxG,EAAEshC,KAAK/6B,EAAIvG,EAAEuG,IAAMvG,EAAEshC,KAAK96B,EAAIxG,EAAEwG,GAC5D,GAAID,GAAKy1E,GAAMz1E,EAAI21E,EAAI,CAEnB,GADAA,EAAK31E,EACDA,IAAMy1E,EAAI,CACV,GAAIC,IAAOj8E,EAAEwG,EAAG,OAAOxG,EACvB,GAAIi8E,IAAOj8E,EAAEshC,KAAK96B,EAAG,OAAOxG,EAAEshC,KAElChjC,EAAI0B,EAAEuG,EAAIvG,EAAEshC,KAAK/6B,EAAIvG,EAAIA,EAAEshC,MAGnCthC,EAAIA,EAAEshC,WACDthC,IAAMq5E,GAEf,IAAK/6E,EAAG,OAAO,KAEf,GAAI09E,IAAOE,EAAI,OAAO59E,EAMtB,IAII8a,EAJA+7B,EAAO72C,EACPomD,EAAKpmD,EAAEiI,EACPo+C,EAAKrmD,EAAEkI,EACP21E,EAASxxE,IAGb3K,EAAI1B,EAEJ,GACQ09E,GAAMh8E,EAAEuG,GAAKvG,EAAEuG,GAAKm+C,GAAMs3B,IAAOh8E,EAAEuG,GAC/Bg1E,EAAgBU,EAAKt3B,EAAKq3B,EAAKE,EAAID,EAAIv3B,EAAIC,EAAIs3B,EAAKt3B,EAAKu3B,EAAKF,EAAIC,EAAIj8E,EAAEuG,EAAGvG,EAAEwG,KAEjF4S,EAAMjP,KAAKitB,IAAI6kD,EAAKj8E,EAAEwG,IAAMw1E,EAAKh8E,EAAEuG,GAE/Bs1E,EAAc77E,EAAG6xE,KAChBz4D,EAAM+iE,GAAW/iE,IAAQ+iE,IAAWn8E,EAAEuG,EAAIjI,EAAEiI,GAAMvG,EAAEuG,IAAMjI,EAAEiI,GAAK61E,EAAqB99E,EAAG0B,OAC1F1B,EAAI0B,EACJm8E,EAAS/iE,IAIjBpZ,EAAIA,EAAEshC,WACDthC,IAAMm1C,GAEf,OAAO72C,EAnEK+9E,CAAexK,EAAMwH,GAClB,CACX,IAAI7uE,EAAIuxE,EAAa1C,EAAWxH,GAGhCkI,EAAaV,EAAWA,EAAU/3C,MAClCy4C,EAAavvE,EAAGA,EAAE82B,OAiE1B,SAAS86C,EAAqB99E,EAAG0B,GAC7B,OAAO6sB,EAAKvuB,EAAEi7E,KAAMj7E,EAAG0B,EAAEu5E,MAAQ,GAAK1sD,EAAK7sB,EAAEshC,KAAMhjC,EAAGA,EAAEgjC,MAAQ,EAyEpE,SAASo5C,EAAOn0E,EAAGC,EAAG8yB,EAAMC,EAAM2/C,GAe9B,OAPA3yE,EAAqB,aADrBA,EAAqB,YADrBA,EAAqB,YADrBA,EAAqB,WAHrBA,EAAI,OAASA,EAAI+yB,GAAQ4/C,GAGf3yE,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAKfC,EAAqB,aADrBA,EAAqB,YADrBA,EAAqB,YADrBA,EAAqB,WAPrBA,EAAI,OAASA,EAAI+yB,GAAQ2/C,GAOf1yE,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAEE,EAIrB,SAASmzE,EAAY9mD,GACjB,IAAI7yB,EAAI6yB,EACJypD,EAAWzpD,EACf,IACQ7yB,EAAEuG,EAAI+1E,EAAS/1E,GAAMvG,EAAEuG,IAAM+1E,EAAS/1E,GAAKvG,EAAEwG,EAAI81E,EAAS91E,KAAI81E,EAAWt8E,GAC7EA,EAAIA,EAAEshC,WACDthC,IAAM6yB,GAEf,OAAOypD,EAIX,SAASf,EAAgBpuC,EAAIC,EAAIC,EAAIC,EAAIxR,EAAIC,EAAIiS,EAAIC,GACjD,OAAQnS,EAAKkS,IAAOZ,EAAKa,IAAOd,EAAKa,IAAOjS,EAAKkS,IAAO,IAChDd,EAAKa,IAAOV,EAAKW,IAAOZ,EAAKW,IAAOZ,EAAKa,IAAO,IAChDZ,EAAKW,IAAOjS,EAAKkS,IAAOnS,EAAKkS,IAAOV,EAAKW,IAAO,EAI5D,SAAS6tC,EAAgBxxE,EAAGE,GACxB,OAAOF,EAAEg3B,KAAKpjC,IAAMsM,EAAEtM,GAAKoM,EAAEivE,KAAKr7E,IAAMsM,EAAEtM,IA2C9C,SAA2BoM,EAAGE,GAC1B,IAAIxK,EAAIsK,EACR,EAAG,CACC,GAAItK,EAAE9B,IAAMoM,EAAEpM,GAAK8B,EAAEshC,KAAKpjC,IAAMoM,EAAEpM,GAAK8B,EAAE9B,IAAMsM,EAAEtM,GAAK8B,EAAEshC,KAAKpjC,IAAMsM,EAAEtM,GAC7D09E,EAAW57E,EAAGA,EAAEshC,KAAMh3B,EAAGE,GAAI,OAAO,EAC5CxK,EAAIA,EAAEshC,WACDthC,IAAMsK,GAEf,OAAO,EAnDyCiyE,CAAkBjyE,EAAGE,KAC7DqxE,EAAcvxE,EAAGE,IAAMqxE,EAAcrxE,EAAGF,IA6DpD,SAAsBA,EAAGE,GACrB,IAAIxK,EAAIsK,EACJkyE,GAAS,EACTxuC,GAAM1jC,EAAE/D,EAAIiE,EAAEjE,GAAK,EACnB0nC,GAAM3jC,EAAE9D,EAAIgE,EAAEhE,GAAK,EACvB,GACUxG,EAAEwG,EAAIynC,GAASjuC,EAAEshC,KAAK96B,EAAIynC,GAAQjuC,EAAEshC,KAAK96B,IAAMxG,EAAEwG,GAC9CwnC,GAAMhuC,EAAEshC,KAAK/6B,EAAIvG,EAAEuG,IAAM0nC,EAAKjuC,EAAEwG,IAAMxG,EAAEshC,KAAK96B,EAAIxG,EAAEwG,GAAKxG,EAAEuG,IAC/Di2E,GAAUA,GACdx8E,EAAIA,EAAEshC,WACDthC,IAAMsK,GAEf,OAAOkyE,EAzE+CC,CAAanyE,EAAGE,KAC7DqiB,EAAKviB,EAAEivE,KAAMjvE,EAAGE,EAAE+uE,OAAS1sD,EAAKviB,EAAGE,EAAE+uE,KAAM/uE,KAC5CuwD,EAAOzwD,EAAGE,IAAMqiB,EAAKviB,EAAEivE,KAAMjvE,EAAGA,EAAEg3B,MAAQ,GAAKzU,EAAKriB,EAAE+uE,KAAM/uE,EAAGA,EAAE82B,MAAQ,GAIrF,SAASzU,EAAK7sB,EAAGgtB,EAAGhuB,GAChB,OAAQguB,EAAExmB,EAAIxG,EAAEwG,IAAMxH,EAAEuH,EAAIymB,EAAEzmB,IAAMymB,EAAEzmB,EAAIvG,EAAEuG,IAAMvH,EAAEwH,EAAIwmB,EAAExmB,GAI9D,SAASu0D,EAAO1vD,EAAI+sE,GAChB,OAAO/sE,EAAG9E,IAAM6xE,EAAG7xE,GAAK8E,EAAG7E,IAAM4xE,EAAG5xE,EAIxC,SAASo1E,EAAWvwE,EAAIqxE,EAAItE,EAAIuE,GAC5B,IAAIC,EAAK1yE,EAAK2iB,EAAKxhB,EAAIqxE,EAAItE,IACvByE,EAAK3yE,EAAK2iB,EAAKxhB,EAAIqxE,EAAIC,IACvBG,EAAK5yE,EAAK2iB,EAAKurD,EAAIuE,EAAItxE,IACvB0xE,EAAK7yE,EAAK2iB,EAAKurD,EAAIuE,EAAID,IAE3B,OAAIE,IAAOC,GAAMC,IAAOC,MAEb,IAAPH,IAAYI,EAAU3xE,EAAI+sE,EAAIsE,QACvB,IAAPG,IAAYG,EAAU3xE,EAAIsxE,EAAID,QACvB,IAAPI,IAAYE,EAAU5E,EAAI/sE,EAAIsxE,OACvB,IAAPI,IAAYC,EAAU5E,EAAIsE,EAAIC,OAMtC,SAASK,EAAUh9E,EAAGgtB,EAAGhuB,GACrB,OAAOguB,EAAEzmB,GAAK4D,KAAKS,IAAI5K,EAAEuG,EAAGvH,EAAEuH,IAAMymB,EAAEzmB,GAAK4D,KAAKO,IAAI1K,EAAEuG,EAAGvH,EAAEuH,IAAMymB,EAAExmB,GAAK2D,KAAKS,IAAI5K,EAAEwG,EAAGxH,EAAEwH,IAAMwmB,EAAExmB,GAAK2D,KAAKO,IAAI1K,EAAEwG,EAAGxH,EAAEwH,GAGzH,SAAS0D,EAAK+yE,GACV,OAAOA,EAAM,EAAI,EAAIA,EAAM,GAAK,EAAI,EAgBxC,SAASpB,EAAcvxE,EAAGE,GACtB,OAAOqiB,EAAKviB,EAAEivE,KAAMjvE,EAAGA,EAAEg3B,MAAQ,EAC7BzU,EAAKviB,EAAGE,EAAGF,EAAEg3B,OAAS,GAAKzU,EAAKviB,EAAGA,EAAEivE,KAAM/uE,IAAM,EACjDqiB,EAAKviB,EAAGE,EAAGF,EAAEivE,MAAQ,GAAK1sD,EAAKviB,EAAGA,EAAEg3B,KAAM92B,GAAK,EAqBvD,SAASuxE,EAAazxE,EAAGE,GACrB,IAAI0yE,EAAK,IAAIC,EAAK7yE,EAAEpM,EAAGoM,EAAE/D,EAAG+D,EAAE9D,GAC1B42E,EAAK,IAAID,EAAK3yE,EAAEtM,EAAGsM,EAAEjE,EAAGiE,EAAEhE,GAC1B62E,EAAK/yE,EAAEg3B,KACPg8C,EAAK9yE,EAAE+uE,KAcX,OAZAjvE,EAAEg3B,KAAO92B,EACTA,EAAE+uE,KAAOjvE,EAET4yE,EAAG57C,KAAO+7C,EACVA,EAAG9D,KAAO2D,EAEVE,EAAG97C,KAAO47C,EACVA,EAAG3D,KAAO6D,EAEVE,EAAGh8C,KAAO87C,EACVA,EAAG7D,KAAO+D,EAEHF,EAIX,SAAS/C,EAAWn8E,EAAGqI,EAAGC,EAAG2zE,GACzB,IAAIn6E,EAAI,IAAIm9E,EAAKj/E,EAAGqI,EAAGC,GAYvB,OAVK2zE,GAKDn6E,EAAEshC,KAAO64C,EAAK74C,KACdthC,EAAEu5E,KAAOY,EACTA,EAAK74C,KAAKi4C,KAAOv5E,EACjBm6E,EAAK74C,KAAOthC,IAPZA,EAAEu5E,KAAOv5E,EACTA,EAAEshC,KAAOthC,GAQNA,EAGX,SAASs6E,EAAWt6E,GAChBA,EAAEshC,KAAKi4C,KAAOv5E,EAAEu5E,KAChBv5E,EAAEu5E,KAAKj4C,KAAOthC,EAAEshC,KAEZthC,EAAE26E,QAAO36E,EAAE26E,MAAMC,MAAQ56E,EAAE46E,OAC3B56E,EAAE46E,QAAO56E,EAAE46E,MAAMD,MAAQ36E,EAAE26E,OAGnC,SAASwC,EAAKj/E,EAAGqI,EAAGC,GAEhB1F,KAAK5C,EAAIA,EAGT4C,KAAKyF,EAAIA,EACTzF,KAAK0F,EAAIA,EAGT1F,KAAKy4E,KAAO,KACZz4E,KAAKwgC,KAAO,KAGZxgC,KAAK4F,EAAI,KAGT5F,KAAK65E,MAAQ,KACb75E,KAAK85E,MAAQ,KAGb95E,KAAK44E,SAAU,EAgCnB,SAASU,EAAWz8D,EAAMkV,EAAO4R,EAAKw0C,GAElC,IADA,IAAInD,EAAM,EACD53E,EAAI20B,EAAOwX,EAAI5F,EAAMw0C,EAAK/6E,EAAIumC,EAAKvmC,GAAK+6E,EAC7CnD,IAAQn4D,EAAK0sB,GAAK1sB,EAAKzf,KAAOyf,EAAKzf,EAAI,GAAKyf,EAAK0sB,EAAI,IACrDA,EAAInsC,EAER,OAAO43E,EAjpBX73E,EAAOD,QAAU+6E,EACjB96E,EAAOD,QAAQ2zB,QAAUonD,EA+mBzBA,EAAOwE,UAAY,SAAU5/D,EAAMq7D,EAAaC,EAAKnH,GACjD,IAAIqH,EAAWH,GAAeA,EAAY52E,OACtCg3E,EAAWD,EAAWH,EAAY,GAAKC,EAAMt7D,EAAKvb,OAElDo7E,EAAcrzE,KAAKitB,IAAIgjD,EAAWz8D,EAAM,EAAGy7D,EAAUH,IACzD,GAAIE,EACA,IAAK,IAAIj7E,EAAI,EAAGmjC,EAAM23C,EAAY52E,OAAQlE,EAAImjC,EAAKnjC,IAAK,CACpD,IAAI20B,EAAQmmD,EAAY96E,GAAK+6E,EACzBx0C,EAAMvmC,EAAImjC,EAAM,EAAI23C,EAAY96E,EAAI,GAAK+6E,EAAMt7D,EAAKvb,OACxDo7E,GAAerzE,KAAKitB,IAAIgjD,EAAWz8D,EAAMkV,EAAO4R,EAAKw0C,IAI7D,IAAIwE,EAAgB,EACpB,IAAKv/E,EAAI,EAAGA,EAAI4zE,EAAU1vE,OAAQlE,GAAK,EAAG,CACtC,IAAIoM,EAAIwnE,EAAU5zE,GAAK+6E,EACnBzuE,EAAIsnE,EAAU5zE,EAAI,GAAK+6E,EACvB16E,EAAIuzE,EAAU5zE,EAAI,GAAK+6E,EAC3BwE,GAAiBtzE,KAAKitB,KACjBzZ,EAAKrT,GAAKqT,EAAKpf,KAAOof,EAAKnT,EAAI,GAAKmT,EAAKrT,EAAI,KAC7CqT,EAAKrT,GAAKqT,EAAKnT,KAAOmT,EAAKpf,EAAI,GAAKof,EAAKrT,EAAI,KAGtD,OAAuB,IAAhBkzE,GAAuC,IAAlBC,EAAsB,EAC9CtzE,KAAKitB,KAAKqmD,EAAgBD,GAAeA,IAajDzE,EAAO2E,QAAU,SAAU//D,GAKvB,IAJA,IAAIs7D,EAAMt7D,EAAK,GAAG,GAAGvb,OACjB6E,EAAS,CAACwqE,SAAU,GAAIG,MAAO,GAAI+L,WAAY1E,GAC/C2E,EAAY,EAEP1/E,EAAI,EAAGA,EAAIyf,EAAKvb,OAAQlE,IAAK,CAClC,IAAK,IAAImsC,EAAI,EAAGA,EAAI1sB,EAAKzf,GAAGkE,OAAQioC,IAChC,IAAK,IAAI7rC,EAAI,EAAGA,EAAIy6E,EAAKz6E,IAAKyI,EAAOwqE,SAASzqE,KAAK2W,EAAKzf,GAAGmsC,GAAG7rC,IAE9DN,EAAI,IACJ0/E,GAAajgE,EAAKzf,EAAI,GAAGkE,OACzB6E,EAAO2qE,MAAM5qE,KAAK42E,IAG1B,OAAO32E,I,mGC/pBX,aAEM42E,EAAQ,IAAI,EAAAv3E,QACZw3E,EAAQ,IAAI,EAAAx3E,QACZy3E,EAAO,IAAI,EAAAz3E,QACX03E,EAAO,IAAI,EAAA13E,QAmCjB,SAAS23E,EACL3zE,EACAE,EACAxK,EACAgtB,EACA/lB,EAAS,IAAI,EAAAX,SAEbu3E,EAAMv2B,WAAW98C,EAAGF,GACpBwzE,EAAMx2B,WAAWt6B,EAAGhtB,GACpB,MAAMi2C,EAAK3rC,EAAEysE,MAAM8G,GACb5Z,EAAKjkE,EAAE+2E,MAAM+G,GACbtlD,EAAIqlD,EAAM9G,MAAM+G,GAChBv3E,GAAKs3E,EAAMt3E,EAAI09D,EAAK6Z,EAAMv3E,EAAI0vC,GAAMzd,EACpChyB,GAAKq3E,EAAMr3E,EAAIy9D,EAAK6Z,EAAMt3E,EAAIyvC,GAAMzd,EAC1C,OAAOvxB,EAAOa,IAAIvB,EAAGC,GAAG8Z,QAG5B,SAASk8D,EAAOvrE,EAAgBjR,EAAYgtB,GAGxC,OAFA+wD,EAAKz2B,WAAWt6B,EAAGhtB,GACnBg+E,EAAK12B,WAAWr2C,EAAOjR,GAChB+9E,EAAKhH,MAAMiH,GAAQ,EAlD9B,uBAA4Bt9C,EAAoBw9C,GAC5C,GAAuB,IAAnBx9C,EAAQt+B,OACR,OAAOs+B,EAENA,EAAQ,GAAGq6B,OAAOr6B,EAAQA,EAAQt+B,OAAS,MAE5Cs+B,EAAU,IAAIA,EAASA,EAAQ,KAEnC,IAAIy9C,EAAaz9C,EACjB,IAAK,IAAIl7B,EAAI,EAAGA,EAAI04E,EAAK97E,SAAUoD,EAAG,CAClC,MAAMxF,EAAIk+E,EAAK14E,GACTwnB,EAAIkxD,GAAM14E,EAAI,GAAK04E,EAAK97E,QACxBg8E,EAAYD,EAClBA,EAAa,GACb,IAAK,IAAIjgF,EAAI,EAAGA,EAAIkgF,EAAUh8E,SAAUlE,EAAG,CACvC,MAAMmgF,EAAeD,EAAUlgF,GACzBogF,EAAYF,GAAWlgF,EAAIkgF,EAAUh8E,OAAS,GAAKg8E,EAAUh8E,QAC/Do6E,EAAO6B,EAAcr+E,EAAGgtB,IACnBwvD,EAAO8B,EAAWt+E,EAAGgtB,IACtBmxD,EAAWn3E,KAAKi3E,EAAoBK,EAAWD,EAAcr+E,EAAGgtB,IAEpEmxD,EAAWn3E,KAAKq3E,IACT7B,EAAO8B,EAAWt+E,EAAGgtB,IAC5BmxD,EAAWn3E,KAAKi3E,EAAoBK,EAAWD,EAAcr+E,EAAGgtB,KAI5E,OAAOmxD,I,+ICrCX,aACA,OACA,OACA,QAEMI,EAAwB,CAAC,IAAI,EAAA93E,QAAW,IAAI,EAAAA,SAElD,IAAYksE,GAAZ,SAAYA,GAIR,iBAIA,iCARJ,CAAYA,EAAA,EAAAA,kBAAA,EAAAA,gBAAe,KAe3B,MAAaD,UAA8C,EAAA8L,oBAcvD,YACa/L,EACA1+D,EACA0qE,EAAmC9L,EAAgB+L,IACnDrrE,GAETvP,QALS,KAAA2uE,cACA,KAAA1+D,SACA,KAAA0qE,kBACA,KAAAprE,aAIT,EAAAmC,OACInC,EAAWqD,OAAS,EAAA3F,eAAegI,OACnC,0EAGJ,MAAMlH,EAAYwB,EAAWnC,aAAa6C,EAAOlC,UAAW0sE,EAAsB,IAC5E3sE,EAAYyB,EAAWnC,aAAa6C,EAAOnC,UAAW2sE,EAAsB,IAClFz9E,KAAK69E,eAAiB,CAClBj0E,IAAK,CACDnE,EAAG4D,KAAKO,IAAImH,EAAUtL,EAAGqL,EAAUrL,GACnCC,EAAG2D,KAAKO,IAAImH,EAAUrL,EAAGoL,EAAUpL,GACnCE,EAAGyD,KAAKO,IAAImH,EAAUnL,EAAGkL,EAAUlL,IAEvCkE,IAAK,CACDrE,EAAG4D,KAAKS,IAAIiH,EAAUtL,EAAGqL,EAAUrL,GACnCC,EAAG2D,KAAKS,IAAIiH,EAAUrL,EAAGoL,EAAUpL,GACnCE,EAAGyD,KAAKS,IAAIiH,EAAUnL,EAAGkL,EAAUlL,KAG3C5F,KAAK89E,cAAgB99E,KAAK69E,eAAe/zE,IAAIrE,EAAIzF,KAAK69E,eAAej0E,IAAInE,GAAKksE,EAC9E3xE,KAAK+9E,cAAgB/9E,KAAK69E,eAAe/zE,IAAIpE,EAAI1F,KAAK69E,eAAej0E,IAAIlE,GAAKisE,EAG1E3xE,KAAK29E,kBAAoB9L,EAAgB+L,MACzC59E,KAAK89E,cAAgB,IACrB99E,KAAK+9E,cAAgB,KAEzB/9E,KAAKg+E,YAAc30E,KAAKqtB,KACpB12B,KAAK89E,aAAe99E,KAAK89E,aAAe99E,KAAK+9E,aAAe/9E,KAAK+9E,cAOzE,gBACI,OAAO/9E,KAAKg+E,YAMhB,iBACI,OAAOh+E,KAAK89E,aAMhB,iBACI,OAAO99E,KAAK+9E,aAIN,oBAAoBv0E,EAAYE,EAAYjM,GAClD,MAAMwgF,EAAgBj+E,KAAKk+E,gBAAgB10E,EAAGE,GACxCy0E,EAAgBn+E,KAAKk+E,gBAAgBx0E,EAAGjM,GACxC2gF,EAAgBp+E,KAAKk+E,gBAAgBzgF,EAAG+L,GAG9C,KAFoBy0E,GAAiBE,GAAiBC,GAGlD,OAGJ,MAAMC,EAAK70E,EAAEkgE,WAAWhgE,GAClB40E,EAAK50E,EAAEggE,WAAWjsE,GAClB8gF,EAAK9gF,EAAEisE,WAAWlgE,GAClBg1E,EAAcn1E,KAAKS,IACrBm0E,EAAgBI,EAAK,EACrBF,EAAgBG,EAAK,EACrBF,EAAgBG,EAAK,GAEzB,GAAIF,IAAOG,EACP,OAAO,EACJ,GAAIF,IAAOE,EACd,OAAO,EACJ,GAAID,IAAOC,EACd,OAAO,EAGX,MAAM,IAAI/6E,MAAM,6BAGZ,gBAAgB+F,EAAYE,GAChC,OAAQ1J,KAAK29E,iBACT,KAAK9L,EAAgB+L,IACjB,OACKp0E,EAAE9D,IAAMgE,EAAEhE,GAAK2D,KAAKitB,IAAI9sB,EAAE/D,EAAIiE,EAAEjE,GAAKzF,KAAK89E,cAC1Ct0E,EAAE/D,IAAMiE,EAAEjE,GAAK4D,KAAKitB,IAAI9sB,EAAE9D,EAAIgE,EAAEhE,GAAK1F,KAAK+9E,cAC3Cv0E,EAAEkgE,WAAWhgE,GAAK1J,KAAKg+E,YAE/B,KAAKnM,EAAgBC,YACjB,OACKtoE,EAAE9D,IAAMgE,EAAEhE,GAAK2D,KAAKitB,IAAI9sB,EAAE/D,EAAIiE,EAAEjE,GAAKzF,KAAK89E,cAC1Ct0E,EAAE/D,IAAMiE,EAAEjE,GAAK4D,KAAKitB,IAAI9sB,EAAE9D,EAAIgE,EAAEhE,GAAK1F,KAAK+9E,eApH/D,2C,4HCtBA,aACA,OACA,QAEMN,EAAwB,CAAC,IAAI,EAAA93E,QAAW,IAAI,EAAAA,QAAW,IAAI,EAAAA,SAMjE,MAAaqsE,UAA6C,EAAA0L,oBAOtD,YAAqB3H,EAAwBxjE,EAAyB,EAAAmiB,kBAClE1xB,QADiB,KAAA+yE,QAAwB,KAAAxjE,aAKnC,oBAAoB/I,EAAYE,EAAYjM,GAClD,MAAMghF,EAAK,EAAA/pD,iBAAiBva,eAAena,KAAKuS,WAAY/I,EAAGi0E,EAAsB,IAC/EiB,EAAK,EAAAhqD,iBAAiBva,eAAena,KAAKuS,WAAY7I,EAAG+zE,EAAsB,IAC/EkB,EAAK,EAAAjqD,iBAAiBva,eAAena,KAAKuS,WAAY9U,EAAGggF,EAAsB,IAE/EzqC,EAAQyrC,EAAGhH,QAAQiH,GACnBE,EAAOF,EAAGjH,QAAQkH,GAClBE,EAAQF,EAAGlH,QAAQgH,GAGnBjhF,EAAI6L,KAAKS,IAAIkpC,EAAO3pC,KAAKS,IAAI80E,EAAMC,IAGzC,KAAIrhF,EAAIwC,KAAK+1E,OAAb,CAIA,GAAIv4E,IAAMw1C,EACN,OAAO,EACJ,GAAIx1C,IAAMohF,EACb,OAAO,EACJ,GAAIphF,IAAMqhF,EACb,OAAO,EAGX,MAAM,IAAIp7E,MAAM,8BArCxB,0C,4GCVA,SAAiBssE,GAIA,EAAA+O,kBAA4B,EAI5B,EAAAC,kBAA4B,EAO5B,EAAA/O,oBAAsB,IAfvC,CAAiB,EAAAD,uBAAA,EAAAA,qBAAoB,M,uHCCrC,MAGMxzD,EAHN,KAGeC,cAAcvc,SAASvB,OAAO,mCAgB7C,wCASI,YAAYsgF,GACRh/E,KAAKi/E,cAAgBD,EAWzB,sBAAsB/wD,EAAe7rB,EAAa0Q,GAC9C,OAAO,EAWX,qBAAqBmb,EAAe7rB,EAAa0Q,GAE7C,OADA9S,KAAKk/E,mBAAmBjxD,EAAO7rB,IACxB,EAWX,wBAAwB6rB,EAAe7rB,EAAa0Q,GAChD,OAAO,EASH,mBAAmBmb,EAAe7rB,GAElCpC,KAAKm/E,qBAAqBlxD,IAC1BjuB,KAAKo/E,kBAAkBh9E,EAAKpC,KAAKi/E,cAAe,QAIhD,kBAAkB78E,EAAai9E,EAAqBtqD,GACxD,MAAM12B,EAAQ2B,KAAKs/E,kBAAkBl9E,EAAKi9E,EAAatqD,QACzC/yB,IAAV3D,IACA+D,EAAIqO,QAAQskB,GAAY12B,GAIxB,kBAAkB+D,EAAai9E,EAAqBtqD,GACxDxY,EAAOlE,IAAI,sBAAuB5Q,KAAKC,UAAUtF,IACjD,MAAMu8E,EAAKU,EACLhhF,EAAQ+D,EAAIuO,OAAO,GAAGokB,KAAY4pD,KAExC,OADApiE,EAAOlE,IAAI,eAAgB,GAAG0c,KAAY4pD,IAAMtgF,GAC3B,iBAAVA,GAAsBA,EAAMiD,OAAS,GAC5Cib,EAAOlE,IAAI,cAAe,GAAG0c,KAAY4pD,IAAMtgF,GACxCA,QAEP,EAIA,qBAAqB4vB,GACzB,MAAiB,eAAVA,K,gHCvGf,aACA,QAGM1R,EAAS,EAAAC,cAAcvc,SAASvB,OAAO,4BAW7C,MAAa4yB,UAAiC,EAAAC,0BAC1C,YAAY8V,GACRrkC,MAAMqkC,GAIA,iBACNM,EACAC,EACA3Z,EACA7rB,EACAylC,GAGA,OADA7nC,KAAKk/E,mBAAmBjxD,EAAO7rB,GACxBY,MAAMmlC,iBAAiBR,EAAgBC,EAAe3Z,EAAO7rB,EAAKylC,GAarE,mBAAmB5Z,EAAe7rB,GAElCpC,KAAKu/E,OAAOtxD,GACZjuB,KAAKo/E,kBAAkBh9E,EAAK,UAAW,QAChCpC,KAAKw/E,WAAWvxD,GACvBjuB,KAAKo/E,kBAAkBh9E,EAAK,UAAW,YAChCpC,KAAKy/E,WAAWxxD,GACvBjuB,KAAKo/E,kBAAkBh9E,EAAK,UAAW,YAChCpC,KAAK0/E,aAAazxD,GACzBjuB,KAAKo/E,kBAAkBh9E,EAAK,UAAW,cAChCpC,KAAK2/E,OAAO1xD,GACnBjuB,KAAKo/E,kBAAkBh9E,EAAK,UAAW,QAChCpC,KAAK4/E,UAAU3xD,GACtBjuB,KAAKo/E,kBAAkBh9E,EAAK,UAAW,WAEhCpC,KAAK6/E,QAAQ5xD,GACpBjuB,KAAKo/E,kBAAkBh9E,EAAK,SAErBpC,KAAK8/E,YAAY7xD,GACxBjuB,KAAKo/E,kBAAkBh9E,EAAK,cAErBpC,KAAK+/E,WAAW9xD,GACvBjuB,KAAKo/E,kBAAkBh9E,EAAK,OAAQ,QAC7BpC,KAAKggF,aAAa/xD,GACzBjuB,KAAKo/E,kBAAkBh9E,EAAK,OAAQ,UAC7BpC,KAAKigF,cAAchyD,GAC1BjuB,KAAKo/E,kBAAkBh9E,EAAK,OAAQ,WAC7BpC,KAAKkgF,gBAAgBjyD,GAC5BjuB,KAAKo/E,kBAAkBh9E,EAAK,OAAQ,aAC7BpC,KAAKmgF,UAAUlyD,GACtBjuB,KAAKo/E,kBAAkBh9E,EAAK,OAAQ,cAC7BpC,KAAKogF,QAAQnyD,GACpBjuB,KAAKo/E,kBAAkBh9E,EAAK,OAAQ,SAE7BpC,KAAKqgF,UAAUpyD,GACtBjuB,KAAKo/E,kBAAkBh9E,EAAK,WAErBpC,KAAKsgF,SAASryD,GACrBjuB,KAAKo/E,kBAAkBh9E,EAAK,SAErBpC,KAAKugF,eAAetyD,GAC3BjuB,KAAKo/E,kBAAkBh9E,EAAK,iBACrBpC,KAAKwgF,cAAcvyD,GAC1BjuB,KAAKo/E,kBAAkBh9E,EAAK,gBACrBpC,KAAKygF,cAAcxyD,GAC1BjuB,KAAKo/E,kBAAkBh9E,EAAK,gBACrBpC,KAAK0gF,aAAazyD,GACzBjuB,KAAKo/E,kBAAkBh9E,EAAK,eACrBpC,KAAK2gF,aAAa1yD,GACzBjuB,KAAKo/E,kBAAkBh9E,EAAK,eACrBpC,KAAK4gF,aAAa3yD,GACzBjuB,KAAKo/E,kBAAkBh9E,EAAK,eACrBpC,KAAK6gF,cAAc5yD,GAC1BjuB,KAAKo/E,kBAAkBh9E,EAAK,gBACrBpC,KAAK8gF,WAAW7yD,GACvBjuB,KAAKo/E,kBAAkBh9E,EAAK,aAErBpC,KAAK+gF,WAAW9yD,IACvBjuB,KAAKo/E,kBAAkBh9E,EAAK,YAC5BA,EAAIqO,QAAQ8E,MA/FO,UAgGnBnT,EAAIqO,QAAQuwE,QA/Fa,OAgGzB5+E,EAAIqO,QAAQwwE,WA/FY,IAgGxB7+E,EAAIqO,QAAQ8Y,OA/FQ,MAiGpBhN,EAAO6V,KAAK,8BAA8BhwB,EAAIqO,QAAQouB,aAItD7+B,KAAKkhF,SAASjzD,KACd7rB,EAAIqO,QAAQ0wE,UAAY,UAIxBnhF,KAAKohF,SAASnzD,KACd7rB,EAAIqO,QAAQ0wE,UAAY,UAIxB,kBACJ/+E,EACA6rB,EACAozD,EACAF,GAEA/+E,EAAIqO,QAAQouB,OAAS5Q,OACJjsB,IAAbq/E,IACAj/E,EAAIqO,QAAQ6wE,MAAQD,QAENr/E,IAAdm/E,IACA/+E,EAAIqO,QAAQ0wE,UAAYA,GAIxB,OAAOlzD,GACX,MAAiB,aAAVA,GAAkC,sBAAVA,EAG3B,WAAWA,GACf,MAAiB,aAAVA,EAGH,WAAWA,GACf,MAAiB,aAAVA,EAGH,aAAaA,GACjB,OAAOA,EAAMha,QAAQ,eAAiB,GAAe,YAAVga,EAGvC,OAAOA,GACX,MACc,SAAVA,GACU,cAAVA,GACU,kBAAVA,GACU,kBAAVA,GACAA,EAAMha,QAAQ,UAAY,GAC1Bga,EAAMha,QAAQ,WAAa,EAI3B,UAAUga,GACd,MACc,kBAAVA,GACU,oBAAVA,GACU,aAAVA,GACU,eAAVA,GACU,YAAVA,GACAA,EAAMha,QAAQ,UAAY,EAI1B,QAAQga,GACZ,MACc,gBAAVA,GACU,iBAAVA,GACU,UAAVA,GACU,SAAVA,GACU,QAAVA,GACU,uBAAVA,GACU,UAAVA,EAIA,YAAYA,GAChB,OAAOA,EAAMha,QAAQ,eAAiB,EAGlC,WAAWga,GACf,OACIA,EAAMha,QAAQ,QAAU,GACd,iBAAVga,GACU,iBAAVA,GACU,oBAAVA,GACU,iBAAVA,GACU,6BAAVA,GACU,WAAVA,GACU,oBAAVA,EAIA,aAAaA,GACjB,OACIA,EAAMha,QAAQ,qBAAuB,GACrCga,EAAMha,QAAQ,qBAAuB,GACrCga,EAAMha,QAAQ,oBAAsB,GACpCga,EAAMha,QAAQ,eAAiB,EAG/B,cAAcga,GAClB,OACIA,EAAMha,QAAQ,qBAAuB,GACrCga,EAAMha,QAAQ,eAAiB,GAC/Bga,EAAMha,QAAQ,eAAiB,GAC/Bga,EAAMha,QAAQ,aAAe,GAC7Bga,EAAMha,QAAQ,aAAe,GAC7Bga,EAAMha,QAAQ,uBAAyB,GACvCga,EAAMha,QAAQ,uBAAyB,EAIvC,gBAAgBga,GACpB,OACIA,EAAMha,QAAQ,oBAAsB,GACpCga,EAAMha,QAAQ,oBAAsB,GACpCga,EAAMha,QAAQ,mBAAqB,GACnCga,EAAMha,QAAQ,mBAAqB,EAInC,UAAUga,GACd,MAAiB,YAAVA,EAGH,QAAQA,GACZ,MAAiB,eAAVA,EAGH,SAASA,GACb,OAAOA,EAAMha,QAAQ,UAAY,EAG7B,eAAega,GACnB,MAAiB,iBAAVA,GAAsC,kBAAVA,EAG/B,aAAaA,GACjB,MAAiB,SAAVA,GAAoBA,EAAMha,QAAQ,QAAU,EAG/C,cAAcga,GAClB,MAAiB,SAAVA,EAGH,cAAcA,GAClB,MAAiB,YAAVA,EAGH,aAAaA,GACjB,MACc,SAAVA,GACU,oBAAVA,GACU,gBAAVA,GACU,gBAAVA,EAIA,aAAaA,GACjB,MACc,eAAVA,GAAoC,gBAAVA,GAA2BA,EAAMha,QAAQ,eAAiB,EAIpF,cAAcga,GAClB,OAAOA,EAAMha,QAAQ,eAAiB,EAGlC,WAAWga,GACf,MACc,uBAAVA,GACU,mBAAVA,GACAA,EAAMha,QAAQ,UAAY,EAI1B,UAAUga,GACd,MAAiB,YAAVA,EAGH,WAAWA,GACf,OAAOA,EAAMha,QAAQ,aAAe,EAGhC,SAASga,GACb,OAAOA,EAAMha,QAAQ,WAAa,EAG9B,SAASga,GACb,OAAOA,EAAMha,QAAQ,WAAa,GA5R1C,8B,0GCHA,2BAGI,YAAqByb,GAAA,KAAAA,oBAFrB,KAAAN,eAAyB,EAIzB,WAAWnB,EAAenb,GACtB,OAAO9S,KAAK0vB,kBAAkBqY,WAAW9Z,GAG7C,kBAAkBA,GACd,OAAOjuB,KAAK0vB,kBAAkB+X,aAAaxZ,EAAO,SAEtD,iBAAiBA,GACb,OAAOjuB,KAAK0vB,kBAAkB+X,aAAaxZ,EAAO,QAEtD,oBAAoBA,GAChB,OAAOjuB,KAAK0vB,kBAAkB+X,aAAaxZ,EAAO,WAEtD,YACI,OAAO,K,+GChCf,cACA,OAGA,QAEA,OAwDA,SAAS8Q,EAAoBnpB,GACzB,OAAQA,GACJ,IAAK,aAEL,IAAK,kBACD,MAAO,OACX,IAAK,UAEL,IAAK,eACD,MAAO,UACX,IAAK,QAEL,IAAK,aACD,MAAO,QACX,QACI,MAAO,WAInB,MAAM2rE,EAAS,IAAIniF,EAAMuG,QACnB67E,EAAS,IAAIpiF,EAAMoG,QASzB,SAASi8E,EAAa94E,EAAwBsW,GAG1C,OAFA,EAAAhF,sBAAsB7J,aAAa,EAAAlI,eAAeW,aAAaF,GAAW44E,GAC1EC,EAAOx6E,IAAIu6E,EAAO97E,EAAG87E,EAAO77E,GACrB,EAAAusE,WAnFa,KAmFehzD,EAAYuiE,GAAQ,EAAO,IAAIpiF,EAAMoG,SAG5E,SAASk8E,EACLliD,EACAvgB,GAQA,MAAO,CAAEsgB,iBANgBC,EAAYz5B,IAAI4C,GAC9B,EAAAT,eAAeW,aAAaF,IAKZ+2B,UAFTF,EAAYz5B,IAAI4C,GAAY84E,EAAa94E,EAAUsW,KAKzE,SAAS0iE,EACLzzD,EACAjP,GAEA,MAAsB,eAAlBiP,EAAStY,KACF,CAAC8rE,EAA0BxzD,EAASsR,YAAavgB,IAGrDiP,EAASsR,YAAYz5B,IAAI67E,GAC5BF,EAA0BE,EAAY3iE,IAI9C,SAAS4iE,EAAariD,EAA+BvgB,GAKjD,MAAO,CAAE4gB,MAJKL,EAAYz5B,IAAIg6B,IAC1B,MAAM,UAAEL,GAAcgiD,EAA0B3hD,EAAM9gB,GACtD,OAAOygB,KAKf,SAASoiD,EACL5zD,EACAjP,GAEA,MAAsB,YAAlBiP,EAAStY,KACF,CAACisE,EAAa3zD,EAASsR,YAAavgB,IAGxCiP,EAASsR,YAAYz5B,IAAI65B,GAAWiiD,EAAajiD,EAAS3gB,IAGrE,SAAS8iE,EACL7zD,EACAjP,GAEA,MAAsB,UAAlBiP,EAAStY,KACF,CAAC6rE,EAAavzD,EAASsR,YAAavgB,IAGxCiP,EAASsR,YAAYz5B,IAAI4C,GAAY84E,EAAa94E,EAAUsW,IAGvE,gCAGI,YACasf,EACAE,EACAD,GAFA,KAAAD,cACA,KAAAE,aACA,KAAAD,WALb,KAAA3Q,GAAK,0BAQL,WAAWm0D,GACP,OACIA,GAC2B,sBAA3BA,EAAkBpsE,MAClBxU,MAAMC,QAAQ2gF,EAAkB7jD,UAIxC,QAAQ6jD,EAA6C/iE,GACjD,IAAK7d,MAAMC,QAAQ2gF,EAAkB7jD,WAAmD,IAAtC6jD,EAAkB7jD,SAAS78B,OACzE,OAGJ,MAAM,QAAEsR,GAAYqM,EAEd+f,EAASpsB,EAAQE,MACjBmsB,EAAQ51B,KAAKS,IAAI,EAAG8I,EAAQE,OAAS9S,KAAKu+B,YAAYW,oBAAsB,IAGlF,IAAK,MAAMhB,KAAW8jD,EAAkB7jD,SAAU,CAC9C,MAAMW,EAAgBC,EAAoBb,EAAQhQ,SAAStY,MAErDxT,EAAM,IAAI,EAAAw8B,OAAO,OAAD,wBACfV,EAAQx+B,YAAU,CACrBm/B,OAPO,UAQPG,SACAC,QACAH,mBAGJ,OAAQZ,EAAQhQ,SAAStY,MACrB,IAAK,aACL,IAAK,kBAAmB,CACpB,MAAMsY,EAAWyzD,EAAoBzjD,EAAQhQ,SAAUjP,GACvDjf,KAAKu+B,YAAYxP,mBAjBd,UAxKC,KA4LAb,EACA9rB,EACA48B,GAEJ,MAEJ,IAAK,UACL,IAAK,eAAgB,CACjB,MAAM9Q,EAAW4zD,EAAuB5jD,EAAQhQ,SAAUjP,GAC1Djf,KAAKu+B,YAAYrP,sBA7Bd,UAxKC,KAwMAhB,EACA9rB,EACA48B,GAEJ,MAEJ,IAAK,QACL,IAAK,aAAc,CACf,MAAM9Q,EAAW6zD,EAAqB7jD,EAAQhQ,SAAUjP,GACxDjf,KAAKu+B,YAAY5P,oBAzCd,UAxKC,KAoNAT,EACA9rB,EACA48B,GAEJ,Y,uGCnOpB,cACA,QAKA,wBAMI,eACI,EAAAvN,qBAAqBC,cAAcC,SAAS,CACxCC,YAAa,EAAAxd,uBACbyd,QAAUnV,GAAsB,EAAAi1C,aAAa5/B,MAAMrV,Q,6BCoB/D,SAASulE,EAAa/0C,EAAIC,EAAI1nC,EAAGC,EAAG6mC,EAAIC,GAEpC,IAAI4Z,EAAK7Z,EAAK9mC,EACV4gD,EAAK7Z,EAAK9mC,EAEd,GAAW,IAAP0gD,GAAmB,IAAPC,EAAU,CAEtB,IAAI/nD,IAAM4uC,EAAKznC,GAAK2gD,GAAMjZ,EAAKznC,GAAK2gD,IAAOD,EAAKA,EAAKC,EAAKA,GAEtD/nD,EAAI,GACJmH,EAAI8mC,EACJ7mC,EAAI8mC,GAEGluC,EAAI,IACXmH,GAAK2gD,EAAK9nD,EACVoH,GAAK2gD,EAAK/nD,GAOlB,OAHA8nD,EAAKlZ,EAAKznC,GAGE2gD,GAFZC,EAAKlZ,EAAKznC,GAEY2gD,EC9DX,SAAS67B,EAAcr0D,EAAIjY,EAAMs7C,EAAM/xB,GAClD,IAAIjB,EAAU,CACVrQ,QAAkB,IAAPA,EAAqB,KAAOA,EACvCjY,KAAMA,EACNsY,SAAUgjC,EACV/xB,KAAMA,EACN3G,KAAM3uB,IACN4uB,KAAM5uB,IACN8uB,MAAO9uB,IACP0Q,MAAO1Q,KAGX,OAGJ,SAAkBq0B,GACd,IAAIgzB,EAAOhzB,EAAQhQ,SACftY,EAAOsoB,EAAQtoB,KAEnB,GAAa,UAATA,GAA6B,eAATA,GAAkC,eAATA,EAC7CusE,EAAajkD,EAASgzB,QAEnB,GAAa,YAATt7C,GAA+B,oBAATA,EAC7B,IAAK,IAAIxY,EAAI,EAAGA,EAAI8zD,EAAK5vD,OAAQlE,IAC7B+kF,EAAajkD,EAASgzB,EAAK9zD,SAG5B,GAAa,iBAATwY,EACP,IAAKxY,EAAI,EAAGA,EAAI8zD,EAAK5vD,OAAQlE,IACzB,IAAK,IAAImsC,EAAI,EAAGA,EAAI2nB,EAAK9zD,GAAGkE,OAAQioC,IAChC44C,EAAajkD,EAASgzB,EAAK9zD,GAAGmsC,IAnB1C64C,CAASlkD,GACFA,EAwBX,SAASikD,EAAajkD,EAASgzB,GAC3B,IAAK,IAAI9zD,EAAI,EAAGA,EAAI8zD,EAAK5vD,OAAQlE,GAAK,EAClC8gC,EAAQ1F,KAAOnvB,KAAKO,IAAIs0B,EAAQ1F,KAAM04B,EAAK9zD,IAC3C8gC,EAAQzF,KAAOpvB,KAAKO,IAAIs0B,EAAQzF,KAAMy4B,EAAK9zD,EAAI,IAC/C8gC,EAAQvF,KAAOtvB,KAAKS,IAAIo0B,EAAQvF,KAAMu4B,EAAK9zD,IAC3C8gC,EAAQ3jB,KAAOlR,KAAKS,IAAIo0B,EAAQ3jB,KAAM22C,EAAK9zD,EAAI,IClBvD,SAASilF,EAAelkD,EAAUJ,EAAS5N,EAASoN,GAChD,GAAKQ,EAAQ7P,SAAb,CAEA,IAAIu+C,EAAS1uC,EAAQ7P,SAASsR,YAC1B5pB,EAAOmoB,EAAQ7P,SAAStY,KACxB+nB,EAAYt0B,KAAKgS,IAAI8U,EAAQwN,YAAc,GAAKxN,EAAQqN,SAAWrN,EAAQlf,QAAS,GACpFid,EAAW,GACXL,EAAKkQ,EAAQlQ,GAMjB,GALIsC,EAAQ0N,UACRhQ,EAAKkQ,EAAQr+B,WAAWywB,EAAQ0N,WACzB1N,EAAQ2N,aACfjQ,EAAK0P,GAAS,GAEL,UAAT3nB,EACA6rE,EAAahV,EAAQv+C,QAElB,GAAa,eAATtY,EACP,IAAK,IAAIxY,EAAI,EAAGA,EAAIqvE,EAAOnrE,OAAQlE,IAC/BqkF,EAAahV,EAAOrvE,GAAI8wB,QAGzB,GAAa,eAATtY,EACP0sE,EAAY7V,EAAQv+C,EAAUyP,GAAW,QAEtC,GAAa,oBAAT/nB,EAA4B,CACnC,GAAIua,EAAQyN,YAAa,CAErB,IAAKxgC,EAAI,EAAGA,EAAIqvE,EAAOnrE,OAAQlE,IAC3B8wB,EAAW,GACXo0D,EAAY7V,EAAOrvE,GAAI8wB,EAAUyP,GAAW,GAC5CQ,EAASj4B,KAAKg8E,EAAcr0D,EAAI,aAAcK,EAAU6P,EAAQr+B,aAEpE,OAEA6iF,EAAa9V,EAAQv+C,EAAUyP,GAAW,QAG3C,GAAa,YAAT/nB,EACP2sE,EAAa9V,EAAQv+C,EAAUyP,GAAW,OAEvC,IAAa,iBAAT/nB,EAMJ,IAAa,uBAATA,EAA+B,CACtC,IAAKxY,EAAI,EAAGA,EAAI2gC,EAAQ7P,SAASR,WAAWpsB,OAAQlE,IAChDilF,EAAelkD,EAAU,CACrBtQ,GAAIA,EACJK,SAAU6P,EAAQ7P,SAASR,WAAWtwB,GACtCsC,WAAYq+B,EAAQr+B,YACrBywB,EAASoN,GAEhB,OAEA,MAAM,IAAI95B,MAAM,6CAfhB,IAAKrG,EAAI,EAAGA,EAAIqvE,EAAOnrE,OAAQlE,IAAK,CAChC,IAAIwiC,EAAU,GACd2iD,EAAa9V,EAAOrvE,GAAIwiC,EAASjC,GAAW,GAC5CzP,EAAShoB,KAAK05B,IAetBzB,EAASj4B,KAAKg8E,EAAcr0D,EAAIjY,EAAMsY,EAAU6P,EAAQr+B,cAG5D,SAAS+hF,EAAahV,EAAQ+V,GAC1BA,EAAIt8E,KAAKu8E,EAAShW,EAAO,KACzB+V,EAAIt8E,KAAKw8E,EAASjW,EAAO,KACzB+V,EAAIt8E,KAAK,GAGb,SAASo8E,EAAYviD,EAAMyiD,EAAK7kD,EAAW2uC,GAIvC,IAHA,IAAIqW,EAAIC,EACJnzE,EAAO,EAEF85B,EAAI,EAAGA,EAAIxJ,EAAKz+B,OAAQioC,IAAK,CAClC,IAAI9jC,EAAIg9E,EAAS1iD,EAAKwJ,GAAG,IACrB7jC,EAAIg9E,EAAS3iD,EAAKwJ,GAAG,IAEzBi5C,EAAIt8E,KAAKT,GACT+8E,EAAIt8E,KAAKR,GACT88E,EAAIt8E,KAAK,GAELqjC,EAAI,IAEA95B,GADA68D,GACSqW,EAAKj9E,EAAID,EAAIm9E,GAAM,EAEpBv5E,KAAKqtB,KAAKrtB,KAAKgS,IAAI5V,EAAIk9E,EAAI,GAAKt5E,KAAKgS,IAAI3V,EAAIk9E,EAAI,KAGjED,EAAKl9E,EACLm9E,EAAKl9E,EAGT,IAAI2zE,EAAOmJ,EAAIlhF,OAAS,EACxBkhF,EAAI,GAAK,EFjHE,SAASK,EAASpW,EAAQqW,EAAOzJ,EAAM0J,GAWlD,IAVA,IAGIxlD,EAHAylD,EAAYD,EACZrgC,EAAO22B,EAAOyJ,GAAU,EACxBG,EAAc5J,EAAOyJ,EAGrBz2C,EAAKogC,EAAOqW,GACZx2C,EAAKmgC,EAAOqW,EAAQ,GACpBv2C,EAAKkgC,EAAO4M,GACZ7sC,EAAKigC,EAAO4M,EAAO,GAEdj8E,EAAI0lF,EAAQ,EAAG1lF,EAAIi8E,EAAMj8E,GAAK,EAAG,CACtC,IAAIM,EAAIukF,EAAaxV,EAAOrvE,GAAIqvE,EAAOrvE,EAAI,GAAIivC,EAAIC,EAAIC,EAAIC,GAE3D,GAAI9uC,EAAIslF,EACJzlD,EAAQngC,EACR4lF,EAAYtlF,OAET,GAAIA,IAAMslF,EAAW,CAIxB,IAAIE,EAAW75E,KAAKitB,IAAIl5B,EAAIslD,GACxBwgC,EAAWD,IACX1lD,EAAQngC,EACR6lF,EAAcC,IAKtBF,EAAYD,IACRxlD,EAAQulD,EAAQ,GAAGD,EAASpW,EAAQqW,EAAOvlD,EAAOwlD,GACtDtW,EAAOlvC,EAAQ,GAAKylD,EAChB3J,EAAO97C,EAAQ,GAAGslD,EAASpW,EAAQlvC,EAAO87C,EAAM0J,IEiFxDF,CAASL,EAAK,EAAGnJ,EAAM17C,GACvB6kD,EAAInJ,EAAO,GAAK,EAEhBmJ,EAAI/yE,KAAOpG,KAAKitB,IAAI7mB,GACpB+yE,EAAIzwD,MAAQ,EACZywD,EAAI7+C,IAAM6+C,EAAI/yE,KAGlB,SAAS8yE,EAAa1iD,EAAO2iD,EAAK7kD,EAAW2uC,GACzC,IAAK,IAAIlvE,EAAI,EAAGA,EAAIyiC,EAAMv+B,OAAQlE,IAAK,CACnC,IAAI8zD,EAAO,GACXoxB,EAAYziD,EAAMziC,GAAI8zD,EAAMvzB,EAAW2uC,GACvCkW,EAAIt8E,KAAKgrD,IAIjB,SAASuxB,EAASh9E,GACd,OAAOA,EAAI,IAAM,GAGrB,SAASi9E,EAASh9E,GACd,IAAI2U,EAAMhR,KAAKgR,IAAI3U,EAAI2D,KAAKkP,GAAK,KAC7B4qE,EAAK,GAAM,IAAO95E,KAAKgP,KAAK,EAAIgC,IAAQ,EAAIA,IAAQhR,KAAKkP,GAC7D,OAAO4qE,EAAK,EAAI,EAAIA,EAAK,EAAI,EAAIA,EClItB,SAAS/F,EAAKj/C,EAAU/e,EAAOgkE,EAAIC,EAAIv+B,EAAMw+B,EAAQC,EAAQpzD,GAKxE,GAFAkzD,GAAMjkE,EAEFkkE,IAHJF,GAAMhkE,IAGcmkE,EAASF,EAAI,OAAOllD,EACnC,GAAIolD,EAASH,GAAME,GAAUD,EAAI,OAAO,KAI7C,IAFA,IAAIG,EAAU,GAELpmF,EAAI,EAAGA,EAAI+gC,EAAS78B,OAAQlE,IAAK,CAEtC,IAAI8gC,EAAUC,EAAS/gC,GACnB8wB,EAAWgQ,EAAQhQ,SACnBtY,EAAOsoB,EAAQtoB,KAEfhM,EAAe,IAATk7C,EAAa5mB,EAAQ1F,KAAO0F,EAAQzF,KAC1C3uB,EAAe,IAATg7C,EAAa5mB,EAAQvF,KAAOuF,EAAQ3jB,KAE9C,GAAI3Q,GAAOw5E,GAAMt5E,EAAMu5E,EACnBG,EAAQt9E,KAAKg4B,QAEV,KAAIp0B,EAAMs5E,GAAMx5E,GAAOy5E,GAAvB,CAIP,IAAII,EAAc,GAElB,GAAa,UAAT7tE,GAA6B,eAATA,EACpB8tE,EAAWx1D,EAAUu1D,EAAaL,EAAIC,EAAIv+B,QAEvC,GAAa,eAATlvC,EACP+tE,EAASz1D,EAAUu1D,EAAaL,EAAIC,EAAIv+B,GAAM,EAAO30B,EAAQyN,kBAE1D,GAAa,oBAAThoB,EACPguE,EAAU11D,EAAUu1D,EAAaL,EAAIC,EAAIv+B,GAAM,QAE5C,GAAa,YAATlvC,EACPguE,EAAU11D,EAAUu1D,EAAaL,EAAIC,EAAIv+B,GAAM,QAE5C,GAAa,iBAATlvC,EACP,IAAK,IAAI2zB,EAAI,EAAGA,EAAIrb,EAAS5sB,OAAQioC,IAAK,CACtC,IAAI3J,EAAU,GACdgkD,EAAU11D,EAASqb,GAAI3J,EAASwjD,EAAIC,EAAIv+B,GAAM,GAC1CllB,EAAQt+B,QACRmiF,EAAYv9E,KAAK05B,GAK7B,GAAI6jD,EAAYniF,OAAQ,CACpB,GAAI6uB,EAAQyN,aAAwB,eAAThoB,EAAuB,CAC9C,IAAK2zB,EAAI,EAAGA,EAAIk6C,EAAYniF,OAAQioC,IAChCi6C,EAAQt9E,KAAKg8E,EAAchkD,EAAQrQ,GAAIjY,EAAM6tE,EAAYl6C,GAAIrL,EAAQiB,OAEzE,SAGS,eAATvpB,GAAkC,oBAATA,IACE,IAAvB6tE,EAAYniF,QACZsU,EAAO,aACP6tE,EAAcA,EAAY,IAE1B7tE,EAAO,mBAGF,UAATA,GAA6B,eAATA,IACpBA,EAA8B,IAAvB6tE,EAAYniF,OAAe,QAAU,cAGhDkiF,EAAQt9E,KAAKg8E,EAAchkD,EAAQrQ,GAAIjY,EAAM6tE,EAAavlD,EAAQiB,SAI1E,OAAOqkD,EAAQliF,OAASkiF,EAAU,KAGtC,SAASE,EAAWxyB,EAAM2yB,EAAST,EAAIC,EAAIv+B,GACvC,IAAK,IAAI1nD,EAAI,EAAGA,EAAI8zD,EAAK5vD,OAAQlE,GAAK,EAAG,CACrC,IAAIoM,EAAI0nD,EAAK9zD,EAAI0nD,GAEbt7C,GAAK45E,GAAM55E,GAAK65E,IAChBQ,EAAQ39E,KAAKgrD,EAAK9zD,IAClBymF,EAAQ39E,KAAKgrD,EAAK9zD,EAAI,IACtBymF,EAAQ39E,KAAKgrD,EAAK9zD,EAAI,MAKlC,SAASumF,EAASzyB,EAAM2yB,EAAST,EAAIC,EAAIv+B,EAAMwnB,EAAWwX,GAOtD,IALA,IAGIC,EAAQzlF,EAHRgI,EAAQ09E,EAAS9yB,GACjB+yB,EAAqB,IAATn/B,EAAao/B,EAAaC,EACtC5jD,EAAM2wB,EAAKn/B,MAGN30B,EAAI,EAAGA,EAAI8zD,EAAK5vD,OAAS,EAAGlE,GAAK,EAAG,CACzC,IAAIivC,EAAK6kB,EAAK9zD,GACVkvC,EAAK4kB,EAAK9zD,EAAI,GACdgnF,EAAKlzB,EAAK9zD,EAAI,GACdmvC,EAAK2kB,EAAK9zD,EAAI,GACdovC,EAAK0kB,EAAK9zD,EAAI,GACdoM,EAAa,IAATs7C,EAAazY,EAAKC,EACtB5iC,EAAa,IAATo7C,EAAavY,EAAKC,EACtB63C,GAAS,EAETP,IAAcC,EAAS16E,KAAKqtB,KAAKrtB,KAAKgS,IAAIgxB,EAAKE,EAAI,GAAKljC,KAAKgS,IAAIixB,EAAKE,EAAI,KAE1EhjC,EAAI45E,EAEA15E,EAAI05E,IACJ9kF,EAAI2lF,EAAU39E,EAAO+lC,EAAIC,EAAIC,EAAIC,EAAI42C,GACjCU,IAAcx9E,EAAMyrB,MAAQwO,EAAMwjD,EAASzlF,IAE5CkL,EAAI65E,EAEP35E,EAAI25E,IACJ/kF,EAAI2lF,EAAU39E,EAAO+lC,EAAIC,EAAIC,EAAIC,EAAI62C,GACjCS,IAAcx9E,EAAMyrB,MAAQwO,EAAMwjD,EAASzlF,IAGnDgmF,EAASh+E,EAAO+lC,EAAIC,EAAI83C,GAExB16E,EAAI05E,GAAM55E,GAAK45E,IAEf9kF,EAAI2lF,EAAU39E,EAAO+lC,EAAIC,EAAIC,EAAIC,EAAI42C,GACrCiB,GAAS,GAET36E,EAAI25E,GAAM75E,GAAK65E,IAEf/kF,EAAI2lF,EAAU39E,EAAO+lC,EAAIC,EAAIC,EAAIC,EAAI62C,GACrCgB,GAAS,IAGR/X,GAAa+X,IACVP,IAAcx9E,EAAMq9B,IAAMpD,EAAMwjD,EAASzlF,GAC7CulF,EAAQ39E,KAAKI,GACbA,EAAQ09E,EAAS9yB,IAGjB4yB,IAAcvjD,GAAOwjD,GAI7B,IAAI1K,EAAOnoB,EAAK5vD,OAAS,EACzB+qC,EAAK6kB,EAAKmoB,GACV/sC,EAAK4kB,EAAKmoB,EAAO,GACjB+K,EAAKlzB,EAAKmoB,EAAO,IACjB7vE,EAAa,IAATs7C,EAAazY,EAAKC,IACb82C,GAAM55E,GAAK65E,GAAIiB,EAASh+E,EAAO+lC,EAAIC,EAAI83C,GAGhD/K,EAAO/yE,EAAMhF,OAAS,EAClBgrE,GAAa+M,GAAQ,IAAM/yE,EAAM+yE,KAAU/yE,EAAM,IAAMA,EAAM+yE,EAAO,KAAO/yE,EAAM,KACjFg+E,EAASh+E,EAAOA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAI1CA,EAAMhF,QACNuiF,EAAQ39E,KAAKI,GAIrB,SAAS09E,EAASv8D,GACd,IAAInhB,EAAQ,GAIZ,OAHAA,EAAMmJ,KAAOgY,EAAKhY,KAClBnJ,EAAMyrB,MAAQtK,EAAKsK,MACnBzrB,EAAMq9B,IAAMlc,EAAKkc,IACVr9B,EAGX,SAASs9E,EAAU1yB,EAAM2yB,EAAST,EAAIC,EAAIv+B,EAAMwnB,GAC5C,IAAK,IAAIlvE,EAAI,EAAGA,EAAI8zD,EAAK5vD,OAAQlE,IAC7BumF,EAASzyB,EAAK9zD,GAAIymF,EAAST,EAAIC,EAAIv+B,EAAMwnB,GAAW,GAI5D,SAASgY,EAAS9B,EAAK/8E,EAAGC,EAAGE,GACzB48E,EAAIt8E,KAAKT,GACT+8E,EAAIt8E,KAAKR,GACT88E,EAAIt8E,KAAKN,GAGb,SAASs+E,EAAW1B,EAAKn2C,EAAIC,EAAIC,EAAIC,EAAI/mC,GACrC,IAAInH,GAAKmH,EAAI4mC,IAAOE,EAAKF,GAIzB,OAHAm2C,EAAIt8E,KAAKT,GACT+8E,EAAIt8E,KAAKomC,GAAME,EAAKF,GAAMhuC,GAC1BkkF,EAAIt8E,KAAK,GACF5H,EAGX,SAAS6lF,EAAW3B,EAAKn2C,EAAIC,EAAIC,EAAIC,EAAI9mC,GACrC,IAAIpH,GAAKoH,EAAI4mC,IAAOE,EAAKF,GAIzB,OAHAk2C,EAAIt8E,KAAKmmC,GAAME,EAAKF,GAAM/tC,GAC1BkkF,EAAIt8E,KAAKR,GACT88E,EAAIt8E,KAAK,GACF5H,EC1LX,SAASimF,EAAmBpmD,EAAUnH,GAGlC,IAFA,IAAIwtD,EAAc,GAETpnF,EAAI,EAAGA,EAAI+gC,EAAS78B,OAAQlE,IAAK,CACtC,IAGIqmF,EAHAvlD,EAAUC,EAAS/gC,GACnBwY,EAAOsoB,EAAQtoB,KAInB,GAAa,UAATA,GAA6B,eAATA,GAAkC,eAATA,EAC7C6tE,EAAcgB,EAAYvmD,EAAQhQ,SAAU8I,QAEzC,GAAa,oBAATphB,GAAuC,YAATA,EAAoB,CACzD6tE,EAAc,GACd,IAAK,IAAIl6C,EAAI,EAAGA,EAAIrL,EAAQhQ,SAAS5sB,OAAQioC,IACzCk6C,EAAYv9E,KAAKu+E,EAAYvmD,EAAQhQ,SAASqb,GAAIvS,SAEnD,GAAa,iBAATphB,EAEP,IADA6tE,EAAc,GACTl6C,EAAI,EAAGA,EAAIrL,EAAQhQ,SAAS5sB,OAAQioC,IAAK,CAE1C,IADA,IAAIm7C,EAAa,GACRC,EAAI,EAAGA,EAAIzmD,EAAQhQ,SAASqb,GAAGjoC,OAAQqjF,IAC5CD,EAAWx+E,KAAKu+E,EAAYvmD,EAAQhQ,SAASqb,GAAGo7C,GAAI3tD,IAExDysD,EAAYv9E,KAAKw+E,GAIzBF,EAAYt+E,KAAKg8E,EAAchkD,EAAQrQ,GAAIjY,EAAM6tE,EAAavlD,EAAQiB,OAG1E,OAAOqlD,EAGX,SAASC,EAAYz4D,EAAQgL,GACzB,IAAI4tD,EAAY,GAChBA,EAAUn1E,KAAOuc,EAAOvc,UAEHzN,IAAjBgqB,EAAO+F,QACP6yD,EAAU7yD,MAAQ/F,EAAO+F,MACzB6yD,EAAUjhD,IAAM3X,EAAO2X,KAG3B,IAAK,IAAIvmC,EAAI,EAAGA,EAAI4uB,EAAO1qB,OAAQlE,GAAK,EACpCwnF,EAAU1+E,KAAK8lB,EAAO5uB,GAAK45B,EAAQhL,EAAO5uB,EAAI,GAAI4uB,EAAO5uB,EAAI,IAEjE,OAAOwnF,EC/DI,SAASC,EAAc7mD,EAAM/sB,GACxC,GAAI+sB,EAAK8mD,YAAa,OAAO9mD,EAE7B,IAGI5gC,EAAGmsC,EAAGo7C,EAHNI,EAAK,GAAK/mD,EAAKp4B,EACfo/E,EAAKhnD,EAAKv4B,EACVmxC,EAAK5Y,EAAKt4B,EAGd,IAAKtI,EAAI,EAAGA,EAAI4gC,EAAKG,SAAS78B,OAAQlE,IAAK,CACvC,IAAI8gC,EAAUF,EAAKG,SAAS/gC,GACxB8zD,EAAOhzB,EAAQhQ,SACftY,EAAOsoB,EAAQtoB,KAInB,GAFAsoB,EAAQhQ,SAAW,GAEN,IAATtY,EACA,IAAK2zB,EAAI,EAAGA,EAAI2nB,EAAK5vD,OAAQioC,GAAK,EAC9BrL,EAAQhQ,SAAShoB,KAAK++E,EAAe/zB,EAAK3nB,GAAI2nB,EAAK3nB,EAAI,GAAIt4B,EAAQ8zE,EAAIC,EAAIpuC,SAG/E,IAAKrN,EAAI,EAAGA,EAAI2nB,EAAK5vD,OAAQioC,IAAK,CAC9B,IAAIxJ,EAAO,GACX,IAAK4kD,EAAI,EAAGA,EAAIzzB,EAAK3nB,GAAGjoC,OAAQqjF,GAAK,EACjC5kD,EAAK75B,KAAK++E,EAAe/zB,EAAK3nB,GAAGo7C,GAAIzzB,EAAK3nB,GAAGo7C,EAAI,GAAI1zE,EAAQ8zE,EAAIC,EAAIpuC,IAEzE1Y,EAAQhQ,SAAShoB,KAAK65B,IAOlC,OAFA/B,EAAK8mD,aAAc,EAEZ9mD,EAGX,SAASinD,EAAex/E,EAAGC,EAAGuL,EAAQ8zE,EAAIC,EAAIpuC,GAC1C,MAAO,CACHvtC,KAAKmW,MAAMvO,GAAUxL,EAAIs/E,EAAKC,IAC9B37E,KAAKmW,MAAMvO,GAAUvL,EAAIq/E,EAAKnuC,KCxCvB,SAASsuC,EAAW/mD,EAAUv4B,EAAGo/E,EAAIpuC,EAAIzmB,GAiBpD,IAhBA,IAAIwN,EAAY/3B,IAAMuqB,EAAQqN,QAAU,EAAIrN,EAAQwN,YAAc,GAAK/3B,GAAKuqB,EAAQlf,QAChF+sB,EAAO,CACPG,SAAU,GACVgnD,UAAW,EACXC,cAAe,EACfC,YAAa,EACb1mD,OAAQ,KACRl5B,EAAGu/E,EACHt/E,EAAGkxC,EACHhxC,EAAGA,EACHk/E,aAAa,EACbtsD,KAAM,EACNC,KAAM,EACNE,MAAO,EACPpe,KAAM,GAEDnd,EAAI,EAAGA,EAAI+gC,EAAS78B,OAAQlE,IAAK,CACtC4gC,EAAKqnD,cACLC,EAAWtnD,EAAMG,EAAS/gC,GAAIugC,EAAWxN,GAEzC,IAAIqI,EAAO2F,EAAS/gC,GAAGo7B,KACnBC,EAAO0F,EAAS/gC,GAAGq7B,KACnBE,EAAOwF,EAAS/gC,GAAGu7B,KACnBpe,EAAO4jB,EAAS/gC,GAAGmd,KAEnBie,EAAOwF,EAAKxF,OAAMwF,EAAKxF,KAAOA,GAC9BC,EAAOuF,EAAKvF,OAAMuF,EAAKvF,KAAOA,GAC9BE,EAAOqF,EAAKrF,OAAMqF,EAAKrF,KAAOA,GAC9Bpe,EAAOyjB,EAAKzjB,OAAMyjB,EAAKzjB,KAAOA,GAEtC,OAAOyjB,EAGX,SAASsnD,EAAWtnD,EAAME,EAASP,EAAWxN,GAE1C,IAAI+gC,EAAOhzB,EAAQhQ,SACftY,EAAOsoB,EAAQtoB,KACf2vE,EAAa,GAEjB,GAAa,UAAT3vE,GAA6B,eAATA,EACpB,IAAK,IAAIxY,EAAI,EAAGA,EAAI8zD,EAAK5vD,OAAQlE,GAAK,EAClCmoF,EAAWr/E,KAAKgrD,EAAK9zD,IACrBmoF,EAAWr/E,KAAKgrD,EAAK9zD,EAAI,IACzB4gC,EAAKmnD,YACLnnD,EAAKonD,qBAGN,GAAa,eAATxvE,EACP4vE,EAAQD,EAAYr0B,EAAMlzB,EAAML,GAAW,GAAO,QAE/C,GAAa,oBAAT/nB,GAAuC,YAATA,EACrC,IAAKxY,EAAI,EAAGA,EAAI8zD,EAAK5vD,OAAQlE,IACzBooF,EAAQD,EAAYr0B,EAAK9zD,GAAI4gC,EAAML,EAAoB,YAAT/nB,EAA0B,IAANxY,QAGnE,GAAa,iBAATwY,EAEP,IAAK,IAAI+uE,EAAI,EAAGA,EAAIzzB,EAAK5vD,OAAQqjF,IAAK,CAClC,IAAI/kD,EAAUsxB,EAAKyzB,GACnB,IAAKvnF,EAAI,EAAGA,EAAIwiC,EAAQt+B,OAAQlE,IAC5BooF,EAAQD,EAAY3lD,EAAQxiC,GAAI4gC,EAAML,GAAW,EAAY,IAANvgC,GAKnE,GAAImoF,EAAWjkF,OAAQ,CACnB,IAAI69B,EAAOjB,EAAQiB,MAAQ,KAC3B,GAAa,eAATvpB,GAAyBua,EAAQyN,YAAa,CAE9C,IAAK,IAAIj/B,KADTwgC,EAAO,GACSjB,EAAQiB,KAAMA,EAAKxgC,GAAOu/B,EAAQiB,KAAKxgC,GACvDwgC,EAAwB,kBAAI+xB,EAAKn/B,MAAQm/B,EAAKzhD,KAC9C0vB,EAAsB,gBAAI+xB,EAAKvtB,IAAMutB,EAAKzhD,KAE9C,IAAIg2E,EAAc,CACdv3D,SAAUq3D,EACV3vE,KAAe,YAATA,GAA+B,iBAATA,EAA0B,EACzC,eAATA,GAAkC,oBAATA,EAA6B,EAAI,EAC9DupB,KAAMA,GAES,OAAfjB,EAAQrQ,KACR43D,EAAY53D,GAAKqQ,EAAQrQ,IAE7BmQ,EAAKG,SAASj4B,KAAKu/E,IAI3B,SAASD,EAAQr/E,EAAQ+qD,EAAMlzB,EAAML,EAAW2uC,EAAWoZ,GACvD,IAAI3C,EAAcplD,EAAYA,EAE9B,GAAIA,EAAY,GAAMuzB,EAAKzhD,MAAQ68D,EAAYyW,EAAcplD,GACzDK,EAAKmnD,WAAaj0B,EAAK5vD,OAAS,MADpC,CAOA,IAFA,IAAIy+B,EAAO,GAEF3iC,EAAI,EAAGA,EAAI8zD,EAAK5vD,OAAQlE,GAAK,GAChB,IAAdugC,GAAmBuzB,EAAK9zD,EAAI,GAAK2lF,KACjC/kD,EAAKonD,gBACLrlD,EAAK75B,KAAKgrD,EAAK9zD,IACf2iC,EAAK75B,KAAKgrD,EAAK9zD,EAAI,KAEvB4gC,EAAKmnD,YAGL7Y,GAKR,SAAgBvsC,EAAMq5C,GAElB,IADA,IAAIrtD,EAAO,EACF3uB,EAAI,EAAGmjC,EAAMR,EAAKz+B,OAAQioC,EAAIhJ,EAAM,EAAGnjC,EAAImjC,EAAKgJ,EAAInsC,EAAGA,GAAK,EACjE2uB,IAASgU,EAAK3iC,GAAK2iC,EAAKwJ,KAAOxJ,EAAK3iC,EAAI,GAAK2iC,EAAKwJ,EAAI,IAE1D,GAAIxd,EAAO,IAAMqtD,EACb,IAAKh8E,EAAI,EAAGmjC,EAAMR,EAAKz+B,OAAQlE,EAAImjC,EAAM,EAAGnjC,GAAK,EAAG,CAChD,IAAIqI,EAAIs6B,EAAK3iC,GACTsI,EAAIq6B,EAAK3iC,EAAI,GACjB2iC,EAAK3iC,GAAK2iC,EAAKQ,EAAM,EAAInjC,GACzB2iC,EAAK3iC,EAAI,GAAK2iC,EAAKQ,EAAM,EAAInjC,GAC7B2iC,EAAKQ,EAAM,EAAInjC,GAAKqI,EACpBs6B,EAAKQ,EAAM,EAAInjC,GAAKsI,GAjBbigF,CAAO5lD,EAAM2lD,GAE5Bv/E,EAAOD,KAAK65B,ICtGD,SAASjD,EAAUjgB,EAAMsT,GACpC,OAAO,IAAIy1D,EAAU/oE,EAAMsT,GAG/B,SAASy1D,EAAU/oE,EAAMsT,GAGrB,IAAIgC,GAFJhC,EAAUnwB,KAAKmwB,QAwLnB,SAAgB01D,EAAMl7E,GAClB,IAAK,IAAIvN,KAAKuN,EAAKk7E,EAAKzoF,GAAKuN,EAAIvN,GACjC,OAAOyoF,EA1LkBC,CAAOhoF,OAAOY,OAAOsB,KAAKmwB,SAAUA,IAEzCgC,MAIpB,GAFIA,GAAOD,QAAQwc,KAAK,mBAEpBve,EAAQqN,QAAU,GAAKrN,EAAQqN,QAAU,GAAI,MAAM,IAAI/5B,MAAM,uCACjE,GAAI0sB,EAAQ0N,WAAa1N,EAAQ2N,WAAY,MAAM,IAAIr6B,MAAM,qDAE7D,IAAI06B,ELfO,SAAiBthB,EAAMsT,GAClC,IAAIgO,EAAW,GACf,GAAkB,sBAAdthB,EAAKjH,KACL,IAAK,IAAIxY,EAAI,EAAGA,EAAIyf,EAAKshB,SAAS78B,OAAQlE,IACtCilF,EAAelkD,EAAUthB,EAAKshB,SAAS/gC,GAAI+yB,EAAS/yB,OAGnC,YAAdyf,EAAKjH,KACZysE,EAAelkD,EAAUthB,EAAMsT,GAI/BkyD,EAAelkD,EAAU,CAACjQ,SAAUrR,GAAOsT,GAG/C,OAAOgO,EKAQ4nD,CAAQlpE,EAAMsT,GAE7BnwB,KAAKgmF,MAAQ,GACbhmF,KAAKimF,WAAa,GAEd9zD,IACAD,QAAQg0D,QAAQ,mBAChBh0D,QAAQ7Z,IAAI,oCAAqC8X,EAAQsN,aAActN,EAAQuN,gBAC/ExL,QAAQwc,KAAK,kBACb1uC,KAAKmmF,MAAQ,GACbnmF,KAAKomF,MAAQ,IAGjBjoD,EH9BW,SAAcA,EAAUhO,GACnC,IAAI1E,EAAS0E,EAAQ1E,OAAS0E,EAAQlf,OAClCo1E,EAASloD,EACT1e,EAAQ29D,EAAKj/C,EAAU,GAAI,EAAI1S,EAAQA,EAAY,GAAI,EAAG,EAAG0E,GAC7DunB,EAAQ0lC,EAAKj/C,EAAU,EAAI,EAAI1S,EAAQ,EAAIA,EAAQ,GAAI,EAAG,EAAG0E,GASjE,OAPI1Q,GAAQi4B,KACR2uC,EAASjJ,EAAKj/C,EAAU,GAAI1S,EAAQ,EAAIA,EAAQ,GAAI,EAAG,EAAG0E,IAAY,GAElE1Q,IAAM4mE,EAAS9B,EAAmB9kE,EAAM,GAAGomB,OAAOwgD,IAClD3uC,IAAO2uC,EAASA,EAAOxgD,OAAO0+C,EAAmB7sC,GAAQ,MAG1D2uC,EGiBIjrD,CAAK+C,EAAUhO,IAGb7uB,QAAQtB,KAAKsmF,UAAUnoD,EAAU,EAAG,EAAG,GAEhDhM,IACIgM,EAAS78B,QAAQ4wB,QAAQ7Z,IAAI,2BAA4BrY,KAAKgmF,MAAM,GAAGX,YAAarlF,KAAKgmF,MAAM,GAAGb,WACtGjzD,QAAQg0D,QAAQ,kBAChBh0D,QAAQ7Z,IAAI,mBAAoBrY,KAAKomF,MAAO3+E,KAAKC,UAAU1H,KAAKmmF,SAsJxE,SAASI,EAAK3gF,EAAGH,EAAGC,GAChB,OAA6B,KAAnB,GAAKE,GAAKF,EAAID,GAAWG,E,+CAnJvCggF,EAAU5mF,UAAUmxB,QAAU,CAC1BqN,QAAS,GACTC,aAAc,EACdC,eAAgB,IAChBC,UAAW,EACX1sB,OAAQ,KACRwa,OAAQ,GACRmS,aAAa,EACbC,UAAW,KACXC,YAAY,EACZ3L,MAAO,GAGXyzD,EAAU5mF,UAAUsnF,UAAY,SAAUnoD,EAAUv4B,EAAGH,EAAGC,EAAG8gF,EAAIxrD,EAAIC,GAOjE,IALA,IAAI/vB,EAAQ,CAACizB,EAAUv4B,EAAGH,EAAGC,GACzByqB,EAAUnwB,KAAKmwB,QACfgC,EAAQhC,EAAQgC,MAGbjnB,EAAM5J,QAAQ,CACjBoE,EAAIwF,EAAMikC,MACV1pC,EAAIyF,EAAMikC,MACVvpC,EAAIsF,EAAMikC,MACVhR,EAAWjzB,EAAMikC,MAEjB,IAAI41C,EAAK,GAAKn/E,EACVioB,EAAK04D,EAAK3gF,EAAGH,EAAGC,GAChBs4B,EAAOh+B,KAAKgmF,MAAMn4D,GAEtB,IAAKmQ,IACG7L,EAAQ,GAAGD,QAAQwc,KAAK,YAE5B1Q,EAAOh+B,KAAKgmF,MAAMn4D,GAAMq3D,EAAW/mD,EAAUv4B,EAAGH,EAAGC,EAAGyqB,GACtDnwB,KAAKimF,WAAW//E,KAAK,CAACN,EAAGA,EAAGH,EAAGA,EAAGC,EAAGA,IAEjCysB,GAAO,CACHA,EAAQ,IACRD,QAAQ7Z,IAAI,4DACRzS,EAAGH,EAAGC,EAAGs4B,EAAKqnD,YAAarnD,EAAKmnD,UAAWnnD,EAAKonD,eACpDlzD,QAAQg0D,QAAQ,aAEpB,IAAIvnF,EAAM,IAAMiH,EAChB5F,KAAKmmF,MAAMxnF,IAAQqB,KAAKmmF,MAAMxnF,IAAQ,GAAK,EAC3CqB,KAAKomF,QAQb,GAHApoD,EAAKW,OAASR,EAGTqoD,EAKE,CAEH,GAAI5gF,IAAMuqB,EAAQqN,SAAW53B,IAAM4gF,EAAI,SAGvC,IAAIhpF,EAAI,GAAMgpF,EAAK5gF,EACnB,GAAIH,IAAM4D,KAAKoD,MAAMuuB,EAAKx9B,IAAMkI,IAAM2D,KAAKoD,MAAMwuB,EAAKz9B,GAAI,cAT1D,GAAIoI,IAAMuqB,EAAQsN,cAAgBO,EAAKmnD,WAAah1D,EAAQuN,eAAgB,SAehF,GAFAM,EAAKW,OAAS,KAEU,IAApBR,EAAS78B,OAAb,CAEI6wB,EAAQ,GAAGD,QAAQwc,KAAK,YAG5B,IAII+3C,EAAIC,EAAIC,EAAIC,EAAInnE,EAAMi4B,EAJtB0rC,EAAK,GAAMjzD,EAAQ1E,OAAS0E,EAAQlf,OACpCoyE,EAAK,GAAMD,EACXyD,EAAK,GAAMzD,EACX0D,EAAK,EAAI1D,EAGbqD,EAAKC,EAAKC,EAAKC,EAAK,KAEpBnnE,EAAQ29D,EAAKj/C,EAAU4mD,EAAIt/E,EAAI29E,EAAI39E,EAAIohF,EAAI,EAAG7oD,EAAKxF,KAAMwF,EAAKrF,KAAMxI,GACpEunB,EAAQ0lC,EAAKj/C,EAAU4mD,EAAIt/E,EAAI49E,EAAI59E,EAAIqhF,EAAI,EAAG9oD,EAAKxF,KAAMwF,EAAKrF,KAAMxI,GACpEgO,EAAW,KAEP1e,IACAgnE,EAAKrJ,EAAK39D,EAAMslE,EAAIr/E,EAAI09E,EAAI19E,EAAImhF,EAAI,EAAG7oD,EAAKvF,KAAMuF,EAAKzjB,KAAM4V,GAC7Du2D,EAAKtJ,EAAK39D,EAAMslE,EAAIr/E,EAAI29E,EAAI39E,EAAIohF,EAAI,EAAG9oD,EAAKvF,KAAMuF,EAAKzjB,KAAM4V,GAC7D1Q,EAAO,MAGPi4B,IACAivC,EAAKvJ,EAAK1lC,EAAOqtC,EAAIr/E,EAAI09E,EAAI19E,EAAImhF,EAAI,EAAG7oD,EAAKvF,KAAMuF,EAAKzjB,KAAM4V,GAC9Dy2D,EAAKxJ,EAAK1lC,EAAOqtC,EAAIr/E,EAAI29E,EAAI39E,EAAIohF,EAAI,EAAG9oD,EAAKvF,KAAMuF,EAAKzjB,KAAM4V,GAC9DunB,EAAQ,MAGRvlB,EAAQ,GAAGD,QAAQg0D,QAAQ,YAE/Bh7E,EAAMhF,KAAKugF,GAAM,GAAI7gF,EAAI,EAAO,EAAJH,EAAe,EAAJC,GACvCwF,EAAMhF,KAAKwgF,GAAM,GAAI9gF,EAAI,EAAO,EAAJH,EAAe,EAAJC,EAAQ,GAC/CwF,EAAMhF,KAAKygF,GAAM,GAAI/gF,EAAI,EAAO,EAAJH,EAAQ,EAAO,EAAJC,GACvCwF,EAAMhF,KAAK0gF,GAAM,GAAIhhF,EAAI,EAAO,EAAJH,EAAQ,EAAO,EAAJC,EAAQ,MAIvDkgF,EAAU5mF,UAAUi/B,QAAU,SAAUr4B,EAAGH,EAAGC,GAC1C,IAAIyqB,EAAUnwB,KAAKmwB,QACflf,EAASkf,EAAQlf,OACjBkhB,EAAQhC,EAAQgC,MAEpB,GAAIvsB,EAAI,GAAKA,EAAI,GAAI,OAAO,KAE5B,IAAIm/E,EAAK,GAAKn/E,EAGVioB,EAAK04D,EAAK3gF,EAFdH,GAAMA,EAAIs/E,EAAMA,GAAMA,EAEFr/E,GACpB,GAAI1F,KAAKgmF,MAAMn4D,GAAK,OAAO,EAAU7tB,KAAKgmF,MAAMn4D,GAAK5c,GAEjDkhB,EAAQ,GAAGD,QAAQ7Z,IAAI,6BAA8BzS,EAAGH,EAAGC,GAO/D,IALA,IAGIgL,EAHAq2E,EAAKnhF,EACL+8E,EAAKl9E,EACLm9E,EAAKl9E,GAGDgL,GAAUq2E,EAAK,GACnBA,IACApE,EAAKt5E,KAAKoD,MAAMk2E,EAAK,GACrBC,EAAKv5E,KAAKoD,MAAMm2E,EAAK,GACrBlyE,EAAS1Q,KAAKgmF,MAAMO,EAAKQ,EAAIpE,EAAIC,IAGrC,OAAKlyE,GAAWA,EAAOiuB,QAGnBxM,EAAQ,GAAGD,QAAQ7Z,IAAI,8BAA+B0uE,EAAIpE,EAAIC,GAE9DzwD,EAAQ,GAAGD,QAAQwc,KAAK,iBAC5B1uC,KAAKsmF,UAAU51E,EAAOiuB,OAAQooD,EAAIpE,EAAIC,EAAIh9E,EAAGH,EAAGC,GAC5CysB,EAAQ,GAAGD,QAAQg0D,QAAQ,iBAExBlmF,KAAKgmF,MAAMn4D,GAAM,EAAU7tB,KAAKgmF,MAAMn4D,GAAK5c,GAAU,MATtB","file":"decoder.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 58);\n","module.exports = THREE;","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, Value } from \"./Env\";\nimport { ExprEvaluator, ExprEvaluatorContext, OperatorDescriptor } from \"./ExprEvaluator\";\nimport { ExprInstantiator, InstantiationContext } from \"./ExprInstantiator\";\nimport { ExprParser } from \"./ExprParser\";\nimport { ExprPool } from \"./ExprPool\";\nimport {\n    interpolatedPropertyDefinitionToJsonExpr,\n    isInterpolatedPropertyDefinition\n} from \"./InterpolatedPropertyDefs\";\nimport { Definitions, isBoxedDefinition, isLiteralDefinition } from \"./Theme\";\n\nimport * as THREE from \"three\";\nimport { Pixels } from \"./Pixels\";\nimport { RGBA } from \"./RGBA\";\n\nexport * from \"./Env\";\n\nconst exprEvaluator = new ExprEvaluator();\n\nconst exprInstantiator = new ExprInstantiator();\n\n/**\n * A visitor for {@link Expr} nodes.\n */\nexport interface ExprVisitor<Result, Context> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: Context): Result;\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: Context): Result;\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: Context): Result;\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: Context): Result;\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: Context): Result;\n    visitVarExpr(expr: VarExpr, context: Context): Result;\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: Context): Result;\n    visitCallExpr(expr: CallExpr, context: Context): Result;\n    visitMatchExpr(expr: MatchExpr, context: Context): Result;\n    visitCaseExpr(expr: CaseExpr, context: Context): Result;\n    visitStepExpr(expr: StepExpr, context: Context): Result;\n    visitInterpolateExpr(expr: InterpolateExpr, context: Context): Result;\n}\n\n/**\n * The dependencies of an {@link Expr}.\n */\nexport class ExprDependencies {\n    /**\n     * The properties needed to evaluate the {@link Expr}.\n     */\n    readonly properties = new Set<string>();\n\n    /**\n     * `true` if the expression depends on the feature state.\n     */\n    featureState?: boolean;\n\n    /**\n     * `true` if this expression cannot be cached.\n     */\n    volatile?: boolean;\n}\n\nclass ComputeExprDependencies implements ExprVisitor<void, ExprDependencies> {\n    static instance = new ComputeExprDependencies();\n\n    /**\n     * Gets the dependencies of an {@link Expr}.\n     *\n     * @param expr - The {@link Expr} to process.\n     * @param scope - The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param dependencies - The output [[Set]] of dependency names.\n     */\n    static of(expr: Expr) {\n        const dependencies = new ExprDependencies();\n        expr.accept(this.instance, dependencies);\n        return dependencies;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprDependencies): void {\n        expr.args.forEach(childExpr => childExpr.accept(this, context));\n\n        switch (expr.op) {\n            case \"dynamic-properties\":\n                context.volatile = true;\n                break;\n            case \"feature-state\":\n                context.featureState = true;\n                context.properties.add(\"$state\");\n                context.properties.add(\"$id\");\n                break;\n            case \"id\":\n                context.properties.add(\"$id\");\n                break;\n            case \"zoom\":\n            case \"world-ppi-scale\":\n            case \"world-discrete-ppi-scale\":\n                context.properties.add(\"$zoom\");\n                break;\n            case \"geometry-type\":\n                context.properties.add(\"$geometryType\");\n                break;\n            default:\n                break;\n        }\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: ExprDependencies): void {\n        expr.value.accept(this, context);\n        expr.branches.forEach(([_, branch]) => branch.accept(this, context));\n        expr.fallback.accept(this, context);\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: ExprDependencies): void {\n        expr.branches.forEach(([condition, branch]) => {\n            condition.accept(this, context);\n            branch.accept(this, context);\n        });\n        expr.fallback.accept(this, context);\n    }\n\n    visitStepExpr(expr: StepExpr, context: ExprDependencies): void {\n        expr.input.accept(this, context);\n        expr.defaultValue.accept(this, context);\n        expr.stops.forEach(([_, value]) => value.accept(this, context));\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: ExprDependencies): void {\n        expr.input.accept(this, context);\n        expr.stops.forEach(([_, value]) => value.accept(this, context));\n    }\n}\n\n/**\n * A type represeting JSON values.\n */\nexport type JsonValue = null | boolean | number | string | JsonObject | JsonArray;\n\n/**\n * A type representing JSON arrays.\n */\nexport interface JsonArray extends Array<JsonValue> {}\n\n/**\n * A type representing JSON objects.\n */\nexport interface JsonObject {\n    [name: string]: JsonValue;\n}\n\n/**\n * The JSON representation of an {@link Expr} object.\n */\nexport type JsonExpr = JsonArray;\n\nexport function isJsonExpr(v: any): v is JsonExpr {\n    return Array.isArray(v) && v.length > 0 && typeof v[0] === \"string\";\n}\n\n/**\n * Internal state needed by {@link Expr.fromJSON} to resolve `\"ref\"` expressions.\n */\ninterface ReferenceResolverState {\n    definitions: Definitions;\n    lockedNames: Set<string>;\n    cache: Map<string, Expr>;\n}\n\n/**\n * The evaluation scope of an {@link Expr}.\n */\nexport enum ExprScope {\n    /**\n     * The scope of an {@link Expr} used as value of an attribute.\n     */\n    Value,\n\n    /**\n     * The scope of an {@link Expr} used in a [[Technique]] `when` condition.\n     */\n    Condition,\n\n    /**\n     * The scope of an {@link Expr} used as dynamic property attribute value.\n     */\n    Dynamic\n}\n\n// tslint:disable:max-line-length\n/**\n * Abstract class representing the\n * {@link https://github.com/heremaps/harp.gl/blob/master/%40here/harp-datasource-protocol/StyleExpressions.md | style expressions}\n * used in {@link Theme}.\n */\n// tslint:enable:max-line-length\nexport abstract class Expr {\n    /**\n     * Tests of given value is an {@link Expr}.\n     *\n     * @param value - The object to test.\n     */\n    static isExpr(value: any): value is Expr {\n        return value instanceof Expr;\n    }\n\n    /**\n     * Creates an expression from the given `code`.\n     *\n     * @param code - The code to parse.\n     * @returns The parsed {@link Expr}.\n     * @deprecated `string` encoded expression are deprecated. Use {@link Expr.fromJSON} instead.\n     */\n    static parse(code: string): Expr | never {\n        const parser = new ExprParser(code);\n        const expr = parser.parse();\n        return expr;\n    }\n\n    // tslint:disable:max-line-length\n    /**\n     * Creates a style expression from JSON.\n     *\n     * @remarks\n     * The optional set of {@link Theme.definitions | definitions} is used\n     * to resolve the {@link https://github.com/heremaps/harp.gl/blob/master/%40here/harp-datasource-protocol/StyleExpressions.md#ref | ref expressions}.\n     *\n     * @param json - JSON object representing the expression to parse.\n     * @param definitions - Optional set of definitions used to expand references.\n     * @param definitionExprCache - Optional cache of `Expr` instances\n     *\n     * @example\n     * ```typescript\n     * const expr = Expr.fromJSON([\"all\",\n     *     [\"==\", [\"geometry-type\"], \"LineString\"],\n     *     [\"has\", \"text\"]\n     * ]);\n     * ```\n     */\n    // tslint:enable:max-line-length\n    static fromJSON(\n        json: JsonValue,\n        definitions?: Definitions,\n        definitionExprCache?: Map<string, Expr>\n    ) {\n        const referenceResolverState: ReferenceResolverState | undefined =\n            definitions !== undefined\n                ? {\n                      definitions,\n                      lockedNames: new Set(),\n                      cache: definitionExprCache || new Map<string, Expr>()\n                  }\n                : undefined;\n\n        return parseNode(json, referenceResolverState);\n    }\n\n    private m_dependencies?: ExprDependencies;\n    private m_isDynamic?: boolean;\n\n    /**\n     * Evaluate an expression returning a {@link Value} object.\n     *\n     * @param env - The {@link Env} used to lookup symbols.\n     * @param scope - The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param cache - A cache of previously computed results.\n     */\n    evaluate(\n        env: Env,\n        scope: ExprScope = ExprScope.Value,\n        cache?: Map<Expr, Value>\n    ): Value | never {\n        return this.accept(\n            exprEvaluator,\n            new ExprEvaluatorContext(exprEvaluator, env, scope, cache)\n        );\n    }\n\n    /**\n     * Instantiates this {@link Expr}.\n     *\n     * @remarks\n     * references to the `get` and `has` operator using the given instantiation context.\n     *\n     * @param context - The [[InstantationContext]] used to resolve names.\n     */\n    instantiate(context: InstantiationContext): Expr {\n        return this.accept(exprInstantiator, context);\n    }\n\n    /**\n     * Gets the dependencies of this {@link Expr}.\n     */\n    dependencies(): ExprDependencies {\n        if (!this.m_dependencies) {\n            this.m_dependencies = ComputeExprDependencies.of(this);\n        }\n        return this.m_dependencies;\n    }\n\n    /**\n     * Create a unique object that is structurally equivalent to this {@link Expr}.\n     *\n     * @param pool - The [[ExprPool]] used to create a unique\n     * equivalent object of this {@link Expr}.\n     */\n    intern(pool: ExprPool): Expr {\n        return pool.add(this);\n    }\n\n    toJSON(): JsonValue {\n        return new ExprSerializer().serialize(this);\n    }\n\n    /**\n     * Returns `true` if a dynamic execution context is required to evaluate this {@link Expr}.\n     */\n    isDynamic(): boolean {\n        if (this.m_isDynamic === undefined) {\n            this.m_isDynamic = this.exprIsDynamic();\n        }\n        return this.m_isDynamic;\n    }\n\n    /**\n     * Visits this expression.\n     *\n     * @param visitor The visitor used to visit the expression.\n     * @param context The context passed to the vistor.\n     */\n    abstract accept<Result, Context>(\n        visitor: ExprVisitor<Result, Context>,\n        context: Context\n    ): Result;\n\n    /**\n     * Update the dynamic state of this {@link Expr}.\n     *\n     * `exprIsDynamic` must never be called directly.\n     * @internal\n     */\n    protected abstract exprIsDynamic(): boolean;\n}\n\n/**\n * @internal\n */\nexport type RelationalOp = \"<\" | \">\" | \"<=\" | \">=\";\n\n/**\n * @internal\n */\nexport type EqualityOp = \"~=\" | \"^=\" | \"$=\" | \"==\" | \"!=\";\n\n/**\n * @internal\n */\nexport type BinaryOp = RelationalOp | EqualityOp;\n\n/**\n * A node representing a `get` expression.\n */\nexport class VarExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitVarExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * A node representing a `literal` expression.\n */\nexport abstract class LiteralExpr extends Expr {\n    /**\n     * Create a [[LiteralExpr]] from the given value.\n     *\n     * @param value - A constant value.\n     */\n    static fromValue(value: Value): Expr {\n        switch (typeof value) {\n            case \"boolean\":\n                return new BooleanLiteralExpr(value);\n            case \"number\":\n                return new NumberLiteralExpr(value);\n            case \"string\":\n                return new StringLiteralExpr(value);\n            case \"object\":\n                return value === null ? NullLiteralExpr.instance : new ObjectLiteralExpr(value);\n            default:\n                throw new Error(`failed to create a literal from '${value}'`);\n        } // switch\n    }\n\n    abstract get value(): Value;\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Null literal expression.\n */\nexport class NullLiteralExpr extends LiteralExpr {\n    static instance = new NullLiteralExpr();\n    /** @override */\n    readonly value: Value = null;\n\n    protected constructor() {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNullLiteralExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Boolean literal expression.\n */\nexport class BooleanLiteralExpr extends LiteralExpr {\n    constructor(readonly value: boolean) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitBooleanLiteralExpr(this, context);\n    }\n}\n\n/**\n * Number literal expression.\n */\nexport class NumberLiteralExpr extends LiteralExpr {\n    constructor(readonly value: number) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNumberLiteralExpr(this, context);\n    }\n}\n\n/**\n * String literal expression.\n */\nexport class StringLiteralExpr extends LiteralExpr {\n    private m_promotedValue?: RGBA | Pixels | null;\n\n    constructor(readonly value: string) {\n        super();\n    }\n\n    /**\n     * Returns the value of parsing this string as [[RGBA]] or [[Pixels]] constant.\n     */\n    get promotedValue(): RGBA | Pixels | undefined {\n        if (this.m_promotedValue === undefined) {\n            this.m_promotedValue = RGBA.parse(this.value) ?? Pixels.parse(this.value) ?? null;\n        }\n        return this.m_promotedValue ?? undefined;\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitStringLiteralExpr(this, context);\n    }\n}\n\n/**\n * Object literal expression.\n */\nexport class ObjectLiteralExpr extends LiteralExpr {\n    constructor(readonly value: object) {\n        super();\n    }\n\n    get isArrayLiteral() {\n        return Array.isArray(this.value);\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitObjectLiteralExpr(this, context);\n    }\n}\n\n/**\n * A node reperesenting a `has` expression.\n */\nexport class HasAttributeExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitHasAttributeExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * A node representing a `call` expression.\n */\nexport class CallExpr extends Expr {\n    descriptor?: OperatorDescriptor;\n\n    constructor(readonly op: string, readonly args: Expr[]) {\n        super();\n    }\n\n    /**\n     * Returns the child nodes of this {@link Expr}.\n     *\n     * @deprecated Use {@link CallExpr.args} instead.\n     */\n    get children() {\n        return this.args;\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCallExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        const descriptor = this.descriptor || ExprEvaluator.getOperator(this.op);\n\n        if (descriptor && descriptor.isDynamicOperator && descriptor.isDynamicOperator(this)) {\n            return true;\n        }\n\n        return this.args.some(e => e.isDynamic());\n    }\n}\n\n/**\n * The labels of a {@link MatchExpr} expression.\n */\nexport type MatchLabel = number | string | number[] | string[];\n\n/**\n * A node representing a `match` expression.\n */\nexport class MatchExpr extends Expr {\n    /**\n     * Tests if the given JSON node is a valid label for the `\"match\"` operator.\n     *\n     * @param node - A JSON value.\n     */\n    static isValidMatchLabel(node: JsonValue): node is MatchLabel {\n        switch (typeof node) {\n            case \"number\":\n            case \"string\":\n                return true;\n            case \"object\":\n                if (!Array.isArray(node) || node.length === 0) {\n                    return false;\n                }\n                const elementTy = typeof node[0];\n                if (elementTy === \"number\" || elementTy === \"string\") {\n                    return node.every(t => typeof t === elementTy);\n                }\n                return false;\n            default:\n                return false;\n        } // switch\n    }\n\n    constructor(\n        readonly value: Expr,\n        readonly branches: Array<[MatchLabel, Expr]>,\n        readonly fallback: Expr\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitMatchExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.value.isDynamic() ||\n            this.branches.some(([_, branch]) => branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * A node representing a `case` expression.\n */\nexport class CaseExpr extends Expr {\n    constructor(readonly branches: Array<[Expr, Expr]>, readonly fallback: Expr) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCaseExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.branches.some(([cond, branch]) => cond.isDynamic() || branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * A node representing a `step` expression.\n */\nexport class StepExpr extends Expr {\n    constructor(\n        readonly input: Expr,\n        readonly defaultValue: Expr,\n        readonly stops: Array<[number, Expr]>\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitStepExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic(): boolean {\n        return (\n            this.input.isDynamic() ||\n            this.defaultValue.isDynamic() ||\n            this.stops.some(([_, value]) => value.isDynamic())\n        );\n    }\n}\n\n/**\n * The type of the interpolation mode.\n */\nexport type InterpolateMode = [\"discrete\"] | [\"linear\"] | [\"cubic\"] | [\"exponential\", number];\n\n/**\n * A node representing an `interpolate` expression.\n */\nexport class InterpolateExpr extends Expr {\n    constructor(\n        readonly mode: InterpolateMode,\n        readonly input: Expr,\n        readonly stops: Array<[number, Expr]>\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitInterpolateExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic(): boolean {\n        return this.input.isDynamic() || this.stops.some(([_, value]) => value.isDynamic());\n    }\n}\n\n/**\n * Serializes the Expr to JSON.\n *\n * @internal\n */\nclass ExprSerializer implements ExprVisitor<JsonValue, void> {\n    serialize(expr: Expr): JsonValue {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): JsonValue {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): JsonValue {\n        if (expr.value instanceof THREE.Vector2) {\n            return [\"make-vector\", expr.value.x, expr.value.y];\n        } else if (expr.value instanceof THREE.Vector3) {\n            return [\"make-vector\", expr.value.x, expr.value.y, expr.value.z];\n        } else if (expr.value instanceof THREE.Vector4) {\n            return [\"make-vector\", expr.value.x, expr.value.y, expr.value.z, expr.value.w];\n        }\n        return [\"literal\", expr.value as JsonObject];\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): JsonValue {\n        return [\"get\", expr.name];\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): JsonValue {\n        return [\"has\", expr.name];\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): JsonValue {\n        return [expr.op, ...expr.args.map(childExpr => this.serialize(childExpr))];\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [label, body] of expr.branches) {\n            branches.push(label, this.serialize(body));\n        }\n        return [\"match\", this.serialize(expr.value), ...branches, this.serialize(expr.fallback)];\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [condition, body] of expr.branches) {\n            branches.push(this.serialize(condition), this.serialize(body));\n        }\n        return [\"case\", ...branches, this.serialize(expr.fallback)];\n    }\n\n    visitStepExpr(expr: StepExpr, context: void): JsonValue {\n        const result: JsonArray = [\"step\"];\n        result.push(this.serialize(expr.input));\n        result.push(this.serialize(expr.defaultValue));\n        expr.stops.forEach(([key, value]) => {\n            result.push(key);\n            result.push(this.serialize(value));\n        });\n        return result;\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: void): JsonValue {\n        const result: JsonArray = [\"interpolate\", expr.mode];\n        result.push(this.serialize(expr.input));\n        expr.stops.forEach(([key, value]) => {\n            result.push(key);\n            result.push(this.serialize(value));\n        });\n        return result;\n    }\n}\n\nfunction parseNode(\n    node: JsonValue,\n    referenceResolverState: ReferenceResolverState | undefined\n): Expr {\n    if (Array.isArray(node)) {\n        return parseCall(node, referenceResolverState);\n    } else if (node === null) {\n        return NullLiteralExpr.instance;\n    } else if (typeof node === \"boolean\") {\n        return new BooleanLiteralExpr(node);\n    } else if (typeof node === \"number\") {\n        return new NumberLiteralExpr(node);\n    } else if (typeof node === \"string\") {\n        return new StringLiteralExpr(node);\n    }\n    throw new Error(`failed to create expression from: ${JSON.stringify(node)}`);\n}\n\nfunction parseCall(node: JsonArray, referenceResolverState?: ReferenceResolverState): Expr {\n    const op = node[0];\n\n    if (typeof op !== \"string\") {\n        throw new Error(\"expected a builtin function name\");\n    }\n\n    switch (op) {\n        case \"!has\":\n        case \"!in\":\n            return new CallExpr(\"!\", [parseCall([op.slice(1), ...node.slice(1)])]);\n\n        case \"ref\":\n            return resolveReference(node, referenceResolverState);\n\n        case \"get\":\n            return parseGetExpr(node, referenceResolverState);\n\n        case \"has\":\n            return parseHasExpr(node, referenceResolverState);\n\n        case \"literal\":\n            return parseLiteralExpr(node);\n\n        case \"match\":\n            return parseMatchExpr(node, referenceResolverState);\n\n        case \"case\":\n            return parseCaseExpr(node, referenceResolverState);\n\n        case \"interpolate\":\n            return parseInterpolateExpr(node, referenceResolverState);\n\n        case \"step\":\n            return parseStepExpr(node, referenceResolverState);\n\n        default:\n            return makeCallExpr(op, node, referenceResolverState);\n    } // switch\n}\n\nfunction parseGetExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"get\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new VarExpr(name);\n}\n\nfunction parseHasExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"has\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new HasAttributeExpr(name);\n}\n\nfunction parseLiteralExpr(node: JsonArray) {\n    const obj = node[1];\n    if (obj === null || typeof obj !== \"object\") {\n        throw new Error(\"expected an object or array literal\");\n    }\n    return new ObjectLiteralExpr(obj);\n}\n\nfunction parseMatchExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    if (node.length < 4) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (!(node.length % 2)) {\n        throw new Error(\"fallback is missing in 'match' expression\");\n    }\n    const value = parseNode(node[1], referenceResolverState);\n    const conditions: Array<[MatchLabel, Expr]> = [];\n    for (let i = 2; i < node.length - 1; i += 2) {\n        const label = node[i];\n        if (!MatchExpr.isValidMatchLabel(label)) {\n            throw new Error(`'${JSON.stringify(label)}' is not a valid label for 'match'`);\n        }\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        conditions.push([label, expr]);\n    }\n    const fallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new MatchExpr(value, conditions, fallback);\n}\n\nfunction parseCaseExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    if (node.length < 3) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (node.length % 2) {\n        throw new Error(\"fallback is missing in 'case' expression\");\n    }\n    const branches: Array<[Expr, Expr]> = [];\n    for (let i = 1; i < node.length - 1; i += 2) {\n        const condition = parseNode(node[i], referenceResolverState);\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        branches.push([condition, expr]);\n    }\n    const caseFallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new CaseExpr(branches, caseFallback);\n}\n\nfunction isInterpolationMode(object: any): object is InterpolateMode {\n    if (!Array.isArray(object)) {\n        return false;\n    }\n    switch (object[0]) {\n        case \"discrete\":\n        case \"linear\":\n        case \"cubic\":\n        case \"exponential\":\n            return true;\n        default:\n            return false;\n    }\n}\n\nfunction parseInterpolateExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    const mode: InterpolateMode = node[1] as any;\n    if (!isInterpolationMode(mode)) {\n        throw new Error(\"expected an interpolation type\");\n    }\n    if (mode[0] === \"exponential\" && typeof mode[1] !== \"number\") {\n        throw new Error(\"expected the base of the exponential interpolation\");\n    }\n    const input = node[2] ? parseNode(node[2], referenceResolverState) : undefined;\n    if (!Expr.isExpr(input)) {\n        throw new Error(`expected the input of the interpolation`);\n    }\n    if (node.length === 3 || !(node.length % 2)) {\n        throw new Error(\"invalid number of samples\");\n    }\n\n    const stops: Array<[number, Expr]> = [];\n    for (let i = 3; i < node.length - 1; i += 2) {\n        const key = node[i] as number;\n        const value = parseNode(node[i + 1], referenceResolverState);\n        stops.push([key, value]);\n    }\n    return new InterpolateExpr(mode, input, stops);\n}\n\nfunction parseStepExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    if (node.length < 2) {\n        throw new Error(\"expected the input of the 'step' operator\");\n    }\n    if (node.length < 3 || !(node.length % 2)) {\n        throw new Error(\"not enough arguments\");\n    }\n    const input = parseNode(node[1], referenceResolverState);\n    const defaultValue = parseNode(node[2], referenceResolverState);\n    const stops: Array<[number, Expr]> = [];\n    for (let i = 3; i < node.length; i += 2) {\n        const key = node[i] as number;\n        const value = parseNode(node[i + 1], referenceResolverState);\n        stops.push([key, value]);\n    }\n    return new StepExpr(input, defaultValue, stops);\n}\n\nfunction makeCallExpr(\n    op: string,\n    node: any[],\n    referenceResolverState?: ReferenceResolverState\n): Expr {\n    return new CallExpr(\n        op,\n        node.slice(1).map(childExpr => parseNode(childExpr, referenceResolverState))\n    );\n}\n\nfunction resolveReference(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (typeof node[1] !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    if (referenceResolverState === undefined) {\n        throw new Error(`ref used with no definitions`);\n    }\n    const name = node[1] as string;\n\n    if (referenceResolverState.lockedNames.has(name)) {\n        throw new Error(`circular referene to '${name}'`);\n    }\n\n    if (!(name in referenceResolverState.definitions)) {\n        throw new Error(`definition '${name}' not found`);\n    }\n\n    const cachedEntry = referenceResolverState.cache.get(name);\n    if (cachedEntry !== undefined) {\n        return cachedEntry;\n    }\n    let definitionEntry = referenceResolverState.definitions[name] as any;\n    let result: Expr;\n    if (isLiteralDefinition(definitionEntry)) {\n        return Expr.fromJSON(definitionEntry);\n    } else if (isBoxedDefinition(definitionEntry)) {\n        if (isInterpolatedPropertyDefinition(definitionEntry.value)) {\n            // found a reference to an interpolation using\n            // the deprecated object-like syntax.\n            return Expr.fromJSON(interpolatedPropertyDefinitionToJsonExpr(definitionEntry.value));\n        } else if (isJsonExpr(definitionEntry.value)) {\n            definitionEntry = definitionEntry.value;\n        } else {\n            return Expr.fromJSON(definitionEntry.value);\n        }\n    }\n\n    if (isJsonExpr(definitionEntry)) {\n        referenceResolverState.lockedNames.add(name);\n        try {\n            result = parseNode(definitionEntry, referenceResolverState);\n        } finally {\n            referenceResolverState.lockedNames.delete(name);\n        }\n    } else {\n        throw new Error(`unsupported definition ${name}`);\n    }\n    referenceResolverState.cache.set(name, result);\n    return result;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./index-common\";\nexport * from \"./lib/UrlPlatformUtils.web\";\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Utility classes for working with geospatial data.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/coordinates/GeoBox\";\nexport * from \"./lib/coordinates/GeoBoxExtentLike\";\nexport * from \"./lib/coordinates/GeoCoordinatesLike\";\nexport * from \"./lib/coordinates/GeoCoordinates\";\nexport * from \"./lib/coordinates/GeoPointLike\";\nexport * from \"./lib/coordinates/LatLngLike\";\nexport * from \"./lib/projection/EarthConstants\";\nexport * from \"./lib/projection/EquirectangularProjection\";\nexport * from \"./lib/projection/IdentityProjection\";\nexport * from \"./lib/projection/Projection\";\nexport * from \"./lib/projection/MercatorProjection\";\nexport * from \"./lib/projection/TransverseMercatorProjection\";\nexport * from \"./lib/projection/SphereProjection\";\nexport * from \"./lib/tiling/FlatTileBoundingBoxGenerator\";\nexport * from \"./lib/tiling/HalfQuadTreeSubdivisionScheme\";\nexport * from \"./lib/tiling/QuadTreeSubdivisionScheme\";\nexport * from \"./lib/tiling/QuadTree\";\nexport * from \"./lib/tiling/SubTiles\";\nexport * from \"./lib/tiling/SubdivisionScheme\";\nexport * from \"./lib/tiling/TileKey\";\nexport * from \"./lib/tiling/TileKeyUtils\";\nexport * from \"./lib/tiling/TileTreeTraverse\";\nexport * from \"./lib/tiling/TilingScheme\";\nexport * from \"./lib/tiling/HereTilingScheme\";\nexport * from \"./lib/tiling/WebMercatorTilingScheme\";\nexport * from \"./lib/tiling/MercatorTilingScheme\";\nexport * from \"./lib/tiling/PolarTilingScheme\";\nexport * from \"./lib/math/Vector3Like\";\nexport * from \"./lib/math/Box3Like\";\nexport * from \"./lib/math/OrientedBox3Like\";\nexport * from \"./lib/math/MathUtils\";\nexport * from \"./lib/math/TransformLike\";\nexport * from \"./lib/math/OrientedBox3\";\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"./GeoCoordinatesLike\";\nimport { GeoPointLike, isGeoPointLike } from \"./GeoPointLike\";\nimport { isLatLngLike, LatLngLike } from \"./LatLngLike\";\n\nimport * as THREE from \"three\";\n\n/**\n * Represents an object in different geo coordinate formats\n */\nexport type GeoCoordLike = GeoPointLike | GeoCoordinatesLike | LatLngLike;\n\n/**\n * `GeoCoordinates` is used to represent geo positions.\n */\nexport class GeoCoordinates implements GeoCoordinatesLike {\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude - Latitude in degrees.\n     * @param longitude - Longitude in degrees.\n     * @param altitude - Altitude in meters.\n     */\n    static fromDegrees(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude - Latitude in radians.\n     * @param longitude - Longitude in radians.\n     * @param altitude - Altitude in meters.\n     */\n    static fromRadians(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(\n            THREE.MathUtils.radToDeg(latitude),\n            THREE.MathUtils.radToDeg(longitude),\n            altitude\n        );\n    }\n\n    /**\n     * Creates a {@link GeoCoordinates} from a {@link LatLngLike} literal.\n     * ```typescript\n     * const center = { lat: 53.3, lng: 13.4 };\n     * mapView.geoCenter = GeoCoordinates.fromLatLng(center);\n     * ```\n     * @param latLng - A {@link LatLngLike} object literal.\n     */\n    static fromLatLng(latLng: LatLngLike) {\n        return new GeoCoordinates(latLng.lat, latLng.lng);\n    }\n\n    /**\n     * Creates a {@link GeoCoordinates} from a [[GeoPointLike]] tuple.\n     *\n     * Example:\n     * ```typescript\n     * mapView.geoCenter = GeoCoordinates.fromGeoPoint([longitude, latitude]);\n     *\n     * let geoCoords: number[] = ...;\n     *\n     * if (isGeoPointLike(geoCoords)) {\n     *     const p = GeoCoordinates.fromGeoPoint(geoCoords);\n     * }\n     * ```\n     * @param geoPoint - An [[Array]] of at least two elements following the order\n     * longitude, latitude, altitude.\n     */\n    static fromGeoPoint(geoPoint: GeoPointLike): GeoCoordinates {\n        return new GeoCoordinates(geoPoint[1], geoPoint[0], geoPoint[2]);\n    }\n\n    /**\n     * Creates a {@link GeoCoordinates} from different types of geo coordinate objects.\n     *\n     * Example:\n     * ```typescript\n     * const fromGeoPointLike = GeoCoordinates.fromObject([longitude, latitude]);\n     * const fromGeoCoordinateLike = GeoCoordinates.fromObject({ longitude, latitude });\n     * const fromGeoCoordinate = GeoCoordinates.fromObject(new GeoCoordinates(latitude, longitude));\n     * const fromLatLngLike = GeoCoordinates.fromObject({ lat: latitude , lng: longitude });\n     * ```\n     *\n     * @param geoPoint - Either [[GeoPointLike]], {@link GeoCoordinatesLike}\n     * or {@link LatLngLike} object literal.\n     */\n    static fromObject(geoPoint: GeoCoordLike): GeoCoordinates {\n        if (isGeoPointLike(geoPoint)) {\n            return GeoCoordinates.fromGeoPoint(geoPoint);\n        } else if (isGeoCoordinatesLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(\n                geoPoint.latitude,\n                geoPoint.longitude,\n                geoPoint.altitude\n            );\n        } else if (isLatLngLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(geoPoint.lat, geoPoint.lng);\n        }\n\n        throw new Error(\"Invalid input coordinate format.\");\n    }\n\n    /**\n     * Creates a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude - Latitude in degrees.\n     * @param longitude - Longitude in degrees.\n     * @param altitude - Altitude in meters.\n     */\n    constructor(public latitude: number, public longitude: number, public altitude?: number) {}\n\n    /**\n     * Returns the latitude in radians.\n     */\n    get latitudeInRadians(): number {\n        return THREE.MathUtils.degToRad(this.latitude);\n    }\n\n    /**\n     * Returns the longitude in radians.\n     */\n    get longitudeInRadians(): number {\n        return THREE.MathUtils.degToRad(this.longitude);\n    }\n\n    /**\n     * Returns the latitude in degrees.\n     * @deprecated Use the [[latitude]] property instead.\n     */\n    get latitudeInDegrees(): number {\n        return this.latitude;\n    } // compat api\n\n    /**\n     * Returns the longitude in degrees.\n     * @deprecated Use the [[longitude]] property instead.\n     */\n    get longitudeInDegrees(): number {\n        return this.longitude;\n    } // compat api\n\n    /**\n     * The latitude in the degrees.\n     */\n    get lat() {\n        return this.latitude;\n    }\n\n    /**\n     * The longitude in the degrees.\n     */\n    get lng() {\n        return this.longitude;\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is valid; returns `false` otherwise.\n     */\n    isValid(): boolean {\n        return !isNaN(this.latitude) && !isNaN(this.longitude);\n    }\n\n    /**\n     * Returns the normalized `GeoCoordinates`.\n     */\n    normalized(): GeoCoordinates {\n        let { latitude, longitude } = this;\n\n        if (isNaN(latitude) || isNaN(longitude)) {\n            return this;\n        }\n\n        if (latitude > 90) {\n            let wrapped = (latitude + 90) % 360;\n            if (wrapped >= 180) {\n                longitude += 180;\n                wrapped = 360 - wrapped;\n            }\n\n            latitude = wrapped - 90;\n        }\n\n        if (latitude < -90) {\n            let wrapped = (latitude - 90) % 360;\n            if (wrapped <= -180) {\n                longitude += 180;\n                wrapped = -360 - wrapped;\n            }\n\n            latitude = wrapped + 90;\n        }\n\n        if (longitude < -180 || longitude > 180) {\n            const sign = Math.sign(longitude);\n            longitude = (((longitude % 360) + 180 * sign) % 360) - 180 * sign;\n        }\n\n        if (latitude === this.latitude && longitude === this.longitude) {\n            return this;\n        }\n\n        return new GeoCoordinates(latitude, longitude, this.altitude);\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is equal to the other.\n     *\n     * @param other - GeoCoordinatesLike to compare to.\n     */\n    equals(other: GeoCoordinatesLike): boolean {\n        return (\n            this.latitude === other.latitude &&\n            this.longitude === other.longitude &&\n            this.altitude === other.altitude\n        );\n    }\n\n    /**\n     * Copy values from the other.\n     *\n     * @param other - GeoCoordinatesLike to copy all values from.\n     */\n    copy(other: GeoCoordinatesLike): GeoCoordinates {\n        this.latitude = other.latitude;\n        this.longitude = other.longitude;\n        this.altitude = other.altitude;\n        return this;\n    }\n\n    /**\n     * Clones this `GeoCoordinates`.\n     */\n    clone(): GeoCoordinates {\n        return new GeoCoordinates(this.latitude, this.longitude, this.altitude);\n    }\n\n    /**\n     * Returns this {@link GeoCoordinates} as {@link LatLngLike} literal.\n     */\n    toLatLng(): LatLngLike {\n        return { lat: this.latitude, lng: this.longitude };\n    }\n\n    /**\n     * Converts this {@link GeoCoordinates} to a [[GeoPointLike]].\n     */\n    toGeoPoint(): GeoPointLike {\n        return this.altitude !== undefined\n            ? [this.longitude, this.latitude, this.altitude]\n            : [this.longitude, this.latitude];\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Components used for the decoding and styling of data that is used by the Datasources.\n *\n * @remarks\n * The DataSource Protocol package contains components used for the decoding and styling\n * of data that is used by the Datasources.\n * This code is shared between the ui-thread and the web-workers which are\n * used to parallelise the decoding of the data.\n * This module contains interfaces for choosing techniques form the techniques\n * catalog that are applied via the {@link Theme} files to draw geometries on the map canvas.\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/ColorUtils\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/Techniques\";\nexport * from \"./lib/TechniqueParams\";\nexport * from \"./lib/Theme\";\nexport * from \"./lib/PostEffects\";\nexport * from \"./lib/PropertyValue\";\nexport * from \"./lib/InterpolatedPropertyDefs\";\nexport * from \"./lib/WorkerServiceProtocol\";\nexport * from \"./lib/WorkerTilerProtocol\";\nexport * from \"./lib/WorkerDecoderProtocol\";\nexport * from \"./lib/ITileDecoder\";\nexport * from \"./lib/ITiler\";\nexport * from \"./lib/DecodedTile\";\nexport * from \"./lib/TileInfo\";\nexport * from \"./lib/GeoJsonDataType\";\nexport * from \"./lib/ThemeVisitor\";\nexport * from \"./lib/StringEncodedNumeral\";\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Box3Like } from \"./Box3Like\";\nimport { Vector3Like } from \"./Vector3Like\";\n\nimport * as THREE from \"three\";\n\nexport namespace MathUtils {\n    /**\n     * Creates a new empty bounding box.\n     *\n     * @deprecated Use {@link https://threejs.org/docs/#api/en/math/Box3 | THREE.Box3} instead.\n     */\n    export function newEmptyBox3(): Box3Like {\n        return {\n            min: { x: Infinity, y: Infinity, z: Infinity },\n            max: { x: -Infinity, y: -Infinity, z: -Infinity }\n        };\n    }\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x - The x component.\n     * @param y - The y component.\n     * @param z - The z component.\n     */\n    export function newVector3(x: number, y: number, z: number): Vector3Like;\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x - The x component.\n     * @param y - The y component.\n     * @param z - The z component.\n     * @param v - The resulting [Vector3Like] instance.\n     */\n    export function newVector3<Vector extends Vector3Like>(\n        x: number,\n        y: number,\n        z: number,\n        v: Vector\n    ): Vector;\n\n    /**\n     * Set the components of the given [Vector3Like] instance.\n     *\n     * @param x - The x component.\n     * @param y - The y component.\n     * @param z - The z component.\n     * @param v - The [Vector3Like]\n     */\n    export function newVector3(x: number, y: number, z: number, v?: Vector3Like): Vector3Like {\n        if (v === undefined) {\n            return { x, y, z };\n        }\n        v.x = x;\n        v.y = y;\n        v.z = z;\n        return v;\n    }\n\n    /**\n     * Copies the vector across.\n     *\n     * @param from - The vector to copy from.\n     * @param to - The resulting [Vector3Like] instance, with the contents copied from from\n     */\n    export function copyVector3<Vector extends Vector3Like>(from: Vector3Like, to: Vector): Vector {\n        to.x = from.x;\n        to.y = from.y;\n        to.z = from.z;\n        return to;\n    }\n\n    /**\n     * Converts an angle measured in degrees to an equivalent value in radians.\n     *\n     * @param degrees - Value in degrees.\n     * @returns Value in radians.\n     * @deprecated use THREE.MathUtils.degToRad instead\n     */\n    export const degToRad = THREE.MathUtils.degToRad;\n\n    /**\n     * Converts an angle measured in radians to an equivalent value in degrees.\n     *\n     * @param degrees - Value in radians.\n     * @returns Value in degrees.\n     * @deprecated Use {@link https://threejs.org/docs/#api/en/math/MathUtils.radToDeg\n     *                | THREE.MathUtils.radToDeg}.\n     */\n    export const radToDeg = THREE.MathUtils.radToDeg;\n\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value - The value to be clamped.\n     * @param min - Minimum value.\n     * @param max - Maximum value.\n     * @returns Clamped value.\n     * @deprecated Use {@link https://threejs.org/docs/#api/en/math/MathUtils.clamp\n     *                | THREE.MathUtils.clamp}.\n     */\n    export const clamp = THREE.MathUtils.clamp;\n\n    /**\n     * Normalize angle in degrees to range `[0, 360)`.\n     *\n     * @param a - Angle in degrees.\n     * @returns Angle in degrees in range `[0, 360)`.\n     */\n    export function normalizeAngleDeg(a: number): number {\n        a = a % 360;\n        if (a < 0) {\n            a = a + 360;\n        }\n        return a;\n    }\n\n    /**\n     * Normalize latitude angle in degrees to range `[-180, 180]`.\n     *\n     * @param a - Latitude angle in degrees.\n     * @returns Latitude angle in degrees in range `[-180, 180]`.\n     */\n    export function normalizeLongitudeDeg(a: number): number {\n        a = normalizeAngleDeg(a);\n        if (a > 180) {\n            a = a - 360;\n        }\n        return a;\n    }\n\n    /**\n     * Return the minimal delta between angles `a` and `b` given in degrees.\n     *\n     * Equivalent to `a - b` in coordinate space with exception vector direction can be reversed\n     * that if `abs(a-b) > 180` because trip is shorter in 'other' direction.\n     *\n     * Useful when interpolating between `b` and `a` in angle space.\n     *\n     * @param a - Start angle in degrees.\n     * @param b - End angle in degrees.\n     * @returns Angle that that satisfies condition `a - b - d = 0` in angle space.\n     */\n    export function angleDistanceDeg(a: number, b: number): number {\n        a = normalizeAngleDeg(a);\n        b = normalizeAngleDeg(b);\n\n        const d = a - b;\n        if (d > 180) {\n            return d - 360;\n        } else if (d <= -180) {\n            return d + 360;\n        } else {\n            return d;\n        }\n    }\n\n    /**\n     * Interpolate linearly between two angles given in degrees.\n     *\n     * @param p0 - Angle from in degrees\n     * @param p1 - Angle to in degrees\n     * @param t - Interpolation factor (alpha), in range `0-1`.\n     */\n    export function interpolateAnglesDeg(p0: number, p1: number, t: number): number {\n        // hand crafted version,\n        // see stack for maybe better versions:\n        //    https://stackoverflow.com/questions/2708476/rotation-interpolation\n\n        const d = angleDistanceDeg(p1, p0);\n        const r = (p0 + d * t) % 360;\n        return r;\n    }\n}\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n// global object reference\nutil.global = typeof window !== \"undefined\" && window\n           || typeof global !== \"undefined\" && global\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n * @const\n */\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * An interface representing bounding box in world coordinates.\n */\nexport interface Box3Like {\n    /**\n     * The minimum position in world coordinates of this bounding box.\n     */\n    readonly min: Vector3Like;\n\n    /**\n     * The maximum position in world coordinates of this bounding box.\n     */\n    readonly max: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the {@link Box3Like} interface.\n *\n * @param object - A valid object.\n */\nexport function isBox3Like(object: {}): object is Box3Like {\n    const box3 = object as Partial<Box3Like>;\n    return box3.min !== undefined && box3.max !== undefined;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TransformLike } from \"./TransformLike\";\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface {@link OrientedBox3Like} is used to represent oriented bounding box.\n */\nexport interface OrientedBox3Like extends TransformLike {\n    /**\n     * The extents of this bounding box.\n     */\n    readonly extents: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface {@link OrientedBox3Like}.\n *\n * @param object - The object.\n */\nexport function isOrientedBox3Like(object: {}): object is OrientedBox3Like {\n    const obb = object as Partial<OrientedBox3Like>;\n    return (\n        obb.position !== undefined &&\n        obb.xAxis !== undefined &&\n        obb.yAxis !== undefined &&\n        obb.zAxis !== undefined &&\n        obb.extents !== undefined\n    );\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\n\n/**\n * The type of projection.\n */\nexport enum ProjectionType {\n    /**\n     * A type of [Projection] with zero curvature.\n     */\n    Planar,\n\n    /**\n     * A spherical [Projection].\n     */\n    Spherical\n}\n\n/**\n * `Projection` is used to convert positions from geo coordinates to world coordinates and vice\n * versa.\n */\nexport abstract class Projection {\n    /**\n     * The type of this [Projection].\n     */\n    abstract get type(): ProjectionType;\n\n    /**\n     * Constructs the Projection\n     *\n     * @param unitScale - How to transform the projected coordinates to world units.\n     */\n    constructor(readonly unitScale: number) {\n        //Prevent empty constructor error.\n    }\n\n    /**\n     * Returns the world extents in world coordinates.\n     *\n     * @param minElevation - The minimum elevation in meters.\n     * @param maxElevation - The maximum elevation in meters.\n     * @param result - The optional object that will be used to create the resulting bounding box.\n     */\n    abstract worldExtent<Bounds extends Box3Like>(\n        minElevation: number,\n        maxElevation: number,\n        result?: Bounds\n    ): Bounds;\n\n    /**\n     * Projects a point from geo coordinates (latitude, longitude, altitude) to world coordinates\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const worldPos = new THREE.Vector3();\n     * projection.projectPoint(geoPos, worldPos);\n     * ```\n     *\n     * @param geoPoint - The position in geo coordinates.\n     * @param result - The optional object used to store the resulting world position, result must\n     * implement {@link Vector3Like}.\n     */\n    abstract projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates;\n\n    /**\n     * Gets the {@link TransformLike} of the local tangent space at the given point.\n     *\n     * @param point - The geo / world coordinates.\n     * @param result - The {@link TransformLike}.\n     */\n    localTangentSpace(\n        point: GeoCoordinatesLike | Vector3Like,\n        result: TransformLike\n    ): TransformLike {\n        if (isGeoCoordinatesLike(point)) {\n            this.projectPoint(point, result.position);\n        } else {\n            MathUtils.copyVector3(point, result.position);\n        }\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, 1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, 1, result.zAxis);\n        return result;\n    }\n\n    /**\n     * Returns the geo coordinates (latitude, longitude, altitude) from the given world position\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract unprojectPoint(worldPoint: Vector3Like): GeoCoordinates;\n\n    /**\n     * Returns the altitude at the given world position (x,y,z) in meters.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract unprojectAltitude(worldPoint: Vector3Like): number;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox);\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox - The bounding box in geo coordinates.\n     */\n    abstract projectBox(geoBox: GeoBox): Box3Like;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox, new THREE.Box3());\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox - The bounding box in geo coordinates.\n     * @param result - The resulting {@link OrientedBox3Like}.\n     */\n    abstract projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: WorldBoundingBox\n    ): WorldBoundingBox;\n\n    /**\n     * Converts a bounding box in world coordinates to a bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldBox - The bounding box in world coordinates.\n     */\n    abstract unprojectBox(worldBox: Box3Like): GeoBox;\n\n    /**\n     * Returns the scaling factor that must be used to convert the units used by `worldPoint` to\n     * meters.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract getScaleFactor(worldPoint: Vector3Like): number;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract surfaceNormal(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint - The position in world coordinates.\n     * @returns The resulting normal vector.\n     */\n    abstract surfaceNormal<Normal extends Vector3Like>(\n        worldPoint: Vector3Like,\n        result: Normal\n    ): Normal;\n\n    /**\n     * Returns the signed distance between the given coordinates and\n     * the closest point on the surface.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract groundDistance(worldPoint: Vector3Like): number;\n\n    /**\n     * Scales the given world coordinates to the surface.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract scalePointToSurface(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source {@link Projection}.\n     *\n     * @param sourceProjection - The source projection.\n     * @param worldPos - A valid world position for the given source projection.\n     * @returns The world position reprojected using this {@link Projection}.\n     */\n    reprojectPoint(sourceProjection: Projection, worldPos: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source {@link Projection}.\n     *\n     * @param sourceProjection - The source projection.\n     * @param worldPos - A valid position in the world space defined by the source projection.\n     * @param result - The resulting position reprojected using this {@link Projection}.\n     */\n    reprojectPoint<WorldCoordinates extends Vector3Like>(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result: WorldCoordinates\n    ): WorldCoordinates;\n\n    /**\n     * Reproject a world position from the given source {@link Projection}.\n     * Implementations should be aware of worldPos and result may be one object\n     *\n     * @param sourceProjection - The source projection.\n     * @param worldPos - A valid position in the world space defined by the source projection.\n     * @param result - The resulting position reprojected using this {@link Projection}.\n     * @hidden\n     */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === this) {\n            if (result === undefined) {\n                return { x: worldPos.x, y: worldPos.y, z: worldPos.z };\n            }\n            result.x = worldPos.x;\n            result.y = worldPos.y;\n            result.z = worldPos.z;\n            return result;\n        }\n        return this.projectPoint(sourceProjection.unprojectPoint(worldPos), result);\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * The type representing the value of a property.\n */\nexport type Value = null | boolean | number | string | object;\n\n/**\n * An interface defining a collection of named properties.\n *\n * @example\n * ```typescript\n * const properties: ValueMap = {\n *    $id: 123,\n *    color: \"rgba(255, 0, 0, 1)\"\n * }\n * ```\n */\nexport interface ValueMap {\n    [name: string]: Value;\n}\n\n/**\n * A class used to lookup properties by name.\n *\n * @remarks\n * Concrete implementation of `Env` like {@link MapEnv} are used\n * to resolve the property names used in {@link Expr | style expressions}.\n *\n * @example\n * ```typescript\n * const env = new MapEnv({\n *     kind: \"landuse\",\n * });\n *\n * const expr = Expr.fromJson([\"get\", \"kind\"]);\n *\n * const value = expr.evaluate(env);\n *\n * console.log(`kind is '${value}`);\n * ```\n */\nexport class Env {\n    /**\n     * Returns `true` if the given object is an instance of {@link Env}.\n     *\n     * @param object - The object to test.\n     */\n    static isEnv(object: any): object is Env {\n        return object instanceof Env;\n    }\n\n    /**\n     * Returns property in {@link Env} by name.\n     *\n     * @param name - Name of property.\n     */\n    lookup(name: string): Value | undefined {\n        return undefined;\n    }\n    /**\n     * Return an object containing all properties of this environment. (Here: empty object).\n     */\n    unmap(): ValueMap {\n        return {};\n    }\n}\n\n/**\n * `MapEnv` is a concrete implementation of {@link Env} that\n * creates a lookup environment from a set of properties.\n *\n * @example\n * ```typescript\n * const baseEnv = new MapEnv({\n *     $zoom: 14,\n * });\n *\n * // extends baseEnv with a the new binding (kind, \"landuse\").\n * const env = new MapEnv({ kind: \"landuse\" }, baseEnv);\n *\n * const zoom = env.lookup(\"$zoom\"); // zoom is 14\n * const kind = env.lookup(\"kind\"); // kind is is \"landuse\"\n *\n * const expr = Expr.fromJson([\"get\", \"kind\"]);\n * const value = expr.evaluate(env); // value is \"landuse\"\n * ```\n */\nexport class MapEnv extends Env {\n    constructor(readonly entries: ValueMap, private readonly parent?: Env) {\n        super();\n    }\n    /**\n     * Returns property in {@link Env} by name.\n     *\n     * @param name - Name of property.\n     * @override\n     */\n    lookup(name: string): Value | undefined {\n        if (this.entries.hasOwnProperty(name)) {\n            const value = this.entries[name];\n            if (value !== undefined) {\n                return value;\n            }\n        }\n        return this.parent ? this.parent.lookup(name) : undefined;\n    }\n    /**\n     * Return an object containing all properties of this environment, takes care of the parent\n     * object.\n     * @override\n     */\n    unmap(): ValueMap {\n        const obj: any = this.parent ? this.parent.unmap() : {};\n        for (const key in this.entries) {\n            if (this.entries.hasOwnProperty(key)) {\n                obj[key] = this.entries[key];\n            }\n        }\n        return obj;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBoxExtentLike } from \"./GeoBoxExtentLike\";\nimport { GeoCoordinates } from \"./GeoCoordinates\";\n\nimport * as THREE from \"three\";\n\n/**\n * `GeoBox` is used to represent a bounding box in geo coordinates.\n */\nexport class GeoBox implements GeoBoxExtentLike {\n    /**\n     * Returns a `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest - The south west position in geo coordinates.\n     * @param northEast - The north east position in geo coordinates.\n     */\n    static fromCoordinates(southWest: GeoCoordinates, northEast: GeoCoordinates): GeoBox {\n        return new GeoBox(southWest, northEast);\n    }\n\n    /**\n     * Returns a `GeoBox` with the given center and dimensions.\n     *\n     * @param center - The center position of geo box.\n     * @param extent - Box latitude and logitude span\n     */\n    static fromCenterAndExtents(center: GeoCoordinates, extent: GeoBoxExtentLike): GeoBox {\n        return new GeoBox(\n            new GeoCoordinates(\n                center.latitude - extent.latitudeSpan / 2,\n                center.longitude - extent.longitudeSpan / 2\n            ),\n            new GeoCoordinates(\n                center.latitude + extent.latitudeSpan / 2,\n                center.longitude + extent.longitudeSpan / 2\n            )\n        );\n    }\n\n    /**\n     * Constructs a new `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest - The south west position in geo coordinates.\n     * @param northEast - The north east position in geo coordinates.\n     */\n    constructor(readonly southWest: GeoCoordinates, readonly northEast: GeoCoordinates) {}\n\n    /**\n     * Returns the minimum altitude or `undefined`.\n     */\n    get minAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.min(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the maximum altitude or `undefined`.\n     */\n    get maxAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.max(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the south latitude in degrees of this `GeoBox`.\n     */\n    get south(): number {\n        return this.southWest.latitude;\n    }\n\n    /**\n     * Returns the north altitude in degrees of this `GeoBox`.\n     */\n    get north(): number {\n        return this.northEast.latitude;\n    }\n\n    /**\n     * Returns the west longitude in degrees of this `GeoBox`.\n     */\n    get west(): number {\n        return this.southWest.longitude;\n    }\n\n    /**\n     * Returns the east longitude in degrees of this `GeoBox`.\n     */\n    get east(): number {\n        return this.northEast.longitude;\n    }\n\n    /**\n     * Returns the center of this `GeoBox`.\n     */\n    get center(): GeoCoordinates {\n        const latitude = (this.south + this.north) * 0.5;\n        const { west, east } = this;\n        const { minAltitude, altitudeSpan } = this;\n\n        let altitude: number | undefined;\n\n        if (minAltitude !== undefined && altitudeSpan !== undefined) {\n            altitude = minAltitude + altitudeSpan * 0.5;\n        }\n\n        if (west < east) {\n            return new GeoCoordinates(latitude, (west + east) * 0.5, altitude);\n        }\n\n        let longitude = (360 + east + west) * 0.5;\n\n        if (longitude > 360) {\n            longitude -= 360;\n        }\n\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns the latitude span in radians.\n     */\n    get latitudeSpanInRadians(): number {\n        return THREE.MathUtils.degToRad(this.latitudeSpan);\n    }\n\n    /**\n     * Returns the longitude span in radians.\n     */\n    get longitudeSpanInRadians(): number {\n        return THREE.MathUtils.degToRad(this.longitudeSpan);\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     */\n    get latitudeSpan(): number {\n        return this.north - this.south;\n    }\n\n    get altitudeSpan(): number | undefined {\n        if (this.maxAltitude === undefined || this.minAltitude === undefined) {\n            return undefined;\n        }\n        return this.maxAltitude - this.minAltitude;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     */\n    get longitudeSpan(): number {\n        let width = this.northEast.longitude - this.southWest.longitude;\n\n        if (width < 0) {\n            width += 360;\n        }\n\n        return width;\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     * @deprecated Use [[latitudeSpan]] instead.\n     */\n    get latitudeSpanInDegrees(): number {\n        return this.latitudeSpan;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     * @deprecated Use [[longitudeSpan]] instead.\n     */\n    get longitudeSpanInDegrees(): number {\n        return this.longitudeSpan;\n    }\n\n    /**\n     * Returns `true` if the given geo coordinates are contained in this `GeoBox`.\n     *\n     * @param point - The geo coordinates.\n     */\n    contains(point: GeoCoordinates): boolean {\n        if (\n            point.altitude === undefined ||\n            this.minAltitude === undefined ||\n            this.maxAltitude === undefined\n        ) {\n            return this.containsHelper(point);\n        }\n\n        const isFlat = this.minAltitude === this.maxAltitude;\n        const isSameAltitude = this.minAltitude === point.altitude;\n        const isWithinAltitudeRange =\n            this.minAltitude <= point.altitude && this.maxAltitude > point.altitude;\n\n        // If box is flat, we should check the altitude and containment,\n        // otherwise we should check also altitude difference where we consider\n        // point to be inside if alt is from [m_minAltitude, m_maxAltitude) range!\n        if (isFlat ? isSameAltitude : isWithinAltitudeRange) {\n            return this.containsHelper(point);\n        }\n\n        return false;\n    }\n\n    /**\n     * Clones this `GeoBox` instance.\n     */\n    clone(): GeoBox {\n        return new GeoBox(this.southWest, this.northEast);\n    }\n\n    /**\n     * Update the bounding box by considering a given point.\n     *\n     * @param point - The point that may expand the bounding box.\n     */\n    growToContain(point: GeoCoordinates) {\n        this.southWest.latitude = Math.min(this.southWest.latitude, point.latitude);\n        this.southWest.longitude = Math.min(this.southWest.longitude, point.longitude);\n        this.southWest.altitude =\n            this.southWest.altitude !== undefined && point.altitude !== undefined\n                ? Math.min(this.southWest.altitude, point.altitude)\n                : this.southWest.altitude !== undefined\n                ? this.southWest.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n\n        this.northEast.latitude = Math.max(this.northEast.latitude, point.latitude);\n        this.northEast.longitude = Math.max(this.northEast.longitude, point.longitude);\n        this.northEast.altitude =\n            this.northEast.altitude !== undefined && point.altitude !== undefined\n                ? Math.max(this.northEast.altitude, point.altitude)\n                : this.northEast.altitude !== undefined\n                ? this.northEast.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n    }\n\n    private containsHelper(point: GeoCoordinates): boolean {\n        if (point.latitude < this.southWest.latitude || point.latitude >= this.northEast.latitude) {\n            return false;\n        }\n\n        const { west, east } = this;\n\n        if (east > west) {\n            return point.longitude >= west && point.longitude < east;\n        }\n\n        return point.longitude > east || point.longitude <= west;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `GeoCoordinates` like interface.\n */\nexport interface GeoCoordinatesLike {\n    /** The latitude in degrees. */\n    latitude: number;\n\n    /** The longitude in degrees. */\n    longitude: number;\n\n    /** The optional altitude in meters. */\n    altitude?: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to {@link GeoCoordinatesLike} data interface.\n */\nexport function isGeoCoordinatesLike(object: any): object is GeoCoordinatesLike {\n    return (\n        object &&\n        typeof object.latitude === \"number\" &&\n        typeof object.longitude === \"number\" &&\n        (typeof object.altitude === \"number\" || typeof object.altitude === \"undefined\")\n    );\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class EarthConstants {\n    /** The equatorial circumference in meters. */\n    static EQUATORIAL_CIRCUMFERENCE: number = 40075016.6855784861531768177614;\n\n    /** The equatorial radius in meters. */\n    static EQUATORIAL_RADIUS: number = 6378137.0;\n\n    /** The lowest point on earth (Dead Sea) in meters. */\n    static MIN_ELEVATION: number = -433.0;\n\n    /** The highest point on earth (Mt. Everest) in meters. */\n    static MAX_ELEVATION: number = 8848.0;\n\n    /** The highest artificial structure (building) on earth, Burj Khalifa tower in Dubai */\n    static MAX_BUILDING_HEIGHT: number = 828;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { FlatTileBoundingBoxGenerator } from \"./FlatTileBoundingBoxGenerator\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TileKeyUtils } from \"./TileKeyUtils\";\nimport { TileTreeTraverse } from \"./TileTreeTraverse\";\n\n/**\n * The `TilingScheme` represents how the data is tiled.\n */\nexport class TilingScheme {\n    readonly boundingBoxGenerator: FlatTileBoundingBoxGenerator;\n    readonly tileTreeTraverse: TileTreeTraverse;\n\n    /**\n     * Constructs a new `TilingScheme` with the given subdivision scheme and projection.\n     *\n     * @param subdivisionScheme - The subdivision scheme used by this `TilingScheme`.\n     * @param projection - The projection used by this `TilingScheme`.\n     */\n    constructor(readonly subdivisionScheme: SubdivisionScheme, readonly projection: Projection) {\n        this.boundingBoxGenerator = new FlatTileBoundingBoxGenerator(this);\n        this.tileTreeTraverse = new TileTreeTraverse(subdivisionScheme);\n    }\n\n    /**\n     * Returns the sub tile keys of the given tile.\n     *\n     * @param tileKey - The {@link TileKey}.\n     * @returns The list of the sub tile keys.\n     */\n    getSubTileKeys(tileKey: TileKey): Iterable<TileKey> {\n        return this.tileTreeTraverse.subTiles(tileKey);\n    }\n\n    /**\n     * Gets the {@link TileKey} from the given geo position and level.\n     *\n     * @param geoPoint - The position in geo coordinates.\n     * @param level - The level of the resulting `TileKey`.\n     */\n    getTileKey(geoPoint: GeoCoordinatesLike, level: number): TileKey | null {\n        return TileKeyUtils.geoCoordinatesToTileKey(this, geoPoint, level);\n    }\n\n    /**\n     * Gets the list of {@link TileKey}s contained in the given {@link GeoBox}.\n     *\n     * @param geoBox - The bounding box in geo coordinates.\n     * @param level - The level of the resulting `TileKey`.\n     */\n    getTileKeys(geoBox: GeoBox, level: number): TileKey[] {\n        return TileKeyUtils.geoRectangleToTileKeys(this, geoBox, level);\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given {@link TileKey}.\n     *\n     * @param tileKey - The `TileKey`.\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        return this.boundingBoxGenerator.getGeoBox(tileKey);\n    }\n\n    /**\n     * Returns the bounding box in world coordinates.\n     *\n     * @param tileKey - The `TileKey`.\n     * @param result - The optional object that will contain the resulting bounding box.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        return this.boundingBoxGenerator.getWorldBox(tileKey, result);\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Value } from \"@here/harp-datasource-protocol/index-decoder\";\n\n/**\n * Feature Modifier ids to choose which OmvFeatureModifer should be used in OmvDecoder.\n */\nexport enum FeatureModifierId {\n    /**\n     * Generic feature modifier used when no other modifiers are defined.\n     *\n     * @note You do not need to specify it in [[OmvDataSourceParameters]] as it is added by default\n     * if no other feature modifier is used.\n     */\n    default,\n    /**\n     * Identifier to use the OmvTomTomFeatureModifier in the OmvDecoder.\n     */\n    tomTom\n}\n\n/**\n * Definition of a filter.\n */\nexport interface OmvFilterString {\n    /**  String value */\n    value: string;\n    /** Match condition */\n    match: OmvFilterString.StringMatch;\n}\n\n/**\n * Adding the match condition type and the matching function to the namespace of `OmvFilterString`.\n */\nexport namespace OmvFilterString {\n    /**\n     * Match condition.\n     */\n    export enum StringMatch {\n        /** Matches any. */\n        Any,\n        /** Exact match. */\n        Match,\n        /** Matches if a test string starts with a filter string. */\n        StartsWith,\n        /** Matches if a test string contains a filter string. */\n        Contains,\n        /** Matches if a test string ends with a filter string. */\n        EndsWith\n    }\n\n    /**\n     * Check for a string against a filter.\n     *\n     * @param str - The string to check against a filter.\n     * @param filterString - The filter containing the match condition.\n     * @returns `true` if the match condition is satisfied.\n     */\n    export function matchString(str: string, filterString: OmvFilterString): boolean {\n        switch (filterString.match) {\n            case OmvFilterString.StringMatch.Any:\n                return true;\n            case OmvFilterString.StringMatch.Match:\n                return str === filterString.value;\n            case OmvFilterString.StringMatch.StartsWith:\n                return filterString.value.startsWith(str);\n            case OmvFilterString.StringMatch.EndsWith:\n                return filterString.value.endsWith(str);\n            default:\n                return str.indexOf(filterString.value) >= 0;\n        }\n    }\n}\n\n/**\n * Definition of a filter for a feature attribute\n */\nexport interface OmvFilterFeatureAttribute {\n    key: string;\n    value: Value;\n}\n\nexport enum OmvGeometryType {\n    UNKNOWN = 0,\n    POINT = 1,\n    LINESTRING = 2,\n    POLYGON = 3\n}\n\n/**\n * Internal type of a layer filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvLayerFilterDescription {\n    name: OmvFilterString;\n    minLevel: number;\n    maxLevel: number;\n}\n\n/**\n * Internal type of a single filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFilterDescription {\n    layerName: OmvFilterString;\n    geometryTypes?: OmvGeometryType[];\n    classes?: OmvFilterString[];\n    minLevel: number;\n    maxLevel: number;\n    featureAttribute?: OmvFilterFeatureAttribute;\n}\n\n/**\n * Internal type of a complete [[OmvFeatureFilter]] description, should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFeatureFilterDescription {\n    processLayersDefault: boolean;\n    processPointsDefault: boolean;\n    processLinesDefault: boolean;\n    processPolygonsDefault: boolean;\n\n    layersToProcess: OmvLayerFilterDescription[];\n    layersToIgnore: OmvLayerFilterDescription[];\n    pointsToProcess: OmvFilterDescription[];\n    pointsToIgnore: OmvFilterDescription[];\n    linesToProcess: OmvFilterDescription[];\n    linesToIgnore: OmvFilterDescription[];\n    polygonsToProcess: OmvFilterDescription[];\n    polygonsToIgnore: OmvFilterDescription[];\n\n    // enabledKinds and disabledKinds\n    kindsToProcess: string[];\n    kindsToIgnore: string[];\n}\n\n/**\n * Internal interface for options passed from the [[OmvDataSource]] to the decoder.\n *\n * @hidden\n */\nexport interface OmvDecoderOptions {\n    /**\n     * If true, features that have no technique in the theme will be printed to the console (can be\n     * excessive!).\n     */\n    showMissingTechniques?: boolean;\n\n    /**\n     * Gather feature attributes from [[OmvData]]. Defaults to false.\n     */\n    gatherFeatureAttributes?: boolean;\n\n    /**\n     * @deprecated Tile info is not decoded anymore. The same information can be generated\n     * implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV\n     * data.\n     */\n    createTileInfo?: boolean;\n\n    /**\n     * @deprecated Tile info is not decoded anymore. The same information can be generated\n     * implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV\n     * data.\n     */\n    gatherRoadSegments?: boolean;\n\n    /**\n     * Optional storage level offset for [[Tile]]s. Default is -2.\n     */\n    storageLevelOffset?: number;\n\n    /**\n     * If not set to `false` very short text labels will be skipped during decoding based on a\n     * heuristic.\n     */\n    skipShortLabels?: boolean;\n\n    /**\n     * A description for the feature filter which can be safely passed down to the web workers.\n     * It has to be generated with the help of the [[OmvFeatureFilterDescriptionBuilder]] (to\n     * guarantee the correctness).\n     */\n    filterDescription?: OmvFeatureFilterDescription | null;\n\n    // NOTE: Consider using OmvFeatureModifiers objects already instead of ids, this way we could\n    // get rid of politicalView property as properly configured feature modifier (with country\n    // code), would be already defined here.\n    /**\n     * List of user specified [[OmvFeatureModifier]]s, list order declares the order of processing.\n     *\n     * Each identifier is used to choose corresponding OmvFeatureModifier, if undefined at least\n     * [[OmvGenericFeatureModifier]] is added to decoder.\n     */\n    featureModifiers?: FeatureModifierId[];\n\n    /**\n     * Country code (lower-case ISO 3166-1 alpha-2) defining optional point of view to be used.\n     * Set to empty string (\"\") if you want to use default (widely accepted) point of view.\n     * If set to `undefined` leaves current political view decoder configuration.\n     */\n    politicalView?: string;\n\n    enableElevationOverlay?: boolean;\n}\n\n/**\n * Default OMV tile decoder service type.\n *\n * Used for requesting decoder services using [[WorkerServiceManager]].\n */\nexport const OMV_TILE_DECODER_SERVICE_TYPE = \"omv-tile-decoder\";\n\n/**\n * Default OMV tiler service type.\n *\n * Used for requesting tiler services using [[WorkerServiceManager]].\n */\nexport const OMV_TILER_SERVICE_TYPE = \"omv-tiler\";\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\nimport { RGBA } from \"./RGBA\";\n\nconst SHIFT_TRANSPARENCY: number = 24;\nconst SHIFT_RED: number = 16;\nconst SHIFT_GREEN: number = 8;\nconst SHIFT_BLUE: number = 0;\n\n// tslint:disable: no-bitwise\n//    Allow bitwise operations for colors decoding\n\n// tslint:disable-next-line: no-bitwise\nconst HEX_FULL_CHANNEL: number = 0xff;\nconst HEX_RGB_MASK: number = 0xffffff;\nconst HEX_TRGB_MASK: number = 0xffffffff;\n\nconst tmpColor = new THREE.Color();\n\n/**\n * Utilities to convert RGBA colors encoded in custom number (hex) format to THREE.Color objects.\n *\n * The functions provided allows for conversion from and to our custom number based color format,\n * which contains transparency, red, green and blue color channels in a way that each channel\n * occupies 8 bits of resulting number (color format 0xTTRRGGBB).\n * In order to preserve compatibility with THREE.Color class and its hexadecimal color\n * representation, we do not store __alpha__ channel in encoded color's number, but replace it\n * with __transparency__ channel, which is simply opposite to alpha:\n * ```transparency = 0xFF - alpha```\n * Such channel value is stored on the oldest bits (octet) in the integral color (numeric) value,\n * so it is fully compatible with THREE.Color numerical representation (@see [[THREE.Color.getHex]],\n * [[THREE.Color.setHex]]).\n * See also [[getHexFromRgba]] and [[getRgbaFromHex]] for more info about conversion.\n */\nexport namespace ColorUtils {\n    /**\n     * Encodes RGBA channels in custom number coded format (represented in hex as 0xTTRRGGBB).\n     *\n     * We do not use direct alpha channel mapping to hex in order to preserve compatibility\n     * with THREE.js color format (0xRRGGBB). This is done by encoding transparency\n     * (255 - alpha) instead of alpha on the oldest bits, shifted by [[SHIFT_TRANSPARENCY]].\n     * This way simple 0xRRGGBB color is equal to 0x00RRGGBB without transparency and\n     * color defining transparency (alpha < 255) is always recognizable by the oldest\n     * bit set:\n     * ```typescript\n     * (color >> SHIFT_TRANSPARENCY) !== 0.\n     * ```\n     * @note All input components are floating points in <0, 1> range (inclusively).\n     * @note Although method encodes transparency channel in single number value, it is still\n     * compatible with THREE.js number based color coding (0xRRGGBB), so you may pass this value to\n     * [[THREE.Color]] c-tor, but keep in mind that transparency will be silently ignored.\n     */\n    export function getHexFromRgba(r: number, g: number, b: number, a: number): number {\n        assert(a >= 0 && a <= 1);\n        const t = HEX_FULL_CHANNEL - Math.floor(a * HEX_FULL_CHANNEL);\n        return (\n            (t << SHIFT_TRANSPARENCY) ^\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encodes RGB all color channels in single number with format 0xRRGGBB.\n     *\n     * All input channels should be in <0, 1> range (inclusively).\n     * See also [[getHexFromRgba]] for more information about [[THREE.Color]] compatibility.\n     *\n     * @note This method is fully compatible with THREE.js color encoding, so\n     * you may pass this value directly to THREE.Color c-tor.\n     */\n    export function getHexFromRgb(r: number, g: number, b: number): number {\n        assert(r >= 0 && r <= 1);\n        assert(g >= 0 && g <= 1);\n        assert(b >= 0 && b <= 1);\n        return (\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encode and convert HSL value to number coded color format (0xRRGGBB).\n     *\n     * @see getHexFromRgb.\n     * @param h - Hue component value between 0 and 1.\n     * @param s - Saturation value between 0 and 1.\n     * @param l - Lightness channel between 0 and 1.\n     */\n    export function getHexFromHsl(h: number, s: number, l: number): number {\n        assert(h >= 0 && h <= 1);\n        assert(s >= 0 && s <= 1);\n        assert(l >= 0 && l <= 1);\n        return tmpColor.setHSL(h, s, l).getHex();\n    }\n\n    /**\n     * Retrieve RGBA channels separately from number encoded custom color format.\n     *\n     * Provides an easy way for channels extraction (r, g, b, a) from custom number coded color\n     * format.\n     *\n     * @see getHexFromRgba.\n     * @param hex - The number encoded color value (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns r, g, b, a channels in simple object, where each channel value is saved as floating\n     * point from 0 to 1 inclusively.\n     */\n    export function getRgbaFromHex(hex: number, target = new RGBA()): RGBA {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        target.r = ((hex >> SHIFT_RED) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL;\n        target.g = ((hex >> SHIFT_GREEN) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL;\n        target.b = ((hex >> SHIFT_BLUE) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL;\n        target.a =\n            (HEX_FULL_CHANNEL - ((hex >> SHIFT_TRANSPARENCY) & HEX_FULL_CHANNEL)) /\n            HEX_FULL_CHANNEL;\n        return target;\n    }\n\n    /**\n     * Determines if number encoded color contains alpha (opacity) defined and different then 255.\n     *\n     * @param hex - The number encoded color (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns True if color has transparency defined.\n     */\n    export function hasAlphaInHex(hex: number): boolean {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex >> SHIFT_TRANSPARENCY !== 0;\n    }\n\n    /**\n     * Retrieves alpha color channel from hex encoded color value.\n     *\n     * @see getHexFromRgba.\n     * @param hex - The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns The floating point alpha component in <0, 1> range.\n     */\n    export function getAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return (\n            ((HEX_FULL_CHANNEL - (hex >> SHIFT_TRANSPARENCY)) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL\n        );\n    }\n\n    /**\n     * Remove transparency info from the number coded color, makes it compatible with external libs.\n     *\n     * @see getAlphaFromHex.\n     * @param hex - The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns number coded color value representable as 0xRRGGBB in hex.\n     */\n    export function removeAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex & HEX_RGB_MASK;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MathUtils } from \"three\";\nimport { ColorUtils } from \"./ColorUtils\";\nimport { parseStringEncodedColor } from \"./StringEncodedNumeral\";\n\n/**\n * A class representing RGBA colors.\n *\n * @hidden\n * @internal\n */\nexport class RGBA {\n    /**\n     * Parses a string describing a color.\n     *\n     * @param text - The string color literal\n     */\n    static parse(text: string) {\n        const color = parseStringEncodedColor(text);\n\n        if (color === undefined) {\n            return undefined;\n        }\n\n        return ColorUtils.getRgbaFromHex(color);\n    }\n\n    /**\n     * Constructs a [[RGBA]] color using the given components in the [0..1] range.\n     */\n    constructor(\n        public r: number = 1,\n        public g: number = 1,\n        public b: number = 1,\n        public a: number = 1\n    ) {}\n\n    /**\n     * Clones this [[RGBA]] color.\n     */\n    clone() {\n        return new RGBA(this.r, this.g, this.b, this.a);\n    }\n\n    /**\n     * Returns this color encoded as one single number.\n     */\n    getHex() {\n        return ColorUtils.getHexFromRgba(this.r, this.g, this.b, this.a);\n    }\n\n    /**\n     * Linearly interpolate the components of this color.\n     */\n    lerp(target: RGBA, t: number) {\n        this.r = MathUtils.lerp(this.r, target.r, t);\n        this.g = MathUtils.lerp(this.g, target.g, t);\n        this.b = MathUtils.lerp(this.b, target.b, t);\n        this.a = MathUtils.lerp(this.a, target.a, t);\n        return this;\n    }\n\n    /**\n     * Returns this color encoded as JSON literal.\n     */\n    toJSON() {\n        // tslint:disable-next-line: no-bitwise\n        return `rgba(${(this.r * 255) << 0}, ${(this.g * 255) << 0}, ${(this.b * 255) << 0}, ${\n            this.a\n        })`;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { assert } from \"@here/harp-utils\";\nimport { ColorUtils } from \"./ColorUtils\";\n\n//@ts-ignore\nimport { parseCSSColor } from \"csscolorparser\";\n\n/**\n * Enumeration of supported string encoded numerals.\n * @internal\n */\nexport enum StringEncodedNumeralType {\n    Meters,\n    Pixels,\n    Hex\n}\n\n/**\n * Interface containing information about a [[StringEncodedNumeral]] format, component size and\n * evaluation.\n * @internal\n */\nexport interface StringEncodedNumeralFormat {\n    readonly type: StringEncodedNumeralType;\n    readonly size: number;\n    readonly regExp: RegExp;\n    mask?: number;\n    decoder: (encodedValue: string, target: number[]) => boolean;\n}\nconst StringEncodedMeters: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Meters,\n    size: 1,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))m$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedMeters.regExp.exec(encodedValue);\n        return match ? (target[0] = Number(match[1])) !== undefined : false;\n    }\n};\nconst StringEncodedPixels: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Pixels,\n    size: 1,\n    mask: 1.0,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))px$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedPixels.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        target[0] = Number(match[1]);\n        return true;\n    }\n};\nconst StringEncodedHex: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Hex,\n    size: 4,\n    regExp: /^\\#((?:[0-9A-Fa-f][0-9A-Fa-f]){4}|[0-9A-Fa-f]{4})$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedHex.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        const hex = match[1];\n        const size = hex.length;\n        // Only few sizes are possible for given reg-exp.\n        assert(size === 4 || size === 8, `Matched incorrect hex color format`);\n        // Note that we simply ignore alpha channel value.\n        // TODO: To be resolved with HARP-7517\n        if (size === 4) {\n            // #RGB or #RGBA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n            target[1] = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n            target[2] = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n            target[3] = size === 4 ? parseInt(hex.charAt(3) + hex.charAt(3), 16) / 255 : 1;\n        } else if (size === 8) {\n            // #RRGGBB or #RRGGBBAA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n            target[1] = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n            target[2] = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n            target[3] = size === 8 ? parseInt(hex.charAt(6) + hex.charAt(7), 16) / 255 : 1;\n        }\n        return true;\n    }\n};\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing sizes, lengths and distances.\n * @internal\n */\nexport const StringEncodedMetricFormats: StringEncodedNumeralFormat[] = [\n    StringEncodedMeters,\n    StringEncodedPixels\n];\n\nconst StringEncodedMetricFormatMaxSize = StringEncodedMetricFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing color data.\n * @internal\n */\nexport const StringEncodedColorFormats: StringEncodedNumeralFormat[] = [StringEncodedHex];\n\nconst StringEncodedColorFormatMaxSize = StringEncodedColorFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of supported [[StringEncodedNumeralFormat]]s (intended to be indexed with\n * [[StringEncodedNumeralType]] enum).\n * @internal\n */\nexport const StringEncodedNumeralFormats: StringEncodedNumeralFormat[] = [\n    ...StringEncodedMetricFormats,\n    ...StringEncodedColorFormats\n];\n\n/**\n * @internal\n */\nexport const StringEncodedNumeralFormatMaxSize = Math.max(\n    StringEncodedColorFormatMaxSize,\n    StringEncodedMetricFormatMaxSize\n);\n\nconst tmpBuffer: number[] = new Array(StringEncodedNumeralFormatMaxSize);\n\n/**\n * Parse string encoded numeral values using all known [[StringEncodedNumeralFormats]].\n *\n * @param numeral - The string representing numeric value.\n * @param pixelToMeters - The ratio used to convert from meters to pixels (default 1.0).\n * @returns Number parsed or __undefined__ if non of the numeral patterns matches the expression\n * provided in [[numeral]].\n */\nexport function parseStringEncodedNumeral(\n    numeral: string,\n    pixelToMeters: number = 1.0\n): number | undefined {\n    return parseStringLiteral(numeral, StringEncodedNumeralFormats, pixelToMeters);\n}\n\n/**\n * Parse string encoded color value using all known [[StringEncodedColorFormats]].\n *\n * @param color - The string encoded color expression (i.e. '#FFF', 'rgb(255, 0, 0)', etc.).\n * @returns The color parsed or __undefined__ if non of the known representations matches\n * the expression provided in [[color]].\n */\nexport function parseStringEncodedColor(color: string): number | undefined {\n    return parseStringLiteral(color, StringEncodedColorFormats);\n}\n\nfunction parseStringLiteral(\n    text: string,\n    formats: StringEncodedNumeralFormat[],\n    pixelToMeters: number = 1.0\n): number | undefined {\n    const matchedFormat = formats.find(format => {\n        return format.decoder(text, tmpBuffer) ? true : false;\n    });\n\n    if (matchedFormat === undefined) {\n        const components: number[] | null = parseCSSColor(text);\n\n        return Array.isArray(components) && !components.some(c => isNaN(c))\n            ? ColorUtils.getHexFromRgba(\n                  components[0] / 255,\n                  components[1] / 255,\n                  components[2] / 255,\n                  components[3]\n              )\n            : undefined;\n    }\n\n    switch (matchedFormat?.type) {\n        case StringEncodedNumeralType.Pixels:\n            return tmpBuffer[0] * pixelToMeters;\n        case StringEncodedNumeralType.Hex:\n            return ColorUtils.getHexFromRgba(\n                tmpBuffer[0],\n                tmpBuffer[1],\n                tmpBuffer[2],\n                tmpBuffer[3]\n            );\n        default:\n            return tmpBuffer[0];\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\n\n/**\n * Interpolation mode used when computing a [[InterpolatedProperty]] value for a given zoom level.\n * @internal\n */\nexport enum InterpolationMode {\n    Discrete,\n    Linear,\n    Cubic,\n    Exponential\n}\n\n/**\n * Interpolated property could have its value (some initial value should be provided) changed\n * according to an interpolation type.\n *\n * Here is an example of an interpolated property from a map style:\n * \"lineWidth\": {\n *  \"interpolation\": \"Linear\",\n *  \"zoomLevels\": [13, 14, 15],\n *  \"values\": [ 1.5, 1.2, 0.9]\n * }\n * @internal\n */\nexport interface InterpolatedPropertyDefinition<T> {\n    interpolation?: \"Discrete\" | \"Linear\" | \"Cubic\" | \"Exponential\";\n    zoomLevels: number[];\n    values: T[];\n    exponent?: number;\n}\n\n/**\n * Checks if a property is interpolated.\n * @param p - property to be checked\n * @internal\n */\nexport function isInterpolatedPropertyDefinition<T>(\n    p: any\n): p is InterpolatedPropertyDefinition<T> {\n    if (\n        p &&\n        p.interpolationMode === undefined &&\n        Array.isArray(p.values) &&\n        p.values.length > 0 &&\n        p.values[0] !== undefined &&\n        Array.isArray(p.zoomLevels) &&\n        p.zoomLevels.length > 0 &&\n        p.zoomLevels[0] !== undefined &&\n        p.values.length === p.zoomLevels.length\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Converts an [[InterpolatedPropertyDefinition]] to a [[JsonExpr]].\n *\n * @param property - A valid [[InterpolatedPropertyDefinition]]\n */\nexport function interpolatedPropertyDefinitionToJsonExpr(\n    property: InterpolatedPropertyDefinition<any>\n): JsonExpr {\n    if (property.interpolation === undefined || property.interpolation === \"Discrete\") {\n        const step: JsonExpr = [\"step\", [\"zoom\"], property.values[0]];\n        for (let i = 1; i < property.zoomLevels.length; ++i) {\n            step.push(property.zoomLevels[i], property.values[i]);\n        }\n        return step;\n    }\n    const interpolation: JsonExpr = [\"interpolate\"];\n    switch (property.interpolation) {\n        case \"Linear\":\n            interpolation.push([\"linear\"]);\n            break;\n        case \"Cubic\":\n            interpolation.push([\"cubic\"]);\n            break;\n        case \"Exponential\":\n            interpolation.push([\n                \"exponential\",\n                property.exponent !== undefined ? property.exponent : 2\n            ]);\n            break;\n        default:\n            throw new Error(`interpolation mode '${property.interpolation}' is not supported`);\n    } //switch\n    interpolation.push([\"zoom\"]);\n    for (let i = 0; i < property.zoomLevels.length; ++i) {\n        interpolation.push(property.zoomLevels[i], property.values[i]);\n    }\n    return interpolation;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass MercatorProjection extends Projection {\n    protected static clamp(val: number, min: number, max: number): number {\n        return Math.min(Math.max(min, val), max);\n    }\n\n    protected static latitudeClamp(latitude: number): number {\n        return MercatorProjection.clamp(\n            latitude,\n            -MercatorConstants.MAXIMUM_LATITUDE,\n            MercatorConstants.MAXIMUM_LATITUDE\n        );\n    }\n\n    private static latitudeProject(latitude: number): number {\n        return Math.log(Math.tan(Math.PI * 0.25 + latitude * 0.5)) / Math.PI;\n    }\n\n    private static latitudeClampProject(latitude: number): number {\n        return MercatorProjection.latitudeProject(MercatorProjection.latitudeClamp(latitude));\n    }\n\n    private static unprojectLatitude(y: number): number {\n        return 2.0 * Math.atan(Math.exp(Math.PI * y)) - Math.PI * 0.5;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh(2 * Math.PI * (worldPoint.y / this.unitScale - 0.5));\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        result.y =\n            (MercatorProjection.latitudeClampProject(geoPoint.latitudeInRadians) * 0.5 + 0.5) *\n            this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            MercatorProjection.unprojectLatitude((worldPoint.y / this.unitScale - 0.5) * 2.0),\n            (worldPoint.x / this.unitScale) * 2 * Math.PI - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(geoBox.center);\n        const worldNorth =\n            (MercatorProjection.latitudeClampProject(geoBox.northEast.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldSouth =\n            (MercatorProjection.latitudeClampProject(geoBox.southWest.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldYCenter = (worldNorth + worldSouth) * 0.5;\n\n        worldCenter.y = worldYCenter;\n\n        const latitudeSpan = worldNorth - worldSouth;\n        const longitudeSpan = (geoBox.longitudeSpan / 360) * this.unitScale;\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - longitudeSpan * 0.5;\n            result.min.y = worldCenter.y - latitudeSpan * 0.5;\n            result.max.x = worldCenter.x + longitudeSpan * 0.5;\n            result.max.y = worldCenter.y + latitudeSpan * 0.5;\n            const altitudeSpan = geoBox.altitudeSpan;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = longitudeSpan * 0.5;\n            result.extents.y = latitudeSpan * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (geoBox.altitudeSpan || 0) * 0.5);\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        // this implementation of [[reprojectPoint]] supports both\n        // [[WebMercatorProjection]] and [[MercatorProjection]]. The only\n        // difference betweeen these two variants of WEB Mercator\n        // is in the orientation of the Y axis, so we just flip Y coordinates\n        // when reprojecting between them.\n        if (\n            sourceProjection !== this &&\n            (sourceProjection === webMercatorProjection || sourceProjection === mercatorProjection)\n        ) {\n            if (result === undefined) {\n                // tslint:disable-next-line: no-object-literal-type-assertion\n                result = {} as Vector3Like;\n            }\n\n            result.x = worldPos.x;\n            result.y = this.unitScale - worldPos.y;\n            result.z = worldPos.z;\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n}\n\nclass WebMercatorProjection extends MercatorProjection {\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        /*\n         * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n         * might be a concrete class which is not available at runtime.\n         * Consider the following example:\n         *\n         *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n         *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n         *\n         * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n         */\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        const sy = Math.sin(MercatorProjection.latitudeClamp(geoPoint.latitudeInRadians));\n        result.y = (0.5 - Math.log((1 + sy) / (1 - sy)) / (4 * Math.PI)) * this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const x = worldPoint.x / this.unitScale - 0.5;\n        const y = 0.5 - worldPoint.y / this.unitScale;\n\n        const longitude = 360 * x;\n        const latitude = 90 - (360 * Math.atan(Math.exp(-y * 2 * Math.PI))) / Math.PI;\n\n        return new GeoCoordinates(latitude, longitude, worldPoint.z);\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const r = super.projectBox(geoBox, result);\n        if (isBox3Like(r)) {\n            // Invert the y axis for web mercator, this means that max => min & min => max\n            const maxY = r.max.y;\n            r.max.y = this.unitScale - r.min.y;\n            r.min.y = this.unitScale - maxY;\n        } else if (isOrientedBox3Like(r)) {\n            MathUtils.newVector3(1, 0, 0, r.xAxis);\n            MathUtils.newVector3(0, -1, 0, r.yAxis);\n            MathUtils.newVector3(0, 0, -1, r.zAxis);\n            r.position.y = this.unitScale - r.position.y;\n        }\n        return r;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = new GeoBox(\n            new GeoCoordinates(maxGeo.latitude, minGeo.longitude, minGeo.altitude),\n            new GeoCoordinates(minGeo.latitude, maxGeo.longitude, maxGeo.altitude)\n        );\n        return geoBox;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    localTangentSpace(\n        point: GeoCoordinatesLike | Vector3Like,\n        result: TransformLike\n    ): TransformLike {\n        if (isGeoCoordinatesLike(point)) {\n            this.projectPoint(point, result.position);\n        } else {\n            MathUtils.copyVector3(point, result.position);\n        }\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, -1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, -1, result.zAxis);\n        return result;\n    }\n}\n\nexport class MercatorConstants {\n    // Math.atan(Math.sinh(Math.PI))\n    static readonly MAXIMUM_LATITUDE: number = 1.4844222297453323;\n}\n\n/**\n * Mercator {@link Projection} used to convert geo coordinates to world coordinates and vice versa.\n */\nexport const mercatorProjection: Projection = new MercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n\n/**\n * Web Mercator {@link Projection} used to convert geo coordinates to world coordinates\n * and vice versa.\n */\nexport const webMercatorProjection: Projection = new WebMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass QuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n    getSubdivisionY(): number {\n        return 2;\n    }\n    getLevelDimensionX(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n    getLevelDimensionY(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n}\n\n/**\n * {@link SubdivisionScheme} representing a quadtree.\n */\nexport const quadTreeSubdivisionScheme: SubdivisionScheme = new QuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** @hidden */\nconst powerOfTwo = [\n    0x1,\n    0x2,\n    0x4,\n    0x8,\n    0x10,\n    0x20,\n    0x40,\n    0x80,\n    0x100,\n    0x200,\n    0x400,\n    0x800,\n    0x1000,\n    0x2000,\n    0x4000,\n    0x8000,\n    0x10000,\n    0x20000,\n    0x40000,\n    0x80000,\n    0x100000,\n    0x200000,\n    0x400000,\n    0x800000,\n    0x1000000,\n    0x2000000,\n    0x4000000,\n    0x8000000,\n    0x10000000,\n    0x20000000,\n    0x40000000,\n    0x80000000,\n    0x100000000,\n    0x200000000,\n    0x400000000,\n    0x800000000,\n    0x1000000000,\n    0x2000000000,\n    0x4000000000,\n    0x8000000000,\n    0x10000000000,\n    0x20000000000,\n    0x40000000000,\n    0x80000000000,\n    0x100000000000,\n    0x200000000000,\n    0x400000000000,\n    0x800000000000,\n    0x1000000000000,\n    0x2000000000000,\n    0x4000000000000,\n    0x8000000000000,\n    0x10000000000000 // Math.pow(2, 52), highest bit that can be set correctly.\n];\n\n/**\n * The `TileKey` instances are used to address a tile in a quadtree.\n *\n * A tile key is defined by a row, a column, and a level. The tree has a root at level 0, with one\n * single tile. On every level, each tile is divided into four children (therefore the name\n * quadtree).\n *\n * Within each [[level]], any particular tile is addressed with [[row]] and [[column]]. The number\n * of rows and columns in each level is 2 to the power of the level. This means: On level 0, only\n * one tile exists, [[columnsAtLevel]]() and [[rowsAtLevel]]() are both 1. On level 1, 4 tiles\n * exist, in 2 rows and 2 columns. On level 2 we have 16 tiles, in 4 rows and 4 columns. And so on.\n *\n * A tile key is usually created using [[fromRowColumnLevel]]() method.\n *\n * `TileKey` instances are immutable, all members return new instances of `TileKey` and do not\n * modify the original object.\n *\n * Utility functions like [[parent]](), [[changedLevelBy]](), and [[changedLevelTo]]() allow for\n * easy vertical navigation of the tree. The number of available rows and columns in the tile's\n * level is given with [[rowCount]]() and [[columnCount]]().\n *\n * Tile keys can be created from and converted into various alternative formats:\n *\n *  - [[toQuadKey]]() / [[fromQuadKey]]() - string representation 4-based\n *  - [[toHereTile]]() / [[fromHereTile]]() - string representation 10-based\n *  - [[mortonCode]]() / [[fromMortonCode]]() - number representation\n *\n * Note - as JavaScript's number type can hold 53 bits in its mantissa, only levels up to 26 can be\n * represented in the number representation returned by [[mortonCode]]().\n */\nexport class TileKey {\n    /**\n     * Creates a tile key.\n     *\n     * @param row - The requested row. Must be less than 2 to the power of level.\n     * @param column - The requested column. Must be less than 2 to the power of level.\n     * @param level - The requested level.\n     */\n    static fromRowColumnLevel(row: number, column: number, level: number): TileKey {\n        return new TileKey(row, column, level);\n    }\n\n    /**\n     * Creates a tile key from a quad string.\n     *\n     * The quad string can be created with [[toQuadKey]].\n     *\n     * @param quadkey - The quadkey to convert.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromQuadKey(quadkey: string): TileKey {\n        const level = quadkey.length;\n        let row = 0;\n        let column = 0;\n        // tslint:disable:no-bitwise\n        for (let i = 0; i < quadkey.length; ++i) {\n            const mask = 1 << i;\n            const d = parseInt(quadkey.charAt(level - i - 1), 10);\n            if (d & 0x1) {\n                column |= mask;\n            }\n            if (d & 0x2) {\n                row |= mask;\n            }\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n    /**\n     * Creates a tile key from a numeric Morton code representation.\n     *\n     * You can convert a tile key into a numeric Morton code with [[mortonCode]].\n     *\n     * @param quadKey64 - The Morton code to be converted.\n     * @returns A new instance of {@link TileKey}.\n     */\n    static fromMortonCode(quadKey64: number): TileKey {\n        let level = 0;\n        let row = 0;\n        let column = 0;\n        let quadKey = quadKey64;\n        // tslint:disable:no-bitwise\n        while (quadKey > 1) {\n            const mask: number = 1 << level;\n\n            if (quadKey & 0x1) {\n                column |= mask;\n            }\n            if (quadKey & 0x2) {\n                row |= mask;\n            }\n\n            level++;\n            quadKey = (quadKey - (quadKey & 0x3)) / 4;\n        }\n        // tslint:enable:no-bitwise\n        const result = TileKey.fromRowColumnLevel(row, column, level);\n        result.m_mortonCode = quadKey64;\n        return result;\n    }\n\n    /**\n     * Creates a tile key from a heretile code string.\n     *\n     * The string can be created with [[toHereTile]].\n     *\n     * @param quadkey64 - The string representation of the HERE tile key.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromHereTile(quadkey64: string): TileKey {\n        const result = TileKey.fromMortonCode(parseInt(quadkey64, 10));\n        result.m_hereTile = quadkey64;\n        return result;\n    }\n\n    /**\n     * Returns the number of available columns at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level - The level for which to return the number of columns.\n     * @returns The available columns at the given level.\n     */\n    static columnsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the number of available rows at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level - The level for which to return the number of rows.\n     * @returns The available rows at the given level.\n     */\n    static rowsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the closest matching `TileKey` in a cartesian coordinate system.\n     *\n     * @param level - The level for the tile key.\n     * @param coordX - The X coordinate.\n     * @param coordY - The Y coordinate.\n     * @param totalWidth - The maximum X coordinate.\n     * @param totalHeight - The maximum Y coordinate.\n     * @returns A new tile key at the given level that includes the given coordinates.\n     */\n    static atCoords(\n        level: number,\n        coordX: number,\n        coordY: number,\n        totalWidth: number,\n        totalHeight: number\n    ): TileKey {\n        return TileKey.fromRowColumnLevel(\n            Math.floor(coordY / (totalHeight / TileKey.rowsAtLevel(level))),\n            Math.floor(coordX / (totalWidth / TileKey.columnsAtLevel(level))),\n            level\n        );\n    }\n\n    /**\n     * Computes the Morton code of the parent tile key of the given Morton code.\n     *\n     * Note: The parent key of the root key is the root key itself.\n     *\n     * @param mortonCode - A Morton code, for example, obtained from [[mortonCode]].\n     * @returns The Morton code of the parent tile.\n     */\n    static parentMortonCode(mortonCode: number): number {\n        return Math.floor(mortonCode / 4);\n    }\n\n    private m_mortonCode?: number;\n    private m_hereTile?: string;\n\n    /**\n     * Constructs a new immutable instance of a `TileKey`.\n     *\n     * For the better readability, {@link TileKey.fromRowColumnLevel} should be preferred.\n     *\n     * Note - row and column must not be greater than the maximum rows/columns for the given level.\n     *\n     * @param row - Represents the row in the quadtree.\n     * @param column - Represents the column in the quadtree.\n     * @param level - Represents the level in the quadtree.\n     */\n    constructor(readonly row: number, readonly column: number, readonly level: number) {}\n\n    /**\n     * Returns a tile key representing the parent of the tile addressed by this tile key.\n     *\n     * Throws an exception is this tile is already the root.\n     */\n    parent(): TileKey {\n        if (this.level === 0) {\n            throw new Error(\"Cannot get the parent of the root tile key\");\n        }\n        // tslint:disable-next-line:no-bitwise\n        return TileKey.fromRowColumnLevel(this.row >>> 1, this.column >>> 1, this.level - 1);\n    }\n\n    /**\n     * Returns a new tile key at a level that differs from this tile's level by delta.\n     *\n     * Equivalent to `changedLevelTo(level() + delta)`.\n     *\n     * Note - root key is returned if `delta` is smaller than the level of this tile key.\n     *\n     * @param delta - The numeric difference between the current level and the requested level.\n     */\n    changedLevelBy(delta: number): TileKey {\n        const level = Math.max(0, this.level + delta);\n        let row = this.row;\n        let column = this.column;\n\n        // tslint:disable:no-bitwise\n        if (delta >= 0) {\n            row <<= delta;\n            column <<= delta;\n        } else {\n            row >>>= -delta;\n            column >>>= -delta;\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    /**\n     * Returns a new tile key at the requested level.\n     *\n     * If the requested level is smaller than the tile's level, then the key of an ancestor of this\n     * tile is returned. If the requested level is larger than the tile's level, then the key of\n     * first child or grandchild of this tile is returned, for example, the child with the lowest\n     * row and column number. If the requested level equals this tile's level, then the tile key\n     * itself is returned. If the requested level is negative, the root tile key is returned.\n     *\n     * @param level - The requested level.\n     */\n    changedLevelTo(level: number): TileKey {\n        return this.changedLevelBy(level - this.level);\n    }\n\n    /**\n     * Converts the tile key to a numeric code representation.\n     *\n     * You can create a tile key from a numeric Morton code with [[fromMortonCode]].\n     *\n     * Note - only levels <= 26 are supported.\n     */\n    mortonCode(): number {\n        if (this.m_mortonCode === undefined) {\n            let column = this.column;\n            let row = this.row;\n\n            // tslint:disable:no-bitwise\n            let result = powerOfTwo[this.level << 1];\n            for (let i = 0; i < this.level; ++i) {\n                if (column & 0x1) {\n                    result += powerOfTwo[2 * i];\n                }\n                if (row & 0x1) {\n                    result += powerOfTwo[2 * i + 1];\n                }\n                column >>>= 1;\n                row >>>= 1;\n            }\n            // tslint:enable:no-bitwise\n\n            this.m_mortonCode = result;\n        }\n        return this.m_mortonCode;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * The string is a quadkey Morton code representation as a string.\n     *\n     * You can convert back from a quadkey string with [[fromHereTile]].\n     */\n    toHereTile(): string {\n        if (this.m_hereTile === undefined) {\n            this.m_hereTile = this.mortonCode().toString();\n        }\n        return this.m_hereTile;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * If the tile is the root tile, the quadkey is '-'. Otherwise the string is a number to the\n     * base of 4, but without the leading 1, with the following properties:\n     *  1. the number of digits equals the level.\n     *  2. removing the last digit gives the parent tile's quadkey string, i.e. appending 0,1,2,3\n     *     to a quadkey string gives the tiles's children.\n     *\n     * You can convert back from a quadkey string with [[fromQuadKey]].\n     */\n    toQuadKey(): string {\n        let result: string = \"\";\n\n        // tslint:disable:no-bitwise\n        for (let i = this.level; i > 0; --i) {\n            const mask = 1 << (i - 1);\n\n            const col = (this.column & mask) !== 0;\n            const row = (this.row & mask) !== 0;\n\n            if (col && row) {\n                result += \"3\";\n            } else if (row) {\n                result += \"2\";\n            } else if (col) {\n                result += \"1\";\n            } else {\n                result += \"0\";\n            }\n        }\n        // tslint:enable:no-bitwise\n\n        return result;\n    }\n\n    /**\n     * Equality operator.\n     *\n     * @param qnr - The tile key to compare to.\n     * @returns `true` if this tile key has identical row, column and level, `false` otherwise.\n     */\n    equals(qnr: TileKey): boolean {\n        return this.row === qnr.row && this.column === qnr.column && this.level === qnr.level;\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub quadkey.\n     *\n     * @param sub - The sub key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubKey(sub: string): TileKey {\n        const subQuad = TileKey.fromQuadKey(sub.length === 0 ? \"-\" : sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub HERE tile key.\n     *\n     * @param sub - The sub HERE key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubHereTile(sub: string): TileKey {\n        const subQuad = TileKey.fromHereTile(sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns a sub quadkey that is relative to its parent.\n     *\n     * This function can be used to generate sub keys that are relative to a parent that is delta\n     * levels up in the quadtree.\n     *\n     * This function can be used to create shortened keys for quads on lower levels if the parent is\n     * known.\n     *\n     * Note - the sub quadkeys fit in a 16-bit unsigned integer if the `delta` is smaller than 8. If\n     * `delta` is smaller than 16, the sub quadkey fits into an unsigned 32-bit integer.\n     *\n     * Deltas larger than 16 are not supported.\n     *\n     * @param delta - The number of levels relative to its parent quadkey. Must be greater or equal\n     * to 0 and smaller than 16.\n     * @returns The quadkey relative to its parent that is `delta` levels up the tree.\n     */\n    getSubHereTile(delta: number): string {\n        const key = this.mortonCode();\n        // tslint:disable-next-line:no-bitwise\n        const msb = 1 << (delta * 2);\n        const mask = msb - 1;\n        // tslint:disable-next-line:no-bitwise\n        const result = (key & mask) | msb;\n        return result.toString();\n    }\n\n    /**\n     * Returns the number of available rows in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    rowCount(): number {\n        return TileKey.rowsAtLevel(this.level);\n    }\n\n    /**\n     * Returns the number of available columns in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    columnCount(): number {\n        return TileKey.columnsAtLevel(this.level);\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nconst logger = LoggerManager.instance.create(\"WorkerService\", { enabled: true });\n\ndeclare let self: Worker;\n\n/**\n * Response for [[WorkerService]] procession results.\n */\nexport interface WorkerServiceResponse {\n    /**\n     * Response object.\n     */\n    response: any;\n\n    /**\n     * Transfer list containing a list of [[ArrayBuffer]] which transfer ownership from web worker\n     * to UI thread.\n     */\n    transferList?: ArrayBuffer[];\n}\n\n/**\n * Header information for a [[RequestMessage]].\n */\ninterface RequestEntry {\n    /**\n     * ID of service.\n     */\n    service: string;\n\n    /**\n     * Unique ID of message.\n     */\n    messageId: number;\n\n    /**\n     * Contains `true` if message has been processed, and response has been sent.\n     */\n    responseSent: boolean;\n}\n\n/**\n * Worker Service communication helper.\n *\n * Listens to Web Worker messages from [[ConcurrentWorkerSet]] and implements:\n *  - worker service initialization\n *  - request/response scheme\n *  - error handling.\n *\n * This class should be subclassed to provide concrete like [[TileDecoderService]].\n *\n * Communication peer for [[ConcurrentWorkerSet]].\n */\nexport abstract class WorkerService {\n    private m_pendingRequests: Map<number, RequestEntry> = new Map();\n\n    /**\n     * Sets up the `WorkerService` with the specified name, and starts processing messages.\n     *\n     * @param serviceId - The service id.\n     */\n    constructor(readonly serviceId: string) {\n        self.addEventListener(\"message\", this.onMessage);\n\n        const isInitializedMessage: WorkerServiceProtocol.InitializedMessage = {\n            service: serviceId,\n            type: WorkerServiceProtocol.ServiceMessageName.Initialized\n        };\n        self.postMessage(isInitializedMessage);\n    }\n\n    /**\n     * Destroy the `WorkerService`. Cancels all pending requests ad removes itself from the message\n     * queue.\n     */\n    destroy() {\n        this.cancelAllPendingRequests();\n\n        self.removeEventListener(\"message\", this.onMessage);\n    }\n\n    /**\n     * Message handler to be overridden by implementation.\n     *\n     * @param message - `MessageEvent.data` as received by `WorkerService`.\n     */\n    protected handleMessage(message: any): void {\n        logger.error(`[${this.serviceId}]: Invalid message ${message.type}`);\n    }\n\n    /**\n     * Call request handler to be overridden by implementation.\n     *\n     * @param request - [[RequestMessage.request]] as received by `WorkerService`.\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        throw new Error(`ServiceAdapter[${this.serviceId}]: Invalid request '${request.type}'`);\n    }\n\n    /**\n     * Central message handler for this service.\n     *\n     * Responsible for filtering message target and managing request/response sequence.\n     *\n     * @param message - Message to be dispatched.\n     */\n    private onMessage = (message: MessageEvent) => {\n        if (typeof message.data.service !== \"string\" || message.data.service !== this.serviceId) {\n            return;\n        }\n\n        try {\n            if (WorkerServiceProtocol.isRequestMessage(message.data)) {\n                const request = message.data;\n                const requestEntry = {\n                    service: request.service,\n                    messageId: request.messageId,\n                    responseSent: false\n                };\n                this.m_pendingRequests.set(request.messageId, requestEntry);\n                this.tryHandleRequest(request.request)\n                    .then(response => {\n                        this.doSendResponse(\n                            requestEntry,\n                            {\n                                service: this.serviceId,\n                                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                                messageId: request.messageId,\n                                response: response.response\n                            },\n                            response.transferList\n                        );\n                    })\n                    .catch(error => {\n                        this.doSendResponse(requestEntry, {\n                            service: this.serviceId,\n                            type: WorkerServiceProtocol.ServiceMessageName.Response,\n                            messageId: request.messageId,\n                            errorMessage: error.toString(),\n                            errorStack: error.stack\n                        });\n                    });\n            } else {\n                this.tryHandleMessage(message.data);\n            }\n        } catch (err) {\n            logger.error(`[${this.serviceId}]: Unhandled exception when handling ${message.type}`);\n        }\n    };\n\n    /**\n     * Safety belt over [[handleMessage]] for correct exception handling & logging.\n     */\n    private tryHandleMessage(message: any): void {\n        try {\n            this.handleMessage(message);\n        } catch (error) {\n            logger.error(`[${this.serviceId}]: Failed, handling message ${message.type}`);\n        }\n    }\n\n    /**\n     * Safety belt over [[handleRequest]] for correct exception handling in promise chain.\n     */\n    private tryHandleRequest(request: any): Promise<WorkerServiceResponse> {\n        try {\n            return this.handleRequest(request);\n        } catch (error) {\n            // we don't log exceptions here as they are propagated to client as responses\n            logger.error(`[${this.serviceId}]: Failure`, error);\n            return Promise.reject(error);\n        }\n    }\n\n    private doSendResponse(\n        requestEntry: RequestEntry,\n        response: WorkerServiceProtocol.ResponseMessage,\n        transferList?: ArrayBuffer[]\n    ) {\n        if (requestEntry.responseSent) {\n            return;\n        }\n\n        if (transferList !== undefined) {\n            self.postMessage(response, transferList);\n        } else {\n            self.postMessage(response);\n        }\n\n        requestEntry.responseSent = true;\n        this.m_pendingRequests.delete(requestEntry.messageId);\n    }\n\n    private cancelAllPendingRequests() {\n        this.m_pendingRequests.forEach(requestEntry => {\n            this.doSendResponse(requestEntry, {\n                service: this.serviceId,\n                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                messageId: requestEntry.messageId,\n                errorMessage: \"cancelled\"\n            });\n        });\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { EarthConstants, webMercatorProjection } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { VTJsonDataAdapterId } from \"./VTJsonDataAdapter\";\n\n/**\n * @hidden\n */\nexport function isArrayBufferLike(data: any): data is ArrayBufferLike {\n    if (typeof SharedArrayBuffer !== \"undefined\") {\n        return data instanceof ArrayBuffer || data instanceof SharedArrayBuffer;\n    } else {\n        return data instanceof ArrayBuffer;\n    }\n}\n\n/**\n * @hidden\n */\nexport function lat2tile(\n    lat: number,\n    zoom: number,\n    func: (x: number) => number = Math.floor\n): number {\n    return func(\n        ((1 -\n            Math.log(Math.tan((lat * Math.PI) / 180) + 1 / Math.cos((lat * Math.PI) / 180)) /\n                Math.PI) /\n            2) *\n            Math.pow(2, zoom)\n    );\n}\n\n/**\n * @hidden\n */\nexport function tile2lat(y: number, level: number): number {\n    const n = Math.PI - (2 * Math.PI * y) / Math.pow(2, level);\n    return (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n}\n\nexport interface WorldTileProjectionCookie {\n    extents: number;\n    top: number;\n    left: number;\n    scale: number;\n}\n\nexport function createWorldTileTransformationCookie(extents: number, decodeInfo: DecodeInfo) {\n    const { north, west } = decodeInfo.geoBox;\n    const N = Math.log2(extents);\n    const scale = Math.pow(2, decodeInfo.tileKey.level + N);\n    return {\n        extents,\n        scale,\n        top: lat2tile(\n            north,\n            decodeInfo.tileKey.level + N,\n            decodeInfo.adapterId === VTJsonDataAdapterId ? Math.round : Math.floor\n        ),\n        left: ((west + 180) / 360) * scale\n    };\n}\n\n/**\n * @hidden\n */\nexport function tile2world(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: THREE.Vector2,\n    flipY: boolean = false,\n    target: THREE.Vector2\n): THREE.Vector2 {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    return target.set(\n        ((left + position.x) / scale) * R,\n        ((top + (flipY ? -position.y : position.y)) / scale) * R\n    );\n}\n\n/**\n * @hidden\n */\nexport function world2tile(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: THREE.Vector2,\n    flipY: boolean = false,\n    target: THREE.Vector2\n): THREE.Vector2 {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    return target.set(\n        (position.x / R) * scale - left,\n        (flipY ? -1 : 1) * ((position.y / R) * scale - top)\n    );\n}\n\nconst tempWorldPos = new THREE.Vector2();\n\nexport function webMercatorTile2TargetWorld(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: THREE.Vector2,\n    target: THREE.Vector3,\n    flipY: boolean = false\n) {\n    const worldPos = tile2world(extents, decodeInfo, position, flipY, tempWorldPos);\n    target.set(worldPos.x, worldPos.y, 0);\n    decodeInfo.targetProjection.reprojectPoint(webMercatorProjection, target, target);\n}\n\nexport function webMercatorTile2TargetTile(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: THREE.Vector2,\n    target: THREE.Vector3,\n    flipY: boolean = false\n) {\n    webMercatorTile2TargetWorld(extents, decodeInfo, position, target, flipY);\n    target.sub(decodeInfo.center);\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Enum log levels\n */\nexport enum LogLevel {\n    Trace,\n    Debug,\n    Log,\n    Info,\n    Warn,\n    Error\n}\n\n/**\n * Logger options to configure logger\n */\nexport class LoggerOptions {\n    enabled?: boolean;\n    level?: LogLevel;\n}\n\n/**\n * Public interface for Logger class.\n */\nexport interface ILogger extends IChannel {\n    readonly name: string;\n\n    enabled: boolean;\n\n    level: LogLevel;\n\n    /**\n     * Update logger options\n     *\n     * @param  {LoggerOptions} options Set logger options and configure internal logger.\n     */\n    update(options: LoggerOptions): void;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Resolve URI of referenced object w.r.t parent URI.\n *\n * Resolves `childUri` as it would be loaded from location specified by `parentUri`.\n *\n * If `childUri` is absolute, then it is returned unchanged.\n * If `childUri` is origin-absolute path, then only origin path is taken from `parentUri`.\n *\n * See [[baseUri]] for reference how base URL of `parentUri` is determined.\n *\n * Supports `http:`, `https:`, `file:`, `data:` schemes.\n *\n * Examples:\n *\n *     // normal case, child is sibling\n *     https://foo.com/themes/day.json + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent is \"folder\", so child is just located in this folder\n *     https://foo.com/themes/ + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent looks like leaf, so last component is stripped\n *     https://foo.com/themes + images/foo.png -> https://foo.com/images/foo.png\n *\n *     // origin-absolute URL, takes only origin from parent\n *     https://foo.com/themes/day.json + /fonts/foo.json -> https://foo.com/fonts/foo.json\n *\n * @param parentUri - URI of parent resource\n * @param childUri - URI of child as referenced from parent resource\n * @return `childUrl` as if anchored in location of `parentUrl`\n */\nexport function resolveReferenceUri(parentUri: string | undefined, childUri: string): string {\n    if (absoluteUrlWithOriginRe.test(childUri)) {\n        return childUri;\n    } else if (childUri.startsWith(\"/\")) {\n        const origin = getUrlOrigin(parentUri);\n        return origin + childUri;\n    } else {\n        if (childUri.startsWith(\"./\")) {\n            childUri = childUri.substr(2);\n        }\n        const parentBaseUrl = baseUrl(parentUri);\n        return parentBaseUrl + childUri;\n    }\n}\n\nconst absoluteUrlWithOriginRe = new RegExp(\"^(((?:[a-z]+:)?//)|(file:/)|(data:))\", \"i\");\n\n/**\n * Returns base URL of given resource URL.\n *\n * `Url` with trailing slash are considered genuine 'locations', they are returned as is, however if\n * `url` ends with name component it is treated as \"leaf\", so last path component is removed.\n *\n * Standalone files (without any folder structure) are considered relative to `./`.\n *\n * Examples:\n * ```\n *     https://foo.com/themes/a.json -> https://foo.com/themes/\n *     https://foo.com/themes/ -> https://foo.com/themes/\n *     https://foo.com/themes -> https://foo.com/ // note, themes is treated as leaf\n *     themes/day.json -> themes/\n *     themes -> ./\n * ```\n */\nexport function baseUrl(url: string | undefined) {\n    if (url === undefined) {\n        return \"./\";\n    }\n    let idx = url.indexOf(\"#\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.indexOf(\"?\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.lastIndexOf(\"/\");\n    if (idx === -1) {\n        return \"./\";\n    } else {\n        return url.substring(0, idx + 1);\n    }\n}\n\n/**\n * Get `origin` part of URL.\n *\n * @example\n *    https://example.com/foo -> https://example.com\n *    //example.com:8080/ -> //example.com:8080\n *    file:///etc/hosts ->\n *\n * @param url - input URL\n * @return origin of given URL\n */\nexport function getUrlOrigin(url: string | undefined): string {\n    if (url === undefined) {\n        return \"\";\n    }\n    const parsed = getUrlHostAndProtocol(url);\n    if (parsed.protocol === \"file:\") {\n        return \"file://\";\n    } else if (parsed.host && parsed.protocol) {\n        return parsed.protocol + \"//\" + parsed.host;\n    } else if (parsed.host) {\n        return \"//\" + parsed.host;\n    } else if (parsed.protocol) {\n        return parsed.protocol + \"//\";\n    } else {\n        return \"\";\n    }\n}\n\n/**\n * Parse `host` and `protocol` part from URL.\n */\nexport function getUrlHostAndProtocol(\n    url: string\n): {\n    protocol: string;\n    host: string;\n} {\n    const urlOriginRe = new RegExp(/^(?:([a-z]+:))?\\/\\/([^\\/]*)/, \"i\");\n\n    const match = url.match(urlOriginRe);\n    if (!match) {\n        throw new Error(`getUrlHostAndProtocol: unable to parse URL '${url}'`);\n    }\n    return {\n        protocol: match[1],\n        host: match[2]\n    };\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst RX = /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))px$/;\n\n/**\n * A class representing Pixels.\n *\n * @hidden\n * @internal\n */\nexport class Pixels {\n    /**\n     * Parses a pixel string literal.\n     *\n     * @param text - The string color literal\n     */\n    static parse(text: string): Pixels | undefined {\n        const match = RX.exec(text);\n        if (match === null) {\n            return undefined;\n        }\n        return new Pixels(Number(match[1]));\n    }\n\n    /**\n     * Constructs a [[Pixels]] literal\n     *\n     * @param value - The number of pixels.\n     */\n    constructor(readonly value: number) {}\n\n    toJSON() {\n        return `${this.value}px`;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"@here/harp-geoutils/lib/math/Vector3Like\";\nimport { isJsonExpr, JsonExpr } from \"./Expr\";\nimport { isInterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    DynamicProperty,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    LineTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams\n} from \"./TechniqueParams\";\n\n/**\n * Map theme is used to define what features are shown and how the map is styled, for example\n * which lightning is used or whether fog should be displayed.\n */\nexport interface Theme {\n    /**\n     * The URI of the JSON schema describing themes.\n     */\n    $schema?: string;\n\n    /**\n     * The base `Theme`s or `theme` URLs to extend.\n     *\n     * @remarks\n     * If used, base themes are loaded first, and then all the properties from inherited theme\n     * overwrite these defined in base theme.\n     */\n\n    extends?: string | Theme | Array<string | Theme>;\n\n    //\n    // TODO: We support also [[FlatTheme]], but it's not exposed here since ts-json-schema-generator\n    // fails with too complex typing.\n    // See: https://github.com/vega/ts-json-schema-generator/issues/192\n    // Typing should look like this:\n    // extends?: string | Theme | FlatTheme| Array<string | Theme | FlatTheme>;\n    //\n\n    /**\n     * Actual URL the theme has been loaded from.\n     */\n    url?: string;\n\n    /**\n     * Color to be used as a clear background - no map objects.\n     * @format color-hex\n     */\n    clearColor?: string;\n\n    /**\n     * Alpha to be used as a clear background - no map objects.\n     * @format 0-1\n     */\n    clearAlpha?: number;\n\n    /**\n     * Define the default text style for styling labels and texts.\n     */\n    defaultTextStyle?: TextStyleDefinition;\n\n    /**\n     * Define the lightning available on the three.js scene.\n     */\n    lights?: Light[];\n\n    /**\n     * Define the style of the sky presented in the map scene.\n     */\n    sky?: Sky;\n\n    /**\n     * Define the fog used in the map scene.\n     */\n    fog?: Fog;\n\n    /**\n     * The definitions exported by these theme.\n     */\n    definitions?: Definitions;\n\n    /**\n     * Map styles available for datasources used to render the map.\n     */\n    styles?: Styles;\n\n    /**\n     * Define the style to render different types of text used on the map.\n     */\n    textStyles?: TextStyleDefinition[];\n\n    /**\n     * List available fonts to be used while rendering text.\n     */\n    fontCatalogs?: FontCatalogConfig[];\n\n    /**\n     * Optional images to be rendered on the map view.\n     */\n    images?: ImageDefinitions;\n\n    /**\n     * Image textures to be used while rendering geometries on the map view.\n     */\n    imageTextures?: ImageTexture[];\n\n    /**\n     * Optional list of [[ThemePoiTableDef]]s.\n     */\n    poiTables?: PoiTableRef[];\n\n    /**\n     * Optional list of symbolic priorities for the object\n     * created using this {@link Theme}.\n     *\n     * @remarks\n     * The attribute `styleSet` and `category` of the [[Technique]]\n     * are used together with [[Theme.priorities]] to sort\n     * the objects created using this {@link Theme}, for example:\n     *\n     * ```json\n     * {\n     *      \"priorities\": [\n     *          { \"group\": \"tilezen\", \"category\": \"outline-1\" }\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"solid-line\",\n     *              \"styleSet\": \"tilezen\",\n     *              \"category\": \"outline-1\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    priorities?: StylePriority[];\n\n    /**\n     * Optional list of priorities for the screen-space\n     * objects created using this style.\n     *\n     * @remarks\n     * The name of the `category` attribute of the screen-space\n     * technique (e.g. `\"text\"`) must match on the strings\n     * defined by this [[Theme.labelPriorities]], for example:\n     *\n     * ```json\n     * {\n     *      \"labelPriorities\": [\n     *          \"continent-labels\",\n     *          \"country-labels\",\n     *          \"state-labels\"\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"text\",\n     *              \"category\": \"state-labels\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    labelPriorities?: string[];\n}\n\n/**\n * A type representing symbolic render orders.\n */\nexport interface StylePriority {\n    /**\n     * The group of this [[StylePriority]].\n     */\n    group: string;\n\n    /**\n     * The category of this [[StylePriority]].\n     */\n    category?: string;\n}\n\n/**\n * A type representing HARP themes with all the styleset declarations\n * grouped in one [[Array]].\n *\n * @internal This type will merge with {@link Theme}.\n */\nexport type FlatTheme = Omit<Theme, \"styles\"> & {\n    /**\n     * The style rules used to render the map.\n     */\n    styles?: StyleSet;\n};\n\n/**\n * Checks if the given definition implements the [[BoxedDefinition]] interface.\n */\nexport function isBoxedDefinition(def: Definition): def is BoxedDefinition {\n    const bdef = def as BoxedDefinition;\n    return (\n        typeof bdef === \"object\" &&\n        bdef !== null &&\n        (typeof bdef.type === \"string\" || typeof bdef.type === \"undefined\") &&\n        (typeof bdef.value === \"string\" ||\n            typeof bdef.value === \"number\" ||\n            typeof bdef.value === \"boolean\" ||\n            isInterpolatedPropertyDefinition(bdef.value) ||\n            isJsonExpr(bdef.value))\n    );\n}\n\nexport function isLiteralDefinition(def: Definition): def is LiteralValue {\n    return typeof def === \"string\" || typeof def === \"number\" || typeof def === \"boolean\";\n}\n\n/**\n * Value definition commons.\n */\nexport interface BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type?: string;\n\n    /**\n     * The description of the definition.\n     */\n    description?: string;\n}\n\n/**\n * Possible types of unboxed literal values carried by [[Definition]].\n */\nexport type LiteralValue = string | number | boolean;\n\n/**\n * Boxed definition without type.\n */\nexport interface BoxedAnyDefinition extends BaseValueDefinition {\n    /**\n     * The value of the definition.\n     */\n    value: LiteralValue | JsonExpr;\n}\n\n/**\n * A boxed boolean value definition.\n */\nexport interface BoxedBooleanDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"boolean\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<boolean>;\n}\n\n/**\n * A boxed numerical value definition.\n */\nexport interface BoxedNumericDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"number\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<number>;\n}\n\n/**\n * A boxed string value definition.\n */\nexport interface BoxedStringDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"string\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<string>;\n}\n\n/**\n * A boxed color value definition.\n */\nexport interface BoxedColorDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"color\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<string>;\n}\n\n/**\n * A boxed selector value definition.\n */\nexport interface BoxedSelectorDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"selector\";\n\n    /**\n     * The value of the definition.\n     *\n     * See [[BaseStyle.when]].\n     */\n    value: string | JsonExpr;\n}\n\n/**\n * A boxed value definition.\n */\nexport type BoxedDefinition =\n    | BoxedAnyDefinition\n    | BoxedBooleanDefinition\n    | BoxedNumericDefinition\n    | BoxedStringDefinition\n    | BoxedColorDefinition\n    | BoxedSelectorDefinition;\n\n/**\n * Possible values for `definitions` element of [Theme].\n */\nexport type Definition = LiteralValue | JsonExpr | BoxedDefinition | StyleDeclaration;\n\n/**\n * An array of [[Definition]]s.\n */\nexport interface Definitions {\n    [name: string]: Definition;\n}\n\n/**\n * Base [StyleSelector] attributes required to match [Style] object against given feature.\n *\n * Contains [Style]'s members related to feature matching in [[StyleSetEvaluator]].\n */\nexport interface StyleSelector {\n    /**\n     * Condition when this style rule applies.\n     *\n     * @remarks\n     * Condition that is applied to feature properties to check if given [[Style]] this feature\n     * should emit geometry of this style.\n     */\n    when: string | JsonExpr;\n\n    /**\n     * The layer containing the carto features processed by this style rule.\n     */\n    layer?: string;\n\n    /**\n     * Optional. If `true`, no more matching styles will be evaluated.\n     */\n    final?: boolean;\n}\n\nexport type JsonExprReference = [\"ref\", string];\n\n/**\n * Checks if the given value is a reference to a definition.\n *\n * @param value - The value of a technique property.\n */\nexport function isJsonExprReference(value: any): value is JsonExprReference {\n    return (\n        Array.isArray(value) &&\n        value.length === 2 &&\n        value[0] === \"ref\" &&\n        typeof value[1] === \"string\"\n    );\n}\n\n/**\n * Like [[StyleDeclaration]], but without [[Reference]] type.\n */\nexport type ResolvedStyleDeclaration = Style & StyleSelector;\n\n/**\n * Like [[StyleSet]], but without [[Reference]] type.\n */\nexport type ResolvedStyleSet = ResolvedStyleDeclaration[];\n\n/**\n * Compound type that merges all raw [Style] with selector arguments from [BaseSelector], optionally\n * a [[Reference]].\n */\nexport type StyleDeclaration = (Style & StyleSelector) | JsonExpr;\n\nexport function isActualSelectorDefinition(def: Definition): def is Style & StyleSelector {\n    const styleDef = def as StyleDeclaration;\n    return (\n        typeof styleDef === \"object\" &&\n        styleDef !== null &&\n        !Array.isArray(styleDef) &&\n        typeof styleDef.technique === \"string\"\n    );\n}\n\n/**\n * An array of [[StyleSelector]]s that are used together to define how a [[DataSource]] should be\n * rendered. `StyleSet`s are applied to sources providing vector tiles via their method\n * `setStyleSet`. This is also handle internally when a whole theme is passed to a [[MapView]] via\n * `mapview.theme`.\n */\nexport type StyleSet = StyleDeclaration[];\n\n/**\n * The object that defines what way an item of a [[DataSource]] should be decoded to assemble a\n * tile. [[Style]] is describing which features are shown on a map and in what way they are being\n * shown.\n */\nexport type BaseStyle<Technique, Params> = Partial<Params> & {\n    /**\n     * Human readable description.\n     */\n    description?: string;\n\n    /**\n     * The style set referenced by this styling rule.\n     */\n    styleSet?: string;\n\n    /**\n     * The category of this style.\n     */\n    category?: string | JsonExpr;\n\n    /**\n     * The name of the technique to use.\n     *\n     * @remarks\n     * Technique name. See the classes extending from this class to determine what possible\n     * techniques are possible, includes `\"line\"`, `\"fill\"`, `\"solid-line\"`, `\"extruded-line\"`,\n     * `\"extruded-polygon\"`, `\"text\"`, `\"none\"`.\n     */\n    technique: Technique;\n\n    /**\n     * Specify `renderOrder` of value.\n     *\n     * @remarks\n     * @default If not specified in style file, `renderOrder` will be assigned with monotonically\n     * increasing values according to style position in file.\n     */\n    renderOrder?: number | JsonExpr;\n\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number | JsonExpr;\n\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number | JsonExpr;\n\n    /**\n     * Optional. If `true`, no IDs will be saved for the geometry this style creates. Default is\n     * `false`.\n     */\n    transient?: boolean;\n\n    /**\n     * Optional: If `true`, the objects with matching `when` statement will be printed to the\n     * console.\n     */\n    debug?: boolean;\n\n    // TODO: Make pixel units default.\n    /**\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     *\n     * @deprecated use \"string encoded numerals\" as documented in TODO, wher eis the doc ?\n     */\n    metricUnit?: \"Meter\" | \"Pixel\";\n\n    /**\n     * XYZ defines the property to display as text label of a feature in the styles.\n     */\n    labelProperty?: string;\n\n    attr?: Partial<Params>;\n};\n\nexport type Style =\n    | SquaresStyle\n    | CirclesStyle\n    | PoiStyle\n    | LineMarkerStyle\n    | LineStyle\n    | SegmentsStyle\n    | SolidLineStyle\n    | LabelRejectionLineStyle\n    | FillStyle\n    | StandardStyle\n    | BasicExtrudedLineStyle\n    | StandardExtrudedLineStyle\n    | ExtrudedPolygonStyle\n    | ShaderStyle\n    | TerrainStyle\n    | TextTechniqueStyle\n    | NoneStyle;\n\n/**\n * A dictionary of [[StyleSet]]s.\n */\nexport interface Styles {\n    [styleSetName: string]: StyleSet;\n}\n\n/**\n * A reference to a style definition.\n *\n * Use as value `attrs` to reference value from `definitions`.\n *\n * Example of usage:\n * ```json\n * {\n *   \"definitions\": {\n *     \"roadColor\": { \"type\": \"color\", \"value\": \"#f00\" }\n *   },\n *   \"styles\": { \"tilezen\": [\n *      {\n *       \"when\": \"kind == 'road\",\n *       \"technique\": \"solid-line\",\n *       \"attr\": {\n *         \"lineColor\": { \"$ref\": \"roadColor\" }\n *       }\n *     }\n *   ] }\n * }\n * ```\n */\n\n/**\n * The attributes of a technique.\n */\nexport type Attr<T> = { [P in keyof T]?: T[P] | JsonExpr };\n\n/**\n * Render feature as set of squares rendered in screen space.\n *\n * @see [[PointTechniqueParams]].\n */\nexport type SquaresStyle = BaseStyle<\"squares\", PointTechniqueParams>;\n\n/**\n * Render feature as set of circles rendered in screen space.\n *\n * @see [[PointTechniqueParams]].\n */\nexport type CirclesStyle = BaseStyle<\"circles\", PointTechniqueParams>;\n\n/**\n * Render feature as POIs (icons and text) rendered in screen space.\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport type PoiStyle = BaseStyle<\"labeled-icon\", MarkerTechniqueParams>;\n\n/**\n * Render feature as line markers, which is a recurring marker along a line (usually road).\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport type LineMarkerStyle = BaseStyle<\"line-marker\", MarkerTechniqueParams>;\n\n/**\n * Render feature as line.\n */\nexport type LineStyle = BaseStyle<\"line\", LineTechniqueParams>;\n\n/**\n * Render feature as segments.\n */\nexport type SegmentsStyle = BaseStyle<\"segments\", SegmentsTechniqueParams>;\n\nexport type SolidLineStyle = BaseStyle<\"solid-line\" | \"dashed-line\", SolidLineTechniqueParams>;\n\nexport type LabelRejectionLineStyle = BaseStyle<\"label-rejection-line\", BaseTechniqueParams>;\n\nexport type FillStyle = BaseStyle<\"fill\", FillTechniqueParams>;\n\nexport type StandardStyle = BaseStyle<\"standard\", StandardTechniqueParams>;\n\nexport type TerrainStyle = BaseStyle<\"terrain\", TerrainTechniqueParams>;\n\nexport type BasicExtrudedLineStyle = BaseStyle<\"extruded-line\", BasicExtrudedLineTechniqueParams>;\n\nexport type StandardExtrudedLineStyle = BaseStyle<\n    \"extruded-line\",\n    StandardExtrudedLineTechniqueParams\n>;\n\n/**\n * Style used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport type ExtrudedPolygonStyle = BaseStyle<\"extruded-polygon\", ExtrudedPolygonTechniqueParams>;\n\nexport type ShaderStyle = BaseStyle<\"shader\", ShaderTechniqueParams>;\n\nexport type TextTechniqueStyle = BaseStyle<\"text\", TextTechniqueParams>;\n\nexport interface NoneStyle\n    extends BaseStyle<\n        \"none\",\n        {\n            [name: string]: any;\n        }\n    > {\n    [name: string]: any;\n}\n\n/**\n * Possible lights used for light the map.\n */\nexport type Light = AmbientLight | DirectionalLight;\n\nexport interface BaseLight {\n    type: string;\n    name: string;\n}\n\n/**\n * Light type: ambient.\n *\n * @remarks\n *\n * @defaultSnippets [\n *     {\n *         \"label\": \"New Ambient Light\",\n *         \"description\": \"Adds a new Ambient Light\",\n *         \"body\": {\n *             \"type\": \"ambient\",\n *             \"name\": \"${1:ambient light}\",\n *             \"color\": \"#${2:fff}\",\n *             \"intensity\": \"^${3:1}\"\n *         }\n *     }\n * ]\n */\nexport interface AmbientLight extends BaseLight {\n    type: \"ambient\";\n    /**\n     * @format color-hex\n     */\n    color: string;\n    intensity?: number;\n}\n\n/**\n * Light type: directional.\n *\n * @remarks\n *\n * @defaultSnippets [\n *     {\n *         \"label\": \"New Directional Light\",\n *         \"description\": \"Adds a new Directional Light\",\n *         \"body\": {\n *             \"type\": \"directional\",\n *             \"name\": \"${1:directional-light$:1}\",\n *             \"color\": \"#${2:fff}\",\n *             \"intensity\": \"^${3:1}\",\n *             \"direction\": {\n *                 \"x\": \"^${4:1}\",\n *                 \"y\": \"^${5:0}\",\n *                 \"z\": \"^${6:0}\"\n *             }\n *         }\n *     }\n * ]\n */\nexport interface DirectionalLight extends BaseLight {\n    type: \"directional\";\n    /**\n     * @format color-hex\n     */\n    color: string;\n    intensity: number;\n    direction: Vector3Like;\n    castShadow?: boolean;\n}\n\n/**\n * Various text styles used with labels and texts.\n */\nexport interface TextStyleDefinition {\n    name?: string;\n    fontCatalogName?: string;\n\n    fontName?: string;\n    size?: number;\n    backgroundSize?: number;\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    rotation?: number;\n    /**\n     * @format color-hex\n     */\n    color?: string;\n    /**\n     * @format color-hex\n     */\n    backgroundColor?: string;\n    opacity?: number;\n    backgroundOpacity?: number;\n\n    tracking?: number;\n    leading?: number;\n    maxLines?: number;\n    lineWidth?: number;\n    canvasRotation?: number;\n    lineRotation?: number;\n    wrappingMode?: \"None\" | \"Character\" | \"Word\";\n    hAlignment?: \"Left\" | \"Center\" | \"Right\";\n    vAlignment?: \"Above\" | \"Center\" | \"Below\";\n    /**\n     * @format comma separated list of placement tokens, i.e. \"TR, TL, C\"\n     * @see [[PlacementToken]]\n     */\n    placements?: string;\n}\n\n/**\n * Interface that defines a procedural gradient sky.\n */\nexport interface GradientSky {\n    /** Sky type. */\n    type: \"gradient\";\n    /**\n     * Color of the upper part of the gradient.\n     * @format color-hex\n     */\n    topColor: string;\n    /**\n     * Color of bottom part of the gradient.\n     * @format color-hex\n     */\n    bottomColor: string;\n    /**\n     * Color of the ground plane.\n     * @format color-hex\n     */\n    groundColor: string;\n    /** Texture's gradient power. */\n    monomialPower?: number;\n}\n\n/**\n * Interface that defines a cubemap sky.\n */\nexport interface CubemapSky {\n    /** Sky type. */\n    type: \"cubemap\";\n    /** Positive X cube map face. */\n    positiveX: string;\n    /** Negative X cube map face. */\n    negativeX: string;\n    /** Positive Y cube map face. */\n    positiveY: string;\n    /** Negative Y cube map face. */\n    negativeY: string;\n    /** Positive Z cube map face. */\n    positiveZ: string;\n    /** Negative Z cube map face. */\n    negativeZ: string;\n}\n\n/**\n * Interface that defines the options to configure the sky.\n */\nexport type Sky = GradientSky | CubemapSky;\n\n/**\n * Interface that defines the options to configure fog.\n */\nexport interface Fog {\n    /** Fog's color. */\n    color: string;\n    /** Distance ratio to far plane at which the linear fog begins. */\n    startRatio: number;\n}\n\n/**\n * Define an image (e.g. icon).\n */\nexport interface ImageDefinition {\n    /** Url to load content from. */\n    url: string;\n    /** `true` to start loading at init tile, `false` to lazily wait until required. */\n    preload: boolean;\n    /** Url of JSON file containing the texture atlas */\n    atlas?: string;\n}\n\nexport interface ImageDefinitions {\n    /** Name of Image. */\n    [name: string]: ImageDefinition;\n}\n\n/**\n * Can be used to create a texture atlas.\n */\nexport interface ImageTexture {\n    /** Name of ImageTexture. Used to reference texture in the styles. */\n    name: string;\n    /** Name of ImageDefinition to use. */\n    image: string;\n    /** Origin of image, defaults to \"topleft\" */\n    origin?: string;\n    /** Specify sub-region: Defaults to 0. */\n    xOffset?: number;\n    /** Specify sub-region: Defaults to 0. */\n    yOffset?: number;\n    /** Specify sub-region:  Defaults to 0, meaning width is taken from loaded image. */\n    width?: number;\n    /** Specify sub-region:  Defaults to 0, meaning height is taken from loaded image. */\n    height?: number;\n    /** Defaults to false. */\n    flipH?: boolean;\n    /** Defaults to false. */\n    flipV?: boolean;\n    /** Defaults to 1. */\n    opacity?: number;\n}\n\n/**\n * Definition for a [[PoiTable]] reference as part of the {@link Theme} object.\n */\nexport interface PoiTableRef {\n    /** Required name of the [[PoiTable]] for later reference. */\n    name: string;\n    /**\n     * Required URL from where to load [[PoiTable]].\n     *\n     * Should refer to JSON that is matched [[PoiTableDef]] interface.\n     */\n    url: string;\n    /**\n     * If set to `true`, the list of values in the field \"altNames\" will be used as names for this\n     * POI.\n     */\n    useAltNamesForKey: boolean;\n}\n\n/**\n * Interface for the JSON description of the [[PoiTable]]. It is being implemented in [[PoiTable]].\n */\nexport interface PoiTableDef {\n    /** Name of the `PoiTable`. Must be unique. */\n    name?: string;\n    /**\n     * Stores the list of [[PoiTableEntry]]s.\n     */\n    poiList?: PoiTableEntryDef[];\n}\n\n/**\n * Interface for the JSON description of the [[PoiTableEntry]]. The interface is being implemented\n * as [[PoiTableEntry]].\n */\nexport interface PoiTableEntryDef {\n    /** Default name of the POI as the key for looking it up. */\n    name?: string;\n    /** Alternative names of the POI. */\n    altNames?: string[];\n    /** Visibility of the POI. If `false`, the POI will not be rendered. */\n    visible?: boolean;\n    /** Name of the icon, defined in the the texture atlases. */\n    iconName?: string;\n    /** Stacking mode of the POI. For future use. */\n    stackMode?: string;\n    /**\n     * Priority of the POI to select the visible set in case there are more POIs than can be\n     * handled.\n     */\n    priority?: number;\n    /** Minimum zoom level to render the icon on. */\n    iconMinLevel?: number;\n    /** Maximum zoom level to render the icon on. */\n    iconMaxLevel?: number;\n    /** Minimum zoom level to render the text label on. */\n    textMinLevel?: number;\n    /** Maximum zoom level to render the text label on. */\n    textMaxLevel?: number;\n}\n\n/**\n * Fonts used for all text related rendering.\n */\nexport interface FontCatalogConfig {\n    url: string;\n    name: string;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    isTextureBuffer,\n    LineTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    PolygonalTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams,\n    TextureCoordinateType\n} from \"./TechniqueParams\";\n\nimport { Expr, JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    AttrScope,\n    mergeTechniqueDescriptor,\n    TechniqueDescriptor,\n    TechniqueDescriptorRegistry\n} from \"./TechniqueDescriptor\";\n/**\n * Names of the supported texture properties.\n * @internal\n */\nexport const TEXTURE_PROPERTY_KEYS = [\n    \"map\",\n    \"normalMap\",\n    \"displacementMap\",\n    \"roughnessMap\",\n    \"emissiveMap\",\n    \"alphaMap\",\n    \"metalnessMap\",\n    \"bumpMap\"\n];\n\n/**\n * Names of the properties controlling transparency.\n * @internal\n */\nexport const TRANSPARENCY_PROPERTY_KEYS = [\"opacity\", \"transparent\"];\n\n// TODO: Can be removed, when all when interpolators are implemented as {@link Expr}s\nexport type RemoveInterpolatedPropDef<T> = T | InterpolatedPropertyDefinition<any> extends T\n    ? Exclude<T, InterpolatedPropertyDefinition<any>>\n    : T;\nexport type RemoveJsonExpr<T> = T | JsonExpr extends T ? Exclude<T, JsonExpr> : T;\n\n/**\n * Make runtime representation of technique attributes from JSON-compatible typings.\n *\n * Translates\n *  - InterpolatedPropertyDefinition -> InterpolatedProperty\n *  - JsonExpr -> Expr\n */\nexport type MakeTechniqueAttrs<T> = {\n    [P in keyof T]: T[P] | JsonExpr extends T[P]\n        ? RemoveInterpolatedPropDef<RemoveJsonExpr<T[P]>> | Expr\n        : T[P];\n};\n\n/** @internal  */\nexport const techniqueDescriptors: TechniqueDescriptorRegistry = {};\n\n/** @internal  */\nexport const baseTechniqueParamsDescriptor: TechniqueDescriptor<BaseTechniqueParams> = {\n    // TODO: Choose which techniques should support color with transparency.\n    // For now we chosen all, but it maybe not suitable for text or line marker techniques.\n    attrTransparencyColor: \"color\",\n    attrScopes: {\n        renderOrder: AttrScope.TechniqueGeometry,\n        enabled: AttrScope.FeatureGeometry,\n        kind: AttrScope.TechniqueGeometry,\n        transient: AttrScope.TechniqueGeometry,\n        fadeFar: AttrScope.TechniqueRendering,\n        fadeNear: AttrScope.TechniqueRendering\n    }\n};\n\n/** @internal  */\nexport const pointTechniquePropTypes = mergeTechniqueDescriptor<PointTechniqueParams>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            texture: AttrScope.TechniqueGeometry,\n            enablePicking: AttrScope.TechniqueGeometry,\n            color: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueGeometry\n        }\n    }\n);\n\n/**\n * Runtime representation of [[SquaresStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[PointTechniqueParams]].\n */\nexport interface SquaresTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"squares\";\n}\n\n/** @internal  */\nexport const squaresTechniquePropTypes = mergeTechniqueDescriptor<SquaresTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\ntechniqueDescriptors.squares = squaresTechniquePropTypes;\n\n/**\n * Runtime representation of [[CirclesStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[PointTechniqueParams]].\n */\nexport interface CirclesTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"circles\";\n}\n\n/** @internal  */\nexport const circlesTechniquePropTypes = mergeTechniqueDescriptor<CirclesTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\ntechniqueDescriptors.circles = circlesTechniquePropTypes;\n\n/**\n * Runtime representation of [[PoiStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[MarkerTechniqueParams]].\n */\nexport interface PoiTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"labeled-icon\";\n}\n\n/**\n * Runtime representation of [[LineMarkerStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[MarkerTechniqueParams]].\n */\nexport interface LineMarkerTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"line-marker\";\n}\n\nconst lineMarkerTechniquePropTypes = mergeTechniqueDescriptor<LineMarkerTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n            priority: AttrScope.TechniqueGeometry,\n            textMinZoomLevel: AttrScope.TechniqueGeometry,\n            textMaxZoomLevel: AttrScope.TechniqueGeometry,\n            iconMinZoomLevel: AttrScope.TechniqueGeometry,\n            iconMaxZoomLevel: AttrScope.TechniqueGeometry,\n            distanceScale: AttrScope.TechniqueGeometry,\n            textMayOverlap: AttrScope.TechniqueGeometry,\n            iconMayOverlap: AttrScope.TechniqueGeometry,\n            textReserveSpace: AttrScope.TechniqueGeometry,\n            iconReserveSpace: AttrScope.TechniqueGeometry,\n            renderTextDuringMovements: AttrScope.TechniqueGeometry,\n            alwaysOnTop: AttrScope.TechniqueGeometry,\n            textIsOptional: AttrScope.TechniqueGeometry,\n            showOnMap: AttrScope.TechniqueGeometry,\n            stackMode: AttrScope.TechniqueGeometry,\n            minDistance: AttrScope.TechniqueGeometry,\n            iconIsOptional: AttrScope.TechniqueGeometry,\n            iconFadeTime: AttrScope.TechniqueGeometry,\n            textFadeTime: AttrScope.TechniqueGeometry,\n            xOffset: AttrScope.TechniqueGeometry,\n            yOffset: AttrScope.TechniqueGeometry,\n            iconXOffset: AttrScope.TechniqueGeometry,\n            iconYOffset: AttrScope.TechniqueGeometry,\n            iconScale: AttrScope.TechniqueGeometry,\n            screenHeight: AttrScope.TechniqueGeometry,\n            screenWidth: AttrScope.TechniqueGeometry,\n            poiTable: AttrScope.TechniqueGeometry,\n            poiName: AttrScope.FeatureGeometry,\n            poiNameField: AttrScope.TechniqueGeometry,\n            imageTexture: AttrScope.FeatureGeometry,\n            imageTextureField: AttrScope.TechniqueGeometry,\n            imageTexturePrefix: AttrScope.TechniqueGeometry,\n            imageTexturePostfix: AttrScope.TechniqueGeometry,\n            iconColor: AttrScope.TechniqueRendering,\n            iconBrightness: AttrScope.TechniqueRendering,\n            style: AttrScope.TechniqueGeometry,\n            fontName: AttrScope.TechniqueGeometry,\n            fontStyle: AttrScope.TechniqueGeometry,\n            fontVariant: AttrScope.TechniqueGeometry,\n            rotation: AttrScope.TechniqueGeometry,\n            tracking: AttrScope.TechniqueGeometry,\n            leading: AttrScope.TechniqueGeometry,\n            maxLines: AttrScope.TechniqueGeometry,\n            lineWidth: AttrScope.TechniqueGeometry,\n            canvasRotation: AttrScope.TechniqueGeometry,\n            lineRotation: AttrScope.TechniqueGeometry,\n            wrappingMode: AttrScope.TechniqueGeometry,\n            hAlignment: AttrScope.TechniqueGeometry,\n            vAlignment: AttrScope.TechniqueGeometry,\n            placements: AttrScope.TechniqueGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"line-marker\"] = lineMarkerTechniquePropTypes;\ntechniqueDescriptors[\"labeled-icon\"] = lineMarkerTechniquePropTypes;\n\n/**\n * Runtime representation of [[SegmentsStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[SegmentsTechniqueParams]].\n */\nexport interface SegmentsTechnique extends MakeTechniqueAttrs<SegmentsTechniqueParams> {\n    name: \"segments\";\n}\n\nconst polygonalTechniqueDescriptor: TechniqueDescriptor<PolygonalTechniqueParams> = {\n    attrScopes: {\n        polygonOffset: AttrScope.TechniqueRendering,\n        polygonOffsetFactor: AttrScope.TechniqueRendering,\n        polygonOffsetUnits: AttrScope.TechniqueRendering,\n        lineColor: AttrScope.TechniqueRendering,\n        lineFadeFar: AttrScope.TechniqueRendering,\n        lineFadeNear: AttrScope.TechniqueRendering\n    }\n};\n/**\n * Runtime representation of [[BasicExtrudedLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[BasicExtrudedLineTechniqueParams]].\n */\nexport interface BasicExtrudedLineTechnique\n    extends MakeTechniqueAttrs<BasicExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of [[StandardExtrudedLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[StandardExtrudedLineTechniqueParams]].\n */\nexport interface StandardExtrudedLineTechnique\n    extends MakeTechniqueAttrs<StandardExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of [[SolidLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[SolidLineTechniqueParams]].\n */\nexport interface SolidLineTechnique extends MakeTechniqueAttrs<SolidLineTechniqueParams> {\n    name: \"solid-line\" | \"dashed-line\";\n}\n\n/** @internal  */\nexport const solidLineTechniqueDescriptor = mergeTechniqueDescriptor<SolidLineTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrScopes: {\n            clipping: AttrScope.TechniqueGeometry,\n            secondaryRenderOrder: AttrScope.TechniqueGeometry,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            secondaryWidth: AttrScope.TechniqueRendering,\n            secondaryColor: AttrScope.TechniqueRendering,\n            dashSize: AttrScope.TechniqueRendering,\n            gapSize: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"solid-line\"] = solidLineTechniqueDescriptor;\n// TODO: Remove deprecated \"dashed-line\" support in future releases.\ntechniqueDescriptors[\"dashed-line\"] = solidLineTechniqueDescriptor;\n\n/**\n * Runtime representation of [[LineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[LineTechniqueParams]].\n */\nexport interface LineTechnique extends MakeTechniqueAttrs<LineTechniqueParams> {\n    name: \"line\";\n}\n\n/** @internal  */\nexport const lineTechniqueDescriptor = mergeTechniqueDescriptor<LineTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            // TODO, check, which are really dynamic !\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.FeatureGeometry\n        }\n    }\n);\n\ntechniqueDescriptors.line = lineTechniqueDescriptor;\n\n/**\n * Runtime representation of [[FillStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[FillTechniqueParams]].\n */\nexport interface FillTechnique extends MakeTechniqueAttrs<FillTechniqueParams> {\n    name: \"fill\";\n}\n\nconst fillTechniqueDescriptor = mergeTechniqueDescriptor<FillTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrScopes: {\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors.fill = fillTechniqueDescriptor;\n\n/**\n * Technique used to render a mesh geometry.\n * For technique parameters see [[StandardTechniqueParams]].\n */\nexport interface StandardTechnique extends MakeTechniqueAttrs<StandardTechniqueParams> {\n    name: \"standard\";\n}\nconst standardTechniqueDescriptor = mergeTechniqueDescriptor<StandardTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            color: AttrScope.FeatureGeometry,\n            vertexColors: AttrScope.FeatureGeometry,\n            wireframe: AttrScope.TechniqueRendering,\n            roughness: AttrScope.TechniqueRendering,\n            metalness: AttrScope.TechniqueRendering,\n            alphaTest: AttrScope.TechniqueRendering,\n            depthTest: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            emissive: AttrScope.TechniqueRendering,\n            emissiveIntensity: AttrScope.TechniqueRendering,\n            refractionRatio: AttrScope.TechniqueRendering,\n            map: AttrScope.TechniqueGeometry,\n            mapProperties: AttrScope.TechniqueGeometry,\n            normalMap: AttrScope.TechniqueGeometry,\n            normalMapProperties: AttrScope.TechniqueGeometry,\n            displacementMap: AttrScope.TechniqueGeometry,\n            displacementMapProperties: AttrScope.TechniqueGeometry,\n            roughnessMap: AttrScope.TechniqueGeometry,\n            roughnessMapProperties: AttrScope.TechniqueGeometry,\n            emissiveMap: AttrScope.TechniqueGeometry,\n            emissiveMapProperties: AttrScope.TechniqueGeometry,\n            bumpMap: AttrScope.TechniqueGeometry,\n            bumpMapProperties: AttrScope.TechniqueGeometry,\n            metalnessMap: AttrScope.TechniqueGeometry,\n            metalnessMapProperties: AttrScope.TechniqueGeometry,\n            alphaMap: AttrScope.TechniqueGeometry,\n            alphaMapProperties: AttrScope.TechniqueGeometry\n        }\n    }\n);\ntechniqueDescriptors.standard = standardTechniqueDescriptor;\n\n/**\n * Runtime representation of [[ExtrudedPolygonStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[ExtrudedPolygonTechniqueParams]].\n */\nexport interface ExtrudedPolygonTechnique\n    extends MakeTechniqueAttrs<ExtrudedPolygonTechniqueParams> {\n    name: \"extruded-polygon\";\n}\n\nconst extrudedPolygonTechniqueDescriptor = mergeTechniqueDescriptor<ExtrudedPolygonTechnique>(\n    baseTechniqueParamsDescriptor,\n    standardTechniqueDescriptor,\n    {\n        attrScopes: {\n            height: AttrScope.FeatureGeometry,\n            floorHeight: AttrScope.FeatureGeometry,\n            color: AttrScope.FeatureGeometry,\n            defaultColor: AttrScope.FeatureGeometry,\n            defaultHeight: AttrScope.FeatureGeometry,\n            constantHeight: AttrScope.FeatureGeometry,\n            boundaryWalls: AttrScope.FeatureGeometry,\n            footprint: AttrScope.FeatureGeometry,\n            maxSlope: AttrScope.FeatureGeometry,\n            enableDepthPrePass: AttrScope.TechniqueGeometry,\n            animateExtrusionDuration: AttrScope.TechniqueGeometry,\n            animateExtrusion: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            lineFadeNear: AttrScope.TechniqueRendering,\n            lineFadeFar: AttrScope.TechniqueRendering,\n            lineColorMix: AttrScope.TechniqueGeometry,\n            lineColor: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"extruded-polygon\"] = extrudedPolygonTechniqueDescriptor;\n/**\n * Runtime representation of [[TextStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[TextTechniqueParams]].\n */\nexport interface TextTechnique extends MakeTechniqueAttrs<TextTechniqueParams> {\n    name: \"text\";\n}\n\nconst textTechniqueDescriptor = mergeTechniqueDescriptor<TextTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n\n            minZoomLevel: AttrScope.TechniqueGeometry,\n            maxZoomLevel: AttrScope.TechniqueGeometry,\n            distanceScale: AttrScope.TechniqueGeometry,\n            mayOverlap: AttrScope.TechniqueGeometry,\n            reserveSpace: AttrScope.TechniqueGeometry,\n            textFadeTime: AttrScope.TechniqueGeometry,\n            xOffset: AttrScope.TechniqueGeometry,\n            yOffset: AttrScope.TechniqueGeometry,\n            style: AttrScope.TechniqueGeometry,\n            fontName: AttrScope.TechniqueGeometry,\n            fontStyle: AttrScope.TechniqueGeometry,\n            fontVariant: AttrScope.TechniqueGeometry,\n            rotation: AttrScope.TechniqueGeometry,\n            tracking: AttrScope.TechniqueGeometry,\n            leading: AttrScope.TechniqueGeometry,\n            maxLines: AttrScope.TechniqueGeometry,\n            lineWidth: AttrScope.TechniqueGeometry,\n            canvasRotation: AttrScope.TechniqueGeometry,\n            lineRotation: AttrScope.TechniqueGeometry,\n            wrappingMode: AttrScope.TechniqueGeometry,\n            hAlignment: AttrScope.TechniqueGeometry,\n            vAlignment: AttrScope.TechniqueGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            priority: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors.text = textTechniqueDescriptor;\n\n/**\n * Special technique for user-defined shaders.\n * For technique parameters see [[ShaderTechniqueParams]].\n */\nexport interface ShaderTechnique extends MakeTechniqueAttrs<ShaderTechniqueParams> {\n    name: \"shader\";\n}\n\nconst shaderTechniqueDescriptor = mergeTechniqueDescriptor<ShaderTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            primitive: AttrScope.TechniqueGeometry,\n            params: AttrScope.TechniqueRendering\n        }\n    }\n);\n\ntechniqueDescriptors.shader = shaderTechniqueDescriptor;\n\n/**\n * Technique used to render a terrain geometry with textures.\n * For technique parameters see [[TerrainTechniqueParams]].\n */\nexport interface TerrainTechnique extends MakeTechniqueAttrs<TerrainTechniqueParams> {\n    name: \"terrain\";\n}\n\n/**\n * Technique to avoid label rendering on top of certain line geometries.\n * For technique parameters see [[BaseTechniqueParams]].\n */\nexport interface LabelRejectionLineTechnique extends MakeTechniqueAttrs<BaseTechniqueParams> {\n    name: \"label-rejection-line\";\n}\n\n/**\n * Possible techniques that can be used to draw a geometry on the map.\n */\nexport type Technique =\n    | SquaresTechnique\n    | CirclesTechnique\n    | PoiTechnique\n    | LineMarkerTechnique\n    | LineTechnique\n    | SegmentsTechnique\n    | SolidLineTechnique\n    | FillTechnique\n    | StandardTechnique\n    | TerrainTechnique\n    | BasicExtrudedLineTechnique\n    | StandardExtrudedLineTechnique\n    | ExtrudedPolygonTechnique\n    | ShaderTechnique\n    | TextTechnique\n    | LabelRejectionLineTechnique;\n\n/**\n * Additional params used for optimized usage of `Techniques`.\n */\nexport interface IndexedTechniqueParams {\n    /**\n     * Optimization: Index into table in [[StyleSetEvaluator]] or in [[DecodedTile]].\n     * @hidden\n     */\n    _index: number;\n\n    /**\n     * Optimization: Unique [[Technique]] index of [[Style]] from which technique was derived.\n     * @hidden\n     */\n    _styleSetIndex: number;\n\n    /**\n     * The styleSet associated to this [[Technique]].\n     * @hidden\n     */\n    _styleSet?: string;\n\n    /**\n     * The category used to assign render orders to objects created using this [[Technique]].\n     * @hidden\n     */\n    _category?: string;\n\n    /**\n     * The category used to assign render orders to secondary objects\n     * created using this [[Technique]].\n     * @hidden\n     */\n    _secondaryCategory?: string;\n\n    /**\n     * `true` if any of the properties of this technique needs to access\n     * the feature's state.\n     *\n     * @hidden\n     */\n    _usesFeatureState?: boolean;\n\n    /**\n     * Last computed state derived from [[Technique.kind]].\n     */\n    _kindState?: boolean;\n}\n\n/**\n * For efficiency, [[StyleSetEvaluator]] returns [[Techniques]] additional params as defined in\n * [[IndexedTechniqueParams]].\n */\nexport type IndexedTechnique = Technique & IndexedTechniqueParams;\n\n/**\n * Type guard to check if an object is an instance of [[CirclesTechnique]].\n */\nexport function isCirclesTechnique(technique: Technique): technique is CirclesTechnique {\n    return technique.name === \"circles\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SquaresTechnique]].\n */\nexport function isSquaresTechnique(technique: Technique): technique is SquaresTechnique {\n    return technique.name === \"squares\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[PoiTechnique]].\n */\nexport function isPoiTechnique(technique: Technique): technique is PoiTechnique {\n    return technique.name === \"labeled-icon\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[LineMarkerTechnique]].\n */\nexport function isLineMarkerTechnique(technique: Technique): technique is LineMarkerTechnique {\n    return technique.name === \"line-marker\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[LineTechnique]].\n */\nexport function isLineTechnique(technique: Technique): technique is LineTechnique {\n    return technique.name === \"line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SolidLineTechnique]].\n */\nexport function isSolidLineTechnique(technique: Technique): technique is SolidLineTechnique {\n    return technique.name === \"solid-line\" || technique.name === \"dashed-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SolidLineTechnique]] and is a kind that\n * has special dashes.\n * @note Lines with special dashes need line caps to render properly.\n */\nexport function isSpecialDashesLineTechnique(\n    technique: Technique\n): technique is SolidLineTechnique {\n    return (\n        (technique.name === \"solid-line\" || technique.name === \"dashed-line\") &&\n        technique.dashes !== undefined &&\n        technique.dashes !== \"Square\"\n    );\n}\n\n/**\n * Type guard to check if an object is an instance of [[SegmentsTechnique]].\n */\nexport function isSegmentsTechnique(technique: Technique): technique is SegmentsTechnique {\n    return technique.name === \"segments\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[BasicExtrudedLineTechnique]]\n * or [[StandardExtrudedLineTechnique]].\n */\nexport function isExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique | StandardExtrudedLineTechnique {\n    return technique.name === \"extruded-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[BasicExtrudedLineTechnique]].\n */\nexport function isBasicExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"basic\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[StandardExtrudedLineTechnique]].\n */\nexport function isStandardExtrudedLineTechnique(\n    technique: Technique\n): technique is StandardExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[FillTechnique]].\n */\nexport function isFillTechnique(technique: Technique): technique is FillTechnique {\n    return technique.name === \"fill\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[ExtrudedPolygonTechnique]].\n */\nexport function isExtrudedPolygonTechnique(\n    technique: Technique\n): technique is ExtrudedPolygonTechnique {\n    return technique.name === \"extruded-polygon\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[StandardTechnique]].\n */\nexport function isStandardTechnique(technique: Technique): technique is StandardTechnique {\n    return technique.name === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[TerrainTechnique]].\n */\nexport function isTerrainTechnique(technique: Technique): technique is TerrainTechnique {\n    return technique.name === \"terrain\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[TextTechnique]].\n */\nexport function isTextTechnique(technique: Technique): technique is TextTechnique {\n    return technique.name === \"text\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[ShaderTechnique]].\n */\nexport function isShaderTechnique(technique: Technique): technique is ShaderTechnique {\n    return technique.name === \"shader\";\n}\n\nexport function isLabelRejectionLineTechnique(\n    technique: Technique\n): technique is LabelRejectionLineTechnique {\n    return technique.name === \"label-rejection-line\";\n}\n\n/**\n * Check if vertex normals should be generated for this technique (if no normals are in the data).\n * @param technique - Technique to check.\n */\nexport function needsVertexNormals(technique: Technique): boolean {\n    return (\n        isFillTechnique(technique) ||\n        isStandardTechnique(technique) ||\n        isTerrainTechnique(technique) ||\n        isStandardExtrudedLineTechnique(technique)\n    );\n}\n\n/**\n * Get the texture coordinate type if the technique supports it.\n */\nexport function textureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n    if (isStandardTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else if (isExtrudedPolygonTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else if (isTerrainTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else if (isShaderTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Add all the buffers of the technique to the transfer list.\n */\nexport function addBuffersToTransferList(technique: Technique, transferList: ArrayBuffer[]) {\n    if (\n        isStandardTechnique(technique) ||\n        isExtrudedPolygonTechnique(technique) ||\n        isTerrainTechnique(technique)\n    ) {\n        for (const texturePropertyKey of TEXTURE_PROPERTY_KEYS) {\n            const textureProperty = (technique as any)[texturePropertyKey];\n            if (isTextureBuffer(textureProperty)) {\n                if (textureProperty.buffer instanceof ArrayBuffer) {\n                    transferList.push(textureProperty.buffer);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Compose full texture name for given image name with technique specified.\n * Some techniques allows to add prefix/postfix to icons names specified, this\n * function uses technique information to create fully qualified texture name.\n * @param imageName - base name of the marker icon.\n * @param technique - the technique describing POI or line marker.\n * @returns fully qualified texture name for loading from atlas (without extension).\n */\nexport function composeTechniqueTextureName(\n    imageName: string,\n    technique: PoiTechnique | LineMarkerTechnique\n): string {\n    let textureName = imageName;\n    if (typeof technique.imageTexturePrefix === \"string\") {\n        textureName = technique.imageTexturePrefix + textureName;\n    }\n    if (typeof technique.imageTexturePostfix === \"string\") {\n        textureName = textureName + technique.imageTexturePostfix;\n    }\n    return textureName;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/StyleSetEvaluator\";\nexport * from \"./lib/IMeshBuffers\";\nexport * from \"./lib/Outliner\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/ThreeBufferUtils\";\nexport * from \"./lib/GeoJsonDataType\";\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    DecodedTile,\n    Definitions,\n    GeometryKind,\n    IndexedTechnique,\n    OptionsMap,\n    StyleSet\n} from \"@here/harp-datasource-protocol\";\nimport { MapEnv, StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { Projection, TileKey } from \"@here/harp-geoutils\";\nimport {\n    ThemedTileDecoder,\n    TileDecoderService,\n    WorkerServiceManager\n} from \"@here/harp-mapview-decoder/index-worker\";\nimport { assert, LoggerManager, PerformanceTimer } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// tslint:disable-next-line:max-line-length\nimport { AttrEvaluationContext } from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvProtobufDataAdapter } from \"./OmvData\";\nimport {\n    ComposedDataFilter,\n    OmvFeatureFilter,\n    OmvFeatureModifier,\n    OmvGenericFeatureFilter,\n    OmvGenericFeatureModifier\n} from \"./OmvDataFilter\";\nimport { OmvDecodedTileEmitter } from \"./OmvDecodedTileEmitter\";\nimport {\n    FeatureModifierId,\n    OmvDecoderOptions,\n    OmvFeatureFilterDescription,\n    OMV_TILE_DECODER_SERVICE_TYPE\n} from \"./OmvDecoderDefs\";\nimport { OmvPoliticalViewFeatureModifier } from \"./OmvPoliticalViewFeatureModifier\";\nimport { OmvTomTomFeatureModifier } from \"./OmvTomTomFeatureModifier\";\nimport { StyleSetDataFilter } from \"./StyleSetDataFilter\";\nimport { TiledGeoJsonDataAdapter } from \"./TiledGeoJsonAdapter\";\nimport { VTJsonDataAdapter } from \"./VTJsonDataAdapter\";\n\nconst logger = LoggerManager.instance.create(\"OmvDecoder\", { enabled: false });\n\nexport class Ring {\n    readonly winding: boolean;\n\n    /**\n     * Constructs a new [[Ring]].\n     *\n     * @param extents - The extents of the enclosing layer.\n     * @param vertexStride - The stride of this elements stored in 'contour'.\n     * @param contour - The [[Array]] containing the projected world coordinates.\n     */\n    constructor(\n        readonly extents: number,\n        readonly vertexStride: number,\n        readonly contour: number[]\n    ) {\n        this.winding = this.area() < 0;\n    }\n\n    area(): number {\n        const points = this.contour;\n        const stride = this.vertexStride;\n        const n = points.length / stride;\n\n        let area = 0.0;\n\n        for (let p = n - 1, q = 0; q < n; p = q++) {\n            area +=\n                points[p * stride] * points[q * stride + 1] -\n                points[q * stride] * points[p * stride + 1];\n        }\n\n        return area / 2;\n    }\n}\n\nexport interface IOmvEmitter {\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[]\n    ): void;\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        feature: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        feature: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n}\n\n/**\n * The class [[OmvDataAdapter]] prepares protobuf encoded OMV data so they\n * can be processed by [[OmvDecoder]].\n */\nexport interface OmvDataAdapter {\n    /**\n     * OmvDataAdapter's id.\n     */\n    id: string;\n\n    /**\n     * Checks if the given data can be processed by this OmvDataAdapter.\n     *\n     * @param data - The raw data to adapt.\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean;\n\n    /**\n     * Process the given raw data.\n     *\n     * @param data - The raw data to process.\n     * @param decodeInfo - The [[DecodeInfo]] of the tile to process.\n     */\n    process(data: ArrayBufferLike | {}, decodeInfo: DecodeInfo): void;\n}\n\nexport class OmvDecoder implements IGeometryProcessor {\n    // The emitter is optional now.\n    // TODO: Add option to control emitter generation.\n    private m_decodedTileEmitter: OmvDecodedTileEmitter | undefined;\n    private readonly m_dataAdapters: OmvDataAdapter[] = [];\n\n    constructor(\n        private readonly m_projection: Projection,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_showMissingTechniques: boolean,\n        private readonly m_dataFilter?: OmvFeatureFilter,\n        private readonly m_featureModifiers?: OmvFeatureModifier[],\n        private readonly m_gatherFeatureAttributes = false,\n        private readonly m_skipShortLabels = true,\n        private readonly m_storageLevelOffset = 0,\n        private readonly m_enableElevationOverlay = false,\n        private readonly m_languages?: string[]\n    ) {\n        const styleSetDataFilter = new StyleSetDataFilter(m_styleSetEvaluator);\n        const dataPreFilter = m_dataFilter\n            ? new ComposedDataFilter([styleSetDataFilter, m_dataFilter])\n            : styleSetDataFilter;\n        // Register the default adapters.\n        this.m_dataAdapters.push(new OmvProtobufDataAdapter(this, dataPreFilter, logger));\n        this.m_dataAdapters.push(new VTJsonDataAdapter(this, dataPreFilter, logger));\n        this.m_dataAdapters.push(new TiledGeoJsonDataAdapter(this, dataPreFilter, logger));\n    }\n\n    get storageLevelOffset() {\n        return this.m_storageLevelOffset;\n    }\n\n    /**\n     * Given a tile and a protobuffer, it returns a decoded tile and it creates the geometries that\n     * belong to it.\n     *\n     * @param tileKey - The tile to be decoded.\n     * @param data - The protobuffer to decode from.\n     * @returns A [[DecodedTile]]\n     */\n    getDecodedTile(tileKey: TileKey, data: ArrayBufferLike | {}): DecodedTile {\n        let dataAdapter;\n        for (const adapter of this.m_dataAdapters.values()) {\n            if (adapter.canProcess(data)) {\n                dataAdapter = adapter;\n                break;\n            }\n        }\n        if (dataAdapter === undefined) {\n            return {\n                techniques: [],\n                geometries: []\n            };\n        }\n\n        this.m_styleSetEvaluator.resetTechniques();\n\n        const decodeInfo = new DecodeInfo(\n            dataAdapter.id,\n            this.m_projection,\n            tileKey,\n            this.m_storageLevelOffset\n        );\n\n        this.m_decodedTileEmitter = new OmvDecodedTileEmitter(\n            decodeInfo,\n            this.m_styleSetEvaluator,\n            this.m_gatherFeatureAttributes,\n            this.m_skipShortLabels,\n            this.m_enableElevationOverlay,\n            this.m_languages\n        );\n\n        dataAdapter.process(data, decodeInfo);\n        return this.m_decodedTileEmitter.getDecodedTile();\n    }\n\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (this.m_featureModifiers !== undefined) {\n            if (\n                this.m_featureModifiers.find(fm => {\n                    // TODO: The logic of feature ignore should be actually in the feature filtering\n                    // mechanism - see OmvFeatureFilter.\n                    return !fm.doProcessPointFeature(layer, env, storageLevel);\n                }) !== undefined\n            ) {\n                return;\n            }\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"point\"),\n            GeometryKind.Label\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processPointFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n        const context: AttrEvaluationContext = {\n            env,\n            cachedExprResults: new Map()\n        };\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processPointFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques\n            );\n        }\n    }\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (this.m_featureModifiers !== undefined) {\n            if (\n                this.m_featureModifiers.find(fm => {\n                    return !fm.doProcessLineFeature(layer, env, storageLevel);\n                }) !== undefined\n            ) {\n                return;\n            }\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"line\"),\n            GeometryKind.Line\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processLineFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n\n        const context: AttrEvaluationContext = {\n            env,\n            cachedExprResults: new Map()\n        };\n\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processLineFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (this.m_featureModifiers !== undefined) {\n            if (\n                this.m_featureModifiers.find(fm => {\n                    return !fm.doProcessPolygonFeature(layer, env, storageLevel);\n                }) !== undefined\n            ) {\n                return;\n            }\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"polygon\"),\n            GeometryKind.Area\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processPolygonFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n\n        const context = {\n            env,\n            cachedExprResults: new Map()\n        };\n\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processPolygonFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    private applyKindFilter(\n        techniques: IndexedTechnique[],\n        defaultKind: GeometryKind\n    ): IndexedTechnique[] {\n        if (this.m_dataFilter !== undefined && this.m_dataFilter.hasKindFilter) {\n            techniques = techniques.filter(technique => {\n                const kind =\n                    // tslint:disable-next-line: deprecation\n                    technique.kind === undefined ? defaultKind : (technique.kind as GeometryKind);\n                return this.m_dataFilter!.wantsKind(kind);\n            });\n        }\n        return techniques;\n    }\n}\nexport class OmvTileDecoder extends ThemedTileDecoder {\n    private m_showMissingTechniques: boolean = false;\n    private m_featureFilter?: OmvFeatureFilter;\n    private m_featureModifiers?: OmvFeatureModifier[];\n    private m_gatherFeatureAttributes: boolean = false;\n    private m_skipShortLabels: boolean = true;\n    private m_enableElevationOverlay: boolean = false;\n\n    /** @override */\n    connect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    /** @override */\n    decodeThemedTile(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile> {\n        const startTime = PerformanceTimer.now();\n\n        const decoder = new OmvDecoder(\n            projection,\n            styleSetEvaluator,\n            this.m_showMissingTechniques,\n            this.m_featureFilter,\n            this.m_featureModifiers,\n            this.m_gatherFeatureAttributes,\n            this.m_skipShortLabels,\n            this.m_storageLevelOffset,\n            this.m_enableElevationOverlay,\n            this.languages\n        );\n\n        const decodedTile = decoder.getDecodedTile(tileKey, data);\n\n        decodedTile.decodeTime = PerformanceTimer.now() - startTime;\n\n        return Promise.resolve(decodedTile);\n    }\n\n    /** @override */\n    configure(\n        styleSet: StyleSet,\n        definitions?: Definitions,\n        languages?: string[],\n        options?: OptionsMap\n    ): void {\n        super.configure(styleSet, definitions, languages, options);\n\n        if (options) {\n            const omvOptions = options as OmvDecoderOptions;\n\n            if (omvOptions.showMissingTechniques !== undefined) {\n                this.m_showMissingTechniques = omvOptions.showMissingTechniques === true;\n            }\n\n            if (omvOptions.filterDescription !== undefined) {\n                if (omvOptions.filterDescription !== null) {\n                    // TODO: Feature modifier is always used only with feature filter.\n                    // At best the filtering feature should be excluded from other feature\n                    // modifiers and be performed solely via OmvGenericFeature modifier or filter.\n                    const filterDescription = omvOptions.filterDescription;\n                    const featureModifiersIds = omvOptions.featureModifiers;\n\n                    // Create new filter from description.\n                    this.m_featureFilter = new OmvGenericFeatureFilter(filterDescription);\n                    // Create feature modifiers.\n                    const featureModifiers: OmvFeatureModifier[] = [];\n                    if (featureModifiersIds !== undefined) {\n                        featureModifiersIds.forEach(fmId => {\n                            featureModifiers.push(\n                                this.createFeatureModifier(filterDescription, fmId)\n                            );\n                        });\n                    } else {\n                        featureModifiers.push(\n                            this.createFeatureModifier(filterDescription, FeatureModifierId.default)\n                        );\n                    }\n                    this.m_featureModifiers = featureModifiers;\n                } else {\n                    // null is the signal to clear the filter/modifier\n                    this.m_featureFilter = undefined;\n                    this.m_featureModifiers = undefined;\n                }\n            }\n\n            if (omvOptions.politicalView !== undefined) {\n                const politicalView = omvOptions.politicalView;\n                let featureModifiers = this.m_featureModifiers;\n                // Remove existing political view modifiers, this actually setups default,\n                // commonly accepted point of view - without feature modifier.\n                if (featureModifiers) {\n                    featureModifiers = featureModifiers.filter(\n                        fm => !(fm instanceof OmvPoliticalViewFeatureModifier)\n                    );\n                }\n                // If political view is indeed requested append feature modifier at the end of list.\n                if (politicalView.length !== 0) {\n                    assert(\n                        politicalView.length === 2,\n                        \"The political view must be specified as two letters ISO 3166-1 standard!\"\n                    );\n                    const povFeatureModifier = new OmvPoliticalViewFeatureModifier(politicalView);\n                    if (featureModifiers) {\n                        featureModifiers.push(povFeatureModifier);\n                    } else {\n                        featureModifiers = [povFeatureModifier];\n                    }\n                }\n                // Reset modifiers if nothing was added.\n                this.m_featureModifiers =\n                    featureModifiers && featureModifiers.length > 0 ? featureModifiers : undefined;\n            }\n\n            if (omvOptions.gatherFeatureAttributes !== undefined) {\n                this.m_gatherFeatureAttributes = omvOptions.gatherFeatureAttributes === true;\n            }\n            if (omvOptions.skipShortLabels !== undefined) {\n                this.m_skipShortLabels = omvOptions.skipShortLabels;\n            }\n            if (omvOptions.enableElevationOverlay !== undefined) {\n                this.m_enableElevationOverlay = omvOptions.enableElevationOverlay;\n            }\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n    }\n\n    private createFeatureModifier(\n        filterDescription: OmvFeatureFilterDescription,\n        featureModifierId?: FeatureModifierId\n    ): OmvFeatureModifier {\n        switch (featureModifierId) {\n            case FeatureModifierId.tomTom:\n                return new OmvTomTomFeatureModifier(filterDescription);\n            case FeatureModifierId.default:\n                return new OmvGenericFeatureModifier(filterDescription);\n            default:\n                assert(!\"Unrecognized feature modifier id, using default!\");\n                return new OmvGenericFeatureModifier(filterDescription);\n        }\n    }\n}\n\n/**\n * OMV tile decoder service.\n */\nexport class OmvTileDecoderService {\n    /**\n     * Register[[OmvTileDecoder]] service class in [[WorkerServiceManager]].\n     *\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: OMV_TILE_DECODER_SERVICE_TYPE,\n            factory: (serviceId: string) =>\n                TileDecoderService.start(serviceId, new OmvTileDecoder())\n        });\n    }\n}\n\n/**\n * Starts an OMV decoder service.\n *\n * @deprecated Please use [[OmvTileDecoderService.start]].\n */\nexport default class OmvWorkerClient {\n    // TODO(HARP-3651): remove this class when clients are ready\n    constructor() {\n        logger.warn(\"OmvWorkerClient class is deprecated, please use OmvTileDecoderService.start\");\n        OmvTileDecoderService.start();\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class for the default console channel.\n */\n\nexport class ConsoleChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.error(message, ...optionalParams);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.debug(message, ...optionalParams);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.info(message, ...optionalParams);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.log(message, ...optionalParams);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.trace(message, ...optionalParams);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.warn(message, ...optionalParams);\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\n\n/**\n * Logger class.\n */\nexport class Logger implements ILogger {\n    enabled: boolean = true;\n    level: LogLevel = LogLevel.Trace;\n\n    constructor(readonly name: string, private m_channel: IChannel, options?: LoggerOptions) {\n        if (options !== undefined) {\n            this.update(options);\n        }\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Error) {\n            this.m_channel.error(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Debug) {\n            this.m_channel.debug(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Info) {\n            this.m_channel.info(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Log) {\n            this.m_channel.log(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Trace) {\n            this.m_channel.trace(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Warn) {\n            this.m_channel.warn(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    update(options: LoggerOptions) {\n        this.enabled = options.enabled === undefined ? this.enabled : options.enabled;\n        this.level = options.level === undefined ? this.level : options.level;\n    }\n\n    private get prefix(): string {\n        return this.name + \":\";\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { LogLevel } from \"./ILogger\";\n\ndeclare let self: Worker;\n\nexport const WORKERCHANNEL_MSG_TYPE = \"worker-channel-message\";\n\n/**\n * The interface for the messages of the WorkerChannel.\n */\nexport interface IWorkerChannelMessage {\n    message: any[];\n    type: \"worker-channel-message\";\n    level: LogLevel;\n}\n\n/**\n * The class for the worker channel.\n */\nexport class WorkerChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Error\n        };\n        self.postMessage(workerMessage);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Debug\n        };\n        self.postMessage(workerMessage);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Info\n        };\n        self.postMessage(workerMessage);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Log\n        };\n        self.postMessage(workerMessage);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Trace\n        };\n        self.postMessage(workerMessage);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Warn\n        };\n        self.postMessage(workerMessage);\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\n\n/**\n * Available line caps types(`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`).\n * Default is `\"Round\"`.\n */\nexport type LineCaps = \"Square\" | \"Round\" | \"None\" | \"TriangleOut\" | \"TriangleIn\";\n\n/**\n * Available line dash types(`\"Round\"`, `\"Square\"`, `\"Diamond\"`).\n * Default is `\"Square\"`.\n */\nexport type LineDashes = \"Square\" | \"Round\" | \"Diamond\";\n\n/**\n * Standard kinds of geometry.\n */\nexport enum StandardGeometryKind {\n    /**\n     * Used in the enabledKinds/disabledKinds filter to match any kind.\n     */\n    All = \"_all_\",\n\n    /**\n     * Background geometry.\n     */\n    Background = \"background\",\n\n    /**\n     * Terrain geometry.\n     */\n    Terrain = \"terrain\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Area = \"area\",\n\n    /**\n     * Default value for all line techniques.\n     */\n    Line = \"line\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Water = \"water\",\n\n    /**\n     * Political borders.\n     */\n    Border = \"border\",\n\n    /**\n     * Basis for all roads.\n     */\n    Road = \"road\",\n\n    /**\n     * Default value for the ExtrudedPolygonTechnique.\n     */\n    Building = \"building\",\n\n    /**\n     * Default value for the TextTechnique, LineMarkerTechnique and the PoiTechnique.\n     */\n    Label = \"label\",\n\n    /**\n     * Anything that may show up last.\n     */\n    Detail = \"detail\"\n}\n\n/**\n * Geometry kind used for use by [[BaseTechniqueParams.kind]].\n *\n * @remarks\n * The kind of geometry is used to group objects together,\n * allowing the group to be hidden or displayed.\n *\n * Any string can be used to specify the kind of the technique in a style in the theme file. Is is\n * suggested to specify multiple kinds for specific types of data. For a highway, the following list\n * of kinds is suggested:\n *```json\n *    [\"line\", \"road\", \"road:highway\"]\n *```\n * If it is a tunnel for a highway:\n *```json\n *    [\"line\", \"road\", \"road:highway\", \"tunnel\", \"road:tunnel\", \"road:highway:tunnel\"]\n *```\n * If specified in this way, specific types of data (here: highway roads) can be enabled and/or\n * disabled.\n */\nexport type GeometryKind = string | StandardGeometryKind;\n\nexport const GeometryKind = StandardGeometryKind;\n\n/**\n * Decorate property type with possible dynamic variants.\n */\nexport type DynamicProperty<T> = T | JsonExpr | InterpolatedPropertyDefinition<T>;\n\n/**\n * Length literals.\n *\n * @remarks\n * Description of length units inside a style. Supports literal values (interpreted as `m`), `m` and\n * `px`(i.e. `80`, `14px`, `0.6m`, etc.).\n */\nexport type StyleLength = string | number;\n\n/**\n * Color literals.\n *\n * @remarks\n * Description of colors inside a style. Supports hex values as well as CSS hex, rgb and hsl values\n * (i.e. `0xffffff`, `#f00fab`, `#aaa`, `rgb(255, 0 120)`, `hsl(360, 100%, 100%)`, etc.).\n */\nexport type StyleColor = string | number;\n\n/**\n * A set of [[GeometryKind]]s.\n */\nexport class GeometryKindSet extends Set {\n    /**\n     * Return `true` if the Set is a superset of the set 'subset'.\n     */\n    isSuperset(subset: Set<any>): boolean {\n        for (const elem of subset) {\n            if (!this.has(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Return `true` if the Set intersects Set 'set'.\n     */\n    hasIntersection(set: any) {\n        for (const elem of set) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return `true` if the Set either intersects Set 'set' (if set is a Set), of has element 'set'\n     * if set is not a Set.\n     */\n    hasOrIntersects(set: any) {\n        if (set instanceof Set) {\n            return this.hasIntersection(set);\n        }\n        return this.has(set);\n    }\n\n    /**\n     * Return `true` if this set and the array of elements share at least a single element.\n     */\n    hasOrIntersectsArray(subset: any[]) {\n        for (const elem of subset) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Common attributes or all [[Technique]]s.\n */\nexport interface BaseTechniqueParams {\n    /**\n     * The name used to identify materials created from this technique.\n     */\n    id?: string;\n\n    /**\n     * The render order of the objects created using this technique.\n     *\n     * If not specified in style file, [[StyleSetEvaluator]] will assign monotonically increasing\n     * values according to style position in file.\n     */\n    renderOrder?: DynamicProperty<number>;\n\n    /**\n     * The category of this technique.\n     *\n     * The category is used in conjunction with [[Theme.priorities]]\n     * to assign render orders to the objects created by this [[Style]].\n     */\n    category?: DynamicProperty<string>;\n\n    /**\n     * Optional. If `true`, no IDs will be saved for the geometry this technique creates.\n     */\n    transient?: boolean;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object start\n     * fading out (opacity decreases).\n     */\n    fadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object has zero\n     * opacity and stops fading out. An undefined value disables fading.\n     */\n    fadeFar?: DynamicProperty<number>;\n\n    /**\n     * Specified kind of geometry. One kind is set as default in the technique, and can be\n     * overridden in the style.\n     *\n     * @deprecated Use [[enabled]] with expressions based on `['dynamic-properties']` operator.\n     */\n    kind?: GeometryKind | GeometryKindSet;\n\n    /**\n     * Runtime filtering of techniques.\n     *\n     * Use with `['dynamic-properties']` operator for dynamic feature highlight, highlighig etc.\n     *\n     * @see Picking example - [[PickingExample]]\n     */\n    enabled?: DynamicProperty<boolean>;\n}\n\nexport enum TextureCoordinateType {\n    /**\n     * Texture coordinates are in tile space.\n     * SW of the tile will have (0,0) and NE will have (1,1).\n     */\n    TileSpace = \"tile-space\",\n\n    /**\n     * Texture coordinates are in equirectangular space.\n     * (u, v) = ( (longitude+180) / 360, (latitude+90) / 180).\n     */\n    EquirectangularSpace = \"equirectangular-space\",\n\n    /**\n     * Texture coordinates in feature space.\n     *\n     * To compute texture coordinates in feature space,\n     * the feature must have a property named `bbox` with value\n     * the tuple `[west, south, east, north]`.\n     */\n    FeatureSpace = \"feature-space\"\n}\n\n/**\n * Standard technique parameters.\n */\nexport interface StandardTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of the feature in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.color.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.wireframe.\n     */\n    wireframe?: boolean;\n    /**\n     * If `vertexColors` is `true`, every vertex has color information, which is interpolated\n     * between vertices.\n     * See https://threejs.org/docs/#api/en/materials/Material.vertexColors.\n     */\n    vertexColors?: boolean;\n    /**\n     * How rough the material appears. `0.0` means a smooth mirror reflection. `1.0` means fully\n     * diffuse. Default is `1.0`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughness.\n     */\n    roughness?: DynamicProperty<number>;\n    /**\n     * How much the material is like a metal. Nonmetallic materials such as wood or stone use `0.0`,\n     * metallic ones use `1.0`, with nothing (usually) in between. Default is `0.0`. A value between\n     * `0.0` and `1.0` can be used for a rusty metal look. If `metalnessMap` is also provided, both\n     * values are multiplied.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalness.\n     */\n    metalness?: DynamicProperty<number>;\n    /**\n     * The material will not be rendered if the opacity is lower than this value.\n     * See https://threejs.org/docs/#api/en/materials/Material.alphaTest.\n     */\n    alphaTest?: DynamicProperty<number>;\n    /**\n     * Skip rendering clobbered pixels.\n     * See https://threejs.org/docs/#api/en/materials/Material.depthTest.\n     */\n    depthTest?: boolean;\n    /**\n     * Set to 'true' if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     * See https://threejs.org/docs/#api/en/materials/Material.transparent.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     * See https://threejs.org/docs/#api/en/materials/Material.opacity.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Emissive (light) color of the material, essentially a solid color unaffected by other\n     * lighting. Default is black.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissive.\n     * @format color-hex\n     */\n    emissive?: DynamicProperty<StyleColor>;\n    /**\n     * Intensity of the emissive light. Modulates the emissive color. Default is `1`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveIntensity.\n     */\n    emissiveIntensity?: DynamicProperty<number>;\n    /**\n     * The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of\n     * the material. It is used with environment mapping modes `THREE.CubeRefractionMapping` and\n     * `THREE.EquirectangularRefractionMapping`. The refraction ratio should not exceed `1`. Default\n     *  is `0.98`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.refractionRatio.\n     */\n    refractionRatio?: DynamicProperty<number>;\n\n    /**\n     * Whether and how texture coordinates should be generated. No texture coordinates are\n     * generated if `undefined`.\n     * Should be set if any texture assigned (e.g. `map`, `normalMap`, ...).\n     */\n    textureCoordinateType?: TextureCoordinateType;\n\n    /*\n     * URL or texture buffer that should be used as color map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.map\n     */\n    map?: string | TextureBuffer;\n    mapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as normal map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.normalMap\n     */\n    normalMap?: string | TextureBuffer;\n    normalMapType?: number;\n    normalMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as displacement map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.displacementMap\n     */\n    displacementMap?: string | TextureBuffer;\n    displacementMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as roughness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughnessMap\n     */\n    roughnessMap?: string | TextureBuffer;\n    roughnessMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as emissive map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveMap\n     */\n    emissiveMap?: string | TextureBuffer;\n    emissiveMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as bump map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.bumpMap\n     */\n    bumpMap?: string | TextureBuffer;\n    bumpMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as metalness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalnessMap\n     */\n    metalnessMap?: string | TextureBuffer;\n    metalnessMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as alpha map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.alphaMap\n     */\n    alphaMap?: string | TextureBuffer;\n    alphaMapProperties?: TextureProperties;\n}\n\n/**\n * Possible parameters of [[PointTechnique]].\n */\nexport interface PointTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a point in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * URL of a texture image to be loaded.\n     */\n    texture?: string;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Size of point in pixels.\n     */\n    size?: number;\n    /**\n     * Whether to enable picking on these points.\n     */\n    enablePicking?: boolean;\n}\n\n/**\n * Define the stacking option. Enum values for theme file are in \"kebab-case\".\n */\nexport enum PoiStackMode {\n    /**\n     * Show in a stack.\n     */\n    Show = \"show-in-stack\",\n    /**\n     * Do not show in a stack.\n     */\n    Hide = \"hide-in-stack\",\n    /**\n     * Show category parent in the stack.\n     */\n    ShowParent = \"show-parent\"\n}\n\n/**\n * Defines options (tokens) supported for text placements defined via [[placements]] attribute.\n *\n * @remarks\n * Possible values are defined as vertical placement letter and horizontal letter, where\n * one of the axis may be ignored and then assumed centered. Moving clock-wise, we have:\n * `TL` (top-left), `T` (top-center), `TR` (top-right), `R` (center-right), `BR` (bottom-right),\n * `B` (bottom-center), `BL` (bottom-left), `L` (left), `C` (center-center).\n * Alternatively instead of `T`, `B`, `L`, `R` geographic directions may be used accordingly:\n * `NW` (north-west), `N` (north), `NE` (north-east), `E` (east), `SE` (south-east), `S` (south),\n * `SW` (south-west), `W` (west).\n */\nexport enum PlacementToken {\n    TopLeft = \"TL\",\n    Top = \"T\",\n    TopRight = \"TR\",\n    Right = \"R\",\n    BottomRight = \"BR\",\n    Bottom = \"B\",\n    BottomLeft = \"BL\",\n    Left = \"L\",\n    Center = \"C\",\n    NorthWest = \"NW\",\n    North = \"N\",\n    NorthEast = \"NE\",\n    East = \"E\",\n    SouthEast = \"SE\",\n    South = \"S\",\n    SouthWest = \"SW\",\n    West = \"W\"\n}\n\n/**\n * Technique that describes icons with labels. Used in [[PoiTechnique]] and [[LineMarkerTechnique]]\n * (for road shields).\n */\nexport interface MarkerTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (deprecated)\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language\n     *  - `[\"get\", \"name\"]`\n     *\n     * See [[ExtendedTileInfo.getFeatureText]]\n     */\n    text?: DynamicProperty<string>;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of marker, defaults to `0`. Markers with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimum zoomLevel at which to display the label text. No default.\n     */\n    textMinZoomLevel?: number;\n    /**\n     * Maximum zoomLevel at which to display the label text. No default.\n     */\n    textMaxZoomLevel?: number;\n    /**\n     * Minimum zoomLevel at which to display the label icon. No default.\n     */\n    iconMinZoomLevel?: number;\n    /**\n     * Maximum zoomLevel at which to display the label icon. No default.\n     */\n    iconMaxZoomLevel?: number;\n\n    /**\n     * Icon color.\n     *\n     * If specified, combined using multiplication with color value read from icon texture.\n     *\n     * Works best for grayscale or monochromatic textures.\n     */\n    iconColor?: StyleColor;\n\n    /**\n     * Icon brightness.\n     *\n     * Factor that multiplies a color on top of the icon texture (and `iconColor`) with `0` being\n     * fully black as final output, `1` being the original rgb colors of the texture.\n     *\n     * @default `1`\n     */\n    iconBrightness?: number;\n\n    /**\n     * Scaling factor of icon. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `false`, text may overlap markers.\n     * @default `false`\n     */\n    textMayOverlap?: boolean;\n    /**\n     * If `false`, the icon may overlap text and other icons of lower priority. If not defined, the\n     * property value from `textMayOverlap` will be used.\n     * @default `false`\n     */\n    iconMayOverlap?: boolean;\n    /**\n     * If `false`, text will not reserve screen space, other markers will be able to overlap.\n     * @default `true`\n     */\n    textReserveSpace?: boolean;\n    /**\n     * If `false`, icon will not reserve screen space, other markers will be able to overlap. If not\n     * defined, the property value from `iconReserveSpace` will be used.\n     * @default `true`\n     */\n    iconReserveSpace?: boolean;\n    /**\n     * If `false`, text will not be rendered during animations. Defaults to `true`.\n     */\n    renderTextDuringMovements?: boolean;\n    /**\n     * If `true`, the label will always be rendered on top. If overlapping with other labels with\n     * this flag set, the render order is undefined.\n     * @default `false`\n     */\n    alwaysOnTop?: boolean;\n    /**\n     * If `true`, icon will appear even if the text part is blocked by other labels. Defaults to\n     * `false`.\n     */\n    textIsOptional?: boolean;\n    /**\n     * Should be displayed on map or not. Defaults to `true`.\n     */\n    showOnMap?: boolean;\n    /**\n     * Specify stack mode. Defaults to `ShowInStack`.\n     */\n    stackMode?: PoiStackMode;\n    /**\n     * Minimal distance between markers in screen pixels.\n     */\n    minDistance?: number;\n    /**\n     * If true, the text will appear even if the icon cannot be rendered because of missing icon\n     * graphics. Defaults to `true`.\n     */\n    iconIsOptional?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Fading time for icons in seconds.\n     */\n    iconFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: DynamicProperty<number>;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    iconXOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    iconYOffset?: DynamicProperty<number>;\n    /**\n     * Scaling factor of icon.\n     */\n    iconScale?: number;\n    /**\n     * Vertical height in pixels, controls vertical scaling. Overrides `iconScale`.\n     */\n    screenHeight?: DynamicProperty<number>;\n    /**\n     * Horizontal height in pixels, controls horizontal scaling. Overrides `iconScale`.\n     */\n    screenWidth?: DynamicProperty<number>;\n    /**\n     * Name of the POI table which should be used for this POI.\n     */\n    poiTable?: string;\n    /**\n     * Fixed name to identify POI options in the POI table. If `poiName` has a value, this value\n     * supersedes any value read from the field referenced in `poiNameField`.\n     */\n    poiName?: string;\n    /**\n     * Name of the field to evaluate to get the name of the POI options in the POI table.\n     */\n    poiNameField?: string;\n    /**\n     * Name of [[ImageTexture]] definition to use.\n     */\n    imageTexture?: DynamicProperty<string>;\n    /**\n     * Field name to extract imageTexture content from.\n     */\n    imageTextureField?: string;\n    /**\n     * Prefix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePrefix?: string;\n    /**\n     * Postfix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePostfix?: string;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     *\n     * @note The [[placements]] attribute may override the alignment settings.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     *\n     * @note The [[placements]] attribute may supersede it.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n    /**\n     * Text label positions relative to the label central position (anchor point).\n     *\n     * This attribute defines a comma separated tokens of possible text placements\n     * relative to label central position (anchor), for example: \"TL, TR, C\".\n     * Keep in mind that horizontal placement defines text position in opposite way to\n     * the alignment, so the text `R` placed (located on the **right side** of label position)\n     * will be the same as `Left` aligned by deduction. On other side vertical placement is quite\n     * similar to vertical alignment so `T` placement corresponds with `Above` alignment.\n     *\n     * @note This attribute may override [[hAlignment]] and [[vAlignment]] if defined.\n     */\n    placements?: string;\n\n    /**\n     * World space offset in meters applied to the icon. Valid only for icons which have the\n     * \"offset_direction\" property as an attribute of the data.\n     */\n    worldOffset?: DynamicProperty<number>;\n}\n\nexport interface LineTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to true if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in pixels. WebGL implementations will normally render all lines with 1 pixel\n     * width, and ignore this value.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a geometry as a segment.\n */\nexport interface SegmentsTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of segments in a hexadecimal notation, for example: `\"#e4e9ec\"` or `\"#fff\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of a line in meters.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a polygon.\n */\nexport interface PolygonalTechniqueParams {\n    /**\n     * Whether to use polygon offset. Default is false. This corresponds to the\n     * GL_POLYGON_OFFSET_FILL WebGL feature.\n     *\n     * PolygonOffset is used to raise the geometry towards the geometry (for depth calculation\n     * only). Default is false.\n     *\n     * See here: https://sites.google.com/site/threejstuts/home/polygon_offset\n     *\n     * To activate polygonOffset these values have to be set to pull the line \"forwards\":\n     *\n     * transparent: true\n     *\n     * polygonOffset: true\n     *\n     * polygonOffsetFactor : -1.0, (as an example, see link above)\n     *\n     * polygonOffsetUnits: -1 (as an example, see link above)\n     */\n    polygonOffset?: boolean;\n\n    /**\n     * Sets the polygon offset factor. Default is 0.\n     */\n    polygonOffsetFactor?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon offset units. Default is 0.\n     */\n    polygonOffsetUnits?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon outline color.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a basic extruded line.\n */\nexport interface BasicExtrudedLineTechniqueParams\n    extends BaseTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are \"Basic\" and \"Standard\". Default\n     * is \"Basic\".\n     *\n     * `\"basic\"`   : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"`: Elaborate shading, with metalness, and roughness.\n     *\n     * TODO: is this TechniqueParams or Style prop ?\n     */\n    shading?: \"basic\";\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: DynamicProperty<\"None\" | \"Circle\">;\n}\n\n/**\n * Declares a a geometry as a standard extruded line.\n */\nexport interface StandardExtrudedLineTechniqueParams\n    extends StandardTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are `\"basic\"` and `\"standard\"`.\n     * Default is `\"basic\"`.\n     *\n     * `\"basic\"` : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"` : Elaborate shading, with metalness, and roughness.\n     */\n    shading: \"standard\";\n    /**\n     * Width of a line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: DynamicProperty<\"None\" | \"Circle\">;\n}\n\n/**\n * Declares a a geometry as a solid line.\n */\nexport interface SolidLineTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Color of a line outline in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    outlineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    // TODO: Make pixel units default.\n    /**\n     * @deprecated Specify metrics units as part of the value instead.\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     */\n    metricUnit?: string;\n    /**\n     * Width of a line in `metricUnit` for different zoom levels.\n     */\n    lineWidth: DynamicProperty<StyleLength>;\n    /**\n     * Outline width of a line in `metricUnit`s for different zoom levels.\n     */\n    outlineWidth?: DynamicProperty<StyleLength>;\n    /**\n     * Clip the line outside the tile if `true`.\n     */\n    clipping?: DynamicProperty<boolean>;\n    /**\n     * Describes line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`).\n     * Default is `\"Round\"`.\n     */\n    caps?: DynamicProperty<LineCaps>;\n    /**\n     * Color of secondary line geometry in hexadecimal or CSS-style notation, for example:\n     * `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    secondaryColor?: DynamicProperty<StyleColor>;\n    /**\n     * Width of secondary line geometry in `metricUnit`s for different zoom levels.\n     */\n    secondaryWidth?: DynamicProperty<StyleLength>;\n    /**\n     * The render order of the secondary line geometry object created using this technique.\n     */\n    secondaryRenderOrder?: DynamicProperty<number>;\n    /**\n     * Describes secondary line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`,\n     * `\"TriangleIn\"`).\n     * Default is `\"Round\"`.\n     */\n    secondaryCaps?: DynamicProperty<LineCaps>;\n    /**\n     * Describes the category of the secondary geometry object created using this technique.\n     */\n    secondaryCategory?: DynamicProperty<string>;\n    /**\n     * Describes the starting drawing position for the line (in the range [0...1]).\n     * Default is `0.0`.\n     */\n    drawRangeStart?: number;\n    /**\n     * Describes the ending drawing position for the line (in the range [0...1]).\n     * Default is `1.0`.\n     */\n    drawRangeEnd?: number;\n    /**\n     * Describes line dash type (`\"Round\"`, `\"Square\"`, `\"Diamond\"`).\n     * Default is `\"Square\"`.\n     */\n    dashes?: DynamicProperty<LineDashes>;\n    /**\n     * Color of a line dashes in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    dashColor?: DynamicProperty<StyleColor>;\n    /**\n     * Length of a line in meters for different zoom levels.\n     */\n    dashSize?: DynamicProperty<StyleLength>;\n    /**\n     * Size of a gap between lines in meters for different zoom levels.\n     */\n    gapSize?: DynamicProperty<StyleLength>;\n    /**\n     * Size in world units how far to offset the line perpendicular to its direction.\n     */\n    offset?: DynamicProperty<number>;\n}\n\n/**\n * Technique used to draw filled polygons.\n */\nexport interface FillTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth?: DynamicProperty<number>;\n}\n\n/**\n * Technique used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport interface ExtrudedPolygonTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Renders the footprint lines if set to 'true'.\n     */\n    footprint?: boolean;\n    /**\n     * Set to a negative value to remove all the vertical lines, and to a value between 0.0 and 1.0\n     * to modulate the amount of vertical lines rendered.\n     */\n    maxSlope?: number;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Mix value between the lineColor(0.0) and the geometry's vertex colors(1.0).\n     */\n    lineColorMix?: number;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n\n    /**\n     * Height above ground in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"get\", \"height\"]`.\n     */\n    height?: DynamicProperty<number>;\n\n    /**\n     * Height of \"floor\" of extruded polygon in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"number\", [\"get\", \"min_height\"], 0]`.\n     */\n    floorHeight?: DynamicProperty<number>;\n\n    /**\n     * In some data sources, for example Tilezen, building extrusion information might be missing.\n     * This attribute allows to define a default height of an extruded polygon in the theme.\n     *\n     * @deprecated use [[height]]\n     */\n    defaultHeight?: number;\n\n    /**\n     * Default color used if feature doesn't provide color attribute\n     * and [[MapEnv]] did not return it too.\n     * @format color-hex\n     */\n    defaultColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * If `true`, the height of the extruded buildings will not be modified by the mercator\n     * projection distortion that happens around the poles.\n     *\n     * @default `false`\n     */\n    constantHeight?: boolean;\n\n    /**\n     * If `true`, wall geometry will is added along the tile boundaries. Note, this causes artifacts\n     * when used with shadows, so it should be known in advance that shadows won't be enabled.\n     * @default `false`\n     */\n    boundaryWalls?: boolean;\n\n    /**\n     * Animate the extrusion of the buildings if set to `true`.\n     */\n    animateExtrusion?: DynamicProperty<boolean>;\n\n    /**\n     * Duration of the building's extrusion in milliseconds\n     */\n    animateExtrusionDuration?: number;\n\n    /**\n     * Control rendering of depth prepass before the actual geometry.\n     *\n     * Depth prepass is a method to render translucent meshes, hence only the visible front faces of\n     * a mesh are actually rendered, removing artifacts caused by blending with internal faces of\n     * the mesh. This method is used for drawing translucent buildings over map background.\n     *\n     * By default, each [[DataSource]] determines how/if enable the depth pre-pass. A value of\n     * `false` forcefully disables depth prepass.\n     */\n    enableDepthPrePass?: boolean;\n}\n\nexport interface ShaderTechniqueMaterialParameters {\n    [name: string]: any;\n}\n\n/**\n * Special technique for user-defined shaders. See\n * https://threejs.org/docs/#api/harp-materials/ShaderMaterial for details.\n */\nexport interface ShaderTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Parameters for shader. See `THREE.ShaderMaterialParameters`.\n     */\n    params: ShaderTechniqueMaterialParameters;\n\n    /**\n     * Type of primitive for the shader technique. Valid values are \"point\" | \"line\" | \"segments\" |\n     * \"mesh\"\n     */\n    primitive: \"point\" | \"line\" | \"segments\" | \"mesh\";\n\n    /**\n     * Set to 'true' if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     * See https://threejs.org/docs/#api/en/materials/Material.transparent.\n     */\n    transparent?: boolean;\n\n    [name: string]: any;\n}\n\n/**\n * Technique used to render a terrain geometry with a texture.\n * When using this technique, the datasource will produce texture coordinates in\n * local tile space (i.e. [0,0] at south-west and [1,1] at north-east tile corner).\n */\nexport interface TerrainTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Colors to be applied at different heights (as a results of a `displacementMap`).\n     */\n    heightBasedColors?: HeightBasedColors;\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the interpolation method used to\n     * generate the height-based gradient texture (defaults to `Discrete`).\n     */\n    heightGradientInterpolation?: \"Discrete\" | \"Linear\" | \"Cubic\";\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the width (in pixels) of the generated\n     * gradient texture (defaults to `128`).\n     */\n    heightGradientWidth?: number;\n}\n\n/**\n * Render geometry as a text.\n */\nexport interface TextTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (depreacted);\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true;\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true;\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language;\n     *  - `[\"get\", \"name\"]`.\n     *\n     * See [[ExtendedTileInfo.getFeatureText]].\n     */\n    text?: DynamicProperty<string>;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of text, defaults to `0`. Elements with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number;\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number;\n    /**\n     * Scaling factor of the text. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `true`, icon is allowed to overlap other labels or icons of lower priority.\n     * @default `false`\n     */\n    mayOverlap?: boolean;\n    /**\n     * If `true`, element will reserve screen space, other markers of lower priority will not be\n     * able to overlap.\n     * @default `true`\n     */\n    reserveSpace?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: number;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: number;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n}\n\n/**\n * Buffer holding a texture.\n */\nexport interface TextureBuffer {\n    /**\n     * Buffer containing the (compressed) image or the raw texture data.\n     */\n    buffer: ArrayBuffer;\n\n    /**\n     * Mime type of the image or 'image/raw' in case of raw texture data.\n     */\n    type: string;\n\n    /**\n     * Properties for creating a three.js DataTexture\n     * (https://threejs.org/docs/#api/en/textures/DataTexture).\n     */\n    dataTextureProperties?: DataTextureProperties;\n}\n\n/**\n * Type guard to check if an object is an instance of `TextureBuffer`.\n */\nexport function isTextureBuffer(object: any): object is TextureBuffer {\n    return object && object.buffer && typeof object.type === \"string\";\n}\n\n/**\n * Properties of a DataTexture (https://threejs.org/docs/#api/en/textures/DataTexture).\n */\nexport interface DataTextureProperties {\n    width: number;\n    height: number;\n\n    format?: PixelFormat;\n    type?: TextureDataType;\n}\n\n/**\n * Properties of a Texture (https://threejs.org/docs/#api/en/textures/Texture).\n */\nexport interface TextureProperties {\n    /**\n     * Texture horizontal wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapS.\n     */\n    wrapS?: WrappingMode;\n\n    /**\n     * Texture vertical wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapT.\n     */\n    wrapT?: WrappingMode;\n\n    /**\n     * Texture magnification filter.\n     */\n    magFilter?: MagFilter;\n\n    /**\n     * Texture minification filter.\n     */\n    minFilter?: MinFilter;\n\n    /**\n     * Flip texture vertically.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.flipY.\n     */\n    flipY?: boolean;\n\n    /**\n     * Texture horizontal repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatU?: number;\n\n    /**\n     * Texture vertical repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatV?: number;\n}\n\n/**\n * Interface containing the definition of different colors to be used at different heights with the\n * [[TerrainTechnique]].\n */\nexport interface HeightBasedColors {\n    heightArray: number[];\n    colorArray: string[];\n}\n\nexport type PixelFormat =\n    | \"Alpha\"\n    | \"RGB\"\n    | \"RGBA\"\n    | \"Luminance\"\n    | \"LuminanceAlpha\"\n    | \"RGBE\"\n    | \"Depth\"\n    | \"DepthStencil\"\n    | \"Red\";\n\nexport type TextureDataType =\n    | \"UnsignedByte\"\n    | \"Byte\"\n    | \"Short\"\n    | \"UnsignedShort\"\n    | \"Int\"\n    | \"UnsignedInt\"\n    | \"Float\"\n    | \"HalfFloat\";\n\n/**\n * Available texture wrapping modes.\n */\nexport type WrappingMode = \"clamp\" | \"repeat\" | \"mirror\";\n\n/**\n * Available texture magnification filters.\n */\nexport type MagFilter = \"nearest\" | \"linear\";\n\n/**\n * Available texture minification filters.\n */\nexport type MinFilter =\n    | \"nearest\"\n    | \"nearestMipMapNearest\"\n    | \"nearestMipMapLinear\"\n    | \"linear\"\n    | \"linearMipMapNearest\"\n    | \"linearMipMapLinear\";\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Technique } from \"./Techniques\";\n\nexport enum AttrScope {\n    /**\n     * Attributes that affect generation of feature geometry and thus must be resolved at decoding\n     * time.\n     *\n     * They may have huge variancy as they are implemented as vertex attributes or embedded in\n     * generated meshes.\n     *\n     * These attributes are available only in decoding scope.\n     */\n    FeatureGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * These attributes affect generated geometry and  thus must be resolved at decoding time.\n     *\n     * They shouldn't have big variancy and evaluate to at least dozens of values as each\n     * combination of these attributes consitute new technique and material.\n     *\n     * These attributes are available in decoding and rendering scope.\n     */\n    TechniqueGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * Attributes that can be changed in resulting object/material from frame to frame. They are\n     * usually implemented as uniforms.\n     *\n     * These attributes may be available only at rendering scope.\n     */\n    TechniqueRendering\n}\n\n/**\n * Extract  property names from [[Technique]]-like interface (excluding `name`) as union of string\n * literals.\n *\n * TechniquePropName<Base\n *\n */\nexport type TechniquePropNames<T> = T extends { name: any } ? keyof Omit<T, \"name\"> : keyof T;\n\nexport type TechniquePropScopes<T> = {\n    [P in TechniquePropNames<T>]?: AttrScope;\n};\n\nexport interface TechniqueDescriptor<T> {\n    attrTransparencyColor?: string;\n    attrScopes: TechniquePropScopes<T>;\n}\n\ntype OneThatMatches<T, P> = T extends P ? T : never;\ntype TechniqueByName<K extends Technique[\"name\"]> = OneThatMatches<Technique, { name: K }>;\n\nexport type TechniqueDescriptorRegistry = {\n    [P in Technique[\"name\"]]?: TechniqueDescriptor<TechniqueByName<P>>;\n};\n\nexport function mergeTechniqueDescriptor<T>(\n    ...descriptors: Array<Partial<TechniqueDescriptor<T>>>\n): TechniqueDescriptor<T> {\n    const result: TechniqueDescriptor<T> = {\n        attrScopes: {}\n    };\n    for (const descriptor of descriptors) {\n        if (descriptor.attrTransparencyColor !== undefined) {\n            result.attrTransparencyColor = descriptor.attrTransparencyColor;\n        }\n        if (descriptor.attrScopes !== undefined) {\n            result.attrScopes = { ...result.attrScopes, ...descriptor.attrScopes };\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { Env } from \"./Env\";\nimport { Expr, ExprScope, Value } from \"./Expr\";\nimport { Pixels } from \"./Pixels\";\nimport { RGBA } from \"./RGBA\";\nimport { parseStringEncodedNumeral } from \"./StringEncodedNumeral\";\n\nconst logger = LoggerManager.instance.create(\"PropertyValue\");\n\n/**\n * Get the value of the specified property in given `env`.\n *\n * @param property - Property of a technique.\n * @param env - The {@link Env} used to evaluate the property\n * @param cache - An optional expression cache.\n */\nexport function getPropertyValue(\n    property: Value | undefined,\n    env: Env,\n    cache?: Map<Expr, Value>\n): any {\n    if (Expr.isExpr(property)) {\n        try {\n            let r = property.evaluate(env, ExprScope.Dynamic, cache);\n\n            if (typeof r === \"string\") {\n                r = RGBA.parse(r) ?? Pixels.parse(r) ?? r;\n            }\n\n            if (r instanceof RGBA) {\n                return r.getHex();\n            } else if (r instanceof Pixels) {\n                return r.value * (Number(env.lookup(\"$pixelToMeters\")) ?? 1);\n            }\n            return r;\n        } catch (error) {\n            logger.error(\n                \"failed to evaluate expression\",\n                JSON.stringify(property),\n                \"error\",\n                String(error)\n            );\n            return null;\n        }\n    }\n\n    if (property === null || typeof property === \"undefined\") {\n        return null;\n    } else if (typeof property !== \"string\") {\n        // Property in numeric or array, etc. format\n        return property;\n    } else {\n        // Non-interpolated string encoded numeral parsing\n        const pixelToMeters = (env.lookup(\"$pixelToMeters\") as number) || 1;\n        const value = parseStringEncodedNumeral(property, pixelToMeters);\n        return value !== undefined ? value : property;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    equirectangularProjection,\n    mercatorProjection,\n    normalizedEquirectangularProjection,\n    OrientedBox3,\n    Projection,\n    sphereProjection,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\nimport { Env } from \"./Expr\";\nimport { AttrEvaluationContext, evaluateTechniqueAttr } from \"./TechniqueAttr\";\nimport {\n    IndexedTechnique,\n    isLineMarkerTechnique,\n    isPoiTechnique,\n    isTextTechnique,\n    Technique\n} from \"./Techniques\";\nimport { TileInfo } from \"./TileInfo\";\n\n/**\n * This object has geometry data in the form of geometries buffers ready to be used by WebGL.\n * These geometries are not `three.js` objects. They are pure data stored as `ArrayBuffer`s and\n * metadata describing these buffers.\n */\nexport interface DecodedTile {\n    techniques: IndexedTechnique[];\n    geometries: Geometry[];\n    pathGeometries?: PathGeometry[];\n    textPathGeometries?: TextPathGeometry[];\n    textGeometries?: TextGeometry[]; // ### deprecate\n    poiGeometries?: PoiGeometry[];\n    tileInfo?: TileInfo;\n    decodeTime?: number; // time used to decode (in ms)\n\n    /**\n     * The default bounding box in [[Tile]] is based on the geo box of the tile.\n     * For data-sources that have 3d data this is not sufficient so the data-source can provide a\n     * more accurate bounding box once the data is decoded.\n     */\n    boundingBox?: OrientedBox3;\n\n    /**\n     * Data sources not defining a bounding box may define alternatively a maximum geometry height\n     * in meters. The bounding box of the resulting tile will be extended to encompass this height.\n     */\n    maxGeometryHeight?: number;\n\n    /**\n     * Tile data Copyright holder identifiers.\n     *\n     * `id`s should be unique. It is recommended to build them from unique identifiers like\n     * registered domain names.\n     *\n     * @see [[CopyrightInfo]]\n     */\n    copyrightHolderIds?: string[];\n}\n\n/**\n * This object keeps the path of the geometry. Space of the path depends on the\n * use case, so could be either world or local tile space.\n */\nexport interface PathGeometry {\n    path: Vector3Like[];\n}\n\n/**\n * Attributes corresponding to some decoded geometry. It may be either a map\n * of multiple attributes or just a number with the geometry's feature id.\n */\nexport type AttributeMap = {} | number;\n\n/**\n * This object keeps textual data together with metadata to place it on the map.\n */\nexport interface TextPathGeometry {\n    path: number[];\n    pathLengthSqr: number;\n    text: string;\n    technique: number;\n    objInfos?: AttributeMap;\n}\n\n/**\n * Returns an array with the data type specified as parameter.\n *\n * @param attr - specifies which type of data is being stored in the array\n */\nexport function getArrayConstructor(attr: BufferElementType) {\n    switch (attr) {\n        case \"float\":\n            return Float32Array;\n        case \"uint8\":\n            return Uint8Array;\n        case \"uint16\":\n            return Uint16Array;\n        case \"uint32\":\n            return Uint32Array;\n        case \"int8\":\n            return Int8Array;\n        case \"int16\":\n            return Int16Array;\n        case \"int32\":\n            return Int32Array;\n    }\n}\n\n/**\n * Structured clone compliant WebGL interleaved buffer with its metadata attached.\n */\nexport interface InterleavedBufferAttribute {\n    buffer: ArrayBufferLike;\n    stride: number;\n    type: BufferElementType;\n    attributes: Array<{\n        name: string;\n        itemSize: number;\n        offset: number;\n    }>;\n}\n\n/**\n * Geometry types supported by [[Geometry]] objects.\n */\nexport enum GeometryType {\n    Unspecified = 0,\n    Point,\n    Line,\n    SolidLine,\n    Text,\n    TextPath,\n    ExtrudedLine,\n    Polygon,\n    ExtrudedPolygon,\n    Object3D,\n    Other = 1000\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object, consisting of buffers with\n * metadata for map features and objects for example roads, trees or parks.\n */\nexport interface Geometry {\n    type: GeometryType;\n    vertexAttributes?: BufferAttribute[];\n    interleavedVertexAttributes?: InterleavedBufferAttribute[];\n    index?: BufferAttribute;\n    edgeIndex?: BufferAttribute;\n    groups: Group[];\n    uuid?: string;\n\n    /**\n     * Optional sorted list of feature start indices. The indices point into the index attribute.\n     * Feature i starts at featureStarts[i] and ends at featureStarts[i+1]-1, except for the last\n     * feature, which ends at index[index.length-1].\n     */\n    featureStarts?: number[];\n\n    /**\n     * Optional array of objects. It can be used to pass user data from the geometry to the mesh.\n     */\n    objInfos?: AttributeMap[];\n\n    /**\n     * Optional [[Array]] of [[Attachment]]s.\n     */\n    attachments?: Attachment[];\n}\n\n/**\n * Attachments together with [[Geometry]] define the meshes and the objects\n * of a [[Scene]].\n */\nexport interface Attachment {\n    /**\n     * The unique uuid of this [[Attachment]].\n     */\n    uuid?: string;\n\n    /**\n     * The name of this [[Attachment]].\n     */\n    name?: string;\n\n    /**\n     * The index [[BufferAttribute]]. If not provided the index\n     * buffer of the [[Geometry]] will be used.\n     */\n    index?: BufferAttribute;\n\n    /**\n     * Optional additional buffer index used to create an edge object.\n     */\n    edgeIndex?: BufferAttribute;\n\n    /**\n     * The draw [[Group]]]s of this [[Attachment]].\n     */\n    groups: Group[];\n}\n\n/**\n * The data stored in Buffers' elements can be of the following elementary types: float, signed or\n * unsigned integers (8-bit, 16-bit or 32-bit long).\n */\nexport type BufferElementType =\n    | \"float\"\n    | \"uint8\"\n    | \"uint16\"\n    | \"uint32\"\n    | \"int8\"\n    | \"int16\"\n    | \"int32\";\n\n/**\n * Structured clone compliant WebGL buffer and its metadata.\n */\nexport interface BufferAttribute {\n    name: string;\n    buffer: ArrayBufferLike;\n    type: BufferElementType;\n    itemCount: number;\n    normalized?: boolean;\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with text to be rendered.\n * It is composed of buffers with metadata for text objects.\n */\nexport interface TextGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    technique?: number;\n    stringCatalog?: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with points of interest (POIs)\n * to be rendered. It is composed of buffers with metadata for POI objects.\n */\nexport interface PoiGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    /**\n     * Names of the image texture or the name of the POI as indices into the array `stringCatalog`.\n     */\n    imageTextures?: number[];\n    technique?: number;\n    stringCatalog?: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n    // Angle in degrees from north clockwise specifying the directions the icons can be shifted.\n    offsetDirections?: number[];\n}\n\n/**\n * Structured clone compliant WebGL group object and its metadata.\n * Its purpose is to make working with groups of objects easier.\n */\nexport interface Group {\n    start: number;\n    count: number;\n    technique: number;\n\n    /**\n     * Contains tile offsets if its [[Geometry]] has been created.\n     */\n    createdOffsets?: number[];\n}\n\n/**\n * Returns the projection object specified in the parameter.\n *\n * @param projectionName - string describing projection to be used\n */\nexport function getProjection(projectionName: string): Projection | never {\n    switch (projectionName) {\n        case \"mercator\":\n            return mercatorProjection;\n        case \"webMercator\":\n            return webMercatorProjection;\n        case \"sphere\":\n            return sphereProjection;\n        case \"normalizedEquirectangular\":\n            return normalizedEquirectangularProjection;\n        case \"equirectangular\":\n            return equirectangularProjection;\n        default:\n            throw new Error(`Unknown projection ${projectionName}`);\n    } // switch\n}\n\n/**\n * String with the projection's name.\n *\n * @param projection - `Projection` object containing the name of the projection to retrieve\n */\nexport function getProjectionName(projection: Projection): string | never {\n    if (projection === mercatorProjection) {\n        return \"mercator\";\n    } else if (projection === webMercatorProjection) {\n        return \"webMercator\";\n    } else if (projection === sphereProjection) {\n        return \"sphere\";\n    } else if (projection === normalizedEquirectangularProjection) {\n        return \"normalizedEquirectangular\";\n    } else if (projection === equirectangularProjection) {\n        return \"equirectangular\";\n    }\n    throw new Error(\"Unknown projection\");\n}\n\n/**\n * @returns Feature id from the provided attribute map.\n */\nexport function getFeatureId(attributeMap: AttributeMap | undefined): number {\n    if (attributeMap === undefined) {\n        return 0;\n    }\n\n    if (typeof attributeMap === \"number\") {\n        return attributeMap;\n    }\n\n    if (attributeMap.hasOwnProperty(\"$id\")) {\n        return (attributeMap as any).$id as number;\n    }\n\n    return 0;\n}\n\n/**\n * Determine the name of (OMV) feature. It implements the special handling required\n * to determine the text content of a feature from its tags, which are passed in as the `env`.\n *\n * @param env - Environment containing the tags from the (OMV) feature.\n * @param useAbbreviation - `true` to use the abbreviation if available.\n * @param useIsoCode - `true` to use the tag \"iso_code\".\n * @param languages - List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n *                  as the text of the string. Order reflects priority.\n */\nexport function getFeatureName(\n    env: Env,\n    basePropName: string | undefined,\n    useAbbreviation?: boolean,\n    useIsoCode?: boolean,\n    languages?: string[]\n): string | undefined {\n    let name;\n    if (basePropName === undefined) {\n        basePropName = \"name\";\n    }\n    if (useAbbreviation) {\n        const abbreviation = env.lookup(`${basePropName}:short`);\n        if (typeof abbreviation === \"string\" && abbreviation.length > 0) {\n            return abbreviation;\n        }\n    }\n    if (useIsoCode) {\n        const isoCode = env.lookup(`iso_code`);\n        if (typeof isoCode === \"string\" && isoCode.length > 0) {\n            return isoCode;\n        }\n    }\n    if (languages !== undefined) {\n        for (const lang of languages) {\n            name = env.lookup(`${basePropName}:${lang}`) || env.lookup(`${basePropName}_${lang}`);\n            if (typeof name === \"string\" && name.length > 0) {\n                return name;\n            }\n        }\n    }\n    name = env.lookup(basePropName);\n    if (typeof name === \"string\") {\n        return name;\n    }\n    return undefined;\n}\n\n/**\n * Determine the text string of the map feature. It implements the special handling required\n * to determine the text content of a feature from its tags, which are passed in as the `env`.\n *\n * @param feature - Feature, including properties from the (OMV) feature.\n * @param technique - technique defining how text should be created from feature\n * @param languages - List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n *                  as the text of the string. Order reflects priority.\n */\nexport function getFeatureText(\n    context: Env | AttrEvaluationContext,\n    technique: Technique,\n    languages?: string[]\n): string | undefined {\n    let useAbbreviation: boolean | undefined;\n    let useIsoCode: boolean | undefined;\n    const env = context instanceof Env ? context : context.env;\n    let propName: string = \"name\";\n    if (\n        isTextTechnique(technique) ||\n        isPoiTechnique(technique) ||\n        isLineMarkerTechnique(technique)\n    ) {\n        if (technique.text !== undefined) {\n            return evaluateTechniqueAttr(context, technique.text);\n        }\n        // tslint:disable-next-line: deprecation\n        if (technique.label !== undefined) {\n            // tslint:disable-next-line: deprecation\n            propName = evaluateTechniqueAttr(context, technique.label)!;\n            if (typeof propName !== \"string\") {\n                return undefined;\n            }\n        }\n        // tslint:disable-next-line: deprecation\n        useAbbreviation = technique.useAbbreviation;\n        // tslint:disable-next-line: deprecation\n        useIsoCode = technique.useIsoCode;\n    }\n\n    return getFeatureName(env, propName, useAbbreviation, useIsoCode, languages);\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * An [[Array]] following the order longitude, latitude, altitude.\n */\nexport type GeoPointLike = [number, number, number?];\n\n/**\n * Type guard to assert that `object` conforms to [[GeoPointLike]] interface.\n */\nexport function isGeoPointLike(geoPoint: any): geoPoint is GeoPointLike {\n    if (Array.isArray(geoPoint)) {\n        const [longitude, latitude, altitude] = geoPoint;\n        return (\n            typeof longitude === \"number\" &&\n            typeof latitude === \"number\" &&\n            (altitude === undefined || typeof altitude === \"number\")\n        );\n    }\n    return false;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `LatLng` like interface.\n */\nexport interface LatLngLike {\n    /** The latitude in degrees. */\n    lat: number;\n\n    /** The longitude in degrees. */\n    lng: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to {@link LatLngLike} interface.\n */\nexport function isLatLngLike(object: any): object is LatLngLike {\n    return object && typeof object.lat === \"number\" && typeof object.lng === \"number\";\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass EquirectangularProjection extends Projection {\n    static geoToWorldScale: number = 1.0 / (2.0 * Math.PI);\n    static worldToGeoScale: number = (2.0 * Math.PI) / 1.0;\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0.0;\n        result.min.y = 0.0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale / 2;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (result === undefined) {\n            /*\n             * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n             * might be a concrete class which is not available at runtime.\n             * Consider the following example:\n             *\n             *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n             *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n             *\n             * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n             */\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x =\n            (THREE.MathUtils.degToRad(geoPoint.longitude) + Math.PI) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.y =\n            (THREE.MathUtils.degToRad(geoPoint.latitude) + Math.PI * 0.5) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            (worldPoint.y * EquirectangularProjection.worldToGeoScale) / this.unitScale -\n                Math.PI * 0.5,\n            (worldPoint.x * EquirectangularProjection.worldToGeoScale) / this.unitScale - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(\n            new GeoCoordinates(geoBox.center.latitude, geoBox.center.longitude, 0)\n        );\n        const { latitudeSpanInRadians, longitudeSpanInRadians, altitudeSpan } = geoBox;\n        const sizeX = longitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        const sizeY = latitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - sizeX * 0.5 * this.unitScale;\n            result.min.y = worldCenter.y - sizeY * 0.5 * this.unitScale;\n            result.max.x = worldCenter.x + sizeX * 0.5 * this.unitScale;\n            result.max.y = worldCenter.y + sizeY * 0.5 * this.unitScale;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = sizeX * 0.5 * this.unitScale;\n            result.extents.y = sizeY * 0.5 * this.unitScale;\n            result.extents.z = Math.max(Number.EPSILON, (altitudeSpan || 0) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Equirectangular {@link Projection} used to convert geo coordinates to unit coordinates and vice\n * versa.\n */\nexport const normalizedEquirectangularProjection: Projection = new EquirectangularProjection(1);\n\n/**\n * Equirectangular {@link Projection} used to convert geo coordinates to world coordinates and vice\n * versa.\n */\nexport const equirectangularProjection: Projection = new EquirectangularProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\n/**\n *\n * https://en.wikipedia.org/wiki/Transverse_Mercator_projection\n * http://mathworld.wolfram.com/MercatorProjection.html\n *\n */\nclass TransverseMercatorProjection extends Projection {\n    /**\n     * Like in regular Mercator projection, there are two points on sphere\n     * with radius about 5 degrees, that is out of projected space.\n     *\n     *\n     * in regular Mercator these points are:\n     *     (90, any), (-90, any)\n     *\n     * and in transverse Mercator:\n     *     (0, 90), (0, -90)\n     *\n     * So, in transverse we need to compute distnce to poles, and clamp if\n     * radius is exceeded\n     */\n    static clampGeoPoint(geoPoint: GeoCoordinatesLike, _unitScale: number) {\n        const lat = geoPoint.latitude;\n        const lon = geoPoint.longitude;\n\n        const r = TransverseMercatorUtils.POLE_RADIUS;\n        const rsq = TransverseMercatorUtils.POLE_RADIUS_SQ;\n\n        const nearestQuarter = Math.round(lon / 90);\n        const deltaLon = nearestQuarter * 90 - lon;\n        if (nearestQuarter % 2 === 0 || Math.abs(deltaLon) > r) {\n            return geoPoint;\n        }\n\n        const deltaLat = lat - 0;\n        const distanceToPoleSq = deltaLon * deltaLon + deltaLat * deltaLat;\n        if (distanceToPoleSq < rsq) {\n            const distanceToPole = Math.sqrt(distanceToPoleSq);\n            const scale = (r - distanceToPole) / distanceToPole;\n            // const quarter = ((nearestQuarter % 4) + 4) % 4;\n            // const dir = quarter === 1 ? -1 : quarter === 3 ? 1 : 0;\n            const dir = 1;\n            const offsetLon = deltaLon === 0 && deltaLat === 0 ? r * dir : deltaLon;\n            return new GeoCoordinates(lat + deltaLat * scale, lon + offsetLon * scale);\n        }\n\n        return geoPoint;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    private m_phi0: number = 0;\n    private m_lambda0: number = 0;\n\n    constructor(readonly unitScale: number) {\n        super(unitScale);\n    }\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh((worldPoint.x / this.unitScale - 0.5) * 2 * Math.PI);\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        const clamped = TransverseMercatorProjection.clampGeoPoint(geoPoint, this.unitScale);\n        const normalLon = clamped.longitude / 360 + 0.5;\n        const offset = normalLon === 1 ? 0 : Math.floor(normalLon);\n        const phi = THREE.MathUtils.degToRad(clamped.latitude);\n        const lambda = THREE.MathUtils.degToRad(clamped.longitude - offset * 360) - this.m_lambda0;\n\n        const B = Math.cos(phi) * Math.sin(lambda);\n        // result.x = 1/2 * Math.log((1 + B) / (1 - B));\n        result.x = Math.atanh(B);\n        result.y = Math.atan2(Math.tan(phi), Math.cos(lambda)) - this.m_phi0;\n\n        const outScale = 0.5 / Math.PI;\n        result.x =\n            this.unitScale * (THREE.MathUtils.clamp(result.x * outScale + 0.5, 0, 1) + offset);\n        result.y = this.unitScale * THREE.MathUtils.clamp(result.y * outScale + 0.5, 0, 1);\n\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const tau = Math.PI * 2;\n        const nx = worldPoint.x / this.unitScale;\n        const ny = worldPoint.y / this.unitScale;\n        const offset = nx === 1 ? 0 : Math.floor(nx);\n        const x = tau * (nx - 0.5 - offset);\n        const y = tau * (ny - 0.5);\n        const z = worldPoint.z || 0;\n\n        const D = y + this.m_phi0;\n\n        const phi = Math.asin(Math.sin(D) / Math.cosh(x));\n        const lambda = this.m_lambda0 + Math.atan2(Math.sinh(x), Math.cos(D)) + offset * tau;\n\n        const geoPoint = GeoCoordinates.fromRadians(phi, lambda, z);\n        return geoPoint;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const { north, south, east, west } = geoBox;\n\n        const pointsToCheck = [\n            geoBox.center,\n            geoBox.northEast,\n            geoBox.southWest,\n            new GeoCoordinates(south, east),\n            new GeoCoordinates(north, west)\n        ];\n\n        const E = TransverseMercatorUtils.POLE_EDGE_DEG;\n\n        const containsWestCut = west < -90 && east > -90;\n        const containsEastCut = west < 90 && east > 90;\n        const containsCenterX = west < 0 && east > 0;\n        const containsCenterY = west < E && east > -E && north > 0 && south < 0;\n\n        if (containsWestCut) {\n            pointsToCheck.push(new GeoCoordinates(north, -90));\n            pointsToCheck.push(new GeoCoordinates(south, -90));\n        }\n\n        if (containsEastCut) {\n            pointsToCheck.push(new GeoCoordinates(north, 90));\n            pointsToCheck.push(new GeoCoordinates(south, 90));\n        }\n\n        if (containsCenterX) {\n            pointsToCheck.push(new GeoCoordinates(north, 0));\n            pointsToCheck.push(new GeoCoordinates(south, 0));\n        }\n\n        if (containsCenterY) {\n            pointsToCheck.push(new GeoCoordinates(0, west));\n            pointsToCheck.push(new GeoCoordinates(0, east));\n        }\n\n        TransverseMercatorUtils.alignLatitude(pointsToCheck, pointsToCheck[0]);\n\n        const projected = pointsToCheck.map(p => this.projectPoint(p));\n        const vx = projected.map(p => p.x);\n        const vy = projected.map(p => p.y);\n        const vz = projected.map(p => p.z);\n\n        const minX = Math.min(...vx);\n        const minY = Math.min(...vy);\n        const minZ = Math.min(...vz);\n        const maxX = Math.max(...vx);\n        const maxY = Math.max(...vy);\n        const maxZ = Math.max(...vz);\n\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = minX;\n            result.min.y = minY;\n            result.min.z = minZ;\n            result.max.x = maxX;\n            result.max.y = maxY;\n            result.max.z = maxZ;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (minX + maxX) / 2;\n            result.position.y = (minY + maxY) / 2;\n            result.position.z = (minZ + maxZ) / 2;\n            result.extents.x = (maxX - minX) / 2;\n            result.extents.y = (maxY - minY) / 2;\n            result.extents.z = (maxZ - minZ) / 2;\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /**\n     * There are 8 sub-regions on entire projection space\n     * where both longitude and latitude preserve direction.\n     * If bounding box hits more than one region, it should be splitted\n     * into sub-boxes by regions, (un)projected and then united again.\n     *\n     *\n     * directions in form [latitude / longitude]:\n     *    1 ┌─────────|─────────┐\n     *      │ dr / dl | dl / ul │\n     * 0.75 ----------|----------\n     *      │ ur / dr | ul / ur │\n     * 0.5  ----------|----------\n     *      │ ul / ur | ur / dr │\n     * 0.25 ----------|----------\n     *      │ dl / ul | dr / dl │\n     *      └─────────|─────────┘\n     *     0         0.5        1\n     *     @override\n     */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const s = this.unitScale;\n\n        const min = worldBox.min;\n        const max = worldBox.max;\n        const pointsToCheck = [\n            { x: (min.x + max.x) / 2, y: (min.y + max.y) / 2, z: 0 },\n            min,\n            max,\n            { x: min.x, y: max.y, z: 0 },\n            { x: max.x, y: min.y, z: 0 }\n        ];\n\n        const center = 0.5 * s;\n        const lowerQ = 0.25 * s;\n        const upperQ = 0.75 * s;\n\n        const containsCenterX = min.x < center && max.x > center;\n        const containsCenterY = min.y < center && max.y > center;\n        const containsLowerQY = min.y < lowerQ && max.y > lowerQ;\n        const containsUpperQY = min.y < upperQ && max.y > upperQ;\n\n        if (containsCenterY) {\n            pointsToCheck.push({ x: min.x, y: center, z: 0 });\n            pointsToCheck.push({ x: max.x, y: center, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: center, z: 0 });\n            }\n        }\n        if (containsLowerQY) {\n            pointsToCheck.push({ x: min.x, y: lowerQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: lowerQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: lowerQ, z: 0 });\n            }\n        }\n        if (containsUpperQY) {\n            pointsToCheck.push({ x: min.x, y: upperQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: upperQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: upperQ, z: 0 });\n            }\n        }\n\n        const geoPoints = pointsToCheck.map(p => this.unprojectPoint(p));\n        TransverseMercatorUtils.alignLongitude(geoPoints, geoPoints[0]);\n\n        const latitudes = geoPoints.map(g => g.latitude);\n        const longitudes = geoPoints.filter(g => Math.abs(g.latitude) < 90).map(g => g.longitude);\n        const altitudes = geoPoints.map(g => g.altitude || 0);\n\n        const minGeo = new GeoCoordinates(\n            Math.min(...latitudes),\n            Math.min(...longitudes),\n            Math.min(...altitudes)\n        );\n\n        const maxGeo = new GeoCoordinates(\n            Math.max(...latitudes),\n            Math.max(...longitudes),\n            Math.max(...altitudes)\n        );\n\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n}\n\nexport class TransverseMercatorUtils {\n    static POLE_EDGE: number = 1.4844222297453323;\n    static POLE_EDGE_DEG: number = THREE.MathUtils.radToDeg(TransverseMercatorUtils.POLE_EDGE);\n    static POLE_RADIUS: number = 90 - TransverseMercatorUtils.POLE_EDGE_DEG;\n    static POLE_RADIUS_SQ: number = Math.pow(TransverseMercatorUtils.POLE_RADIUS, 2);\n\n    /**\n     * There are two regions on projected space that have same geo coordinates,\n     * it's the entire lines   { x: [0..1], y: 0 } and { x: [0..1], y: 1 }\n     * they both have geo coordinates of   (0, [-90..+90])\n     * and should be aligned somehow to fall into first or second region\n     * to make proper bounding boxes, tile bounds, etc.\n     */\n    static alignLatitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const EPSILON = 1e-9;\n\n        for (const point of points) {\n            if (point.latitude === 0) {\n                point.latitude = referencePoint.latitude * EPSILON;\n            }\n        }\n    }\n\n    /**\n     * There are two regions on projected plane,\n     * { x: 0.5, y: [0..0.25] }    and    { x: 0.5, y: [0.75..1] }\n     * that represent longitude edge where -180 and +180 met.\n     * Points falling in this regions should be aligned to get proper boxes etc.\n     */\n    static alignLongitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const bad = referencePoint.longitude < 0 ? 180 : -180;\n        const good = referencePoint.longitude < 0 ? -180 : 180;\n\n        for (const point of points) {\n            if (point.longitude === bad) {\n                point.longitude = good;\n            }\n        }\n    }\n}\n\n/**\n * Transverse Mercator {@link Projection} used to convert geo coordinates to world coordinates\n * and vice versa.\n */\nexport const transverseMercatorProjection: Projection = new TransverseMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\nimport * as THREE from \"three\";\n\n/**\n * `FlatTileBoundingBoxGenerator` generates bounding boxes in world and geo coordinates for a given\n * TilingScheme.\n */\nexport class FlatTileBoundingBoxGenerator {\n    private readonly m_tilingScheme: TilingScheme;\n    private readonly m_worldDimensions: Vector3Like;\n    private readonly m_worldBox: Box3Like;\n    /**\n     * Creates a new `FlatTileBoundingBoxGenerator` that can generate bounding boxes for the given\n     * TilingScheme.\n     *\n     * @param tilingScheme - The {@link TilingScheme} used to compute bounding boxes.\n     * @param minElevation - The minimum elevation in meters.\n     * @param maxElevation - The maximum elevation in meters.\n     */\n    constructor(\n        readonly tilingScheme: TilingScheme,\n        readonly minElevation: number = 0,\n        readonly maxElevation: number = 0\n    ) {\n        this.m_tilingScheme = tilingScheme;\n        this.m_worldBox = tilingScheme.projection.worldExtent(minElevation, maxElevation);\n        const { min, max } = this.m_worldBox;\n        this.m_worldDimensions = { x: max.x - min.x, y: max.y - min.y, z: max.z - min.z };\n    }\n\n    /**\n     * Returns the {@link Projection} of the {@link TilingScheme}.\n     */\n    get projection(): Projection {\n        return this.m_tilingScheme.projection;\n    }\n\n    /**\n     * Returns the {@link SubdivisionScheme} of the {@link TilingScheme}.\n     */\n    get subdivisionScheme(): SubdivisionScheme {\n        return this.m_tilingScheme.subdivisionScheme;\n    }\n\n    /**\n     * Returns the bounding box in world coordinates of the given {@link TileKey}.\n     *\n     * Example:\n     * ```typescript\n     * const worldBounds = new THREE.Box3();\n     * generator.getWorldBox(geoBox, worldBounds);\n     * console.log(worldBounds.getCenter());\n     * ```\n     *\n     * @param tileKey - The TileKey.\n     * @param result - The optional object used to store the resulting bounding box in world\n     * coordinates.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        const level = tileKey.level;\n        const levelDimensionX = this.subdivisionScheme.getLevelDimensionX(level);\n        const levelDimensionY = this.subdivisionScheme.getLevelDimensionY(level);\n        const sizeX = this.m_worldDimensions.x / levelDimensionX;\n        const sizeY = this.m_worldDimensions.y / levelDimensionY;\n        const originX = this.m_worldBox.min.x + sizeX * tileKey.column;\n        const originY = this.m_worldBox.min.y + sizeY * tileKey.row;\n\n        if (!result) {\n            result = new THREE.Box3();\n        }\n\n        result.min.x = originX;\n        result.min.y = originY;\n        result.min.z = this.m_worldBox.min.z;\n        result.max.x = originX + sizeX;\n        result.max.y = originY + sizeY;\n        result.max.z = this.m_worldBox.max.z;\n        return result;\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given {@link TileKey}.\n     *\n     * Example:\n     * ```typescript\n     * const geoBox = generator.getGeoBox(worldBounds);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tileKey - The {@link TileKey}.\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        const worldBox = this.getWorldBox(tileKey);\n        return this.projection.unprojectBox(worldBox);\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass HalfQuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n    getSubdivisionY(level: number): number {\n        return level === 0 ? 1 : 2;\n    }\n    getLevelDimensionX(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n    getLevelDimensionY(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return level !== 0 ? 1 << (level - 1) : 1;\n    }\n}\n\n/**\n * A {@link SubdivisionScheme} used to represent half quadtrees.\n * This particular subdivision scheme is\n * used by the HERE tiling scheme.\n */\nexport const halfQuadTreeSubdivisionScheme: SubdivisionScheme = new HalfQuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TileKey } from \"./TileKey\";\n\nexport class SubTiles implements Iterable<TileKey> {\n    constructor(public tileKey: TileKey, public sizeX: number, public sizeY: number) {}\n\n    [Symbol.iterator](): Iterator<TileKey> {\n        return this.sizeX === 2 && this.sizeY === 2\n            ? SubTiles.ZCurveIterator(this.tileKey)\n            : SubTiles.RowColumnIterator(this.tileKey, this.sizeX, this.sizeY);\n    }\n}\n\nexport namespace SubTiles {\n    export function* RowColumnIterator(\n        parentKey: TileKey,\n        sizeX: number,\n        sizeY: number\n    ): Iterator<TileKey> {\n        for (let y = 0; y < sizeY; y++) {\n            for (let x = 0; x < sizeX; x++) {\n                yield TileKey.fromRowColumnLevel(\n                    parentKey.row * sizeY + y,\n                    parentKey.column * sizeX + x,\n                    parentKey.level + 1\n                );\n            }\n        }\n    }\n\n    export function* ZCurveIterator(parentKey: TileKey): Iterator<TileKey> {\n        // tslint:disable:no-bitwise\n        for (let i = 0; i < 4; i++) {\n            yield TileKey.fromRowColumnLevel(\n                (parentKey.row << 1) | (i >> 1),\n                (parentKey.column << 1) | (i & 1),\n                parentKey.level + 1\n            );\n        }\n        // tslint:enableno-bitwise\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\nexport class TileKeyUtils {\n    static geoCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        geoPoint: GeoCoordinatesLike,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const worldPoint = projection.projectPoint(geoPoint);\n\n        return this.worldCoordinatesToTileKey(tilingScheme, worldPoint, level);\n    }\n\n    static worldCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        worldPoint: Vector3Like,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const subdivisionScheme = tilingScheme.subdivisionScheme;\n\n        const cx = subdivisionScheme.getLevelDimensionX(level);\n        const cy = subdivisionScheme.getLevelDimensionY(level);\n\n        const { min, max } = projection.worldExtent(0, 0);\n        const worldSizeX = max.x - min.x;\n        const worldSizeY = max.y - min.y;\n\n        if (worldPoint.x < min.x || worldPoint.x > max.x) {\n            return null;\n        }\n\n        if (worldPoint.y < min.y || worldPoint.y > max.y) {\n            return null;\n        }\n\n        const column = Math.min(cx - 1, Math.floor((cx * (worldPoint.x - min.x)) / worldSizeX));\n        const row = Math.min(cy - 1, Math.floor((cy * (worldPoint.y - min.y)) / worldSizeY));\n\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    static geoRectangleToTileKeys(\n        tilingScheme: TilingScheme,\n        geoBox: GeoBox,\n        level: number\n    ): TileKey[] {\n        const wrap = (value: number, lower: number, upper: number) => {\n            if (value < lower) {\n                return upper - ((lower - value) % (upper - lower));\n            }\n\n            return lower + ((value - lower) % (upper - lower));\n        };\n\n        const clamp = (x: number, minVal: number, maxVal: number) => {\n            return Math.min(Math.max(x, minVal), maxVal);\n        };\n\n        // Clamp at the poles and wrap around the international date line.\n        const southWestLongitude = wrap(geoBox.southWest.longitudeInRadians, -Math.PI, Math.PI);\n        const southWestLatitude = clamp(\n            geoBox.southWest.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const northEastLongitude = wrap(geoBox.northEast.longitudeInRadians, -Math.PI, Math.PI);\n        const northEastLatitude = clamp(\n            geoBox.northEast.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const minTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(southWestLatitude, southWestLongitude),\n            level\n        );\n        const maxTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(northEastLatitude, northEastLongitude),\n            level\n        );\n        const columnCount = tilingScheme.subdivisionScheme.getLevelDimensionX(level);\n\n        if (!minTileKey || !maxTileKey) {\n            throw new Error(\"Invalid coordinates\");\n        }\n\n        const minColumn = minTileKey.column;\n        let maxColumn = maxTileKey.column;\n\n        // wrap around case\n        if (southWestLongitude > northEastLongitude) {\n            if (maxColumn !== minColumn) {\n                maxColumn += columnCount;\n            } else {\n                // do not duplicate\n                maxColumn += columnCount - 1;\n            }\n        }\n\n        const minRow = Math.min(minTileKey.row, maxTileKey.row);\n        const maxRow = Math.max(minTileKey.row, maxTileKey.row);\n\n        const keys = new Array<TileKey>();\n\n        for (let row = minRow; row <= maxRow; ++row) {\n            for (let column = minColumn; column <= maxColumn; ++column) {\n                keys.push(TileKey.fromRowColumnLevel(row, column % columnCount, level));\n            }\n        }\n\n        return keys;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { SubTiles } from \"./SubTiles\";\nimport { TileKey } from \"./TileKey\";\n\nexport class TileTreeTraverse {\n    private m_subdivisionScheme: SubdivisionScheme;\n\n    constructor(subdivisionScheme: SubdivisionScheme) {\n        this.m_subdivisionScheme = subdivisionScheme;\n    }\n\n    subTiles(tileKey: TileKey): Iterable<TileKey> {\n        const divX = this.m_subdivisionScheme.getSubdivisionX(tileKey.level);\n        const divY = this.m_subdivisionScheme.getSubdivisionY(tileKey.level);\n\n        return new SubTiles(tileKey, divX, divY);\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, Expr, MapEnv, Value } from \"./Expr\";\nimport { getPropertyValue } from \"./PropertyValue\";\n\nexport interface AttrEvaluationContext {\n    /**\n     * Expression evaluation environment containing variable bindings.\n     */\n    env: MapEnv;\n\n    /**\n     * Optional, cache of expression results.\n     *\n     * @see [[Expr.evaluate]]\n     */\n    cachedExprResults?: Map<Expr, Value>;\n}\n\n/**\n * Evaluate feature attr _without_ default value.\n *\n * @returns actual value or `undefined`\n */\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined\n): T | undefined;\n\n/**\n * Evaluate feature attr _with_ default value.\n *\n * @returns actual value or `defaultValue`\n */\nexport function evaluateTechniqueAttr<T extends Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined,\n    defaultValue: T\n): T;\n\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: Value | undefined,\n    defaultValue?: T\n): T | undefined {\n    if (attrValue === undefined) {\n        return defaultValue;\n    }\n\n    const result = Env.isEnv(context)\n        ? getPropertyValue(attrValue, context)\n        : getPropertyValue(attrValue, context.env, context.cachedExprResults);\n\n    return result ?? defaultValue;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/ThemedTileDecoder\";\nexport * from \"./lib/TileDecoderService\";\nexport * from \"./lib/TilerService\";\nexport * from \"./lib/WorkerService\";\nexport * from \"./lib/WorkerServiceManager\";\nexport * from \"./lib/GeoJsonTiler\";\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson, ITiler } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\n\n// tslint:disable-next-line:no-var-requires\nconst geojsonvtExport = require(\"geojson-vt\");\n// to be able to run tests on nodejs\nconst geojsonvt = geojsonvtExport.default || geojsonvtExport;\n\ninterface GeoJsonVtIndex {\n    geojson: GeoJson;\n    getTile(level: number, column: number, row: number): any;\n}\n\nexport class GeoJsonTiler implements ITiler {\n    indexes: Map<string, GeoJsonVtIndex>;\n\n    constructor() {\n        this.indexes = new Map();\n    }\n\n    dispose() {\n        /* */\n    }\n\n    async connect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    async registerIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (this.indexes.has(indexId)) {\n            return;\n        }\n        return this.updateIndex(indexId, input);\n    }\n\n    async updateIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (input instanceof URL) {\n            const response = await fetch(input.href);\n            if (!response.ok) {\n                throw new Error(\n                    `GeoJsonTiler: Unable to fetch ${input.href}: ${response.statusText}`\n                );\n            }\n            input = await response.json();\n        } else {\n            input = input as GeoJson;\n        }\n\n        const index = geojsonvt(input, {\n            maxZoom: 20, // max zoom to preserve detail on\n            indexMaxZoom: 5, // max zoom in the tile index\n            indexMaxPoints: 100000, // max number of points per tile in the tile index\n            tolerance: 3, // simplification tolerance (higher means simpler)\n            extent: 4096, // tile extent\n            buffer: 0, // tile buffer on each side\n            lineMetrics: false, // whether to calculate line metrics\n            promoteId: null, // name of a feature property to be promoted to feature.id\n            generateId: true, // whether to generate feature ids. Cannot be used with promoteId\n            debug: 0 // logging level (0, 1 or 2)\n        });\n        index.geojson = input;\n\n        this.indexes.set(indexId, index);\n    }\n\n    async getTile(indexId: string, tileKey: TileKey): Promise<{}> {\n        const index = this.indexes.get(indexId);\n        if (index === undefined) {\n            throw new Error(\"Tile not found\");\n        }\n        const tile = index.getTile(tileKey.level, tileKey.column, tileKey.row);\n        if (tile !== null) {\n            tile.layer = indexId;\n            for (const feature of tile.features) {\n                feature.originalGeometry = this.getOriginalGeometry(feature, index.geojson);\n            }\n        }\n        return tile || {};\n    }\n\n    private getOriginalGeometry(feature: any, geojson: GeoJson): any {\n        switch (geojson.type) {\n            case \"Point\":\n            case \"MultiPoint\":\n            case \"LineString\":\n            case \"MultiLineString\":\n            case \"Polygon\":\n            case \"MultiPolygon\":\n            case \"GeometryCollection\":\n                return geojson;\n            case \"Feature\":\n                return geojson.geometry;\n            case \"FeatureCollection\":\n                return geojson.features[feature.id].geometry;\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    FeatureGeometry,\n    GeometryCollection,\n    MapEnv,\n    ValueMap\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport { GeoCoordinates } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport { Vector2 } from \"three\";\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\nimport { isArrayBufferLike } from \"./OmvUtils\";\n\nconst VT_JSON_EXTENTS = 4096;\n\ntype VTJsonPosition = [number, number];\n\nenum VTJsonGeometryType {\n    Unknown,\n    Point,\n    LineString,\n    Polygon\n}\n\ninterface VTJsonFeatureInterface {\n    geometry: VTJsonPosition[] | VTJsonPosition[][];\n    originalGeometry: FeatureGeometry | GeometryCollection;\n    id: string;\n    tags: ValueMap;\n    type: VTJsonGeometryType;\n}\n\ninterface VTJsonSourceInterface {\n    geometry: number[];\n    length: number;\n    id: string;\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    tags: ValueMap;\n    type: string;\n}\n\ninterface VTJsonTileInterface {\n    features: VTJsonFeatureInterface[];\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    numFeatures: number;\n    numPoints: number;\n    numSimplified: number;\n    source: VTJsonSourceInterface[];\n    transformed: boolean;\n    x: number;\n    y: number;\n    z: number;\n    layer: string;\n}\n\n/**\n * [[OmvDataAdapter]] id for [[VTJsonDataAdapter]].\n */\nexport const VTJsonDataAdapterId: string = \"vt-json\";\n\n/**\n * The class [[VTJsonDataAdapter]] converts VT-json data to geometries for the given\n * [[IGeometryProcessor]].\n */\nexport class VTJsonDataAdapter implements OmvDataAdapter {\n    id = VTJsonDataAdapterId;\n\n    constructor(\n        readonly m_processor: IGeometryProcessor,\n        private m_dataFilter?: OmvFeatureFilter,\n        readonly m_logger?: ILogger\n    ) {}\n\n    get dataFilter(): OmvFeatureFilter | undefined {\n        return this.m_dataFilter;\n    }\n\n    set dataFilter(dataFilter: OmvFeatureFilter | undefined) {\n        this.m_dataFilter = dataFilter;\n    }\n\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        if (isArrayBufferLike(data)) {\n            return false;\n        }\n\n        const tile = data as VTJsonTileInterface;\n        if (\n            tile.features === undefined ||\n            tile.source === undefined ||\n            tile.x === undefined ||\n            tile.y === undefined ||\n            tile.z === undefined\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    process(tile: VTJsonTileInterface, decodeInfo: DecodeInfo) {\n        const { tileKey } = decodeInfo;\n        for (const feature of tile.features) {\n            const env = new MapEnv({\n                $layer: tile.layer,\n                $geometryType: this.convertGeometryType(feature.type),\n                $level: tileKey.level,\n                $zoom: Math.max(0, tileKey.level - (this.m_processor.storageLevelOffset || 0)),\n                $id: feature.id,\n                ...feature.tags\n            });\n\n            switch (feature.type) {\n                case VTJsonGeometryType.Point: {\n                    for (const pointGeometry of feature.geometry) {\n                        const x = (pointGeometry as VTJsonPosition)[0];\n                        const y = (pointGeometry as VTJsonPosition)[1];\n\n                        const position = new Vector2(x, y);\n\n                        this.m_processor.processPointFeature(\n                            tile.layer,\n                            VT_JSON_EXTENTS,\n                            [position],\n                            env,\n                            tileKey.level\n                        );\n                    }\n                    break;\n                }\n                case VTJsonGeometryType.LineString: {\n                    let untiledPositions: GeoCoordinates[] | undefined;\n                    if (feature.originalGeometry.type === \"LineString\") {\n                        untiledPositions = [];\n                        for (const [x, y] of feature.originalGeometry.coordinates) {\n                            untiledPositions.push(new GeoCoordinates(y, x));\n                        }\n                    } else if (feature.originalGeometry.type === \"MultiLineString\") {\n                        untiledPositions = [];\n                        for (const lineGeometry of feature.originalGeometry\n                            .coordinates as VTJsonPosition[][]) {\n                            for (const [x, y] of lineGeometry) {\n                                untiledPositions.push(new GeoCoordinates(y, x));\n                            }\n                        }\n                    }\n\n                    for (const lineGeometry of feature.geometry as VTJsonPosition[][]) {\n                        const line: ILineGeometry = { positions: [], untiledPositions };\n                        for (const [x, y] of lineGeometry) {\n                            const position = new Vector2(x, y);\n                            line.positions.push(position);\n                        }\n\n                        this.m_processor.processLineFeature(\n                            tile.layer,\n                            VT_JSON_EXTENTS,\n                            [line],\n                            env,\n                            tileKey.level\n                        );\n                    }\n                    break;\n                }\n                case VTJsonGeometryType.Polygon: {\n                    const polygon: IPolygonGeometry = { rings: [] };\n                    for (const outline of feature.geometry as VTJsonPosition[][]) {\n                        const ring: Vector2[] = [];\n                        for (const [currX, currY] of outline) {\n                            const position = new Vector2(currX, currY);\n                            ring.push(position);\n                        }\n                        polygon.rings.push(ring);\n                    }\n\n                    this.m_processor.processPolygonFeature(\n                        tile.layer,\n                        VT_JSON_EXTENTS,\n                        [polygon],\n                        env,\n                        tileKey.level\n                    );\n\n                    break;\n                }\n                case VTJsonGeometryType.Unknown: {\n                    break;\n                }\n            }\n        }\n    }\n\n    private convertGeometryType(type: VTJsonGeometryType): string {\n        switch (type) {\n            case VTJsonGeometryType.Point:\n                return \"point\";\n            case VTJsonGeometryType.LineString:\n                return \"line\";\n            case VTJsonGeometryType.Polygon:\n                return \"polygon\";\n            default:\n                return \"unknown\";\n        }\n    }\n}\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeometryKind, GeometryKindSet } from \"@here/harp-datasource-protocol\";\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport {\n    OmvFeatureFilterDescription,\n    OmvFilterDescription,\n    OmvFilterFeatureAttribute,\n    OmvFilterString,\n    OmvGeometryType,\n    OmvLayerFilterDescription\n} from \"./OmvDecoderDefs\";\n\n/**\n * The `OmvFeatureFilter` is designed to work in an `OmvVisitor`/`visitOmv` combination (for\n * example, `OmvDecoder`). Returning `false` from any of the calls terminates processing of that\n * layer or feature.\n *\n * The `OmvFeatureFilter` is an \"early-opt-out\" filter, which cannot filter individual features,\n * because at that point the features are not really decoded. Use the [[OmvFeatureModifier]] to\n * filter for individual features.\n */\nexport interface OmvFeatureFilter {\n    /**\n     * Returns `true` if the filter contains rules for specific kinds.\n     */\n    hasKindFilter: boolean;\n\n    /**\n     * Return `false` if the layer should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param level - Level of tile.\n     */\n    wantsLayer(layer: string, level: number): boolean;\n\n    /**\n     * Return `false` if the point feature should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param feature - Current feature.\n     * @param level - Level of tile.\n     */\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the line feature should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param feature - Current feature.\n     * @param level - Level of tile.\n     */\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the polygon feature should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param feature - Current feature.\n     * @param level - Level of tile.\n     */\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if kind of object is not enabled and the geometry should not be created.\n     *\n     * @param {(string | string[])} kind Tag \"kind\" of the tag.\n     * @returns {boolean}\n     */\n    wantsKind(kind: string | string[]): boolean;\n}\n\n/**\n * The `OmvFeatureModifier` can be used to filter individual features. It gets passed in the [[Env]]\n * of the feature, which contains all the values that can be searched for in a style. If a filter\n * function returns false, the feature is ignored, and no geometry is being created.\n *\n * In addition to pure filtering, the `OmvFeatureModifier` can also modify the [[Env]] of the\n * feature, or even add new properties to the feature, for example, traffic states. The\n * `OmvFeatureModifier` is executed before the styles are selected, so the geometry is created with\n * the modified feature properties.\n */\nexport interface OmvFeatureModifier {\n    /**\n     * Check if the point feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of point feature.\n     * @param level - Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPointFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the line feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of line feature.\n     * @param level - Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessLineFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the polygon feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of polygon feature.\n     * @param level - Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPolygonFeature(layer: string, env: MapEnv, level: number): boolean;\n}\n\n/**\n * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as well\n * as an [[OmvFeatureModifier]].\n *\n */\nexport class OmvFeatureFilterDescriptionBuilder {\n    private m_processLayersDefault: boolean = true;\n    private m_processPointsDefault: boolean = true;\n    private m_processLinesDefault: boolean = true;\n    private m_processPolygonsDefault: boolean = true;\n\n    private readonly m_layersToProcess = new Array<OmvLayerFilterDescription>();\n    private readonly m_layersToIgnore = new Array<OmvLayerFilterDescription>();\n    private readonly m_pointsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_ignoredPoints = new Array<OmvFilterDescription>();\n    private readonly m_linesToProcess = new Array<OmvFilterDescription>();\n    private readonly m_linesToIgnore = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToIgnore = new Array<OmvFilterDescription>();\n\n    private m_kindsToProcess: string[] = [];\n    private m_kindsToIgnore: string[] = [];\n\n    /**\n     * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as\n     * well as an [[OmvFeatureModifier]].\n     *\n     * @param processLayersDefault - If `true`, all unspecified layers will be processed.\n     * If `false`, all unspecified layers will be ignored.\n     * @param processPointsDefault - If `true`, all unspecified point features will be processed. If\n     * `false`, all unspecified point features will be ignored.\n     * @param processLinesDefault - If `true`, all unspecified line features will be processed. If\n     * `false`, all unspecified line features will be ignored.\n     * @param processPolygonsDefault - If `true`, all unspecified polygon features will be\n     * processed. If `false`, all unspecified polygon features will be ignored.\n     */\n    constructor(\n        options?: OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions\n    ) {\n        if (options) {\n            this.m_processLayersDefault =\n                options.processLayersDefault !== undefined ? options.processLayersDefault : true;\n            this.m_processPointsDefault =\n                options.processPointsDefault !== undefined ? options.processPointsDefault : true;\n            this.m_processLinesDefault =\n                options.processLinesDefault !== undefined ? options.processLinesDefault : true;\n            this.m_processPolygonsDefault =\n                options.processPolygonsDefault !== undefined\n                    ? options.processPolygonsDefault\n                    : true;\n        }\n    }\n\n    /**\n     * Add a layer that should be processed.\n     *\n     * @param layer - Layer name to be matched.\n     * @param match - Match condition.\n     */\n    processLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToProcess.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a layer that should be ignored.\n     *\n     * @param layer - Layer name to be matched.\n     * @param match - Match condition.\n     */\n    ignoreLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToIgnore.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a valid point feature.\n     *\n     * @param options - Feature options.\n     */\n    processPoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add valid point features.\n     *\n     * @param options - Multi feature options.\n     */\n    processPoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add a point feature that should be ignored.\n     *\n     * @param options - Feature options.\n     */\n    ignorePoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add point features that should be ignored.\n     *\n     * @param options - Multi feature options.\n     */\n    ignorePoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add a valid line feature.\n     *\n     * @param options - Feature options.\n     */\n    processLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Add valid line features.\n     *\n     * @param options - Multi feature options.\n     */\n    processLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Ignore a line feature.\n     *\n     * @param options - Feature options.\n     */\n    ignoreLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Ignore line features.\n     *\n     * @param options - Multi feature options.\n     */\n    ignoreLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Add a valid polygon feature.\n     *\n     * @param options - Feature options.\n     */\n    processPolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Add valid polygon features.\n     *\n     * @param options - Multi feature options.\n     */\n    processPolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Ignore a valid polygon feature.\n     *\n     * @param options - Feature options.\n     */\n    ignorePolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Ignore polygon features.\n     *\n     * @param options - Multi feature options.\n     */\n    ignorePolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Add all the specified strings as \"enabledKinds\".\n     *\n     * @param {string[]} enabledKinds List of kinds that should be generated.\n     */\n    processKinds(enabledKinds: string[]) {\n        this.m_kindsToProcess = this.m_kindsToProcess.concat(enabledKinds);\n    }\n\n    /**\n     * Add all the specified strings as \"disabledKinds\".\n     *\n     * @param {string[]} disabledKinds List of kinds that should _not_ be generated.\n     */\n    ignoreKinds(disabledKinds: string[]) {\n        this.m_kindsToIgnore = this.m_kindsToIgnore.concat(disabledKinds);\n    }\n\n    /**\n     * Create a filter description that can be passed as an option to the [[OmvDataSource]].\n     */\n    createDescription(): OmvFeatureFilterDescription {\n        return {\n            processLayersDefault: this.m_processLayersDefault,\n            processPointsDefault: this.m_processPointsDefault,\n            processLinesDefault: this.m_processLinesDefault,\n            processPolygonsDefault: this.m_processPolygonsDefault,\n\n            layersToProcess: this.m_layersToProcess,\n            layersToIgnore: this.m_layersToIgnore,\n            pointsToProcess: this.m_pointsToProcess,\n            pointsToIgnore: this.m_ignoredPoints,\n            linesToProcess: this.m_linesToProcess,\n            linesToIgnore: this.m_linesToIgnore,\n            polygonsToProcess: this.m_polygonsToProcess,\n            polygonsToIgnore: this.m_polygonsToIgnore,\n\n            kindsToProcess: this.m_kindsToProcess,\n            kindsToIgnore: this.m_kindsToIgnore\n        };\n    }\n\n    private addItem(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.FeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomType !== undefined\n                    ? Array.isArray(options.geomType)\n                        ? options.geomType\n                        : [options.geomType]\n                    : undefined,\n            classes: [\n                {\n                    value: options.featureClass,\n                    match:\n                        options.matchClass === undefined\n                            ? OmvFilterString.StringMatch.Match\n                            : options.matchClass\n                }\n            ],\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n\n    private addItems(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomTypes !== undefined\n                    ? Array.isArray(options.geomTypes)\n                        ? options.geomTypes\n                        : [options.geomTypes]\n                    : undefined,\n            classes: options.featureClasses,\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n}\n\nexport namespace OmvFeatureFilterDescriptionBuilder {\n    /**\n     * Options for `OmvFeatureFilterDescriptionBuilder`.\n     */\n    export interface OmvFeatureFilterDescriptionBuilderOptions {\n        /**\n         * If `true`, all unspecified layers will be processed. If `false`, all unspecified layers\n         * will be ignored.\n         */\n        processLayersDefault?: boolean;\n        /**\n         * If `true`, all unspecified point features will be processed. If `false`, all unspecified\n         * point features will be ignored.\n         */\n        processPointsDefault?: boolean;\n        /**\n         * If `true`, all unspecified line features will be processed. If `false`, all unspecified\n         * line\n         * features will be ignored.\n         */\n        processLinesDefault?: boolean;\n        /**\n         * If `true`, all unspecified polygon features will be processed. If `false`, all\n         * unspecified polygon features will be ignored.\n         */\n        processPolygonsDefault?: boolean;\n    }\n\n    /**\n     * Description of a single feature.\n     */\n    export interface FeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomType: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional class to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClass: string;\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Match condition for `featureClass`.\n         */\n        matchClass?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n\n    /**\n     * Description for multiple features.\n     */\n    export interface MultiFeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomTypes?: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional classes to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClasses?: OmvFilterString[];\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n}\n\n/**\n * `OmvFeatureFilter` implementation that uses a `OmvFeatureFilterDescription` to filter `TileData`\n * features before they are completely decoded.\n *\n * @hidden\n */\nexport class OmvGenericFeatureFilter implements OmvFeatureFilter {\n    private static matchLayer(\n        layer: string,\n        layerItems: OmvLayerFilterDescription[],\n        level: number\n    ): boolean {\n        for (const layerItem of layerItems) {\n            if (level < layerItem.minLevel || level > layerItem.maxLevel) {\n                continue;\n            }\n\n            if (OmvFilterString.matchString(layer, layerItem.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private disabledKinds: GeometryKindSet | undefined;\n    private enabledKinds: GeometryKindSet | undefined;\n\n    constructor(private description: OmvFeatureFilterDescription) {\n        if (this.description.kindsToProcess.length > 0) {\n            this.enabledKinds = new GeometryKindSet(\n                this.description.kindsToProcess as GeometryKind[]\n            );\n        }\n        if (this.description.kindsToIgnore.length > 0) {\n            this.disabledKinds = new GeometryKindSet(\n                this.description.kindsToIgnore as GeometryKind[]\n            );\n        }\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToProcess, level)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToIgnore, level)) {\n            return false;\n        }\n\n        return this.description.processLayersDefault;\n    }\n\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPointsDefault\n        );\n    }\n\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processLinesDefault\n        );\n    }\n\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    wantsKind(kind: string | string[]): boolean {\n        // undefined -> no way to filter\n        if (kind === undefined) {\n            return true;\n        }\n\n        return (\n            !(\n                this.disabledKinds !== undefined &&\n                this.disabledKinds.hasOrIntersects(kind as GeometryKind)\n            ) ||\n            (this.enabledKinds !== undefined &&\n                this.enabledKinds.hasOrIntersects(kind as GeometryKind))\n        );\n    }\n\n    get hasKindFilter(): boolean {\n        return this.enabledKinds !== undefined || this.disabledKinds !== undefined;\n    }\n\n    private wantsFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        geometryType: OmvGeometryType,\n        level: number,\n        defaultResult: boolean\n    ): boolean {\n        for (const item of itemsToProcess) {\n            if (level < item.minLevel || level > item.maxLevel) {\n                continue;\n            }\n\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.indexOf(geometryType) >= 0) {\n                return true;\n            }\n        }\n\n        for (const item of itemsToIgnore) {\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.indexOf(geometryType) >= 0) {\n                return false;\n            }\n        }\n\n        return defaultResult;\n    }\n}\n\n/**\n * An [[OmvFeatureFilter]] implementation that delegates all filter decision\n * returning `true` for any predicate if all delegates return `true`.\n */\nexport class ComposedDataFilter implements OmvFeatureFilter {\n    constructor(readonly filters: OmvFeatureFilter[]) {}\n\n    get hasKindFilter() {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.hasKindFilter,\n            true\n        );\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLayer(layer, level),\n            true\n        );\n    }\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPointFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLineFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPolygonFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsKind(kind: string | string[]): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsKind(kind),\n            true\n        );\n    }\n}\n/**\n * `OmvFeatureModifier` implementation that uses a `OmvFeatureFilterDescription` to filter\n * `TileData` features before they are completely decoded.\n *\n * @hidden\n */\nexport class OmvGenericFeatureModifier implements OmvFeatureModifier {\n    static matchItems(\n        layerName: string,\n        featureClass: string,\n        items: OmvFilterDescription[]\n    ): boolean {\n        for (const item of items) {\n            if (item.classes !== undefined) {\n                if (!OmvFilterString.matchString(layerName, item.layerName)) {\n                    continue;\n                }\n                for (const matchClass of item.classes) {\n                    if (OmvFilterString.matchString(featureClass, matchClass)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    static matchAttribute(layerName: string, env: MapEnv, items: OmvFilterDescription[]): boolean {\n        for (const item of items) {\n            if (item.featureAttribute !== undefined) {\n                if (\n                    OmvFilterString.matchString(layerName, item.layerName) &&\n                    env.lookup(item.featureAttribute.key) === item.featureAttribute.value\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    constructor(private description: OmvFeatureFilterDescription) {}\n\n    doProcessPointFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            env,\n            this.description.processPointsDefault\n        );\n    }\n\n    doProcessLineFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            env,\n            this.description.processLinesDefault\n        );\n    }\n\n    doProcessPolygonFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            env,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        if (layer === undefined || (itemsToProcess.length === 0 && itemsToIgnore.length === 0)) {\n            return defaultResult;\n        }\n\n        let featureClass: string | undefined;\n        const featureClassThing = env.lookup(\"class\");\n\n        if (featureClassThing !== undefined && featureClassThing !== null) {\n            featureClass = featureClassThing.toString();\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToProcess)\n        ) {\n            return true;\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToIgnore)\n        ) {\n            return false;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToProcess)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToIgnore)) {\n            return false;\n        }\n\n        return defaultResult;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BufferAttribute, BufferGeometry, Vector3 } from \"three\";\n\nconst tmpVectorA = new Vector3();\nconst tmpVectorB = new Vector3();\nconst tmpVectorC = new Vector3();\n\n/**\n * The [[SubdivisionModifier]] subdivides triangle mesh geometries.\n */\nexport abstract class SubdivisionModifier {\n    /**\n     * Constructs a new [[SubdivisionModifier]].\n     */\n    constructor() {\n        // nothing to do\n    }\n\n    /**\n     * Subdivides the faces of the given [[THREE.BufferGeometry]].\n     *\n     * This method modifies (in-place) the vertices and the faces of the geometry.\n     * Please note that only the vertex position and their UV coordinates are subdivided.\n     * Normals, vertex colors and other attributes are left unmodified.\n     *\n     * @param geometry - The [[THREE.BufferGeometry]] to subdivide.\n     */\n    modify(geometry: BufferGeometry): BufferGeometry {\n        const positionAttr = geometry.getAttribute(\"position\") as BufferAttribute;\n        const position = Array.from(positionAttr.array);\n\n        const uvAttr = geometry.getAttribute(\"uv\") as BufferAttribute;\n        const uv = uvAttr !== undefined ? Array.from(uvAttr.array) : undefined;\n\n        const edgeAttr = geometry.getAttribute(\"edge\") as BufferAttribute;\n        const edge = edgeAttr !== undefined ? Array.from(edgeAttr.array) : undefined;\n\n        const wallAttr = geometry.getAttribute(\"wall\") as BufferAttribute;\n        const wall = wallAttr !== undefined ? Array.from(wallAttr.array) : undefined;\n\n        const indexAttr = geometry.getIndex() as BufferAttribute;\n        const indices = Array.from(indexAttr.array);\n\n        // A cache containing the indices of the vertices added\n        // when subdiving the faces of the geometry.\n        const cache = new Map<string, number>();\n\n        /**\n         * Returns the index of the vertex positioned in the middle of the given vertices.\n         */\n        function middleVertex(i: number, j: number): number {\n            // Build a unique `key` for the pair of indices `(i, j)`.\n            const key = `${Math.min(i, j)}_${Math.max(i, j)}`;\n\n            const h = cache.get(key);\n\n            if (h !== undefined) {\n                // Nothing to do, a vertex in the middle of (i, j) was already created.\n                return h;\n            }\n\n            // The position of the new vertex.\n            tmpVectorA.set(position[i * 3], position[i * 3 + 1], position[i * 3 + 2]);\n            tmpVectorB.set(position[j * 3], position[j * 3 + 1], position[j * 3 + 2]);\n            tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n\n            // The index of the new vertex.\n            const index = position.length / 3;\n            position.push(...tmpVectorC.toArray());\n            // Cache the position of the new vertex.\n            cache.set(key, index);\n\n            // The uvs of the new vertex.\n            if (uv !== undefined) {\n                tmpVectorA.set(uv[i * 2], uv[i * 2 + 1], 0);\n                tmpVectorB.set(uv[j * 2], uv[j * 2 + 1], 0);\n                tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n                uv.push(tmpVectorC.x, tmpVectorC.y);\n            }\n\n            // The edge and wall attributes of the new vertex.\n            // If a new vertex has been introduced between i and j, connect the elements\n            // accordingly.\n            if (edge !== undefined) {\n                if (edge[i] === j) {\n                    edge.push(j);\n                    edge[i] = index;\n                } else if (edge[j] === i) {\n                    edge.push(i);\n                    edge[j] = index;\n                } else {\n                    edge.push(-1);\n                }\n            }\n            if (wall !== undefined) {\n                if (wall[i] === j) {\n                    wall.push(j);\n                    wall[i] = index;\n                } else if (wall[j] === i) {\n                    wall.push(i);\n                    wall[j] = index;\n                } else {\n                    wall.push(-1);\n                }\n            }\n\n            return index;\n        }\n\n        const newIndices = [];\n        while (indices.length >= 3) {\n            const v0 = indices.shift()!;\n            const v1 = indices.shift()!;\n            const v2 = indices.shift()!;\n\n            tmpVectorA.set(position[v0 * 3], position[v0 * 3 + 1], position[v0 * 3 + 2]);\n            tmpVectorB.set(position[v1 * 3], position[v1 * 3 + 1], position[v1 * 3 + 2]);\n            tmpVectorC.set(position[v2 * 3], position[v2 * 3 + 1], position[v2 * 3 + 2]);\n\n            const edgeToSplit = this.shouldSplitTriangle(tmpVectorA, tmpVectorB, tmpVectorC);\n\n            switch (edgeToSplit) {\n                case 0: {\n                    const v3 = middleVertex(v0, v1);\n                    indices.push(v0, v3, v2, v3, v1, v2);\n                    break;\n                }\n\n                case 1: {\n                    const v3 = middleVertex(v1, v2);\n                    indices.push(v0, v1, v3, v0, v3, v2);\n                    break;\n                }\n\n                case 2: {\n                    const v3 = middleVertex(v2, v0);\n                    indices.push(v0, v1, v3, v3, v1, v2);\n                    break;\n                }\n\n                case undefined: {\n                    newIndices.push(v0, v1, v2);\n                    break;\n                }\n\n                default:\n                    throw new Error(\"failed to subdivide the given geometry\");\n            }\n        }\n\n        positionAttr.array = new Float32Array(position);\n        positionAttr.count = position.length / positionAttr.itemSize;\n        positionAttr.needsUpdate = true;\n\n        geometry.setIndex(newIndices);\n\n        if (uv !== undefined) {\n            uvAttr.array = new Float32Array(uv);\n            uvAttr.count = uv.length / uvAttr.itemSize;\n            uvAttr.needsUpdate = true;\n        }\n\n        if (edge !== undefined) {\n            edgeAttr.array = new Float32Array(edge);\n            edgeAttr.count = edge.length / edgeAttr.itemSize;\n            edgeAttr.needsUpdate = true;\n        }\n\n        return geometry;\n    }\n\n    /**\n     * Returns if the given triangle should be subdivide.\n     *\n     * Implementations of this function should return the index of\n     * the edge of the triangle to split (0, 1, or 2) or undefined if\n     * the triangle doesn't need to be subdivided.\n     *\n     * @param a - The position of the first vertex of the triangle.\n     * @param b - The position of the second vertex of the triangle.\n     * @param c - The position of the third vertex of the triangle.\n     */\n    protected abstract shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare let self: Worker & {\n    importScripts(..._scripts: string[]): void;\n};\n\nself.importScripts(\"three.min.js\");\n\nimport { OmvTileDecoderService } from \"@here/harp-omv-datasource/index-worker\";\n\nOmvTileDecoderService.start();\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/OmvDecoder\";\nexport * from \"./lib/OmvTiler\";\nexport * from \"./lib/OmvDecoderDefs\";\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/GroupedPriorityList\";\nexport * from \"./lib/Logger\";\nexport * from \"./lib/Math2D\";\nexport * from \"./lib/MathUtils\";\nexport * from \"./lib/Mixins\";\nexport * from \"./lib/assert\";\nexport * from \"./lib/CachedResource\";\nexport * from \"./lib/ContextLogger\";\nexport * from \"./lib/PerformanceTimer\";\nexport * from \"./lib/ObjectUtils\";\nexport * from \"./lib/OptionsUtils\";\nexport * from \"./lib/UriResolver\";\nexport * from \"./lib/UrlUtils\";\nexport * from \"./lib/Functions\";\nexport * from \"./lib/SampleBilinear\";\nexport * from \"./lib/AuthenticationUtils\";\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A `PriorityListElement` has a priority to assist in sorting. The idea is that the items in a\n * grouped priority list will not modify their priority during processing to such an amount, that\n * they will change into another group. Smaller lists are smaller to sort, and in case of resource\n * limitation (maximum number of rendered objects reached), not all items have to be sorted at all.\n */\nexport interface PriorityListElement {\n    /**\n     * The integer value of this priority is used to group objects of \"same\" priority.\n     */\n    priority: number;\n}\n\n/**\n * The `PriorityListGroup` contains a list of {@link PriorityListElement}s that all have the same\n * (integer) priority.\n */\nexport class PriorityListGroup<T extends PriorityListElement> {\n    constructor(readonly priority: number, public elements: T[] = new Array()) {}\n\n    /**\n     * Create and return a deep copy of the `PriorityListGroup<T>`.\n     *\n     * @returns A clone of the `PriorityListGroup<T>`.\n     */\n    clone(): PriorityListGroup<T> {\n        return new PriorityListGroup<T>(this.priority, this.elements.slice());\n    }\n\n    /**\n     * Removes an element from the group.\n     * @param element - The element to remove.\n     * @returns true if the element was removed, false if it was not found in the group.\n     */\n    remove(element: T): boolean {\n        const foundIndex = this.elements.indexOf(element);\n        if (foundIndex === -1) {\n            return false;\n        }\n        this.elements.splice(foundIndex, 1);\n        return true;\n    }\n}\n\n/**\n * The `PriorityListGroupMap` is a map to map the (integer) priority to a {@link PriorityListGroup}.\n */\nexport type PriorityListGroupMap<T extends PriorityListElement> = Map<number, PriorityListGroup<T>>;\n\n/**\n * The `GroupedPriorityList` contains a [[PriorityListGroupMap]] to manage a larger number of items\n * in priority groups.\n */\nexport class GroupedPriorityList<T extends PriorityListElement> {\n    readonly groups: PriorityListGroupMap<T> = new Map();\n    /**\n     * Add an element to the `GroupedPriorityList`. Selects group based on the elements priority.\n     *\n     * @param element - Element to be added.\n     */\n    add(element: T): void {\n        this.getGroup(element.priority).elements.push(element);\n    }\n\n    /**\n     * Remove an element from the `GroupedPriorityList`.\n     *\n     * Note: It is required that the priority is the same as it was when the element has been added.\n     * Otherwise, the removal will fail.\n     *\n     * @param element - Element to be removed.\n     * @returns `True` if the element was removed, `false` otherwise.\n     */\n    remove(element: T): boolean {\n        const group = this.findGroup(element.priority);\n        if (group !== undefined && group.remove(element)) {\n            if (group.elements.length === 0) {\n                this.groups.delete(group.priority);\n            }\n\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Remove all internal {@link PriorityListGroup}s.\n     */\n    clear(): void {\n        this.groups.clear();\n    }\n\n    /**\n     * Merge another {@link GroupedPriorityList} into this one.\n     *\n     * @param other - Other group to merge.\n     */\n    merge(other: GroupedPriorityList<T>): GroupedPriorityList<T> {\n        for (const otherGroup of other.groups) {\n            const group = this.findGroup(otherGroup[1].priority);\n            if (group === undefined) {\n                this.groups.set(Math.floor(otherGroup[1].priority), otherGroup[1].clone());\n                continue;\n            }\n            group.elements = group.elements.concat(otherGroup[1].elements);\n        }\n        return this;\n    }\n\n    clone(): GroupedPriorityList<T> {\n        const clone = new GroupedPriorityList<T>();\n        for (const [priority, group] of this.groups) {\n            clone.groups.set(priority, group.clone());\n        }\n        return clone;\n    }\n\n    /**\n     * Apply function to all elements in this `GroupedPriorityList`.\n     *\n     * @param {(element: T) => void} fun Function to apply.\n     */\n    forEach(fun: (element: T) => void): void {\n        for (const group of this.groups) {\n            group[1].elements.forEach(fun);\n        }\n    }\n\n    /**\n     * Count the number of elements in this `GroupedPriorityList`.\n     */\n    count(): number {\n        let n = 0;\n        for (const group of this.groups) {\n            n += group[1].elements.length;\n        }\n        return n;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority - The priority to retrieve all elements from.\n     */\n    private findGroup(priority: number): PriorityListGroup<T> | undefined {\n        const normalizedPriority = Math.floor(priority);\n        const group = this.groups.get(normalizedPriority);\n        return group;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority - The priority to retrieve all elements from.\n     */\n    private getGroup(priority: number): PriorityListGroup<T> {\n        let group = this.findGroup(priority);\n\n        if (group === undefined) {\n            const normalizedPriority = Math.floor(priority);\n            group = new PriorityListGroup<T>(normalizedPriority);\n            this.groups.set(group.priority, group);\n        }\n\n        return group;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./ConsoleChannel\";\nexport * from \"./IChannel\";\nexport * from \"./ILogger\";\nexport * from \"./Logger\";\nexport * from \"./LoggerManager\";\nexport * from \"./MultiChannel\";\nexport * from \"./WorkerChannel\";\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { LoggerManagerImpl } from \"./LoggerManagerImpl\";\n\n/**\n * The LoggerManager class implements a singleton object that handles logging.\n *\n * Example:\n *\n * ```typescript\n *\n * const logger = LoggerManager.instance.create(\"MyFontLoaderClass\");\n * if (missingFonts.length > 0) {\n *     logger.error(\"These fonts can not be loaded: \", missingFonts);\n * } else {\n *     logger.log(\"All fonts have been loaded.\");\n * }\n * ```\n */\nexport class LoggerManager {\n    private static m_instance: ILoggerManager;\n\n    static get instance(): ILoggerManager {\n        return this.m_instance || (this.m_instance = new LoggerManagerImpl());\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsoleChannel } from \"./ConsoleChannel\";\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { Logger } from \"./Logger\";\nimport { WorkerChannel } from \"./WorkerChannel\";\n\n/**\n * LoggerManagerImpl is the class for the singleton instance of the logger manager.\n * It handles channels and loggers.\n */\n\nexport class LoggerManagerImpl implements ILoggerManager {\n    channel: IChannel;\n    private readonly m_loggers: ILogger[] = [];\n    private m_levelSetForAll?: LogLevel;\n\n    constructor() {\n        this.channel =\n            typeof self === \"undefined\" || typeof self.document !== \"undefined\"\n                ? new ConsoleChannel()\n                : new WorkerChannel();\n    }\n\n    getLoggerNames(): string[] {\n        return this.m_loggers.map(logger => logger.name);\n    }\n\n    getLogger(name: string): ILogger | undefined {\n        return this.m_loggers.find(logger => logger.name === name);\n    }\n\n    create(loggerName: string, options: LoggerOptions = {}): ILogger {\n        if (\n            this.m_levelSetForAll !== undefined &&\n            (options.level === undefined || options.level < this.m_levelSetForAll)\n        ) {\n            options.level = this.m_levelSetForAll;\n        }\n        const logger = new Logger(loggerName, this.channel, options);\n        this.m_loggers.push(logger);\n        return logger;\n    }\n\n    dispose(logger: ILogger) {\n        const found = this.m_loggers.indexOf(logger);\n        if (found < 0) {\n            throw new Error(`Cannot unregister \"${logger}\" : no such logger registered.`);\n        }\n        this.m_loggers.splice(found, 1);\n    }\n\n    updateAll(options: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            logger.update(options);\n        }\n    }\n\n    update(loggerName: string, config: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            if (logger.name === loggerName) {\n                logger.update(config);\n            }\n        }\n    }\n\n    enableAll(enabled: boolean) {\n        for (const logger of this.m_loggers) {\n            logger.enabled = enabled;\n        }\n    }\n\n    enable(loggerName: string, value: boolean) {\n        this.update(loggerName, { enabled: value });\n    }\n\n    setLogLevelForAll(level: LogLevel) {\n        this.m_levelSetForAll = level;\n        for (const logger of this.m_loggers) {\n            logger.level = level;\n        }\n    }\n\n    setLogLevel(loggerName: string, level: LogLevel) {\n        this.update(loggerName, { level });\n    }\n\n    setChannel(channel: IChannel) {\n        this.channel = channel;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class allowing mixing several channels.\n */\nexport class MultiChannel implements IChannel {\n    private readonly channels: IChannel[] = [];\n    constructor(...channels: IChannel[]) {\n        this.channels = channels;\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.error(message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.debug(message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.info(message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.log(message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.trace(message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.warn(message, ...optionalParams);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace Math2D {\n    /**\n     * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n     * objects with two numbers each). Should be faster.\n     */\n    export class Box {\n        /**\n         * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n         * objects with two numbers each). Should be faster.\n         *\n         * @param x - New X value.\n         * @param y - New y value.\n         * @param w - New w value.\n         * @param h - New h value.\n         */\n        constructor(public x = 0, public y = 0, public w = 0, public h = 0) {}\n\n        /**\n         * Set new values to all properties of the box.\n         *\n         * @param x - New X value.\n         * @param y - New y value.\n         * @param w - New w value.\n         * @param h - New h value.\n         */\n        set(x: number, y: number, w: number, h: number) {\n            this.x = x;\n            this.y = y;\n            this.w = w;\n            this.h = h;\n        }\n\n        /**\n         * Test box for inclusion of point.\n         *\n         * @param x - X coordinate of point.\n         * @param y - Y coordinate of point.\n         */\n        contains(x: number, y: number): boolean {\n            return this.x <= x && this.x + this.w >= x && this.y <= y && this.y + this.h >= y;\n        }\n\n        /**\n         * Test box for inclusion of another box.\n         *\n         * @param other - Box 2 to test for inclusion.\n         */\n        containsBox(other: Box): boolean {\n            const xmax = other.x + other.w;\n            const ymax = other.y + other.h;\n            return (\n                this.contains(other.x, other.y) &&\n                this.contains(xmax, other.y) &&\n                this.contains(other.x, ymax) &&\n                this.contains(xmax, ymax)\n            );\n        }\n\n        /**\n         * Test two boxes for intersection.\n         *\n         * @param other - Box 2 to test for intersection.\n         */\n        intersects(other: Box): boolean {\n            return (\n                this.x <= other.x + other.w &&\n                this.x + this.w >= other.x &&\n                this.y <= other.y + other.h &&\n                this.y + this.h >= other.y\n            );\n        }\n    }\n\n    /**\n     * Box to store UV coordinates.\n     */\n    export interface UvBox {\n        s0: number;\n        t0: number;\n        s1: number;\n        t1: number;\n    }\n\n    /**\n     * Compute squared distance between two 2D points `a` and `b`.\n     *\n     * @param ax - Point a.x\n     * @param ay - Point a.y\n     * @param bx - Point b.x\n     * @param by - Point b.y\n     * @returns Squared distance between the two points\n     */\n    export function distSquared(ax: number, ay: number, bx: number, by: number): number {\n        return (ax - bx) * (ax - bx) + (ay - by) * (ay - by);\n    }\n\n    /**\n     * Computes the squared length of a line.\n     *\n     * @param line - An array of that forms a line via [x,y,z,x,y,z,...] tuples.\n     */\n    export function computeSquaredLineLength(line: number[]): number {\n        let squaredLineLength: number = 0;\n\n        const length = line.length - 4;\n        for (let i = 0; i < length; i += 3) {\n            const xDiff = line[i + 3] - line[i];\n            const yDiff = line[i + 4] - line[i + 1];\n            squaredLineLength += xDiff * xDiff + yDiff * yDiff;\n        }\n        return squaredLineLength;\n    }\n\n    /**\n     * Compute squared distance between a 2D point and a 2D line segment.\n     *\n     * @param px - Test point X\n     * @param py - Test point y\n     * @param l0x - Line segment start X\n     * @param l0y - Line segment start Y\n     * @param l1x - Line segment end X\n     * @param l1y - Line segment end Y\n     * @returns Squared distance between point and line segment\n     */\n    export function distToSegmentSquared(\n        px: number,\n        py: number,\n        l0x: number,\n        l0y: number,\n        l1x: number,\n        l1y: number\n    ): number {\n        const lineLengthSuared = distSquared(l0x, l0y, l1x, l1y);\n        if (lineLengthSuared === 0) {\n            return distSquared(px, py, l0x, l0y);\n        }\n        let t = ((px - l0x) * (l1x - l0x) + (py - l0y) * (l1y - l0y)) / lineLengthSuared;\n        t = Math.max(0, Math.min(1, t));\n        return distSquared(px, py, l0x + t * (l1x - l0x), l0y + t * (l1y - l0y));\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace MathUtils {\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value - The value to be clamped.\n     * @param min - Minimum value.\n     * @param max - Maximum value.\n     *\n     * @returns Clamped value.\n     */\n    export function clamp(value: number, min: number, max: number): number {\n        return value < min ? min : value > max ? max : value;\n    }\n\n    /**\n     * Returns a linear interpolation between the values of edge0 and edge1 based on the factor.\n     *\n     * Given two known points the linear interpolant between these points may be presented as\n     * straight line. This means that for given factor change the resulting change of return\n     * value is always const.\n     * @see https://en.wikipedia.org/wiki/Linear_interpolation\n     *\n     * @param edge0 -\n     * @param edge1 -\n     * @param factor - Interpolation factor that ranges between: 0 <= x <= 1.\n     */\n    export function lerp(edge0: number, edge1: number, factor: number): number {\n        return edge0 * (1 - factor) + edge1 * factor;\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0 -\n     * @param edge1 -\n     * @param x -\n     */\n    export function smoothStep(edge0: number, edge1: number, x: number) {\n        // Scale, bias and saturate x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * (3 - 2 * x);\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     *\n     * Improved version by Ken Perlin, which has zero 1st- and 2nd-order derivatives at `x = 0` and\n     * `x = 1`:\n     *\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0 -\n     * @param edge1 -\n     * @param x -\n     */\n    export function smootherStep(edge0: number, edge1: number, x: number) {\n        // Scale, and clamp x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * x * (x * (x * 6 - 15) + 10);\n    }\n\n    /**\n     * Maps a number from one range to another.\n     *\n     * @param val - The incoming value to be converted.\n     * @param inMin - Lower bound of the value's current range.\n     * @param inMax - Upper bound of the value's current range.\n     * @param outMin - Lower bound of the value's target range.\n     * @param outMax - Upper bound of the value's target range.\n     */\n    export function map(val: number, inMin: number, inMax: number, outMin: number, outMax: number) {\n        return ((val - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n\n    /**\n     * Returns the smaller of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a - First number.\n     * @param b - Second number.\n     */\n    export function min2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.min(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns the larger of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a - First number.\n     * @param b - Second number.\n     */\n    export function max2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.max(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Checks if the value of a given number is inside an upper or lower bound. The bounds may be\n     * undefined, in which case their value is ignored.\n     *\n     * @param value - Value to check.\n     * @param lowerBound - The lower bound to check the value against.\n     * @param upperBound - The upper bound to check the value against.\n     *\n     * @returns `true` if value is inside the bounds or if the bounds are `undefined`, `false`\n     *          otherwise.\n     */\n    export function isClamped(\n        value: number,\n        lowerBound: number | undefined,\n        upperBound: number | undefined\n    ): boolean {\n        if (lowerBound !== undefined && value < lowerBound) {\n            return false;\n        }\n        if (upperBound !== undefined && value > upperBound) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Smoothly interpolates between two values using cubic formula\n     *\n     * @param startValue -\n     * @param endValue -\n     * @param time -\n     * @returns Result of the interpolation within the range of `[startValue, endValue]`\n     */\n    export function easeInOutCubic(startValue: number, endValue: number, time: number): number {\n        const timeValue =\n            time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;\n        return startValue + (endValue - startValue) * timeValue;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Copy methods and properties from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor - Class to mix methods and properties into.\n * @param baseCtors - Class to take all methods and properties from.\n */\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        });\n    });\n}\n\n/**\n * Copy methods from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor - Class to mix methods into.\n * @param baseCtors - Class to take all methods from.\n */\nexport function applyMixinsWithoutProperties(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            const descriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name);\n            if (\n                descriptor !== undefined &&\n                descriptor.get === undefined &&\n                name !== \"constructor\"\n            ) {\n                derivedCtor.prototype[name] = baseCtor.prototype[name];\n            }\n        });\n    });\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare const process: any;\n\n// cache value, because access to process.env.NODE_ENV is SLOW!\nconst isProduction = process.env.NODE_ENV === \"production\";\n\n//TODO: Make assertHandler configurable\n\n/**\n * Implementation of assert as a development help\n *\n * Note - this is deliberately a global function so that minimizers remove the\n * entire call when building for production.\n *\n * @hidden\n * @param condition - Condition to match, if false, throws an Error(message)\n * @param message - Optional message, defaults to \"ASSERTION failed\"\n */\nexport function assert(condition: boolean, message?: string): void {\n    if (!isProduction) {\n        if (!condition) {\n            throw new Error(message !== undefined ? message : \"ASSERTION failed\");\n        }\n    }\n}\n\nexport function assertExists<T>(element: T | undefined, message?: string): T {\n    if (!isProduction) {\n        if (element === undefined || element === null) {\n            throw new Error(\n                message !== undefined ? message : \"ASSERTION failed: Element is undefined or null\"\n            );\n        }\n    }\n    return element!;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Refinement of `console` interface only for important information i.e `info`, `warn` and `errors`.\n */\nexport interface ISimpleChannel {\n    info(message?: any, ...optionalParams: any[]): void;\n    warn(message?: any, ...optionalParams: any[]): void;\n    error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Extension of {@link ISimpleChannel} to support contextual logging by adding stack of prefixes.\n */\nexport interface IContextLogger extends ISimpleChannel {\n    /**\n     * Push \"attribute-like\" context.\n     */\n    pushAttr(name: string): void;\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number): void;\n\n    /**\n     * Remove current context from top of stack.\n     */\n    pop(): void;\n}\n\n/**\n * Context-aware logger that decorates log message with stack-based prefix, emits `headerMessage`\n * before first actual log message.\n */\nexport class ContextLogger implements IContextLogger {\n    private readonly context: string[] = [];\n    private m_headerLogged = false;\n\n    /**\n     * Construct a context-aware logger that logs to `m_logger`.\n     */\n    constructor(readonly m_logger: ISimpleChannel, readonly headerMessage: string) {}\n\n    /**\n     * Push \"attribute-like\" context.\n     *\n     * Following log messages will be prefixed with `name` or `.name` depending on current context.\n     */\n    pushAttr(name: string) {\n        this.context.push(`${this.context.length > 0 ? \".\" : \"\"}${name}`);\n    }\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number) {\n        this.context.push(`[${index}]`);\n    }\n\n    pop() {\n        this.context.pop();\n    }\n\n    // They, are public member functions it's just tslint who doesn't understand this.\n\n    // tslint:disable:member-ordering\n    warn = this.createLogMethod(\"warn\");\n    info = this.createLogMethod(\"info\");\n    error = this.createLogMethod(\"error\");\n    // tslint:enable:member-ordering\n\n    private createLogMethod(severity: \"warn\" | \"info\" | \"error\") {\n        return (message: string, ...rest: any[]) => {\n            if (!this.m_headerLogged) {\n                this.m_logger.info(this.headerMessage);\n                this.m_headerLogged = true;\n            }\n            this.m_logger[severity](`${this.context.join(\"\")}: ${message}`, ...rest);\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/* tslint:disable:max-line-length */\n/**\n * See:\n * https://developers.google.com/web/updates/2012/08/When-milliseconds-are-not-enough-performance-now\n */\n/* tslint:ensable:max-line-length */\n\nexport class PerformanceTimer {\n    /**\n     * Returns timestamp in milliseconds since page load.\n     *\n     * If the [[DOMHighResTimeStamp]] is supported, the resolution is up to 5 microseconds,\n     * otherwise it is in milliseconds. Timespans are computed by taking the difference between two\n     * samples.\n     *\n     * Example:\n     * ```typescript\n     * const now = PerformanceTimer.now();\n     * // call some expensive function for which you want to check the duration.\n     * const end = PerformanceTimer.now();\n     * const elapsedTime = end - now;\n     * ```\n     */\n    static now(): number {\n        return PerformanceTimer.nowFunc();\n    }\n\n    // tslint:disable-next-line:no-unused-variable\n    private static readonly instance = new PerformanceTimer();\n\n    private static readonly nowFunc: () => number = PerformanceTimer.getNowFunc();\n\n    private static getNowFunc() {\n        if (typeof performance !== \"undefined\" && typeof performance.now !== \"undefined\") {\n            return () => performance.now();\n        }\n\n        // fall back to Date.getTime()\n        return () => {\n            return new Date().getTime();\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Deep clone of object.\n *\n * Like `JSON.parse(JSON.stringify(obj))`, but supports basic javascript types (string, number,\n * object), `Date` and `RegExp`s and cycles.\n *\n * Throws error if enounters object with `prototype` assuming that in general class instances\n * cannot be reliably cloned by generic algorithm.\n */\nexport function cloneDeep<T>(obj: T): T {\n    const cache: Map<object, object> = new Map();\n    function cloneInternal(src: any): any {\n        if (src === null) {\n            return null;\n        } else if (typeof src === \"object\") {\n            const cached = cache.get(src);\n            if (cached !== undefined) {\n                return cached;\n            }\n\n            if (Array.isArray(src)) {\n                const result: any[] = [];\n                cache.set(src, result);\n                result.length = src.length;\n                for (let i = 0; i < result.length; ++i) {\n                    result[i] = cloneInternal(src[i]);\n                }\n                return result;\n            } else if (src instanceof Date) {\n                const result = new Date(src.getTime());\n                cache.set(src, result);\n                return result;\n            } else if (src instanceof RegExp) {\n                const result = new RegExp(src.source, src.flags);\n                cache.set(src, result);\n                return result;\n            } else if (src.constructor !== Object) {\n                throw new Error(\"cloneDeep doesn't support objects with custom prototypes\");\n            } else {\n                const result: typeof src = {};\n                cache.set(src, result);\n                for (const key in src) {\n                    if (src.hasOwnProperty(key)) {\n                        result[key] = cloneInternal(src[key]);\n                    }\n                }\n                return result;\n            }\n        } else {\n            // string, number, boolean, undefined and functions are returned as is\n            return src;\n        }\n    }\n\n    const r = cloneInternal(obj);\n    cache.clear();\n    return r;\n}\n\n/**\n * Pick `props` from `object.\n *\n * Runtime version of `Pick<T,K>`.\n */\nexport function pick<T extends object, K extends keyof T>(object: T, props: K[]): Pick<T, K> {\n    const result: any = {};\n    for (const propName of props) {\n        if (object.hasOwnProperty(propName)) {\n            result[propName] = object[propName];\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Get first defined value.\n *\n * Specialized \"replacement\" for `a || b || c` used frequently to get value from various sources\n * (defaults, configs  constants).\n * In contrast to `||`, this function provides proper typing for usual use cases (constant as last\n * argument) and correct treatment of `null` and `undefined`.\n *\n * If last parameter is \"defined\" then return type is `T`, otherwise return type is `T | undefined`.\n *\n * Usage example:\n *\n *     interface Config {\n *         x?: number;\n *     }\n *     const someConfig: Config = {};\n *     const val: number | undefined = undefined;\n *     const DEFAULT = 5;\n *     const x = getOptionValue(val, someConfig.x, DEFAULT);\n *         // typeof x === 'number' because DEFAULT is defined\n *     const y = getOptionValue(val, someConfig.x);\n *         // typeof y === 'number | undefined' because someConfig.x is possibly undefined\n */\n// specialized overloads with last param defined params overload\nexport function getOptionValue<T>(a: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T | undefined, d: T): T;\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined;\n\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined {\n    for (const candidate of values) {\n        if (candidate !== undefined && candidate !== null) {\n            return candidate;\n        }\n    }\n    return undefined;\n}\n\n/**\n * Merge options into existing parameters object.\n *\n * Convenience helper with _similar_ semantics as:\n *\n *     const finalParams1 = { ...defaults, ... options };\n *     const finalParams2 = Object.assign({}, defaults, options);\n *\n * This function doesn't copy _extra_ properties of `options` that doesn't exist in `defaults`.\n * `defaults` is used as _parameters_ template.\n *\n * This doc uses following notion of `option` and `parameter` terms:\n * * `parameter` is a variable, or 'almost constant' of procedure/function/algorith/object\n *    * `parameter` usually have sensible and usually used default\n *    * `parameter` is always defined (no `undefined`, `null` or `?` in type)\n *    * `parameter` can be overriden by specyfying `option` with same name\n * * `option` means value that may be passed optionally, overrides `parameter` value with same name\n *\n * Usage:\n *\n *     interface FooParams {\n *         useTextures: boolean;\n *         opacity: number;\n *     }\n *\n *     const FOO_DEFAULTS: FooParams = {\n *         useTextures: true,\n *         opacity: 0.8\n *     };\n *\n *     type FooOptions = Partial<FooParams>;\n *\n *     function doSomething(options: FooOptions) {\n *         const params = mergeWithOptions(FOO_DEFAULTS, options);\n *             // typeof params === FooParams\n *             // params.opacity = 0.5\n *             // params.useTextures = true\n *             // params.someOtherOptionFromOtherApi is not defined\n *     }\n *     const opt = {opacity: 0.5, someOtherOptionFromOtherApi: 'aaa'};\n *     doSomething(opt);\n *\n * Rationale:\n *   * both `Object.assign` and spread operator copy extra options\n *   * `Object.assign` & `spread operator` may copy `undefined` and `null`s if they really exist\n *     in options object\n *\n * @param parameters - parmeters template object holding all expected parameters\n * @param options - options object\n * @returns new object with `parameters` overriden by values from `options`\n */\nexport function mergeWithOptions<T extends object>(parameters: T, options?: Partial<T>): T {\n    // NOTE: `as object` needed due to TypeScript bug:\n    //       https://github.com/Microsoft/TypeScript/issues/14409\n    // tslint:disable-next-line:no-object-literal-type-assertion\n    const result = { ...(parameters as object) } as T;\n    if (options === undefined || options === null) {\n        return result;\n    }\n    for (const prop in parameters) {\n        if (parameters.hasOwnProperty(prop)) {\n            const optionValue = options[prop];\n            if (optionValue !== undefined && optionValue !== null) {\n                result[prop] = optionValue as any;\n            }\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { resolveReferenceUri } from \"./UrlUtils\";\n\n/**\n * Custom, app-specific URI resolver interface.\n */\nexport interface UriResolver {\n    /**\n     * Attempt to resolve `URI` to `URL`.\n     *\n     * If given resolver doesn't know about this specific kind of `URI`, it should return string as\n     * received.\n     *\n     * @param input - `URI`\n     * @returns actual `URL` if this handler knows how locate given `uri` or original `uri`\n     */\n    resolveUri(uri: string): string;\n}\n\nexport interface PrefixUriResolverDefinition {\n    [prefix: string]: string;\n}\n\n/**\n * Basic, import-map like {@link UriResolver}.\n *\n * Resolves `uris` basing on exact or prefix match of `key` from `definitions`.\n *\n * In definitions, `key` is matched against input uri with following strategy:\n *  - `key` without trailing `/` -> `key` and input `uri` must be identical\n *  - `key` with trailing `/`, -> `key` is treated as \"package prefix\", so `uri` must start with\n *    `key`\n *\n * Example:\n * ```\n * {\n *     \"local://poiMasterList\": \"/assets/poiMasterList.json\"\n *        // will match only 'local://poiMasterList' and resolve `/assets/poiMasterList.json`\n *     \"local://icons/\": \"/assets/icons/\"\n *        // will match only 'local://icons/ANYPATH' (and similar) and resolve to\n *        // `/assets/icons/ANYPATH\n * }\n * ```\n * Inspired by [`WICG` import maps proposal](https://github.com/WICG/import-maps#the-import-map).\n */\nexport class PrefixMapUriResolver implements UriResolver {\n    constructor(readonly definitions: PrefixUriResolverDefinition) {}\n\n    resolveUri(uri: string) {\n        return Object.keys(this.definitions).reduce((r, key) => {\n            if (key.endsWith(\"/\") && r.startsWith(key)) {\n                const newPrefix = this.definitions[key];\n                return newPrefix + r.substr(key.length);\n            } else if (r === key) {\n                return this.definitions[key];\n            }\n            return r;\n        }, uri);\n    }\n}\n\n/**\n * [UriResolver] that resolve relative `uri`s against to parent resource `uri`.\n */\nexport class RelativeUriResolver implements UriResolver {\n    constructor(readonly parentUri: string) {}\n\n    resolveUri(uri: string) {\n        return resolveReferenceUri(this.parentUri, uri);\n    }\n}\n\n/**\n * Compose URI resolvers.\n *\n * Creates new {@link UriResolver} that applies resolvers in orders or arguments.\n *\n * Example:\n *\n *     const themeUrl = ...; // url of parent object\n *     const childUrlResolver = composeUrlResolvers(\n *           new RelativeUriResolver(themeUrl),\n *           defaultUrlResolver\n *     );\n */\nexport function composeUriResolvers(...resolvers: Array<UriResolver | undefined>): UriResolver {\n    return {\n        resolveUri(originalUrl: string) {\n            return resolvers.reduce((url, resolver) => {\n                if (resolver !== undefined) {\n                    return resolver.resolveUri(url);\n                } else {\n                    return url;\n                }\n            }, originalUrl);\n        }\n    };\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Chains two functions for further assigning as one wrapped callback function\n */\nexport function chainCallbacks<T extends (this: unknown, ...args: any[]) => any>(\n    f1: T | null | undefined,\n    f2: T\n): T {\n    return function(this: any, ...args: any[]): ReturnType<T> {\n        if (f1) {\n            f1.apply(this, args);\n        }\n        return f2.apply(this, args);\n    } as T;\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ntype TypedArray =\n    | Int8Array\n    | Uint8Array\n    | Int16Array\n    | Uint16Array\n    | Int32Array\n    | Uint32Array\n    | Uint8ClampedArray\n    | Float32Array\n    | Float64Array;\n\n/**\n * Returns a bilinear-interpolated texture sample for a given texture.\n * @param texture - Two-dimensional texture to sample.\n * @param width - Texture width.\n * @param height - Texture height.\n * @param u - Number between 0 and 1 representing the location to sample in the width dimension.\n * @param v - Number between 0 and 1 representing the location to sample in the height dimension.\n */\nexport function sampleBilinear(\n    texture: TypedArray,\n    width: number,\n    height: number,\n    u: number,\n    v: number\n): number {\n    const maxXIndex = width - 1;\n    const maxYIndex = height - 1;\n    // Compute the x and y coordinates relative to the mesh size.\n    const xIndex = u * maxXIndex;\n    const xIndexFloor = Math.floor(xIndex);\n    const yIndex = v * maxYIndex;\n    const yIndexFloor = Math.floor(yIndex);\n    const swIndex = yIndexFloor * width + xIndexFloor;\n    const seIndex = xIndexFloor < maxXIndex ? swIndex + 1 : swIndex;\n    const nwIndex = yIndexFloor < maxYIndex ? swIndex + width : swIndex;\n    const neIndex = xIndexFloor < maxXIndex ? nwIndex + 1 : nwIndex;\n    const swElevation = texture[swIndex];\n    const seElevation = texture[seIndex];\n    const nwElevation = texture[nwIndex];\n    const neElevation = texture[neIndex];\n    // Get the fractional components to do bilinear interpolation.\n    const xFrac = Number.isInteger(xIndex) ? 0 : xIndex - xIndexFloor;\n    const xFracInverse = 1 - xFrac;\n    const yFrac = Number.isInteger(yIndex) ? 0 : yIndex - yIndexFloor;\n    const yFracInverse = 1 - yFrac;\n    // The interpolation is the sum of the four closest neighbours each\n    // multiplied by the diagonal areas.\n    const result =\n        swElevation * xFracInverse * yFracInverse +\n        seElevation * xFrac * yFracInverse +\n        nwElevation * xFracInverse * yFrac +\n        neElevation * xFrac * yFrac;\n    return result;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { baseUrl } from \"./UrlUtils\";\n\n/**\n * Get base URL for from where relative URLs will be loaded.\n *\n * * In browser, it resolves to `baseUrl(location.href)` i.e document's base URL\n * (see: https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2).\n *\n * * In node, it resolves to `file://${process.cwd()}`.\n */\nexport function getAppBaseUrl() {\n    return baseUrl(window.location.href);\n}\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    LiteralExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\n\nimport { ArrayOperators } from \"./operators/ArrayOperators\";\nimport { CastOperators } from \"./operators/CastOperators\";\nimport { ColorOperators } from \"./operators/ColorOperators\";\nimport { ComparisonOperators } from \"./operators/ComparisonOperators\";\nimport { FeatureOperators } from \"./operators/FeatureOperators\";\nimport { FlowOperators } from \"./operators/FlowOperators\";\nimport { MapOperators } from \"./operators/MapOperators\";\nimport { MathOperators } from \"./operators/MathOperators\";\nimport { MiscOperators } from \"./operators/MiscOperators\";\nimport { ObjectOperators } from \"./operators/ObjectOperators\";\nimport { StringOperators } from \"./operators/StringOperators\";\nimport { TypeOperators } from \"./operators/TypeOperators\";\nimport { VectorOperators } from \"./operators/VectorOperators\";\nimport { RGBA } from \"./RGBA\";\n\nimport * as THREE from \"three\";\nimport { Pixels } from \"./Pixels\";\n\nexport interface OperatorDescriptor {\n    /**\n     * Returns `true` if this operator requires a dynamic execution context (e.g. [\"zoom\"]).\n     */\n    isDynamicOperator?: (call: CallExpr) => boolean;\n\n    /**\n     * Evaluates the given expression.\n     */\n    call: (context: ExprEvaluatorContext, call: CallExpr) => Value;\n\n    /**\n     * Partial evaluate the `call` expression using the given `context`.\n     */\n    partialEvaluate?: (context: ExprEvaluatorContext, call: CallExpr) => Value;\n}\n\nexport interface OperatorDescriptorMap {\n    [name: string]: OperatorDescriptor;\n}\n\nconst operatorDescriptors = new Map<string, OperatorDescriptor>();\n\n/**\n * Promote string literals and values to color and pixel constants.\n *\n * @hidden\n * @internal\n */\nfunction promoteValue(context: ExprEvaluatorContext, expr: Expr): Value {\n    if (expr instanceof StringLiteralExpr) {\n        return expr.promotedValue ?? expr.value;\n    }\n\n    const value = context.evaluate(expr);\n\n    if (typeof value === \"string\") {\n        return RGBA.parse(value) ?? Pixels.parse(value) ?? value;\n    }\n\n    return value;\n}\n\nfunction cubicInterpolate(\n    context: ExprEvaluatorContext,\n    interp: InterpolateExpr,\n    t: number\n): Value {\n    if (t < interp.stops[0][0]) {\n        return promoteValue(context, interp.stops[0][1]);\n    } else if (t >= interp.stops[interp.stops.length - 1][0]) {\n        return promoteValue(context, interp.stops[interp.stops.length - 1][1]);\n    }\n\n    // indices\n    const i1 = interp.stops.findIndex(stop => stop[0] > t);\n    const i0 = Math.max(0, i1 - 1);\n    const iP = i0 === 0 ? i1 : i0 - 1;\n    const iN = i1 < interp.stops.length - 1 ? i1 + 1 : i1 - 1;\n\n    // keys\n    const tP = interp.stops[iP][0];\n    const t0 = interp.stops[i0][0];\n    const t1 = interp.stops[i1][0];\n    const tN = interp.stops[iN][0];\n\n    const dt = (t1 - t0) * 0.5;\n    const wP = dt / (t0 - tP);\n    const wN = dt / (tN - t1);\n    const p = (t - t0) / (t1 - t0);\n    const pp = p * p;\n    const ppp = pp * p;\n\n    // coefficients\n    const cP = -wP * ppp + 2 * wP * pp - wP * p;\n    const c0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n    const c1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n    const cN = wN * ppp - wN * pp;\n\n    // values\n    const vP = promoteValue(context, interp.stops[iP][1]);\n    const v0 = promoteValue(context, interp.stops[i0][1]);\n    const v1 = promoteValue(context, interp.stops[i1][1]);\n    const vN = promoteValue(context, interp.stops[iN][1]);\n\n    if (\n        typeof vP === \"number\" &&\n        typeof v0 === \"number\" &&\n        typeof v1 === \"number\" &&\n        typeof vN === \"number\"\n    ) {\n        return cP * vP + c0 * v0 + c1 * v1 + cN * vN;\n    } else if (\n        vP instanceof RGBA &&\n        v0 instanceof RGBA &&\n        v1 instanceof RGBA &&\n        vN instanceof RGBA\n    ) {\n        return new RGBA(\n            THREE.MathUtils.clamp(cP * vP.r + c0 * v0.r + c1 * v1.r + cN * vN.r, 0, 1),\n            THREE.MathUtils.clamp(cP * vP.g + c0 * v0.g + c1 * v1.g + cN * vN.g, 0, 1),\n            THREE.MathUtils.clamp(cP * vP.b + c0 * v0.b + c1 * v1.b + cN * vN.b, 0, 1),\n            THREE.MathUtils.clamp(cP * vP.a + c0 * v0.a + c1 * v1.a + cN * vN.a, 0, 1)\n        );\n    } else if (\n        vP instanceof Pixels &&\n        v0 instanceof Pixels &&\n        v1 instanceof Pixels &&\n        vN instanceof Pixels\n    ) {\n        return new Pixels(cP * vP.value + c0 * v0.value + c1 * v1.value + cN * vN.value);\n    } else if (\n        vP instanceof THREE.Color &&\n        v0 instanceof THREE.Color &&\n        v1 instanceof THREE.Color &&\n        vN instanceof THREE.Color\n    ) {\n        return new THREE.Color(\n            cP * vP.r + c0 * v0.r + c1 * v1.r + cN * vN.r,\n            cP * vP.g + c0 * v0.g + c1 * v1.g + cN * vN.g,\n            cP * vP.b + c0 * v0.b + c1 * v1.b + cN * vN.b\n        );\n    } else if (\n        vP instanceof THREE.Vector2 &&\n        v0 instanceof THREE.Vector2 &&\n        v1 instanceof THREE.Vector2 &&\n        vN instanceof THREE.Vector2\n    ) {\n        return new THREE.Vector2(\n            cP * vP.x + c0 * v0.x + c1 * v1.x + cN * vN.x,\n            cP * vP.y + c0 * v0.y + c1 * v1.y + cN * vN.y\n        );\n    } else if (\n        vP instanceof THREE.Vector3 &&\n        v0 instanceof THREE.Vector3 &&\n        v1 instanceof THREE.Vector3 &&\n        vN instanceof THREE.Vector3\n    ) {\n        return new THREE.Vector3(\n            cP * vP.x + c0 * v0.x + c1 * v1.x + cN * vN.x,\n            cP * vP.y + c0 * v0.y + c1 * v1.y + cN * vN.y,\n            cP * vP.z + c0 * v0.z + c1 * v1.z + cN * vN.z\n        );\n    } else if (\n        vP instanceof THREE.Vector4 &&\n        v0 instanceof THREE.Vector4 &&\n        v1 instanceof THREE.Vector4 &&\n        vN instanceof THREE.Vector4\n    ) {\n        return new THREE.Vector4(\n            cP * vP.x + c0 * v0.x + c1 * v1.x + cN * vN.x,\n            cP * vP.y + c0 * v0.y + c1 * v1.y + cN * vN.y,\n            cP * vP.z + c0 * v0.z + c1 * v1.z + cN * vN.z,\n            cP * vP.w + c0 * v0.w + c1 * v1.w + cN * vN.w\n        );\n    } else if (Array.isArray(vP) && Array.isArray(v0) && Array.isArray(v1) && Array.isArray(vN)) {\n        const N = vP.length;\n        const r: number[] = [];\n        for (let i = 0; i < N; ++i) {\n            r[i] = cP * vP[i] + c0 * v0[i] + c1 * v1[i] + cN * vN[i];\n        }\n        return r;\n    }\n\n    throw new Error(`failed to interpolate values`);\n}\n\n/*\n * @hidden\n */\nexport class ExprEvaluatorContext {\n    constructor(\n        readonly evaluator: ExprEvaluator,\n        readonly env: Env,\n        readonly scope: ExprScope,\n        readonly cache?: Map<Expr, Value>\n    ) {}\n\n    /**\n     * Evaluate the given expression.\n     *\n     * @param expr - The {@link Expr} to evaluate.\n     */\n    evaluate(expr: Expr | undefined) {\n        if (expr === undefined) {\n            throw new Error(\"Failed to evaluate expression\");\n        }\n\n        const cachedResult = this.cache?.get(expr);\n\n        if (cachedResult !== undefined) {\n            return cachedResult;\n        }\n\n        const result = expr.accept(this.evaluator, this);\n        this.cache?.set(expr, result);\n        return result;\n    }\n\n    /**\n     * Wraps the given value in an {@link Expr} if needed.\n     *\n     * @param value -\n     */\n    wrapValue(value: Value | Expr): Expr {\n        return Expr.isExpr(value) ? value : LiteralExpr.fromValue(value);\n    }\n}\n\n/**\n * [[ExprEvaluator]] is used to evaluate {@link Expr} in a given environment.\n *\n * @hidden\n */\nexport class ExprEvaluator implements ExprVisitor<Value, ExprEvaluatorContext> {\n    static defineOperator(op: string, builtin: OperatorDescriptor) {\n        operatorDescriptors.set(op, builtin);\n    }\n\n    static defineOperators(builtins: OperatorDescriptorMap) {\n        Object.getOwnPropertyNames(builtins).forEach(p => {\n            this.defineOperator(p, builtins[p]);\n        });\n    }\n\n    /**\n     * Returns the [[OperatorDescriptor]] for the given operator name.\n     * @hidden\n     */\n    static getOperator(op: string): OperatorDescriptor | undefined {\n        return operatorDescriptors.get(op);\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprEvaluatorContext): Value {\n        const value = context.env.lookup(expr.name);\n        return value !== undefined ? value : null;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprEvaluatorContext): Value {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprEvaluatorContext): Value {\n        return context.env.lookup(expr.name) !== undefined;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: ExprEvaluatorContext): Value {\n        const r = context.evaluate(match.value);\n        for (const [label, body] of match.branches) {\n            if (Array.isArray(label) && (label as any[]).includes(r)) {\n                return context.evaluate(body);\n            } else if (label === r) {\n                return context.evaluate(body);\n            }\n        }\n        return context.evaluate(match.fallback);\n    }\n\n    visitCaseExpr(match: CaseExpr, context: ExprEvaluatorContext): Value {\n        if (context.scope === ExprScope.Value) {\n            const firstDynamicCondition = match.branches.findIndex(([condition, _]) =>\n                condition.isDynamic()\n            );\n\n            if (firstDynamicCondition !== -1) {\n                let branches: Array<[Expr, Expr]> | undefined;\n\n                // tslint:disable-next-line: prefer-for-of\n                for (let i = 0; i < match.branches.length; ++i) {\n                    const [condition, body] = match.branches[i];\n\n                    const evaluatedCondition = context.evaluate(condition);\n                    const evaluatedBody = context.evaluate(body);\n\n                    if (i < firstDynamicCondition && Boolean(evaluatedCondition)) {\n                        return evaluatedBody;\n                    }\n\n                    if (!Expr.isExpr(evaluatedCondition) && !Boolean(evaluatedCondition)) {\n                        // skip this branch, it constantly evaluates to false.\n                        continue;\n                    }\n\n                    if (branches === undefined) {\n                        branches = [];\n                    }\n\n                    branches?.push([\n                        context.wrapValue(evaluatedCondition),\n                        context.wrapValue(evaluatedBody)\n                    ]);\n\n                    if (!Expr.isExpr(evaluatedCondition) && Boolean(evaluatedCondition)) {\n                        // skip unreachble expressions\n                        return new CaseExpr(branches, LiteralExpr.fromValue(null));\n                    }\n                }\n\n                const fallback = context.evaluate(match.fallback);\n\n                return branches === undefined\n                    ? fallback\n                    : new CaseExpr(branches, context.wrapValue(fallback));\n            }\n        }\n\n        for (const [condition, body] of match.branches) {\n            if (context.evaluate(condition)) {\n                return context.evaluate(body);\n            }\n        }\n\n        return context.evaluate(match.fallback);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprEvaluatorContext): Value {\n        const descriptor = expr.descriptor ?? operatorDescriptors.get(expr.op);\n\n        if (descriptor) {\n            expr.descriptor = descriptor;\n\n            let result: Value;\n\n            if (context.scope === ExprScope.Value && expr.isDynamic()) {\n                if (expr.descriptor.partialEvaluate) {\n                    return expr.descriptor.partialEvaluate(context, expr);\n                }\n\n                const args = expr.args.map(arg => {\n                    return context.wrapValue(context.evaluate(arg));\n                });\n\n                if (args.every((arg, i) => arg === expr.args[i])) {\n                    return expr;\n                }\n\n                result = new CallExpr(expr.op, args);\n            } else {\n                result = descriptor.call(context, expr);\n            }\n\n            return result;\n        }\n\n        throw new Error(`undefined operator '${expr.op}'`);\n    }\n\n    visitStepExpr(expr: StepExpr, context: ExprEvaluatorContext): Value {\n        if (context.scope === ExprScope.Value) {\n            const input = context.evaluate(expr.input);\n            const defaultValue = context.evaluate(expr.defaultValue);\n            return new StepExpr(\n                context.wrapValue(input),\n                context.wrapValue(defaultValue),\n                // tslint:disable-next-line: no-shadowed-variable\n                expr.stops.map(([key, value]) => {\n                    const v = context.evaluate(value);\n                    return [key, context.wrapValue(v)];\n                })\n            );\n        } else {\n            const input = context.evaluate(expr.input);\n\n            if (typeof input !== \"number\") {\n                throw new Error(`input '${input}' must be a number`);\n            }\n\n            if (input < expr.stops[0][0]) {\n                return context.evaluate(expr.defaultValue);\n            }\n\n            let index = expr.stops.findIndex(s => s[0] > input);\n\n            if (index === -1) {\n                index = expr.stops.length;\n            }\n\n            return context.evaluate(expr.stops[index - 1][1]);\n        }\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: ExprEvaluatorContext): Value {\n        if (context.scope === ExprScope.Value) {\n            const input = context.evaluate(expr.input);\n            return new InterpolateExpr(\n                expr.mode,\n                context.wrapValue(input),\n                expr.stops.map(([key, value]) => {\n                    const v = context.evaluate(value);\n                    return [key, context.wrapValue(v)];\n                })\n            );\n        } else {\n            const param = context.evaluate(expr.input);\n\n            if (typeof param !== \"number\") {\n                throw new Error(`input must be a number`);\n            }\n\n            if (expr.mode[0] === \"cubic\") {\n                return cubicInterpolate(context, expr, param);\n            }\n\n            const keyIndex = expr.stops.findIndex(stop => stop[0] > param);\n\n            if (keyIndex === -1) {\n                // all the keys are smaller than the parameter\n                return context.evaluate(expr.stops[expr.stops.length - 1][1]);\n            } else if (keyIndex === 0) {\n                return context.evaluate(expr.stops[0][1]);\n            }\n\n            const [key, value] = expr.stops[keyIndex];\n            const [prevKey, prevValue] = expr.stops[keyIndex - 1];\n\n            const v0 = promoteValue(context, prevValue);\n\n            let t = 0;\n\n            switch (expr.mode[0]) {\n                case \"discrete\":\n                    return v0;\n\n                case \"linear\":\n                    t = (param - prevKey) / (key - prevKey);\n                    break;\n\n                case \"exponential\": {\n                    const base = expr.mode[1];\n                    t = (Math.pow(base, param - prevKey) - 1) / (Math.pow(base, key - prevKey) - 1);\n                    break;\n                }\n\n                default:\n                    throw new Error(\n                        `interpolation mode ${JSON.stringify(expr.mode)} is not supported`\n                    );\n            }\n\n            const v1 = promoteValue(context, value);\n\n            if (typeof v0 === \"number\" && typeof v1 === \"number\") {\n                return THREE.MathUtils.lerp(v0, v1, t);\n            } else if (v0 instanceof RGBA && v1 instanceof RGBA) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof Pixels && v1 instanceof Pixels) {\n                return new Pixels(THREE.MathUtils.lerp(v0.value, v1.value, t));\n            } else if (v0 instanceof THREE.Color && v1 instanceof THREE.Color) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof THREE.Vector2 && v1 instanceof THREE.Vector2) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof THREE.Vector3 && v1 instanceof THREE.Vector3) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof THREE.Vector4 && v1 instanceof THREE.Vector4) {\n                return v0.clone().lerp(v1, t);\n            } else if (Array.isArray(v0) && Array.isArray(v1) && v0.length === v1.length) {\n                return v0.map((x, i) => THREE.MathUtils.lerp(x, (v1 as number[])[i], t));\n            }\n\n            throw new Error(`todo: mix(${JSON.stringify(v0)}, ${JSON.stringify(v1)}, ${t})`);\n        }\n    }\n}\n\nExprEvaluator.defineOperators(CastOperators);\nExprEvaluator.defineOperators(ComparisonOperators);\nExprEvaluator.defineOperators(MathOperators);\nExprEvaluator.defineOperators(StringOperators);\nExprEvaluator.defineOperators(ColorOperators);\nExprEvaluator.defineOperators(TypeOperators);\nExprEvaluator.defineOperators(MiscOperators);\nExprEvaluator.defineOperators(FlowOperators);\nExprEvaluator.defineOperators(ArrayOperators);\nExprEvaluator.defineOperators(ObjectOperators);\nExprEvaluator.defineOperators(FeatureOperators);\nExprEvaluator.defineOperators(MapOperators);\nExprEvaluator.defineOperators(VectorOperators);\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr, JsonArray, NumberLiteralExpr, StringLiteralExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst VALID_ELEMENT_TYPES = [\"boolean\", \"number\", \"string\"];\n\nfunction checkElementTypes(arg: Expr, array: JsonArray) {\n    if (!(arg instanceof StringLiteralExpr) || !VALID_ELEMENT_TYPES.includes(arg.value)) {\n        throw new Error(\n            `expected \"boolean\", \"number\" or \"string\" instead of '${JSON.stringify(arg)}'`\n        );\n    }\n\n    const ty = arg.value;\n\n    array.forEach((element, index) => {\n        if (typeof element !== ty) {\n            throw new Error(`expected array element at index ${index} to have type '${ty}'`);\n        }\n    });\n}\n\nfunction checkArrayLength(arg: Expr, array: JsonArray) {\n    if (!(arg instanceof NumberLiteralExpr)) {\n        throw new Error(`missing expected number of elements`);\n    }\n\n    const length = arg.value;\n\n    if (array.length !== length) {\n        throw new Error(`the array must have ${length} element(s)`);\n    }\n}\n\nfunction checkArray(context: ExprEvaluatorContext, arg: Expr) {\n    const value = context.evaluate(arg);\n    if (!Array.isArray(value)) {\n        throw new Error(`'${value}' is not an array`);\n    }\n    return value;\n}\n\nconst operators = {\n    array: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            switch (call.args.length) {\n                case 0:\n                    throw new Error(\"not enough arguments\");\n                case 1:\n                    return checkArray(context, call.args[0]);\n                case 2: {\n                    const array = checkArray(context, call.args[1]);\n                    checkElementTypes(call.args[0], array);\n                    return array;\n                }\n                case 3: {\n                    const array = checkArray(context, call.args[2]);\n                    checkArrayLength(call.args[1], array);\n                    checkElementTypes(call.args[0], array);\n                    return array;\n                }\n                default:\n                    throw new Error(\"too many arguments\");\n            }\n        }\n    },\n    \"make-array\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length === 0) {\n                throw new Error(\"not enough arguments\");\n            }\n            return [...call.args.map(arg => context.evaluate(arg))];\n        }\n    },\n    at: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const args = call.args;\n            const index = context.evaluate(args[0]);\n            if (typeof index !== \"number\") {\n                throw new Error(`expected the index of the element to retrieve`);\n            }\n            const value = context.evaluate(args[1]);\n            if (!Array.isArray(value)) {\n                throw new Error(`expected an array`);\n            }\n            return index >= 0 && index < value.length ? value[index] : null;\n        }\n    }\n};\n\nexport const ArrayOperators: OperatorDescriptorMap = operators;\nexport type ArrayOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"to-boolean\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Boolean(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-string\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-number\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const arg of call.args) {\n                const value = Number(context.evaluate(arg));\n                if (!isNaN(value)) {\n                    return value;\n                }\n            }\n            throw new Error(\"cannot convert the value to a number\");\n        }\n    }\n};\n\nexport const CastOperators: OperatorDescriptorMap = operators;\nexport type CastOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { ColorUtils } from \"../ColorUtils\";\nimport { CallExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\nimport { parseStringEncodedColor } from \"../StringEncodedNumeral\";\n\nconst operators = {\n    alpha: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            let color: Value | undefined = context.evaluate(call.args[0]);\n            if (typeof color === \"string\") {\n                color = parseStringEncodedColor(color);\n            }\n            const alpha = typeof color === \"number\" ? ColorUtils.getAlphaFromHex(color) : 1;\n            return alpha;\n        }\n    },\n    rgba: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            const a = context.evaluate(call.args[3]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                typeof a === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0 &&\n                a >= 0 &&\n                a <= 1\n            ) {\n                return rgbaToHex(r, g, b, a);\n            }\n            throw new Error(`unknown color 'rgba(${r},${g},${b},${a})'`);\n        }\n    },\n    rgb: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0\n            ) {\n                return rgbToHex(r, g, b);\n            }\n            throw new Error(`unknown color 'rgb(${r},${g},${b})'`);\n        }\n    },\n    // Hsl operator contains angle modulated to <0, 360> range, percent of\n    // saturation and lightness in <0, 100> range, i.e. hsl(360, 100, 100)\n    hsl: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const h = context.evaluate(call.args[0]);\n            const s = context.evaluate(call.args[1]);\n            const l = context.evaluate(call.args[2]);\n            if (\n                typeof h === \"number\" &&\n                typeof s === \"number\" &&\n                typeof l === \"number\" &&\n                h >= 0 &&\n                s >= 0 &&\n                l >= 0\n            ) {\n                return hslToHex(h, s, l);\n            }\n            throw new Error(`unknown color 'hsl(${h},${s}%,${l}%)'`);\n        }\n    }\n};\n\nfunction rgbaToHex(r: number, g: number, b: number, a: number): number {\n    // We decode rgba color channels using custom hex format with transparency.\n    return ColorUtils.getHexFromRgba(\n        THREE.MathUtils.clamp(r, 0, 255) / 255,\n        THREE.MathUtils.clamp(g, 0, 255) / 255,\n        THREE.MathUtils.clamp(b, 0, 255) / 255,\n        THREE.MathUtils.clamp(a, 0, 1)\n    );\n}\n\nfunction rgbToHex(r: number, g: number, b: number): number {\n    return ColorUtils.getHexFromRgb(\n        THREE.MathUtils.clamp(r, 0, 255) / 255,\n        THREE.MathUtils.clamp(g, 0, 255) / 255,\n        THREE.MathUtils.clamp(b, 0, 255) / 255\n    );\n}\n\nfunction hslToHex(h: number, s: number, l: number): number {\n    return ColorUtils.getHexFromHsl(\n        THREE.MathUtils.euclideanModulo(h, 360) / 360,\n        THREE.MathUtils.clamp(s, 0, 100) / 100,\n        THREE.MathUtils.clamp(l, 0, 100) / 100\n    );\n}\n\nexport const ColorOperators: OperatorDescriptorMap = operators;\nexport type ColorOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction compare(context: ExprEvaluatorContext, call: CallExpr, strict: boolean = false) {\n    const left = context.evaluate(call.args[0]) as any;\n    const right = context.evaluate(call.args[1]) as any;\n\n    if (\n        !(\n            (typeof left === \"number\" && typeof right === \"number\") ||\n            (typeof left === \"string\" && typeof right === \"string\")\n        )\n    ) {\n        if (strict) {\n            throw new Error(`invalid operands '${left}' and '${right}' for operator '${call.op}'`);\n        }\n    }\n\n    switch (call.op) {\n        case \"<\":\n            return left < right;\n        case \">\":\n            return left > right;\n        case \"<=\":\n            return left <= right;\n        case \">=\":\n            return left >= right;\n        default:\n            throw new Error(`invalid comparison operator '${call.op}'`);\n    }\n}\n\nconst operators = {\n    \"!\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return !context.evaluate(call.args[0]);\n        }\n    },\n\n    \"==\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left === right;\n        }\n    },\n\n    \"!=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left !== right;\n        }\n    },\n\n    \"<\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \"<=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) }\n};\n\nexport const ComparisonOperators: OperatorDescriptorMap = operators;\nexport type ComparisonOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env } from \"../Env\";\nimport { CallExpr, ExprScope } from \"../Expr\";\n\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"geometry-type\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const geometryType = context.env.lookup(\"$geometryType\");\n            switch (geometryType) {\n                case \"point\":\n                    return \"Point\";\n                case \"line\":\n                    return \"LineString\";\n                case \"polygon\":\n                    return \"Polygon\";\n                default:\n                    return null;\n            }\n        }\n    },\n    \"feature-state\": {\n        isDynamicOperator: () => true,\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (context.scope !== ExprScope.Dynamic) {\n                throw new Error(\"feature-state cannot be used in this context\");\n            }\n            const property = context.evaluate(call.args[0]);\n            if (typeof property !== \"string\") {\n                throw new Error(`expected the name of the property of the feature state`);\n            }\n            const state = context.env.lookup(\"$state\");\n            if (Env.isEnv(state)) {\n                return state.lookup(property) ?? null;\n            } else if (state instanceof Map) {\n                return state.get(property) ?? null;\n            }\n            return null;\n        }\n    },\n    id: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return context.env.lookup(\"$id\") ?? null;\n        }\n    }\n};\n\nexport const FeatureOperators: OperatorDescriptorMap = operators;\nexport type FeatureOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction conditionalCast(context: ExprEvaluatorContext, type: string, args: Expr[]) {\n    switch (type) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n            for (const childExpr of args) {\n                const value = context.evaluate(childExpr);\n                if (typeof value === type) {\n                    return value;\n                }\n            }\n            throw new Error(`expected a '${type}'`);\n        default:\n            throw new Error(`invalid type '${type}'`);\n    } // switch\n}\n\nconst operators = {\n    all: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (!context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    any: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n\n    none: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    boolean: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"boolean\", call.args);\n        }\n    },\n\n    number: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"number\", call.args);\n        }\n    },\n\n    string: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"string\", call.args);\n        }\n    }\n};\n\nexport const FlowOperators: OperatorDescriptorMap = operators;\nexport type FlowOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, ExprScope, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"ppi-scale\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            return value * scaleFactor;\n        }\n    },\n    \"world-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidth = Math.pow(2, 17) / Math.pow(2, zoom);\n            const v = pixels * zoomWidth * scaleFactor;\n            return v;\n        }\n    },\n    \"world-discrete-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidthDiscrete = Math.pow(2, 17.8) / Math.pow(2, Math.floor(zoom));\n            const v = pixels * zoomWidthDiscrete * scaleFactor;\n            return v;\n        }\n    },\n    ppi: {\n        call: (context: ExprEvaluatorContext) => {\n            const ppi = context.env.lookup(\"$ppi\");\n            if (typeof ppi === \"number\") {\n                return ppi;\n            }\n            return 72;\n        }\n    },\n    zoom: {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr): Value => {\n            if (context.scope === ExprScope.Value) {\n                return call;\n            }\n            return context.env.lookup(\"$zoom\") ?? null;\n        }\n    }\n};\n\nexport const MapOperators: OperatorDescriptorMap = operators;\nexport type MapOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nimport * as THREE from \"three\";\n\nconst operators = {\n    \"^\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '^'`\n                );\n            }\n            return Math.pow(a, b);\n        }\n    },\n\n    \"-\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length === 1) {\n                const value = context.evaluate(call.args[0]);\n                if (typeof value !== \"number\") {\n                    throw new Error(`ìnvalid operand '${typeof value} for operator '-'`);\n                }\n\n                return -value;\n            }\n\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '-'`\n                );\n            }\n            return a - b;\n        }\n    },\n\n    \"/\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '/'`\n                );\n            }\n            return a / b;\n        }\n    },\n\n    \"%\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '%'`\n                );\n            }\n            return a % b;\n        }\n    },\n\n    \"+\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) + Number(context.evaluate(b)), 0);\n        }\n    },\n\n    \"*\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) * Number(context.evaluate(b)), 1);\n        }\n    },\n\n    abs: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'abs'`);\n            }\n            return Math.abs(value);\n        }\n    },\n\n    acos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'acos'`);\n            }\n            return Math.acos(value);\n        }\n    },\n\n    asin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'asin'`);\n            }\n            return Math.asin(value);\n        }\n    },\n\n    atan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'atan'`);\n            }\n            return Math.atan(value);\n        }\n    },\n\n    ceil: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ceil'`);\n            }\n            return Math.ceil(value);\n        }\n    },\n\n    cos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'cos'`);\n            }\n            return Math.cos(value);\n        }\n    },\n\n    e: {\n        call: () => {\n            return Math.E;\n        }\n    },\n\n    floor: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'floor'`);\n            }\n            return Math.floor(value);\n        }\n    },\n\n    ln: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln'`);\n            }\n            return Math.log(value);\n        }\n    },\n\n    ln2: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln2'`);\n            }\n            return Math.log2(value);\n        }\n    },\n\n    log10: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'log10'`);\n            }\n            return Math.log10(value);\n        }\n    },\n\n    max: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.max(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    min: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.min(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    /**\n     * Clamp numeric value to given range, inclusive.\n     *\n     * Synopsis:\n     * ```\n     * [\"clamp\", v: number, min: number, max: number]`\n     * ```\n     */\n    clamp: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const v = context.evaluate(call.args[0]);\n            const min = context.evaluate(call.args[1]);\n            const max = context.evaluate(call.args[2]);\n\n            if (typeof v !== \"number\" || typeof min !== \"number\" || typeof max !== \"number\") {\n                throw new Error(`invalid operands '${v}', ${min}, ${max} for operator 'clamp'`);\n            }\n            return THREE.MathUtils.clamp(v, min, max);\n        }\n    },\n\n    pi: {\n        call: () => {\n            return Math.PI;\n        }\n    },\n\n    round: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'round'`);\n            }\n            return Math.round(value);\n        }\n    },\n\n    sin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sin'`);\n            }\n            return Math.sin(value);\n        }\n    },\n\n    sqrt: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sqrt'`);\n            }\n            return Math.sqrt(value);\n        }\n    },\n\n    tan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'tan'`);\n            }\n            return Math.tan(value);\n        }\n    }\n};\n\nexport const MathOperators: OperatorDescriptorMap = operators;\nexport type MathOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    length: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (Array.isArray(value) || typeof value === \"string\") {\n                return value.length;\n            }\n            throw new Error(`invalid operand '${value}' for operator 'length'`);\n        }\n    },\n    coalesce: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                const value = context.evaluate(childExpr);\n                if (value !== null) {\n                    return value;\n                }\n            }\n            return null;\n        }\n    }\n};\n\nexport const MiscOperators: OperatorDescriptorMap = operators;\nexport type MiscOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr, ExprScope } from \"../Expr\";\n\nimport { Env } from \"../Env\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nenum LookupMode {\n    get,\n    has\n}\n\nfunction lookupMember(context: ExprEvaluatorContext, args: Expr[], lookupMode: LookupMode) {\n    const memberName = context.evaluate(args[0]);\n\n    if (typeof memberName !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n\n    const object = context.evaluate(args[1]) as any;\n\n    if (object && typeof object === \"object\") {\n        if (Env.isEnv(object)) {\n            const value = object.lookup(memberName) ?? null;\n            return lookupMode === LookupMode.get ? value : value !== null;\n        }\n        if (hasOwnProperty.call(object, memberName)) {\n            return lookupMode === LookupMode.get ? object[memberName] : true;\n        }\n    }\n\n    return lookupMode === LookupMode.get ? null : false;\n}\n\nconst operators = {\n    in: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            const object = context.evaluate(call.args[1]);\n            if (typeof value === \"string\" && typeof object === \"string\") {\n                return object.includes(value);\n            } else if (Array.isArray(object)) {\n                return object.includes(value);\n            }\n            return false;\n        }\n    },\n\n    get: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.get)\n    },\n\n    has: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.has)\n    },\n\n    \"dynamic-properties\": {\n        isDynamicOperator: () => true,\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (context.scope === ExprScope.Dynamic) {\n                return context.env;\n            }\n            return call;\n        }\n    }\n};\n\nexport const ObjectOperators: OperatorDescriptorMap = operators;\nexport type ObjectOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    concat: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return \"\".concat(...call.args.map(a => String(context.evaluate(a))));\n        }\n    },\n\n    downcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleLowerCase();\n        }\n    },\n\n    upcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleUpperCase();\n        }\n    },\n\n    \"~=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.indexOf(right) !== -1;\n            }\n            return false;\n        }\n    },\n\n    \"^=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.startsWith(right);\n            }\n            return false;\n        }\n    },\n\n    \"$=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.endsWith(right);\n            }\n            return false;\n        }\n    }\n};\n\nexport const StringOperators: OperatorDescriptorMap = operators;\nexport type StringOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    typeof: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return typeof context.evaluate(call.args[0]);\n        }\n    }\n};\n\nexport const TypeOperators: OperatorDescriptorMap = operators;\nexport type TypeOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Value } from \"../Env\";\nimport { CallExpr, NumberLiteralExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nimport * as THREE from \"three\";\n\ntype MakeVectorCallExpr = CallExpr & {\n    _value?: THREE.Vector2 | THREE.Vector3 | THREE.Vector4;\n};\n\nfunction isVector(\n    context: ExprEvaluatorContext,\n    call: CallExpr,\n    type: \"vector2\" | \"vector3\" | \"vector4\"\n): Value {\n    let ctor: new () => object;\n    switch (type) {\n        case \"vector2\":\n            ctor = THREE.Vector2;\n            break;\n        case \"vector3\":\n            ctor = THREE.Vector3;\n            break;\n        case \"vector4\":\n            ctor = THREE.Vector4;\n            break;\n    }\n    for (const childExpr of call.args) {\n        const value = context.evaluate(childExpr);\n        if (value instanceof ctor) {\n            return value;\n        }\n    }\n    throw new Error(`expected a \"${type}\"`);\n}\n\nfunction toVector(\n    context: ExprEvaluatorContext,\n    call: CallExpr,\n    type: \"vector2\" | \"vector3\" | \"vector4\"\n): Value {\n    let VectorCtor: any;\n    let components: number;\n\n    switch (type) {\n        case \"vector2\":\n            VectorCtor = THREE.Vector2;\n            components = 2;\n            break;\n        case \"vector3\":\n            VectorCtor = THREE.Vector3;\n            components = 3;\n            break;\n        case \"vector4\":\n            VectorCtor = THREE.Vector4;\n            components = 4;\n            break;\n    }\n\n    for (const childExpr of call.args) {\n        const value = context.evaluate(childExpr);\n        if (value instanceof VectorCtor) {\n            return value;\n        } else if (\n            Array.isArray(value) &&\n            value.length === components &&\n            value.every(v => typeof v === \"number\")\n        ) {\n            return new VectorCtor().fromArray(value);\n        }\n    }\n    throw new Error(`expected a \"${type}\"`);\n}\n\nconst operators = {\n    \"make-vector\": {\n        call: (context: ExprEvaluatorContext, call: MakeVectorCallExpr) => {\n            if (call._value !== undefined) {\n                return call._value;\n            }\n\n            if (call.args.length < 2) {\n                throw new Error(\"not enough arguments\");\n            } else if (call.args.length > 4) {\n                throw new Error(\"too many arguments\");\n            }\n\n            const components = call.args.map(arg => context.evaluate(arg)) as number[];\n\n            components.forEach((element, index) => {\n                if (typeof element !== \"number\") {\n                    throw new Error(\n                        `expected vector component at index ${index} to have type \"number\"`\n                    );\n                }\n            });\n\n            let result: THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | undefined;\n\n            switch (components.length) {\n                case 2:\n                    result = new THREE.Vector2().fromArray(components);\n                    break;\n                case 3:\n                    result = new THREE.Vector3().fromArray(components);\n                    break;\n                case 4:\n                    result = new THREE.Vector4().fromArray(components);\n                    break;\n                default:\n                    throw new Error(\"too many arguments\");\n            }\n\n            if (call.args.every(arg => arg instanceof NumberLiteralExpr)) {\n                call._value = result;\n            }\n\n            return result;\n        }\n    },\n    vector2: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector2\")\n    },\n    vector3: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector3\")\n    },\n    vector4: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector4\")\n    },\n    \"to-vector2\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector2\")\n    },\n    \"to-vector3\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector3\")\n    },\n    \"to-vector4\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector4\")\n    }\n};\n\nexport const VectorOperators: OperatorDescriptorMap = operators;\nexport type VectorOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    LiteralExpr,\n    MatchExpr,\n    MatchLabel,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\nimport { Env } from \"./Env\";\n\nexport interface InstantiationContext {\n    /**\n     * The {@link Env} used to lookup for names.\n     */\n    env: Env;\n\n    /**\n     * The names to preserve during the instantiation.\n     */\n    preserve?: Set<string>;\n}\n\nconst emptyEnv = new Env();\n\n/**\n * @hidden\n */\nexport class ExprInstantiator implements ExprVisitor<Expr, InstantiationContext> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name);\n        return LiteralExpr.fromValue(value !== undefined ? value : null);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name) !== undefined;\n        return LiteralExpr.fromValue(value);\n    }\n\n    visitCallExpr(expr: CallExpr, context: InstantiationContext): Expr {\n        const args = expr.args.map(arg => arg.accept(this, context));\n        if (args.some((a, i) => a !== expr.args[i])) {\n            return new CallExpr(expr.op, args);\n        }\n        return expr;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: InstantiationContext): Expr {\n        const value = match.value.accept(this, context);\n\n        if (value instanceof LiteralExpr) {\n            const r = value.value;\n            for (const [label, body] of match.branches) {\n                if (Array.isArray(label) && (label as any[]).includes(r)) {\n                    return body.accept(this, context);\n                } else if (label === r) {\n                    return body.accept(this, context);\n                }\n            }\n            return match.fallback.accept(this, context);\n        }\n\n        let changed = match.value !== value;\n\n        const branches: Array<[MatchLabel, Expr]> = match.branches.map(([label, branch]) => {\n            const newBranch = branch.accept(this, context);\n            if (newBranch !== branch) {\n                changed = true;\n            }\n            return [label, newBranch];\n        });\n\n        const fallback = match.fallback.accept(this, context);\n\n        if (fallback !== match.fallback) {\n            changed = true;\n        }\n\n        return changed ? new MatchExpr(value, branches, fallback) : match;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: InstantiationContext): Expr {\n        const branches: Array<[Expr, Expr]> = [];\n\n        let changed = false;\n\n        for (const [condition, branch] of expr.branches) {\n            const newCondition = condition.accept(this, context);\n            const deps = newCondition.dependencies();\n            if (!condition.isDynamic() && deps.properties.size === 0) {\n                if (Boolean(newCondition.evaluate(emptyEnv, ExprScope.Condition))) {\n                    return branch.accept(this, context);\n                }\n            } else {\n                if (newCondition !== condition) {\n                    changed = true;\n                }\n                branches.push([newCondition, branch]);\n            }\n        }\n\n        if (branches.length === 0) {\n            // all the conditions of this CaseExpr evaluated\n            // to false, so the resulting of instantiating this CaseExpr\n            // is the same as instantiating its fallback expression.\n            return expr.fallback.accept(this, context);\n        }\n\n        if (branches.length !== expr.branches.length) {\n            // the number of branches changed, this means that\n            // some of the branches had constant expressions that\n            // evaluate to false. In this case the resulting\n            // `CaseExpr` has less branches.\n            changed = true;\n        }\n\n        // Instantiate the body of all the branches of this CaseExpr\n        // that have dynamic conditions.\n        branches.forEach(branch => {\n            const instantiatedBranch = branch[1].accept(this, context);\n\n            if (instantiatedBranch !== branch[1]) {\n                changed = true;\n            }\n\n            branch[1] = instantiatedBranch;\n        });\n\n        const fallback = expr.fallback.accept(this, context);\n\n        if (fallback !== expr.fallback) {\n            changed = true;\n        }\n\n        if (!changed) {\n            // nothing changed, return the old expression.\n            return expr;\n        }\n\n        return new CaseExpr(branches, fallback);\n    }\n\n    visitStepExpr(expr: StepExpr, context: InstantiationContext): Expr {\n        const input = expr.input.accept(this, context);\n        const defaultValue = expr.defaultValue.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(([key, value]) => [\n            key,\n            value.accept(this, context)\n        ]);\n        return new StepExpr(input, defaultValue, stops);\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: InstantiationContext): Expr {\n        const input = expr.input.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(([key, value]) => [\n            key,\n            value.accept(this, context)\n        ]);\n        return new InterpolateExpr(expr.mode, input, stops);\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    CallExpr,\n    EqualityOp,\n    Expr,\n    HasAttributeExpr,\n    LiteralExpr,\n    NumberLiteralExpr,\n    RelationalOp,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\n/**\n * Character value\n */\nenum Character {\n    Tab = 9,\n    Lf = 10,\n    Cr = 13,\n    Space = 32,\n    LParen = 40,\n    RParen = 41,\n    Comma = 44,\n    Dot = 46,\n    LBracket = 91,\n    Backslash = 92,\n    RBracket = 93,\n    _0 = 48,\n    _9 = 57,\n    _ = 95,\n    A = 64,\n    Z = 90,\n    a = 97,\n    z = 122,\n    DoubleQuote = 34,\n    SingleQuote = 39,\n    Exclaim = 33,\n    Equal = 61,\n    Caret = 94,\n    Tilde = 126,\n    Dollar = 36,\n    Less = 60,\n    Greater = 62,\n    Bar = 124,\n    Amp = 38\n}\n\n/**\n * Check if a codepoint is a whitespace character.\n */\nfunction isSpace(codepoint: number): boolean {\n    switch (codepoint) {\n        case Character.Tab:\n        case Character.Lf:\n        case Character.Cr:\n        case Character.Space:\n            return true;\n        default:\n            return false;\n    } // switch\n}\n\n/**\n * Check if codepoint is a digit character.\n */\nfunction isNumber(codepoint: number): boolean {\n    return codepoint >= Character._0 && codepoint <= Character._9;\n}\n\n/**\n * Check if codepoint is a letter character.\n */\nfunction isLetter(codepoint: number): boolean {\n    return (\n        (codepoint >= Character.a && codepoint <= Character.z) ||\n        (codepoint >= Character.A && codepoint <= Character.Z)\n    );\n}\n\n/**\n * Check if codepoint is either a digit or a letter character.\n */\nfunction isLetterOrNumber(codepoint: number): boolean {\n    return isLetter(codepoint) || isNumber(codepoint);\n}\n\n/**\n * Check if codepoint is an identification character: underscore, dollar sign, dot or bracket.\n */\nfunction isIdentChar(codepoint: number): boolean {\n    return (\n        isLetterOrNumber(codepoint) ||\n        codepoint === Character._ ||\n        codepoint === Character.Dollar ||\n        codepoint === Character.Dot ||\n        codepoint === Character.LBracket ||\n        codepoint === Character.RBracket\n    );\n}\n\n/**\n * Tokens used in theme grammar.\n */\nenum Token {\n    Eof = 0,\n    Error,\n    Identifier,\n    Number,\n    String,\n    Comma,\n    LParen,\n    RParen,\n    LBracket,\n    RBracket,\n    Exclaim,\n    TildeEqual,\n    CaretEqual,\n    DollarEqual,\n    EqualEqual,\n    ExclaimEqual,\n    Less,\n    Greater,\n    LessEqual,\n    GreaterEqual,\n    BarBar,\n    AmpAmp\n}\n\n/**\n * Maps a token to its string name.\n */\nfunction tokenSpell(token: Token): string {\n    switch (token) {\n        case Token.Eof:\n            return \"eof\";\n        case Token.Error:\n            return \"error\";\n        case Token.Identifier:\n            return \"identifier\";\n        case Token.Number:\n            return \"number\";\n        case Token.String:\n            return \"string\";\n        case Token.Comma:\n            return \",\";\n        case Token.LParen:\n            return \"(\";\n        case Token.RParen:\n            return \")\";\n        case Token.LBracket:\n            return \"[\";\n        case Token.RBracket:\n            return \"]\";\n        case Token.Exclaim:\n            return \"!\";\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        case Token.BarBar:\n            return \"||\";\n        case Token.AmpAmp:\n            return \"&&\";\n        default:\n            throw new Error(`invalid token ${token}`);\n    }\n}\n\n/**\n * Lexer class implementation.\n */\nclass Lexer {\n    private m_token: Token = Token.Error;\n    private m_index = 0;\n    private m_char: number = Character.Lf;\n    private m_text?: string;\n\n    constructor(readonly code: string) {}\n\n    /**\n     * Single lexer token.\n     */\n    token(): Token {\n        return this.m_token;\n    }\n\n    /**\n     * Parsed text.\n     */\n    text(): string {\n        return this.m_text || \"\";\n    }\n\n    /**\n     * Go to the next token.\n     */\n    next(): Token {\n        this.m_token = this.yylex();\n        if (this.m_token === Token.Error) {\n            throw new Error(`unexpected character ${this.m_char}`);\n        }\n        return this.m_token;\n    }\n\n    private yyinp(): void {\n        this.m_char = this.code.codePointAt(this.m_index++) || 0;\n    }\n\n    private yylex(): Token {\n        this.m_text = undefined;\n        while (isSpace(this.m_char)) {\n            this.yyinp();\n        }\n        if (this.m_char === 0) {\n            return Token.Eof;\n        }\n        const ch = this.m_char;\n        this.yyinp();\n        switch (ch) {\n            case Character.LParen:\n                return Token.LParen;\n            case Character.RParen:\n                return Token.RParen;\n            case Character.LBracket:\n                return Token.LBracket;\n            case Character.RBracket:\n                return Token.RBracket;\n            case Character.Comma:\n                return Token.Comma;\n            case Character.SingleQuote:\n            case Character.DoubleQuote: {\n                const start = this.m_index - 1;\n                while (this.m_char && this.m_char !== ch) {\n                    // ### TODO handle escape sequences\n                    this.yyinp();\n                }\n                if (this.m_char !== ch) {\n                    throw new Error(\"Unfinished string literal\");\n                }\n                this.yyinp();\n                this.m_text = this.code.substring(start, this.m_index - 2);\n                return Token.String;\n            }\n            case Character.Exclaim:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.ExclaimEqual;\n                }\n                return Token.Exclaim;\n            case Character.Caret:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.CaretEqual;\n                }\n                return Token.Error;\n            case Character.Tilde:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.TildeEqual;\n                }\n                return Token.Error;\n            case Character.Equal:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.EqualEqual;\n                }\n                return Token.Error;\n            case Character.Less:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.LessEqual;\n                }\n                return Token.Less;\n            case Character.Greater:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.GreaterEqual;\n                }\n                return Token.Greater;\n            case Character.Bar:\n                if (this.m_char === Character.Bar) {\n                    this.yyinp();\n                    return Token.BarBar;\n                }\n                return Token.Error;\n            case Character.Amp:\n                if (this.m_char === Character.Amp) {\n                    this.yyinp();\n                    return Token.AmpAmp;\n                }\n                return Token.Error;\n            default: {\n                const start = this.m_index - 2;\n                if (\n                    isLetter(ch) ||\n                    ch === Character._ ||\n                    (ch === Character.Dollar && isIdentChar(this.m_char))\n                ) {\n                    while (isIdentChar(this.m_char)) {\n                        this.yyinp();\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Identifier;\n                } else if (isNumber(ch)) {\n                    while (isNumber(this.m_char)) {\n                        this.yyinp();\n                    }\n                    if (this.m_char === Character.Dot) {\n                        this.yyinp();\n                        while (isNumber(this.m_char)) {\n                            this.yyinp();\n                        }\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Number;\n                } else if (ch === Character.Dollar) {\n                    if (this.m_char === Character.Equal) {\n                        this.yyinp();\n                        return Token.DollarEqual;\n                    }\n                    return Token.Error;\n                }\n            }\n        }\n        return Token.Error;\n    }\n}\n\nfunction getEqualityOp(token: Token): EqualityOp | undefined {\n    switch (token) {\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nfunction getRelationalOp(token: Token): RelationalOp | undefined {\n    switch (token) {\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nexport class ExprParser {\n    private readonly lex: Lexer;\n\n    constructor(code: string) {\n        this.lex = new Lexer(code);\n        this.lex.next();\n    }\n\n    parse(): Expr | never {\n        return this.parseLogicalOr();\n    }\n\n    private yyexpect(token: Token): void | never {\n        if (this.lex.token() !== token) {\n            throw new Error(\n                `Syntax error: Expected token '${tokenSpell(token)}' but ` +\n                    `found '${tokenSpell(this.lex.token())}'`\n            );\n        }\n        this.lex.next();\n    }\n\n    private parsePrimary(): Expr | never {\n        switch (this.lex.token()) {\n            case Token.Identifier: {\n                const text = this.lex.text();\n                switch (text) {\n                    case \"has\":\n                        this.lex.next(); // skip has keyword\n                        this.yyexpect(Token.LParen);\n                        const hasAttribute = this.lex.text();\n                        this.yyexpect(Token.Identifier);\n                        this.yyexpect(Token.RParen);\n                        return new HasAttributeExpr(hasAttribute);\n                    case \"length\":\n                        this.lex.next(); // skip length keyword\n                        this.yyexpect(Token.LParen);\n                        const value = this.parseLogicalOr();\n                        this.yyexpect(Token.RParen);\n                        return new CallExpr(\"length\", [value]);\n                    default:\n                        const expr = new VarExpr(text);\n                        this.lex.next();\n                        return expr;\n                }\n            }\n\n            case Token.LParen: {\n                this.lex.next();\n                const expr = this.parseLogicalOr();\n                this.yyexpect(Token.RParen);\n                return expr;\n            }\n\n            default:\n                return this.parseLiteral();\n        } // switch\n    }\n\n    private parseLiteral(): NumberLiteralExpr | StringLiteralExpr | never {\n        switch (this.lex.token()) {\n            case Token.Number: {\n                const expr = new NumberLiteralExpr(parseFloat(this.lex.text()));\n                this.lex.next();\n                return expr;\n            }\n            case Token.String: {\n                const expr = new StringLiteralExpr(this.lex.text());\n                this.lex.next();\n                return expr;\n            }\n            default:\n                throw new Error(\"Syntax error\");\n        } // switch\n    }\n\n    private parseUnary(): Expr | never {\n        if (this.lex.token() === Token.Exclaim) {\n            this.lex.next();\n            return new CallExpr(\"!\", [this.parseUnary()]);\n        }\n        return this.parsePrimary();\n    }\n\n    private parseRelational(): Expr | never {\n        let expr = this.parseUnary();\n        while (true) {\n            if (this.lex.token() === Token.Identifier && this.lex.text() === \"in\") {\n                this.lex.next();\n                this.yyexpect(Token.LBracket);\n                const elements = [this.parseLiteral()];\n                while (this.lex.token() === Token.Comma) {\n                    this.lex.next();\n                    elements.push(this.parseLiteral());\n                }\n                this.yyexpect(Token.RBracket);\n                expr = new CallExpr(\"in\", [\n                    expr,\n                    LiteralExpr.fromValue(elements.map(({ value }) => value))\n                ]);\n            } else {\n                const op = getRelationalOp(this.lex.token());\n                if (op === undefined) {\n                    break;\n                }\n                this.lex.next();\n                const right = this.parseUnary();\n                expr = new CallExpr(op, [expr, right]);\n            }\n        }\n        return expr;\n    }\n\n    private parseEquality(): Expr | never {\n        let expr = this.parseRelational();\n        while (true) {\n            let op: string | undefined = getEqualityOp(this.lex.token());\n\n            if (op === undefined) {\n                break;\n            }\n\n            if (op === \"~=\") {\n                op = \"in\";\n            }\n\n            this.lex.next();\n            const right = this.parseRelational();\n            expr = new CallExpr(op, [expr, right]);\n        }\n        return expr;\n    }\n\n    private parseLogicalAnd(): Expr | never {\n        const expr = this.parseEquality();\n\n        if (this.lex.token() !== Token.AmpAmp) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseEquality());\n        } while (this.lex.token() === Token.AmpAmp);\n\n        return new CallExpr(\"all\", expressions);\n    }\n\n    private parseLogicalOr(): Expr | never {\n        const expr = this.parseLogicalAnd();\n\n        if (this.lex.token() !== Token.BarBar) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseLogicalAnd());\n        } while (this.lex.token() === Token.BarBar);\n\n        return new CallExpr(\"any\", expressions);\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Common communication protocol for [[WorkerService]].\n */\nexport namespace WorkerServiceProtocol {\n    /**\n     * Service id of worker manager ([[WorkerServiceManager]]) used to create/destroy service\n     * instances in workers.\n     */\n    export const WORKER_SERVICE_MANAGER_SERVICE_ID = \"worker-service-manager\";\n\n    /**\n     * Define possible names of messages exchanged with services within `WebWorker`.\n     */\n    export enum ServiceMessageName {\n        Initialized = \"initialized\",\n        Request = \"request\",\n        Response = \"response\"\n    }\n\n    /**\n     * Interface for `ServiceMessage` which describes metadata for a service messages.\n     */\n    export interface ServiceMessage {\n        service: string;\n        type: ServiceMessageName;\n    }\n\n    /**\n     * This message is sent by the worker to the main thread. No data is sent. Receiving this\n     * message confirms that the worker has started successfully.\n     */\n    export interface InitializedMessage extends ServiceMessage {\n        type: ServiceMessageName.Initialized;\n    }\n\n    /**\n     * Type guard to check if an object is a signal message from worker.\n     */\n    export function isInitializedMessage(message: any): message is InitializedMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Initialized\n        );\n    }\n\n    /**\n     * Define possible names of requests called on services within `WebWorker`.\n     */\n    export enum Requests {\n        CreateService = \"create-service\",\n        DestroyService = \"destroy-service\"\n    }\n\n    /**\n     * This is an internal general interface used in communication with workers.\n     * Check [[ConcurrentWorkerSet]]'s invokeRequest function for exemplary usage.\n     */\n    export interface ServiceRequest {\n        type: string;\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically create a\n     * new service.\n     *\n     * May throw `UnknownServiceError` if service of given type is not registered in\n     * [[WorkerServiceManager]], see [[isUnknownServiceError]].\n     */\n    export interface CreateServiceRequest extends ServiceRequest {\n        type: Requests.CreateService;\n\n        /**\n         * Type of service to be created.\n         *\n         * @see [[WorkerServiceManager.register]]\n         */\n        targetServiceType: string;\n\n        /**\n         * The newly created service instance will be available under this id.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Test if `error` thrown by [[CreateServiceRequest]] was caused by unknown type of service.\n     */\n    export function isUnknownServiceError(error: Error): boolean {\n        return /unknown targetServiceType requested: /.test(error.message);\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically destroy a\n     * service.\n     */\n    export interface DestroyServiceRequest extends ServiceRequest {\n        type: Requests.DestroyService;\n\n        /**\n         * Id of service to be destroyed.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Possible service management messages (`CreateService` or `DestroyService`) sent to WebWorker.\n     */\n    export type WorkerServiceManagerRequest = CreateServiceRequest | DestroyServiceRequest;\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface RequestMessage extends ServiceMessage {\n        type: ServiceMessageName.Request;\n        messageId: number;\n        request: any;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isRequestMessage(message: any): message is RequestMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Request\n        );\n    }\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface ResponseMessage extends ServiceMessage {\n        type: ServiceMessageName.Response;\n        messageId: number;\n        errorMessage?: string;\n        errorStack?: string;\n        response?: object;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isResponseMessage(message: any): message is ResponseMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Response\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson } from \"../lib/GeoJsonDataType\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Communication protocol with [[ITiler]].\n */\nexport namespace WorkerTilerProtocol {\n    /**\n     * Define possible names of requests called on tiler services within `WebWorker`.\n     */\n    export enum Requests {\n        RegisterIndex = \"register-index\",\n        UpdateIndex = \"update-index\",\n        TileRequest = \"tile-request\"\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface RegisterIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.RegisterIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an index registration request sent to a worker.\n     */\n    export function isRegisterIndexRequest(message: any): message is RegisterIndexRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.RegisterIndex\n        );\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface UpdateIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.UpdateIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an update request for the index registration.\n     */\n    export function isUpdateIndexRequest(message: any): message is UpdateIndexRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.UpdateIndex;\n    }\n\n    /**\n     * This object is sent to the tiler asking to retrieve a specific tile. The expected response\n     * type is an object containing a tiled payload.\n     */\n    export interface TileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileRequest;\n        index: string;\n        tileKey: number;\n    }\n\n    /**\n     * Type guard to check if an object is a tile request sent to a worker.\n     */\n    export function isTileRequest(message: any): message is TileRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.TileRequest;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Definitions, StyleSet } from \"./Theme\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Interface for `OptionsMap` which describes a general structure of key-value pairs.\n */\nexport interface OptionsMap {\n    [name: string]: any;\n}\n\n/**\n * Allows to cancel and prioritize requests inside the requestQueue.\n *\n * @remarks\n * Useful to optimize the order of decoding tiles during animations and camera movements.\n *\n * `RequestController` is not extending [[AbortController]], because this is not supported in ES5.\n */\nexport class RequestController implements AbortController {\n    /**\n     * Creates an instance of `RequestController`.\n     *\n     * @param {number} priority\n     * @param {AbortController} abortController Optional [[AbortController]] used internally, since\n     *      [[AbortController]]s should not be subclassed.\n     */\n    constructor(\n        public priority: number = 0,\n        public abortController: AbortController = new AbortController()\n    ) {}\n\n    get signal(): AbortSignal {\n        return this.abortController.signal;\n    }\n\n    /**\n     * Invoking this method will set this object's AbortSignal's aborted flag and\n     * signal to any observers that the associated activity is to be aborted.\n     */\n    abort(): void {\n        this.abortController.abort();\n    }\n}\n\n/**\n * Communication protocol with [[ITileDecoder]].\n */\nexport namespace WorkerDecoderProtocol {\n    /**\n     * Define possible names of messages exchanged with decoder services within `WebWorker`.\n     */\n    export enum DecoderMessageName {\n        Configuration = \"configuration\"\n    }\n\n    /**\n     * Interface for `DecodedTileMessage` which describes metadata for a decoded tile.\n     */\n    export interface DecoderMessage {\n        service: string;\n        type: DecoderMessageName;\n    }\n\n    /**\n     * Interface for a ConfigurationMessage that is sent from the datasource to the decoder. The\n     * message used to configure the [[ITileDecoder]].\n     */\n    export interface ConfigurationMessage extends DecoderMessage {\n        type: DecoderMessageName.Configuration;\n        styleSet?: StyleSet;\n        definitions?: Definitions;\n        options?: OptionsMap;\n        languages?: string[];\n    }\n\n    /**\n     * Type guard to check if an object is an instance of `ConfigurationMessage`.\n     */\n    export function isConfigurationMessage(message: any): message is ConfigurationMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === DecoderMessageName.Configuration\n        );\n    }\n\n    /**\n     * Define possible names of requests called on decoder services within `WebWorker`.\n     */\n    export enum Requests {\n        DecodeTileRequest = \"decode-tile-request\",\n        TileInfoRequest = \"tile-info-request\"\n    }\n\n    /**\n     * This object is sent to the decoder asking to decode a specific tile. The expected response\n     * type is a [[DecodedTile]].\n     */\n    export interface DecodeTileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.DecodeTileRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is a decoded tile object sent to a worker.\n     */\n    export function isDecodeTileRequest(message: any): message is DecodeTileRequest {\n        return (\n            message &&\n            typeof message.type === \"string\" &&\n            message.type === Requests.DecodeTileRequest\n        );\n    }\n\n    /**\n     * This object is sent to the decoder asking for a tile info of a specific tile. The expected\n     * response type is a [[DecodedTile]].\n     */\n    export interface TileInfoRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileInfoRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is an info tile object sent to a worker.\n     */\n    export function isTileInfoRequest(message: any): message is TileInfoRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.TileInfoRequest\n        );\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object that carry {@link GeoBox} extents like interface.\n */\nexport interface GeoBoxExtentLike {\n    /**\n     * Latitude span in degrees.\n     */\n    readonly latitudeSpan: number;\n\n    /**\n     * Longitude span in degrees\n     */\n    readonly longitudeSpan: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to {@link GeoBoxExtentLike} interface.\n */\nexport function isGeoBoxExtentLike(obj: any): obj is GeoBoxExtentLike {\n    return (\n        obj &&\n        typeof obj === \"object\" &&\n        typeof obj.latitudeSpan === \"number\" &&\n        typeof obj.longitudeSpan === \"number\"\n    );\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass IdentityProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = -Math.PI;\n        result.min.y = -Math.PI * 0.5;\n        result.min.z = minAltitude;\n        result.max.x = Math.PI;\n        result.max.y = Math.PI * 0.5;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = THREE.MathUtils.degToRad(geoPoint.longitude);\n        result.y = THREE.MathUtils.degToRad(geoPoint.latitude);\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(worldPoint.y, worldPoint.x, worldPoint.z);\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        const min = this.projectPoint(\n            new GeoCoordinates(geoBox.south, geoBox.west, geoBox.minAltitude)\n        );\n        const max = this.projectPoint(\n            new GeoCoordinates(geoBox.north, geoBox.east, geoBox.maxAltitude)\n        );\n        if (isBox3Like(result)) {\n            result.min.x = min.x;\n            result.min.y = min.y;\n            result.min.z = min.z;\n            result.max.x = max.x;\n            result.max.y = max.y;\n            result.max.z = max.z;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (min.x + max.x) * 0.5;\n            result.position.y = (min.y + max.y) * 0.5;\n            result.position.z = (min.z + max.z) * 0.5;\n            result.extents.x = (max.x - min.x) * 0.5;\n            result.extents.y = (max.y - min.y) * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (max.z - min.z) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Identity {@link Projection} used to convert geo coordinates to unit coordinates and vice versa.\n */\nexport const identityProjection: Projection = new IdentityProjection(1);\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { mercatorProjection, webMercatorProjection } from \"./MercatorProjection\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\n/**\n * Transforms the given vector using the provided basis.\n */\nfunction apply(\n    xAxis: Vector3Like,\n    yAxis: Vector3Like,\n    zAxis: Vector3Like,\n    v: Vector3Like\n): Vector3Like {\n    const x = xAxis.x * v.x + yAxis.x * v.y + zAxis.x * v.z;\n    const y = xAxis.y * v.x + yAxis.y * v.y + zAxis.y * v.z;\n    const z = xAxis.z * v.x + yAxis.z * v.y + zAxis.z * v.z;\n    v.x = x;\n    v.y = y;\n    v.z = z;\n    return v;\n}\n\n/**\n * Returns the quadrants for the given longitude. The quadrant is defined as:\n *  - quadrant(+Math.PI * -1.0) = 0\n *  - quadrant(+Math.PI * -0.5) = 1\n *  - quadrant(+Math.PI *  0.0) = 2\n *  - quadrant(+Math.PI *  0.5) = 3\n *  - quadrant(+Math.PI *  1.0) = 4\n *\n * @param longitude - The longitude in radians.\n */\nfunction getLongitudeQuadrant(longitude: number) {\n    const oneOverPI = 1 / Math.PI;\n    const quadrantIndex = Math.floor(2 * (longitude * oneOverPI + 1));\n    return THREE.MathUtils.clamp(quadrantIndex, 0, 4);\n}\n\nfunction lengthOfVector3(worldPoint: Vector3Like): number {\n    const d = Math.sqrt(\n        worldPoint.x * worldPoint.x + worldPoint.y * worldPoint.y + worldPoint.z * worldPoint.z\n    );\n    return d;\n}\n\n/**\n * Creates a Box3 enclosing the geobox.\n *\n * @param geoBox - Ghe given geobox\n * @param worldBox - The resulting axis aligned bounding box.\n */\nfunction makeBox3<Bounds extends Box3Like>(\n    geoBox: GeoBox,\n    worldBox: Bounds,\n    unitScale: number\n): Bounds {\n    const halfEquatorialRadius = (unitScale + (geoBox.maxAltitude || 0)) * 0.5;\n\n    const minLongitude = THREE.MathUtils.degToRad(geoBox.west);\n    const maxLongitude = THREE.MathUtils.degToRad(geoBox.east);\n\n    const minLongitudeQuadrant = getLongitudeQuadrant(minLongitude);\n    const maxLongitudeQuadrant = getLongitudeQuadrant(maxLongitude);\n\n    let xMin = Math.cos(minLongitude);\n    let xMax = xMin;\n    let yMin = Math.sin(minLongitude);\n    let yMax = yMin;\n\n    for (\n        let quadrantIndex = minLongitudeQuadrant + 1;\n        quadrantIndex <= maxLongitudeQuadrant;\n        quadrantIndex++\n    ) {\n        // tslint:disable-next-line: no-bitwise\n        const x = ((quadrantIndex + 1) & 1) * ((quadrantIndex & 2) - 1);\n        xMin = Math.min(x, xMin);\n        xMax = Math.max(x, xMax);\n\n        // tslint:disable-next-line: no-bitwise\n        const y = (quadrantIndex & 1) * ((quadrantIndex & 2) - 1);\n        yMin = Math.min(y, yMin);\n        yMax = Math.max(y, yMax);\n    }\n\n    const cosMaxLongitude = Math.cos(maxLongitude);\n    xMin = Math.min(cosMaxLongitude, xMin);\n    xMax = Math.max(cosMaxLongitude, xMax);\n\n    const sinMaxLongitude = Math.sin(maxLongitude);\n    yMin = Math.min(sinMaxLongitude, yMin);\n    yMax = Math.max(sinMaxLongitude, yMax);\n\n    const xCenter = (xMax + xMin) * halfEquatorialRadius;\n    const xExtent = (xMax - xMin) * halfEquatorialRadius;\n\n    const yCenter = (yMax + yMin) * halfEquatorialRadius;\n    const yExtent = (yMax - yMin) * halfEquatorialRadius;\n\n    // Calculate Z boundaries.\n    const minLatitude = THREE.MathUtils.degToRad(geoBox.south);\n    const maxLatutide = THREE.MathUtils.degToRad(geoBox.north);\n\n    const zMax = Math.sin(maxLatutide);\n    const zMin = Math.sin(minLatitude);\n\n    const zCenter = (zMax + zMin) * halfEquatorialRadius;\n    const zExtent = (zMax - zMin) * halfEquatorialRadius;\n\n    worldBox.min.x = xCenter - xExtent;\n    worldBox.min.y = yCenter - yExtent;\n    worldBox.min.z = zCenter - zExtent;\n    worldBox.max.x = xCenter + xExtent;\n    worldBox.max.y = yCenter + yExtent;\n    worldBox.max.z = zCenter + zExtent;\n\n    return worldBox;\n}\n\n/**\n * Computes the spherical projection of the given geo coordinates.\n *\n * @param geoPoint - The geo coordinates.\n * @param worldpoint - The resulting world coordinates.\n */\nfunction project<WorldCoordinates extends Vector3Like>(\n    geoPoint: GeoCoordinatesLike,\n    worldpoint: WorldCoordinates,\n    unitScale: number\n): typeof worldpoint {\n    const radius = unitScale + (geoPoint.altitude || 0);\n    const latitude = THREE.MathUtils.degToRad(geoPoint.latitude);\n    const longitude = THREE.MathUtils.degToRad(geoPoint.longitude);\n    const cosLatitude = Math.cos(latitude);\n    worldpoint.x = radius * cosLatitude * Math.cos(longitude);\n    worldpoint.y = radius * cosLatitude * Math.sin(longitude);\n    worldpoint.z = radius * Math.sin(latitude);\n    return worldpoint;\n}\n\nclass SphereProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Spherical;\n\n    /** @override */\n    worldExtent<Bounds extends Box3Like>(\n        _minElevation: number,\n        maxElevation: number,\n        result: Bounds = (new THREE.Box3() as Box3Like) as Bounds\n    ): Bounds {\n        const radius = this.unitScale + maxElevation;\n        result.min.x = -radius;\n        result.min.y = -radius;\n        result.min.z = -radius;\n        result.max.x = radius;\n        result.max.y = radius;\n        result.max.z = radius;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result: WorldCoordinates = MathUtils.newVector3(0, 0, 0) as WorldCoordinates\n    ): WorldCoordinates {\n        return project(geoPoint, result, this.unitScale);\n    }\n\n    /** @override */\n    unprojectPoint(point: Vector3Like): GeoCoordinates {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y;\n        const parallelRadius = Math.sqrt(parallelRadiusSq);\n        const v = point.z / parallelRadius;\n\n        if (isNaN(v)) {\n            return GeoCoordinates.fromRadians(0, 0, -this.unitScale);\n        }\n\n        const radius = Math.sqrt(parallelRadiusSq + point.z * point.z);\n\n        return GeoCoordinates.fromRadians(\n            Math.atan(v),\n            Math.atan2(point.y, point.x),\n            radius - this.unitScale\n        );\n    }\n\n    /** @override */\n    unprojectAltitude(point: Vector3Like): number {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y + point.z * point.z;\n        return Math.sqrt(parallelRadiusSq) - EarthConstants.EQUATORIAL_RADIUS;\n    }\n\n    /** @override */\n    projectBox<Bounds extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: Bounds = (new THREE.Box3() as Box3Like) as Bounds\n    ): Bounds {\n        if (isBox3Like(result)) {\n            return makeBox3(geoBox, result, this.unitScale);\n        } else if (isOrientedBox3Like(result)) {\n            if (geoBox.longitudeSpan >= 90) {\n                const bounds = makeBox3(geoBox, new THREE.Box3() as Box3Like, this.unitScale);\n                MathUtils.newVector3(1, 0, 0, result.xAxis);\n                MathUtils.newVector3(0, 1, 0, result.yAxis);\n                MathUtils.newVector3(0, 0, 1, result.zAxis);\n                result.position.x = (bounds.max.x + bounds.min.x) * 0.5;\n                result.position.y = (bounds.max.y + bounds.min.y) * 0.5;\n                result.position.z = (bounds.max.z + bounds.min.z) * 0.5;\n                result.extents.x = (bounds.max.x - bounds.min.x) * 0.5;\n                result.extents.y = (bounds.max.y - bounds.min.y) * 0.5;\n                result.extents.z = (bounds.max.z - bounds.min.z) * 0.5;\n                return result;\n            }\n\n            const { south, west, north, east, center: mid } = geoBox;\n            const midX = mid.longitude;\n            const midY = mid.latitude;\n            const cosSouth = Math.cos(THREE.MathUtils.degToRad(south));\n            const sinSouth = Math.sin(THREE.MathUtils.degToRad(south));\n            const cosWest = Math.cos(THREE.MathUtils.degToRad(west));\n            const sinWest = Math.sin(THREE.MathUtils.degToRad(west));\n            const cosNorth = Math.cos(THREE.MathUtils.degToRad(north));\n            const sinNorth = Math.sin(THREE.MathUtils.degToRad(north));\n            const cosEast = Math.cos(THREE.MathUtils.degToRad(east));\n            const sinEast = Math.sin(THREE.MathUtils.degToRad(east));\n            const cosMidX = Math.cos(THREE.MathUtils.degToRad(midX));\n            const sinMidX = Math.sin(THREE.MathUtils.degToRad(midX));\n            const cosMidY = Math.cos(THREE.MathUtils.degToRad(midY));\n            const sinMidY = Math.sin(THREE.MathUtils.degToRad(midY));\n\n            // Build the orientation of the OBB using the normal vector and its partial derivates.\n\n            // the sperical coordinates of the mid point of the geobox.\n            MathUtils.newVector3(cosMidX * cosMidY, sinMidX * cosMidY, sinMidY, result.zAxis);\n\n            // the partial derivates of the normal vector.\n            MathUtils.newVector3(-sinMidX, cosMidX, 0, result.xAxis);\n            MathUtils.newVector3(-cosMidX * sinMidY, -sinMidX * sinMidY, cosMidY, result.yAxis);\n\n            let width: number;\n            let minY: number;\n            let maxY: number;\n\n            if (south >= 0) {\n                // abs(dot(southWest - southEast, xAxis))\n                width = Math.abs(\n                    cosSouth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                );\n\n                // dot(south, yAxis)\n                minY = cosMidY * sinSouth - sinMidY * cosSouth;\n\n                // dot(northEast, zAxis)\n                maxY =\n                    cosMidY * sinNorth -\n                    sinMidY * cosNorth * (cosMidX * cosEast + sinMidX * sinEast);\n            } else {\n                if (north <= 0) {\n                    // abs(dot(northWest - northEast, xAxis))\n                    width = Math.abs(\n                        cosNorth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                    );\n\n                    // dot(north, yAxis)\n                    maxY = cosMidY * sinNorth - sinMidY * cosNorth;\n                } else {\n                    // abs(dot(west - east, xAxis))\n                    width = Math.abs(cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest));\n\n                    // dot(northEast, yAxis)\n                    maxY =\n                        cosMidY * sinNorth -\n                        sinMidY * cosNorth * (sinMidX * sinEast + cosMidX * cosEast);\n                }\n\n                // dot(southEast, yAxis)\n                minY =\n                    cosMidY * sinSouth -\n                    sinMidY * cosSouth * (cosMidX * cosEast + sinMidX * sinEast);\n            }\n\n            const rMax = (this.unitScale + (geoBox.maxAltitude || 0)) * 0.5;\n            const rMin = (this.unitScale + (geoBox.minAltitude || 0)) * 0.5;\n\n            // min(dot(southEast, zAxis), dot(northEast, zAxis))\n\n            const d = cosMidY * (cosMidX * cosEast + sinMidX * sinEast);\n\n            const minZ = Math.min(\n                cosNorth * d + sinNorth * sinMidY,\n                cosSouth * d + sinSouth * sinMidY\n            );\n\n            MathUtils.newVector3(\n                width * rMax,\n                (maxY - minY) * rMax,\n                rMax - minZ * rMin,\n                result.extents\n            );\n\n            MathUtils.newVector3(0, (minY + maxY) * rMax, rMax + rMax, result.position);\n\n            apply(result.xAxis, result.yAxis, result.zAxis, result.position);\n\n            result.position.x = result.position.x - result.zAxis.x * result.extents.z;\n            result.position.y = result.position.y - result.zAxis.y * result.extents.z;\n            result.position.z = result.position.z - result.zAxis.z * result.extents.z;\n\n            return result;\n        }\n\n        throw new Error(\"Invalid bounding box\");\n    }\n\n    /** @override */\n    unprojectBox(_worldBox: Box3Like): GeoBox {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return lengthOfVector3(worldPoint) - this.unitScale;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        const scale = this.unitScale / (lengthOfVector3(worldPoint) || 1);\n        worldPoint.x *= scale;\n        worldPoint.y *= scale;\n        worldPoint.z *= scale;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 0 };\n        }\n        const scale = 1 / (lengthOfVector3(worldPoint) || 1);\n        normal.x = worldPoint.x * scale;\n        normal.y = worldPoint.y * scale;\n        normal.z = worldPoint.z * scale;\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === mercatorProjection || sourceProjection === webMercatorProjection) {\n            const { x, y, z } = worldPos;\n            const r = this.unitScale;\n            const mx = x / r - Math.PI;\n            const my = y / r - Math.PI;\n            const w = Math.exp(my);\n            const d = w * w;\n            const gx = (2 * w) / (d + 1);\n            const gy = (d - 1) / (d + 1);\n            const scale = r + z;\n\n            if (result === undefined) {\n                // tslint:disable-next-line: no-object-literal-type-assertion\n                result = {} as Vector3Like;\n            }\n\n            result.x = Math.cos(mx) * gx * scale;\n            result.y = Math.sin(mx) * gx * scale;\n            result.z = gy * scale;\n\n            if (sourceProjection === webMercatorProjection) {\n                result.z = -result.z;\n            }\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n\n    /** @override */\n    localTangentSpace(\n        point: GeoCoordinatesLike | Vector3Like,\n        result: TransformLike\n    ): TransformLike {\n        let geoPoint: GeoCoordinatesLike;\n        if (isGeoCoordinatesLike(point)) {\n            this.projectPoint(point, result.position);\n            geoPoint = point;\n        } else {\n            MathUtils.copyVector3(point, result.position);\n            geoPoint = this.unprojectPoint(point);\n        }\n\n        const latitude = THREE.MathUtils.degToRad(geoPoint.latitude);\n        const longitude = THREE.MathUtils.degToRad(geoPoint.longitude);\n\n        const cosLongitude = Math.cos(longitude);\n        const sinLongitude = Math.sin(longitude);\n        const cosLatitude = Math.cos(latitude);\n        const sinLatitude = Math.sin(latitude);\n\n        MathUtils.newVector3(\n            cosLongitude * cosLatitude,\n            sinLongitude * cosLatitude,\n            sinLatitude,\n            result.zAxis\n        );\n\n        MathUtils.newVector3(-sinLongitude, cosLongitude, 0, result.xAxis);\n\n        MathUtils.newVector3(\n            -cosLongitude * sinLatitude,\n            -sinLongitude * sinLatitude,\n            cosLatitude,\n            result.yAxis\n        );\n        return result;\n    }\n}\n\nexport const sphereProjection: Projection = new SphereProjection(EarthConstants.EQUATORIAL_RADIUS);\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A class used to represent a quadtree.\n */\nexport class QuadTree {\n    /**\n     * Constructs a new `QuadTree` for the given {@link TilingScheme}.\n     *\n     * Example:\n     * ```typescript\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * const geoBox = quadTree.getGeoBox(tileKey);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tilingScheme - The TilingScheme used by this `QuadTree`.\n     */\n    constructor(readonly tilingScheme: TilingScheme) {}\n\n    /**\n     * Visits this `QuadTree` and invoke the given accept method\n     * with the current {@link TileKey} and\n     * its bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = new GeoCoordinates(latitude, longitude);\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * quadTree.visit((tileKey, geoBox) => {\n     *     if (geoBox.contains(geoPos)) {\n     *         console.log(\"tile\", tileKey, \"contains\", geoPos);\n     *         return tileKey.level < 14; // stop visiting the quadtree if the level is >= 14.\n     *     }\n     *     return false; // stop visiting the quadtree,\n     *                   // the tile's geoBox doesn't contain the given coordinates.\n     * });\n     * ```\n     *\n     * @param accept - A function that takes a {@link TileKey}\n     * and its bounding box in geo coordinates\n     * and returns `true` if the visit of the `QuadTree`\n     * should continue; otherwise `false`.\n     */\n    visit(accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        this.visitTileKey(TileKey.fromRowColumnLevel(0, 0, 0), accept);\n    }\n\n    /**\n     * Visits the subtree starting from the given tile.\n     *\n     * @param tileKey - The root of the subtree that should be visited.\n     * @param accept - A function that takes a {@link TileKey}\n     *                 and its bounding box in geo coordinates\n     *                 and returns `true` if the visit of the\n     *                 `QuadTree` should continue; otherwise `false`.\n     */\n    visitTileKey(tileKey: TileKey, accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        const geoBox = this.tilingScheme.getGeoBox(tileKey);\n\n        if (!accept(tileKey, geoBox)) {\n            return;\n        }\n\n        for (const subTileKey of this.tilingScheme.getSubTileKeys(tileKey)) {\n            this.visitTileKey(subTileKey, accept);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { normalizedEquirectangularProjection } from \"../projection/EquirectangularProjection\";\nimport { halfQuadTreeSubdivisionScheme } from \"./HalfQuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * {@link TilingScheme} used by most of the data published by HERE.\n *\n * The `hereTilingScheme` features a half quadtree subdivision scheme and an equirectangular\n * projection.\n */\nexport const hereTilingScheme = new TilingScheme(\n    halfQuadTreeSubdivisionScheme,\n    normalizedEquirectangularProjection\n);\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { webMercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A {@link TilingScheme} featuring quadtree subdivision scheme and web Mercator projection.\n */\nexport const webMercatorTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    webMercatorProjection\n);\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * The {@link TilingScheme} used by the HERE web tiles.\n *\n * The `mercatorTilingScheme` features a quadtree subdivision scheme and a Mercator projection.\n */\nexport const mercatorTilingScheme = new TilingScheme(quadTreeSubdivisionScheme, mercatorProjection);\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { transverseMercatorProjection } from \"../projection/TransverseMercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A {@link TilingScheme} featuring quadtree subdivision scheme and\n * transverse Mercator projection.\n */\nexport const polarTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    transverseMercatorProjection\n);\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Interface representing a Vector3.\n */\nexport interface Vector3Like {\n    /**\n     * The X position.\n     */\n    x: number;\n\n    /**\n     * The Y position.\n     */\n    y: number;\n\n    /**\n     * The Z position.\n     */\n    z: number;\n}\n\nexport function isVector3Like(v: any): v is Vector3Like {\n    return v && typeof v.x === \"number\" && typeof v.y === \"number\" && typeof v.z === \"number\";\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface {@link TransformLike} is used to represent transforms with\n * only translation and rotation.\n */\nexport interface TransformLike {\n    /**\n     * The position of this transform.\n     */\n    readonly position: Vector3Like;\n\n    /**\n     * The x-axis of this transform.\n     */\n    readonly xAxis: Vector3Like;\n\n    /**\n     * The y-axis of this transform.\n     */\n    readonly yAxis: Vector3Like;\n\n    /**\n     * The z-axis of this transform.\n     */\n    readonly zAxis: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface {@link TransformLike}.\n *\n * @param object - The object.\n */\nexport function isTransformLike(object: {}): object is TransformLike {\n    const transform = object as Partial<TransformLike>;\n    return (\n        transform.position !== undefined &&\n        transform.xAxis !== undefined &&\n        transform.yAxis !== undefined &&\n        transform.zAxis !== undefined\n    );\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Frustum, Matrix4, Plane, Ray, Vector3 } from \"three\";\nimport { OrientedBox3Like } from \"./OrientedBox3Like\";\n\nfunction intersectsSlab(\n    rayDir: Vector3,\n    p: Vector3,\n    axis: Vector3,\n    extent: number,\n    t: { min: number; max: number }\n): boolean {\n    const epsilon = 1e-20;\n    const e = axis.dot(p);\n    const f = axis.dot(rayDir);\n    if (Math.abs(f) < epsilon) {\n        // ray parallel to near/far slab lines.\n        return Math.abs(e) <= extent;\n    }\n\n    // ray intersects near/far slab lines.\n    const finv = 1 / f;\n    const t1 = (e + extent) * finv;\n    const t2 = (e - extent) * finv;\n    if (t1 > t2) {\n        // t1 is far intersect, t2 is near.\n        if (t2 > t.min) {\n            t.min = t2;\n        }\n        if (t1 < t.max) {\n            t.max = t1;\n        }\n    } else {\n        // t1 is near intersect, t2 is far.\n        if (t1 > t.min) {\n            t.min = t1;\n        }\n        if (t2 < t.max) {\n            t.max = t2;\n        }\n    }\n    return t.min <= t.max && t.max >= 0;\n}\n\nconst tmpVec = new Vector3();\nconst tmpT = { min: -Infinity, max: Infinity };\n\nexport class OrientedBox3 implements OrientedBox3Like {\n    /**\n     * The position of the center of this `OrientedBox3`.\n     */\n    readonly position = new Vector3();\n\n    /**\n     * The x-axis of this `OrientedBox3`.\n     */\n    readonly xAxis = new Vector3(1, 0, 0);\n\n    /**\n     * The y-axis of this `OrientedBox3`.\n     */\n    readonly yAxis = new Vector3(0, 1, 0);\n\n    /**\n     * The z-axis of this `OrientedBox3`.\n     */\n    readonly zAxis = new Vector3(0, 0, 1);\n\n    /**\n     * The extents of this `OrientedBox3`.\n     */\n    readonly extents = new Vector3();\n\n    /**\n     * Creates a new `OrientedBox3`.\n     */\n    constructor();\n\n    /**\n     * Creates a new `OrientedBox3` with the given position, orientation and extents.\n     *\n     * @param position - The position of the center of the `OrientedBox3`.\n     * @param rotationMatrix - The rotation of the `OrientedBox3`.\n     * @param extents - The extents of the `OrientedBox3`.\n     */\n    constructor(position: Vector3, rotationMatrix: Matrix4, extents: Vector3);\n\n    /**\n     * Creates a new `OrientedBox3`.\n     *\n     * @hideconstructor\n     */\n    constructor(position?: Vector3, rotationMatrix?: Matrix4, extents?: Vector3) {\n        if (position !== undefined) {\n            this.position.copy(position);\n        }\n\n        if (rotationMatrix !== undefined) {\n            rotationMatrix.extractBasis(this.xAxis, this.yAxis, this.zAxis);\n        }\n\n        if (extents !== undefined) {\n            this.extents.copy(extents);\n        }\n    }\n\n    /**\n     * Create a copy of this [[OrientedBoundingBox]].\n     */\n    clone(): OrientedBox3 {\n        const newBox = new OrientedBox3();\n        newBox.copy(this);\n        return newBox;\n    }\n\n    /**\n     * Copies the values of `other` to this {@link OrientedBox3}.\n     * @param other - The other {@link OrientedBox3} to copy.\n     */\n    copy(other: OrientedBox3) {\n        this.position.copy(other.position);\n        this.xAxis.copy(other.xAxis);\n        this.yAxis.copy(other.yAxis);\n        this.zAxis.copy(other.zAxis);\n        this.extents.copy(other.extents);\n    }\n\n    /**\n     * Gets the center position of this {@link OrientedBox3}.\n     *\n     * @param center - The returned center position.\n     */\n    getCenter(center = new Vector3()): Vector3 {\n        return center.copy(this.position);\n    }\n\n    /**\n     * Gets the size of this {@link OrientedBox3}.\n     *\n     * @param size - The returned size.\n     */\n    getSize(size = new Vector3()): Vector3 {\n        return size.copy(this.extents).multiplyScalar(2);\n    }\n\n    /**\n     * Gets the orientation matrix of this `OrientedBox3`.\n     * @param matrix - The output orientation matrix.\n     */\n    getRotationMatrix(matrix: Matrix4 = new Matrix4()): Matrix4 {\n        return matrix.makeBasis(this.xAxis, this.yAxis, this.zAxis);\n    }\n\n    /**\n     * Checks intersection with the given `THREE.Frustum` or array of `THREE.Plane`s.\n     *\n     * @param frustumOrPlanes - Frustum or array of planes.\n     */\n    intersects(frustumOrPlanes: Plane[] | Frustum): boolean {\n        const planes: Plane[] = Array.isArray(frustumOrPlanes)\n            ? frustumOrPlanes\n            : frustumOrPlanes.planes;\n\n        for (const plane of planes) {\n            const r =\n                Math.abs(plane.normal.dot(this.xAxis) * this.extents.x) +\n                Math.abs(plane.normal.dot(this.yAxis) * this.extents.y) +\n                Math.abs(plane.normal.dot(this.zAxis) * this.extents.z);\n\n            const d = plane.distanceToPoint(this.position);\n\n            if (d + r < 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Checks intersection with the given ray.\n     *\n     * @param ray - The ray to test.\n     * @returns distance from ray origin to intersection point if it exist, undefined otherwise.\n     */\n    intersectsRay(ray: Ray): number | undefined {\n        // Slabs intersection algorithm.\n        tmpT.min = -Infinity;\n        tmpT.max = Infinity;\n        tmpVec.copy(this.position).sub(ray.origin);\n        if (!intersectsSlab(ray.direction, tmpVec, this.xAxis, this.extents.x, tmpT)) {\n            return undefined;\n        }\n        if (!intersectsSlab(ray.direction, tmpVec, this.yAxis, this.extents.y, tmpT)) {\n            return undefined;\n        }\n        if (!intersectsSlab(ray.direction, tmpVec, this.zAxis, this.extents.z, tmpT)) {\n            return undefined;\n        }\n\n        return tmpT.min > 0 ? tmpT.min : tmpT.max;\n    }\n\n    /**\n     * Returns true if this {@link OrientedBox3} contains the given point.\n     *\n     * @param point - A valid point.\n     */\n    contains(point: Vector3): boolean {\n        const dx = point.x - this.position.x;\n        const dy = point.y - this.position.y;\n        const dz = point.z - this.position.z;\n        const x = Math.abs(dx * this.xAxis.x + dy * this.xAxis.y + dz * this.xAxis.z);\n        const y = Math.abs(dx * this.yAxis.x + dy * this.yAxis.y + dz * this.yAxis.z);\n        const z = Math.abs(dx * this.zAxis.x + dy * this.zAxis.y + dz * this.zAxis.z);\n        if (x > this.extents.x || y > this.extents.y || z > this.extents.z) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Returns the distance from this {@link OrientedBox3} and the given `point`.\n     *\n     * @param point - A point.\n     */\n    distanceToPoint(point: Vector3): number {\n        return Math.sqrt(this.distanceToPointSquared(point));\n    }\n\n    /**\n     * Returns the squared distance from this {@link OrientedBox3} and the given `point`.\n     *\n     * @param point - A point.\n     */\n    distanceToPointSquared(point: Vector3): number {\n        const d = new Vector3();\n        d.subVectors(point, this.position);\n\n        const lengths = [d.dot(this.xAxis), d.dot(this.yAxis), d.dot(this.zAxis)];\n\n        let result = 0;\n\n        for (let i = 0; i < 3; ++i) {\n            const length = lengths[i];\n            const extent = this.extents.getComponent(i);\n            if (length < -extent) {\n                const dd = extent + length;\n                result += dd * dd;\n            } else if (length > extent) {\n                const dd = length - extent;\n                result += dd * dd;\n            }\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isJsonExpr } from \"./Expr\";\nimport { StyleDeclaration, Theme } from \"./Theme\";\n\n/**\n * The ThemeVisitor visits every style in the theme in a depth-first fashion.\n */\nexport class ThemeVisitor {\n    constructor(readonly theme: Theme) {}\n    /**\n     * Applies a function to every style in the theme.\n     *\n     * @param visitFunc - Function to be called with `style` as an argument. Function should return\n     *                  `true` to cancel visitation.\n     * @returns `true` if function has finished prematurely.\n     */\n    visitStyles(visitFunc: (style: StyleDeclaration) => boolean): boolean {\n        const visit = (style: StyleDeclaration): boolean => {\n            if (isJsonExpr(style)) {\n                return false;\n            }\n            if (visitFunc(style)) {\n                return true;\n            }\n            return false;\n        };\n        if (this.theme.styles !== undefined) {\n            for (const styleSetName in this.theme.styles) {\n                if (this.theme.styles[styleSetName] !== undefined) {\n                    for (const style of this.theme.styles[styleSetName]) {\n                        if (visit(style)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    DecodedTile,\n    Definitions,\n    ITileDecoder,\n    OptionsMap,\n    StyleSet,\n    TileInfo\n} from \"@here/harp-datasource-protocol\";\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { Projection, TileKey } from \"@here/harp-geoutils\";\n\n/**\n * `ThemedTileDecoder` implements an [[ITileDecoder]] which uses a [[Theme]] to apply styles to the\n * objects displayed in the map.\n *\n * By default, decoders are executed in web workers (using [[TileDecoderService]]) for performance\n * reasons.\n */\nexport abstract class ThemedTileDecoder implements ITileDecoder {\n    languages?: string[];\n    m_storageLevelOffset: number = 0;\n\n    protected m_styleSetEvaluator?: StyleSetEvaluator;\n    abstract connect(): Promise<void>;\n\n    dispose() {\n        // implemented in subclasses\n    }\n\n    decodeTile(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<DecodedTile> {\n        if (this.m_styleSetEvaluator === undefined) {\n            return Promise.reject(new Error(\"No style is defined\"));\n        }\n\n        return this.decodeThemedTile(data, tileKey, this.m_styleSetEvaluator, projection);\n    }\n\n    // tslint:disable:no-unused-variable\n    getTileInfo(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<TileInfo | undefined> {\n        return Promise.resolve(undefined);\n    }\n    // tslint:disable:no-unused-variable\n\n    configure(\n        styleSet?: StyleSet,\n        definitions?: Definitions,\n        languages?: string[],\n        options?: OptionsMap\n    ): void {\n        if (styleSet !== undefined) {\n            this.m_styleSetEvaluator = new StyleSetEvaluator(styleSet, definitions);\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n        if (options !== undefined && options.storageLevelOffset !== undefined) {\n            this.m_storageLevelOffset = options.storageLevelOffset;\n        }\n    }\n\n    /**\n     * Create a [[DecodedTile]] from binary tile data and a theme description in form of a\n     * [[StyleSetEvaluator]].\n     *\n     * @param data - Binary data in form of [[ArrayBufferLike]], or any object.\n     * @param tileKey - Quadtree address of tile.\n     * @param styleSetEvaluator - Processor of [[Theme]], identifies styling techniques applicable\n     *                            to individual objects.\n     * @param projection - Projection used by the individual data sources.\n     */\n    abstract decodeThemedTile(\n        data: ArrayBufferLike | {},\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile>;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    isJsonExpr,\n    JsonExpr,\n    LiteralExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\nimport { ExprPool } from \"./ExprPool\";\nimport {\n    interpolatedPropertyDefinitionToJsonExpr,\n    isInterpolatedPropertyDefinition\n} from \"./InterpolatedPropertyDefs\";\nimport { AttrScope, mergeTechniqueDescriptor } from \"./TechniqueDescriptor\";\nimport { IndexedTechnique, Technique, techniqueDescriptors } from \"./Techniques\";\nimport {\n    Definitions,\n    isActualSelectorDefinition,\n    isJsonExprReference,\n    Style,\n    StyleDeclaration,\n    StyleSelector,\n    StyleSet\n} from \"./Theme\";\n\nconst logger = LoggerManager.instance.create(\"StyleSetEvaluator\");\n\nconst emptyTechniqueDescriptor = mergeTechniqueDescriptor<Technique>({});\n\ninterface StyleInternalParams {\n    /**\n     * Optimization: Lazy creation and storage of expression in a style object.\n     */\n    _whenExpr?: Expr;\n    _minZoomLevelExpr?: Expr;\n    _maxZoomLevelExpr?: Expr;\n\n    _staticAttributes?: Array<[string, Value]>;\n\n    /**\n     * These attributes are used to instantiate Technique variants.\n     *\n     * @see [[TechiqueDescriptor.techniquePropNames]]\n     */\n    _dynamicTechniqueAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes must be evaluated basing with feature env.\n     *\n     * They are not propagated to rendering scope.\n     *\n     * @see [[TechniqueAttrScope.Feature]]\n     */\n    _dynamicFeatureAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes are forwarded as serialized by decoder to main thread, so they are resolved\n     * directly in render loop.\n     *\n     * Will contain attributes from these lists\n     *  - interpolants from [[TechiqueDescriptor.techniquePropNames]]\n     *  - expressions [[TechniqueDescriptor.dynamicPropNames]] (Future)\n     */\n    _dynamicForwardedAttributes?: Array<[string, Expr]>;\n    _dynamicTechniques?: Map<string, IndexedTechnique>;\n\n    /**\n     * Optimization: Index into table in StyleSetEvaluator.\n     * @hidden\n     */\n    _staticTechnique?: IndexedTechnique;\n\n    /**\n     * Optimization: StyleSet index.\n     * @hidden\n     */\n    _styleSetIndex?: number;\n\n    /**\n     * Optimization: Requested $geometryType.\n     * @hidden\n     */\n    _geometryType?: string;\n\n    /**\n     * `true` if any of the properties of this technique\n     * requires access to the feature's state.\n     */\n    _usesFeatureState?: boolean;\n}\n\ntype InternalStyle = Style & StyleSelector & StyleInternalParams;\n\n/**\n * [[StyleConditionClassifier]] searches for usages of `$layer` in `when` conditions\n * associated with styling rules.\n *\n * @hidden\n */\nclass StyleConditionClassifier implements ExprVisitor<Expr | undefined, Expr | undefined> {\n    private _style!: InternalStyle;\n\n    classify(style: InternalStyle) {\n        if (style._whenExpr) {\n            const savedStyle = this.switchStyle(style);\n            style._whenExpr = style._whenExpr.accept(this, undefined);\n            this._style = savedStyle;\n        }\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCaseExpr(expr: CaseExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCallExpr(call: CallExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        if (call.op === \"all\") {\n            // processing of an `[\"all\", e1, e2, ... eN]` expression. In this case\n            // search for expressions matching comparison of `$layer` and string literals\n            // in the sub expressions.\n            const children = call.args\n                .map(childExpr => childExpr.accept(this, call))\n                .filter(childExpr => childExpr !== undefined) as Expr[];\n\n            return new CallExpr(call.op, children);\n        } else if (enclosingExpr) {\n            // `call` is a direct child expression of an `\"all\"` operator.\n            const matched = this.matchVarStringComparison(call);\n\n            if (matched) {\n                if (this._style.layer === undefined && matched.name === \"$layer\") {\n                    // found a subexpression `[\"==\", [\"get\", \"$layer\"], \"some layer name\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $layer in\n                    // [[StyleInternalParams]].\n\n                    this._style.layer = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                } else if (\n                    this._style._geometryType === undefined &&\n                    matched.name === \"$geometryType\"\n                ) {\n                    // found a subexpression `[\"==\", [\"get\", \"$geometryType\"], \"geometry\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $geometryType in\n                    // [[StyleInternalParams]].\n\n                    this._style._geometryType = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                }\n            }\n        }\n\n        return call;\n    }\n\n    visitStepExpr(expr: StepExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        throw new Error(\"todo\");\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        throw new Error(\"todo\");\n    }\n\n    /**\n     * Tests if the given `call` matches the structure [\"==\", [\"get\", name], value].\n     * If a match is found returns an object containing the `name` and the `value`;\n     *\n     * @param call - The expression to match.\n     */\n    private matchVarStringComparison(call: CallExpr) {\n        if (call.op === \"==\") {\n            const left = call.args[0];\n            const right = call.args[1];\n\n            if (left instanceof VarExpr && right instanceof StringLiteralExpr) {\n                return { name: left.name, value: right.value };\n            }\n\n            if (right instanceof VarExpr && left instanceof StringLiteralExpr) {\n                return { name: right.name, value: left.value };\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Sets the given `style` as current.\n     *\n     * @returns The previous `style`.\n     */\n    private switchStyle(style: InternalStyle) {\n        const saved = this._style;\n        this._style = style;\n        return saved;\n    }\n}\n\nclass OptimizedSubSetKey {\n    key: string;\n    layer: string | undefined;\n    geometryType: string | undefined;\n\n    cachedStyleSet?: InternalStyle[];\n\n    constructor(layer?: string | undefined, geometryType?: string | undefined) {\n        this.key = \"\";\n        this.set(layer, geometryType);\n    }\n\n    set(\n        layer: string | undefined,\n        geometryType: string | undefined,\n        env?: Env\n    ): OptimizedSubSetKey {\n        let keyUpdateNeeded: boolean = false;\n        if (layer === undefined) {\n            const envLayer = env !== undefined ? env.lookup(\"$layer\") : undefined;\n            layer = typeof envLayer === \"string\" ? envLayer : undefined;\n        }\n        if (this.layer !== layer) {\n            this.layer = layer;\n            keyUpdateNeeded = true;\n        }\n\n        if (geometryType === undefined) {\n            const envGeometryType = env !== undefined ? env.lookup(\"$geometryType\") : undefined;\n            geometryType = typeof envGeometryType === \"string\" ? envGeometryType : undefined;\n        }\n        if (this.geometryType !== geometryType) {\n            this.geometryType = geometryType;\n            keyUpdateNeeded = true;\n        }\n\n        if (keyUpdateNeeded) {\n            this.updateKey();\n        }\n        return this;\n    }\n\n    private updateKey() {\n        if (this.layer !== undefined) {\n            // tslint:disable-next-line:prefer-conditional-expression\n            if (this.geometryType !== undefined) {\n                this.key = `${this.layer}:${this.geometryType}`;\n            } else {\n                this.key = `${this.layer}:`;\n            }\n        } else {\n            if (this.geometryType !== undefined) {\n                this.key = `:${this.geometryType}`;\n            } else {\n                this.key = \"all\";\n            }\n        }\n        this.cachedStyleSet = undefined;\n    }\n}\n\n/**\n * Combine data from datasource and apply the rules from a specified theme to show it on the map.\n */\nexport class StyleSetEvaluator {\n    readonly styleSet: InternalStyle[];\n\n    private readonly m_techniques: IndexedTechnique[] = [];\n    private readonly m_exprPool = new ExprPool();\n    private readonly m_cachedResults = new Map<Expr, Value>();\n    private readonly m_styleConditionClassifier = new StyleConditionClassifier();\n    private readonly m_subStyleSetCache = new Map<string, InternalStyle[]>();\n    private readonly m_definitions?: Definitions;\n    private readonly m_definitionExprCache = new Map<string, Expr>();\n    private readonly m_tmpOptimizedSubSetKey: OptimizedSubSetKey = new OptimizedSubSetKey();\n    private readonly m_emptyEnv = new Env();\n    private m_featureDependencies: string[] = [];\n    private m_layer: string | undefined;\n    private m_geometryType: string | undefined;\n    private m_zoomLevel: number | undefined;\n    private m_previousResult: IndexedTechnique[] | undefined;\n    private m_previousEnv: Env | undefined;\n\n    constructor(styleSet: StyleSet, definitions?: Definitions) {\n        this.m_definitions = definitions;\n        this.styleSet = resolveReferences(styleSet, definitions);\n        computeDefaultRenderOrder(this.styleSet);\n        this.compileStyleSet();\n    }\n\n    /**\n     * Find all techniques that fit the current objects' environment.\n     * *The techniques in the resulting array may not be modified* since they are being reused for\n     * identical objects.\n     *\n     * @param env - The objects environment, i.e. the attributes that are relevant for its\n     * representation.\n     * @param layer - The optional layer name used to filter techniques.\n     * @param geometryType - The optional geometryType used to filter techniques.\n     */\n    getMatchingTechniques(\n        env: Env,\n        layer?: string | undefined,\n        geometryType?: string | undefined\n    ): IndexedTechnique[] {\n        if (\n            this.m_previousResult &&\n            this.m_previousEnv &&\n            this.m_featureDependencies.every(p => this.m_previousEnv?.lookup(p) === env.lookup(p))\n        ) {\n            return this.m_previousResult;\n        }\n\n        const result: IndexedTechnique[] = [];\n        this.m_cachedResults.clear();\n\n        const optimizedSubSetKey = this.m_tmpOptimizedSubSetKey;\n        optimizedSubSetKey.set(layer, geometryType, env);\n\n        // get the requested $layer and $geometryType, if any.\n        this.m_layer = optimizedSubSetKey.layer;\n        this.m_geometryType = optimizedSubSetKey.geometryType;\n        this.m_zoomLevel = env.lookup(\"$zoom\") as number | undefined;\n\n        const searchedStyleSet = this.getOptimizedStyleSet(optimizedSubSetKey);\n\n        for (const currStyle of searchedStyleSet) {\n            if (this.processStyle(env, currStyle, result)) {\n                break;\n            }\n        }\n\n        this.m_previousResult = result;\n        this.m_previousEnv = env;\n\n        return result;\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to `layer`.\n     *\n     * @param layer - name of layer\n     */\n    wantsLayer(layer: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, undefined)).length > 0\n        );\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to particular `[layer, geometryType]` pair.\n     *\n     * @param layer - name of layer\n     * @param geometryType - type of layer - `point`, `line` or `polygon`\n     */\n    wantsFeature(layer: string, geometryType?: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, geometryType))\n                .length > 0\n        );\n    }\n\n    /**\n     * Get the expression evaluation cache, for further feature processing.\n     *\n     * This object is valid until next `getMatchingTechniques` call.\n     */\n    get expressionEvaluatorCache() {\n        return this.m_cachedResults;\n    }\n\n    /**\n     * Reset array of techniques.\n     *\n     * Cleans technique array and indices, so it doesn't accumulate accross several decoding runs.\n     */\n    resetTechniques() {\n        for (const techinque of this.m_techniques) {\n            techinque._index = undefined!;\n        }\n        this.m_techniques.length = 0;\n        this.m_previousResult = undefined;\n        this.m_previousEnv = undefined;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get techniques(): IndexedTechnique[] {\n        return this.m_techniques;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get decodedTechniques(): IndexedTechnique[] {\n        return this.m_techniques.map(makeDecodedTechnique);\n    }\n\n    private getOptimizedStyleSet(subSetKey: OptimizedSubSetKey): InternalStyle[] {\n        if (subSetKey.cachedStyleSet !== undefined) {\n            return subSetKey.cachedStyleSet;\n        }\n        let optimizedStyleSet = this.m_subStyleSetCache.get(subSetKey.key);\n        if (optimizedStyleSet !== undefined) {\n            subSetKey.cachedStyleSet = optimizedStyleSet;\n            return optimizedStyleSet;\n        }\n        optimizedStyleSet = this.createPreFilteredStyleSet(subSetKey);\n        this.m_subStyleSetCache.set(subSetKey.key, optimizedStyleSet);\n        subSetKey.cachedStyleSet = optimizedStyleSet;\n        return optimizedStyleSet;\n    }\n\n    private createPreFilteredStyleSet(subSetKey: OptimizedSubSetKey) {\n        const { layer, geometryType } = subSetKey;\n\n        return this.styleSet.filter(style => {\n            if (layer !== undefined && style.layer !== undefined && style.layer !== layer) {\n                return false;\n            }\n            if (\n                geometryType !== undefined &&\n                style._geometryType !== undefined &&\n                style._geometryType !== geometryType\n            ) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    /**\n     * Compile the `when` conditions found when traversting the styling rules.\n     */\n    private compileStyleSet() {\n        this.m_featureDependencies = [\"$layer\", \"$geometryType\", \"$zoom\"];\n\n        this.styleSet.forEach(style => this.compileStyle(style));\n\n        // Create optimized styleSets for each `layer` & `geometryType` tuple.\n        this.styleSet.forEach(style => {\n            this.getOptimizedStyleSet(\n                this.m_tmpOptimizedSubSetKey.set(style.layer, style._geometryType)\n            );\n        });\n    }\n\n    /**\n     * Compile the `when` conditions reachable from the given `style`.\n     *\n     * @param style - The current style.\n     */\n    private compileStyle(style: InternalStyle) {\n        this.checkStyleDynamicAttributes(style);\n\n        if (style.when !== undefined) {\n            try {\n                style._whenExpr = Array.isArray(style.when)\n                    ? Expr.fromJSON(style.when, this.m_definitions, this.m_definitionExprCache)\n                    : // tslint:disable-next-line: deprecation\n                      Expr.parse(style.when);\n\n                // search for usages of '$layer' and any other\n                // special symbol that can be used to speed up the evaluation\n                // of the `when` conditions associated to this `style`.\n                this.m_styleConditionClassifier.classify(style);\n\n                if (style._whenExpr !== undefined) {\n                    style._whenExpr = style._whenExpr.intern(this.m_exprPool);\n                }\n\n                const deps = style._whenExpr.dependencies();\n\n                deps?.properties.forEach(prop => {\n                    if (!this.m_featureDependencies.includes(prop)) {\n                        this.m_featureDependencies.push(prop);\n                    }\n                });\n\n                if (isJsonExpr(style.minZoomLevel)) {\n                    style._minZoomLevelExpr = Expr.fromJSON(style.minZoomLevel).intern(\n                        this.m_exprPool\n                    );\n                }\n\n                if (isJsonExpr(style.maxZoomLevel)) {\n                    style._maxZoomLevelExpr = Expr.fromJSON(style.maxZoomLevel).intern(\n                        this.m_exprPool\n                    );\n                }\n            } catch (err) {\n                logger.log(\n                    \"failed to evaluate expression\",\n                    JSON.stringify(style.when),\n                    \"error\",\n                    String(err)\n                );\n            }\n        }\n    }\n\n    /**\n     * Process a style (and its sub-styles) hierarchically to look for the technique that fits the\n     * current objects' environment. The attributes of the styles are assembled to create a unique\n     * technique for every object.\n     *\n     * @param env - The objects environment, i.e. the attributes that are relevant for its\n     *            representation.\n     * @param style - Current style (could also be top of stack).\n     * @param result - The array of resulting techniques. There may be more than one technique per\n     *               object, resulting in multiple graphical objects for representation.\n     * @returns `true` if style has been found and processing is finished. `false` if not found, or\n     *          more than one technique should be applied.\n     */\n    private processStyle(env: Env, style: InternalStyle, result: Technique[]): boolean {\n        if (!this.checkZoomLevel(env, style)) {\n            return false;\n        }\n\n        if (\n            this.m_layer !== undefined &&\n            style.layer !== undefined &&\n            style.layer !== this.m_layer\n        ) {\n            return false;\n        }\n        if (\n            this.m_geometryType !== undefined &&\n            style._geometryType !== undefined &&\n            style._geometryType !== this.m_geometryType\n        ) {\n            return false;\n        }\n\n        if (style._whenExpr) {\n            try {\n                if (!style._whenExpr.evaluate(env, ExprScope.Condition, this.m_cachedResults)) {\n                    // Stop processing this styling rule. The `when` condition\n                    // associated with the current `style` evaluates to false so\n                    // no techinque defined by this style should be applied.\n                    return false;\n                }\n            } catch (error) {\n                logger.error(\n                    `failed to evaluate expression '${JSON.stringify(style.when)}': ${error}`\n                );\n                return false;\n            }\n        }\n\n        if (style.technique === undefined) {\n            return false;\n        }\n        // we found a technique!\n        if (style.technique !== \"none\") {\n            result.push(this.getTechniqueForStyleMatch(env, style));\n        }\n        // stop processing if \"final\" is set\n        return style.final === true;\n    }\n\n    private checkZoomLevel(env: Env, style: InternalStyle) {\n        if (style.minZoomLevel === undefined && style.maxZoomLevel === undefined) {\n            return true;\n        }\n\n        const zoomLevel = this.m_zoomLevel;\n        if (zoomLevel === undefined) {\n            return true;\n        }\n\n        if (style.minZoomLevel !== undefined) {\n            let minZoomLevel: Value = style.minZoomLevel;\n\n            if (style._minZoomLevelExpr) {\n                // the constraint is defined as expression, evaluate it and\n                // use its value\n                try {\n                    minZoomLevel = style._minZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._minZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof minZoomLevel === \"number\" && zoomLevel < minZoomLevel) {\n                return false;\n            }\n        }\n\n        if (style.maxZoomLevel !== undefined) {\n            let maxZoomLevel: Value = style.maxZoomLevel;\n\n            if (style._maxZoomLevelExpr) {\n                try {\n                    maxZoomLevel = style._maxZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._maxZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof maxZoomLevel === \"number\" && zoomLevel > maxZoomLevel) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private getTechniqueForStyleMatch(env: Env, style: InternalStyle) {\n        let technique: IndexedTechnique | undefined;\n        if (style._dynamicTechniques !== undefined) {\n            const dynamicAttributes = this.evaluateTechniqueProperties(style, env);\n            const key = this.getDynamicTechniqueKey(style, dynamicAttributes);\n            technique = style._dynamicTechniques!.get(key);\n            if (technique === undefined) {\n                technique = this.createTechnique(style, key, dynamicAttributes);\n                style._dynamicTechniques!.set(key, technique);\n            }\n        } else {\n            technique = style._staticTechnique;\n            if (technique === undefined) {\n                style._staticTechnique = technique = this.createTechnique(\n                    style,\n                    `${style._styleSetIndex}`,\n                    []\n                ) as IndexedTechnique;\n            }\n        }\n\n        if (technique._index === undefined) {\n            technique._index = this.m_techniques.length;\n            this.m_techniques.push(technique);\n        }\n        return technique;\n    }\n\n    private getDynamicTechniqueKey(\n        style: InternalStyle,\n        dynamicAttributes: Array<[string, Value]>\n    ) {\n        const dynamicAttrKey = dynamicAttributes\n            .map(([_attrName, attrValue]) => {\n                if (attrValue === undefined) {\n                    return \"U\";\n                } else {\n                    return JSON.stringify(attrValue);\n                }\n            })\n            .join(\":\");\n        return `${style._styleSetIndex!}:${dynamicAttrKey}`;\n    }\n\n    private checkStyleDynamicAttributes(style: InternalStyle) {\n        if (style._dynamicTechniqueAttributes !== undefined || style.technique === \"none\") {\n            return;\n        }\n\n        style._dynamicTechniqueAttributes = [];\n        style._dynamicFeatureAttributes = [];\n        style._dynamicForwardedAttributes = [];\n        style._staticAttributes = [];\n\n        const dynamicFeatureAttributes = style._dynamicFeatureAttributes;\n        const dynamicTechniqueAttributes = style._dynamicTechniqueAttributes;\n        const dynamicForwardedAttributes = style._dynamicForwardedAttributes;\n        const targetStaticAttributes = style._staticAttributes;\n\n        const techniqueDescriptor =\n            techniqueDescriptors[style.technique] || emptyTechniqueDescriptor;\n\n        const processAttribute = (attrName: string, attrValue: Value | JsonExpr | undefined) => {\n            if (attrValue === undefined) {\n                return;\n            }\n\n            if (isJsonExpr(attrValue)) {\n                attrValue = Expr.fromJSON(\n                    attrValue,\n                    this.m_definitions,\n                    this.m_definitionExprCache\n                ).intern(this.m_exprPool);\n            } else if (isInterpolatedPropertyDefinition(attrValue)) {\n                // found a property using an object-like interpolation definition.\n                attrValue = Expr.fromJSON(\n                    interpolatedPropertyDefinitionToJsonExpr(attrValue)\n                ).intern(this.m_exprPool);\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                const deps = attrValue.dependencies();\n\n                if (deps.featureState) {\n                    if (attrName !== \"enabled\") {\n                        logger.log(\"feature-state is not supported in this context\");\n                    } else {\n                        style._usesFeatureState = true;\n                    }\n                }\n\n                if (deps.properties.size === 0 && !attrValue.isDynamic()) {\n                    // no data-dependencies detected.\n                    attrValue = attrValue.evaluate(this.m_emptyEnv);\n                }\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                let attrScope: AttrScope | undefined = (techniqueDescriptor.attrScopes as any)[\n                    attrName as any\n                ];\n\n                if (attrScope === undefined) {\n                    // Use [[AttrScope.TechniqueGeometry]] as default scope for the attribute.\n                    attrScope = AttrScope.TechniqueGeometry;\n                }\n\n                const deps = attrValue.dependencies();\n\n                deps.properties.forEach(prop => {\n                    if (!this.m_featureDependencies.includes(prop)) {\n                        this.m_featureDependencies.push(prop);\n                    }\n                });\n\n                switch (attrScope) {\n                    case AttrScope.FeatureGeometry:\n                        dynamicFeatureAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueGeometry:\n                        dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueRendering:\n                        if (deps.properties.size === 0) {\n                            dynamicForwardedAttributes.push([attrName, attrValue]);\n                        } else {\n                            dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        }\n                        break;\n                }\n            } else if (attrValue !== undefined && attrValue !== null) {\n                targetStaticAttributes.push([attrName, attrValue]);\n            }\n        };\n\n        const replacement = new Map<string, string>([\n            [\"category\", \"_category\"],\n            [\"secondaryCategory\", \"_secondaryCategory\"]\n        ]);\n\n        for (const p in style) {\n            if (!style.hasOwnProperty(p)) {\n                continue;\n            }\n            if (p.startsWith(\"_\")) {\n                continue;\n            }\n            if ([\"when\", \"technique\", \"layer\", \"attr\", \"description\"].includes(p)) {\n                continue;\n            }\n            const pp = replacement.get(p) ?? p;\n            processAttribute(pp, (style as any)[p]);\n        }\n\n        if (style.attr !== undefined) {\n            for (const attrName in style.attr) {\n                if (!style.attr.hasOwnProperty(attrName)) {\n                    continue;\n                }\n                processAttribute(attrName, (style.attr as any)[attrName]);\n            }\n        }\n\n        if (dynamicTechniqueAttributes.length > 0) {\n            style._dynamicTechniques = new Map();\n        }\n    }\n\n    private evaluateTechniqueProperties(style: InternalStyle, env: Env): Array<[string, Value]> {\n        if (style._dynamicTechniqueAttributes === undefined) {\n            return [];\n        }\n\n        return style._dynamicTechniqueAttributes.map(([attrName, attrExpr]) => {\n            try {\n                const evaluatedValue = attrExpr.evaluate(\n                    env,\n                    ExprScope.Value,\n                    this.m_cachedResults\n                );\n                return [attrName, evaluatedValue];\n            } catch (error) {\n                logger.error(`failed to evaluate expression '${attrExpr.toJSON()}': ${error}`);\n                return [attrName, null];\n            }\n        });\n    }\n\n    private createTechnique(\n        style: InternalStyle,\n        key: string,\n        dynamicAttrs: Array<[string, Value]>\n    ) {\n        const technique: any = {};\n        technique.name = style.technique;\n        if (style._staticAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._staticAttributes) {\n                if (attrValue !== null) {\n                    technique[attrName] = attrValue;\n                }\n            }\n        }\n        for (const [attrName, attrValue] of dynamicAttrs) {\n            if (attrValue !== null) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicFeatureAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicFeatureAttributes) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicForwardedAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicForwardedAttributes) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        technique._index = this.m_techniques.length;\n        technique._styleSetIndex = style._styleSetIndex!;\n        if (style.styleSet !== undefined) {\n            technique._styleSet = style.styleSet;\n        }\n        if (style._usesFeatureState !== undefined) {\n            technique._usesFeatureState = style._usesFeatureState;\n        }\n        this.m_techniques.push(technique as IndexedTechnique);\n        return technique as IndexedTechnique;\n    }\n}\n\nfunction computeDefaultRenderOrder(styleSet: InternalStyle[]) {\n    let techniqueRenderOrder = 0;\n    let styleSetIndex = 0;\n    for (const style of styleSet) {\n        style._styleSetIndex = styleSetIndex++;\n        if (style.technique !== undefined && style.renderOrder === undefined) {\n            style.renderOrder = techniqueRenderOrder++;\n        }\n    }\n}\n\nfunction resolveReferences(styleSet: StyleDeclaration[], definitions: Definitions | undefined) {\n    return styleSet.map(style => resolveStyleReferences(style, definitions));\n}\n\nfunction resolveStyleReferences(\n    style: StyleDeclaration,\n    definitions: Definitions | undefined\n): InternalStyle {\n    if (isJsonExpr(style)) {\n        if (!isJsonExprReference(style)) {\n            throw new Error(\"invalid expression in this context, only 'ref's are supported\");\n        }\n        // expand and instantiate references to style definitions.\n        const definitionName = style[1];\n        const def = definitions && definitions[definitionName];\n        if (!def) {\n            throw new Error(`invalid reference '${definitionName}' - not found`);\n        }\n        if (!isActualSelectorDefinition(def)) {\n            throw new Error(`invalid reference '${definitionName}' - expected style definition`);\n        }\n        // instantiate the style\n        return resolveStyleReferences(def, definitions);\n    }\n\n    return { ...style };\n}\n\n/**\n * Create transferable representation of dynamic technique.\n *\n * Converts  non-transferable {@link Expr}instances back to JSON form.\n */\nexport function makeDecodedTechnique(technique: IndexedTechnique): IndexedTechnique {\n    const result: Partial<IndexedTechnique> = {};\n    for (const attrName in technique) {\n        if (!technique.hasOwnProperty(attrName)) {\n            continue;\n        }\n\n        let attrValue: any = (technique as any)[attrName];\n\n        if (\n            typeof attrValue === \"object\" &&\n            (attrValue.isVector2 || attrValue.isVector3 || attrValue.isVector4)\n        ) {\n            attrValue = LiteralExpr.fromValue(attrValue);\n        }\n\n        if (Expr.isExpr(attrValue)) {\n            attrValue = attrValue.toJSON();\n        }\n\n        (result as any)[attrName] = attrValue;\n    }\n    return (result as any) as IndexedTechnique;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Expr,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\nimport { Value } from \"./Env\";\n\n/**\n * [[ExprPool]] maintains a set of unique interned {@link Expr} objects.\n *\n * @hidden\n */\nexport class ExprPool implements ExprVisitor<Expr, void> {\n    private readonly m_booleanLiterals = new Map<boolean, BooleanLiteralExpr>();\n    private readonly m_numberLiterals = new Map<number, NumberLiteralExpr>();\n    private readonly m_stringLiterals = new Map<string, StringLiteralExpr>();\n    private readonly m_objectLiterals = new Map<object, ObjectLiteralExpr>();\n    private readonly m_arrayLiterals: ObjectLiteralExpr[] = [];\n    private readonly m_varExprs = new Map<string, VarExpr>();\n    private readonly m_hasAttributeExprs = new Map<string, HasAttributeExpr>();\n    private readonly m_matchExprs: MatchExpr[] = [];\n    private readonly m_caseExprs: CaseExpr[] = [];\n    private readonly m_interpolateExprs: InterpolateExpr[] = [];\n    private readonly m_stepExprs: StepExpr[] = [];\n    private readonly m_callExprs = new Map<string, CallExpr[]>();\n\n    /**\n     * Add `expr` to this [[ExprPool]] and return a unique {@link Expr}\n     * object that is structurally equivalent to `expr`.\n     *\n     * @param expr - The {@link Expr} to add to this [[ExprPool]].\n     * @returns A unique {@link Expr} that is structurally equivalent to `expr`.\n     */\n    add(expr: Expr): Expr {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): Expr {\n        return NullLiteralExpr.instance;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): Expr {\n        const e = this.m_booleanLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_booleanLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): Expr {\n        const e = this.m_numberLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_numberLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): Expr {\n        const e = this.m_stringLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_stringLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): Expr {\n        const e = this.m_objectLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n\n        if (Array.isArray(expr.value)) {\n            const array = expr.value as Value[];\n\n            const r = this.m_arrayLiterals.find(literal => {\n                const elements = literal.value as Value[];\n                if (elements.length !== array.length) {\n                    return false;\n                }\n                return array.every((x, i) => x === elements[i]);\n            });\n\n            if (r !== undefined) {\n                return r;\n            }\n\n            this.m_arrayLiterals.push(expr);\n        }\n\n        this.m_objectLiterals.set(expr.value, expr);\n\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): Expr {\n        const e = this.m_varExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_varExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): Expr {\n        const e = this.m_hasAttributeExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_hasAttributeExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): Expr {\n        const value = expr.value.accept(this, context);\n        const branches: typeof expr.branches = expr.branches.map(([label, body]) => [\n            label,\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n        for (const candidate of this.m_matchExprs) {\n            if (candidate.value !== value) {\n                continue;\n            }\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n        const r = new MatchExpr(value, branches, fallback);\n        this.m_matchExprs.push(r);\n        return r;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): Expr {\n        const branches: typeof expr.branches = expr.branches.map(([condition, body]) => [\n            condition.accept(this, context),\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n\n        for (const candidate of this.m_caseExprs) {\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n\n        const r = new CaseExpr(branches, fallback);\n        this.m_caseExprs.push(r);\n        return r;\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): Expr {\n        // rewrite the actual arguments\n        const expressions = expr.args.map(childExpr => childExpr.accept(this, context));\n        // ensure we have a valid set of interned expressions for the calls\n        if (!this.m_callExprs.has(expr.op)) {\n            this.m_callExprs.set(expr.op, []);\n        }\n        // get the calls for the given operator.\n        const calls = this.m_callExprs.get(expr.op)!;\n        for (const call of calls) {\n            // check the number of arguments\n            if (call.args.length !== expressions.length) {\n                continue;\n            }\n            // find the index of the first mismatch.\n            let index = 0;\n            for (; index < call.args.length; ++index) {\n                if (call.args[index] !== expressions[index]) {\n                    break;\n                }\n            }\n            if (index === call.args.length) {\n                // no mismatch found, return the 'interned' call.\n                return call;\n            }\n        }\n        const e = new CallExpr(expr.op, expressions);\n        e.descriptor = expr.descriptor;\n        calls.push(e);\n        return e;\n    }\n\n    visitStepExpr(expr: StepExpr, context: void): Expr {\n        if (this.m_stepExprs.includes(expr)) {\n            return expr;\n        }\n        const input = expr.input.accept(this, context);\n        const defaultValue = expr.defaultValue.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(stop => {\n            const key = stop[0];\n            const value = stop[1].accept(this, context);\n            return value === stop[1] ? stop : [key, value];\n        });\n        for (const step of this.m_stepExprs) {\n            if (\n                step.input === input &&\n                step.defaultValue === defaultValue &&\n                stops.length === step.stops.length &&\n                stops.every(\n                    ([key, value], i) => key === step.stops[i][0] && value === step.stops[i][1]\n                )\n            ) {\n                return step;\n            }\n        }\n        const e = new StepExpr(input, defaultValue, stops);\n        this.m_stepExprs.push(e);\n        return e;\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: void): Expr {\n        if (this.m_interpolateExprs.includes(expr)) {\n            return expr;\n        }\n        const input = expr.input.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(stop => {\n            const key = stop[0];\n            const value = stop[1].accept(this, context);\n            return value === stop[1] ? stop : [key, value];\n        });\n        for (const interp of this.m_interpolateExprs) {\n            if (\n                interp.input === input &&\n                interp.mode[0] === expr.mode[0] &&\n                interp.mode[1] === expr.mode[1] &&\n                stops.length === interp.stops.length &&\n                stops.every(\n                    ([key, value], i) => key === interp.stops[i][0] && value === interp.stops[i][1]\n                )\n            ) {\n                return interp;\n            }\n        }\n        const e = new InterpolateExpr(expr.mode, input, stops);\n        this.m_interpolateExprs.push(e);\n        return e;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst currEdgeStart = new THREE.Vector2();\nconst currEdgeGoal = new THREE.Vector2();\nconst prevEdgeStart = new THREE.Vector2();\nconst prevEdgeGoal = new THREE.Vector2();\n\n/**\n * Fills an index buffer with the indices for the edges of a polygon contour.\n *\n * @param indexBuffer - Edge index buffer to be filled.\n * @param vertexOffset - Starting offset of the vertices composing the contour.\n * @param vertexStride - Number of elements per contour vertex.\n * @param polygonContour - Vertices that compose the contour.\n * @param polygonContourEdges - Collection of booleans indicating if contour edges should be added.\n */\nexport function addPolygonEdges(\n    indexBuffer: number[],\n    vertexOffset: number,\n    vertexStride: number,\n    polygonContour: number[],\n    polygonContourEdges: boolean[],\n    isExtruded?: boolean,\n    addFootprintEdges?: boolean,\n    wallEdgeSlope?: number\n) {\n    for (let i = 0; i < polygonContourEdges.length; ++i) {\n        if (polygonContourEdges[i]) {\n            if (isExtruded === true) {\n                const vFootprint0 = vertexOffset + i * 2;\n                const vRoof0 = vFootprint0 + 1;\n                const vFootprint1 = vertexOffset + ((i + 1) % polygonContourEdges.length) * 2;\n                const vRoof1 = vFootprint1 + 1;\n\n                if (addFootprintEdges === true) {\n                    indexBuffer.push(vFootprint0, vFootprint1);\n                }\n                indexBuffer.push(vRoof0, vRoof1);\n\n                const prevEdgeIdx = (i === 0 ? polygonContourEdges.length : i) - 1;\n                if (polygonContourEdges[prevEdgeIdx]) {\n                    if (wallEdgeSlope !== undefined) {\n                        const v0x = polygonContour[i * vertexStride];\n                        const v0y = polygonContour[i * vertexStride + 1];\n                        const v1x =\n                            polygonContour[((i + 1) % polygonContourEdges.length) * vertexStride];\n                        const v1y =\n                            polygonContour[\n                                ((i + 1) % polygonContourEdges.length) * vertexStride + 1\n                            ];\n\n                        currEdgeStart.set(v0x, v0y);\n                        currEdgeGoal.set(v1x, v1y);\n                        prevEdgeStart.set(\n                            polygonContour[prevEdgeIdx * vertexStride],\n                            polygonContour[prevEdgeIdx * vertexStride + 1]\n                        );\n                        prevEdgeGoal.set(currEdgeStart.x, currEdgeStart.y);\n\n                        if (\n                            prevEdgeGoal\n                                .sub(prevEdgeStart)\n                                .normalize()\n                                .dot(currEdgeGoal.sub(currEdgeStart).normalize()) <= wallEdgeSlope\n                        ) {\n                            indexBuffer.push(vFootprint0, vRoof0);\n                        }\n                    } else {\n                        indexBuffer.push(vFootprint0, vRoof0);\n                    }\n                }\n            } else {\n                const vFoot0 = vertexOffset + i;\n                const vRoof0 = vertexOffset + ((i + 1) % polygonContourEdges.length);\n                indexBuffer.push(vFoot0, vRoof0);\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BufferAttribute as ThreeBufferAttribute,\n    BufferGeometry as ThreeBufferGeometry,\n    InterleavedBufferAttribute as ThreeInterleavedBufferAttribute,\n    TypedArray\n} from \"three\";\nimport {\n    BufferAttribute,\n    BufferElementType,\n    Geometry,\n    GeometryType,\n    InterleavedBufferAttribute\n} from \"./DecodedTile\";\n\n/**\n * Collection of helper methods to convert\n * {@link https://threejs.org/docs/index.html#api/en/core/BufferGeometry|three.js BufferGeometry}\n * to [[Geometry]] that allows creation and transfering of THREE BufferGeometry in webworkers.\n * See also [[CustomDatasourceExample]].\n */\nexport namespace ThreeBufferUtils {\n    export function getBufferElementType(buffer: TypedArray): BufferElementType {\n        if (buffer instanceof Int8Array) {\n            return \"int8\";\n        } else if (buffer instanceof Uint8Array) {\n            return \"uint8\";\n        } else if (buffer instanceof Int16Array) {\n            return \"int16\";\n        } else if (buffer instanceof Uint16Array) {\n            return \"uint16\";\n        } else if (buffer instanceof Int32Array) {\n            return \"int32\";\n        } else if (buffer instanceof Uint32Array) {\n            return \"uint32\";\n        } else if (buffer instanceof Float32Array) {\n            return \"float\";\n        }\n\n        throw new Error(`Unsupported buffer type ${name}`);\n    }\n\n    export function fromThreeBufferAttribute(\n        bufferAttribute: ThreeBufferAttribute\n    ): BufferAttribute {\n        const buffer = (bufferAttribute.array as any) as TypedArray;\n        return {\n            name: bufferAttribute.name,\n            buffer: buffer.buffer,\n            type: getBufferElementType(buffer),\n            itemCount: bufferAttribute.itemSize,\n            normalized: bufferAttribute.normalized\n        };\n    }\n\n    export function fromThreeInterleavedBufferAttribute(\n        bufferAttribute: ThreeInterleavedBufferAttribute\n    ): InterleavedBufferAttribute {\n        throw new Error(\"Not implemented yet\");\n    }\n\n    export function fromThreeBufferGeometry(\n        bufferGeometry: ThreeBufferGeometry,\n        techniqueIndex: number\n    ): Geometry {\n        const vertexAttributes: BufferAttribute[] = [];\n        const attributeNames = Object.getOwnPropertyNames(bufferGeometry.attributes);\n        for (const name of attributeNames) {\n            const attribute = bufferGeometry.attributes[name];\n            // FIXME: Also support InterleavedBufferAttribute\n            const vertexAttribute = fromThreeBufferAttribute(attribute as ThreeBufferAttribute);\n            vertexAttribute.name = name;\n            vertexAttributes.push(vertexAttribute);\n        }\n        const index =\n            bufferGeometry.index !== null\n                ? fromThreeBufferAttribute(bufferGeometry.index)\n                : undefined;\n\n        let count = 0;\n        if (index !== undefined) {\n            count = bufferGeometry.index === null ? 0 : bufferGeometry.index.count;\n        } else {\n            // If there is no index buffer, try to deduce the count from the position attribute.\n            const posAttr = bufferGeometry.attributes.position as ThreeBufferAttribute;\n            if (posAttr === undefined) {\n                throw new Error(\"Missing position attibute to deduce item count\");\n            }\n            count = posAttr.count;\n        }\n\n        return {\n            type: GeometryType.Unspecified,\n            vertexAttributes,\n            index,\n            groups: [{ start: 0, count, technique: techniqueIndex }]\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    addBuffersToTransferList,\n    BufferAttribute,\n    getProjection,\n    InterleavedBufferAttribute,\n    ITileDecoder,\n    WorkerDecoderProtocol\n} from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\nconst logger = LoggerManager.instance.create(\"TileDecoderService\");\n\n/**\n * An extension to [[WorkerService]], the `TileDecoderService` implements an asynchronous\n * (message based) service to decode tile content in web workers. The `TileDecoderService` itself\n * lives in the web worker, and communicates with messages by means of a [[ConcurrentWorkerSet]]\n * with the application.\n *\n * The `TileDecoderService` handles a [[DecodeTileRequest]], which contains a tile and its freshly\n * loaded binary data, decodes the content with the [[ITileDecoder]] that the service is configured\n * to use, and sends the data back in form of a [[WorkerServiceResponse]].\n */\nexport class TileDecoderService extends WorkerService {\n    /**\n     * Start a [[TileDecoderService]] with a given decoder.\n     *\n     * @param serviceId - Service id. Must be unique.\n     * @param decoder -   [[TileDecoder]] instance.\n     */\n    static start(serviceId: string, decoder: ITileDecoder) {\n        return new TileDecoderService(serviceId, decoder);\n    }\n\n    /**\n     * Set up the `TileDecoderService`. The name of the service must be unique\n     *\n     * @param serviceId - Service id. Must be unique.\n     * @param m_decoder - Decoder to handle the decoding and info requests.\n     */\n    constructor(readonly serviceId: string, private readonly m_decoder: ITileDecoder) {\n        super(serviceId);\n        this.m_decoder.connect();\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request - Message that is either a DecodeTileRequest or a TileInfoRequest.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerDecoderProtocol.isDecodeTileRequest(request)) {\n            return this.handleDecodeTileRequest(request);\n        } else if (WorkerDecoderProtocol.isTileInfoRequest(request)) {\n            return this.handleTileInfoRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    /**\n     * Handle incoming configuration message. Configuration message is passed on to decoder.\n     *\n     * @param request - Message of type [[ConfigurationMessage]].\n     * @override\n     */\n    protected handleMessage(message: any) {\n        if (WorkerDecoderProtocol.isConfigurationMessage(message)) {\n            this.handleConfigurationMessage(message);\n        } else {\n            logger.error(`[${this.serviceId}]: invalid message ${message.type}`);\n        }\n    }\n\n    private async handleDecodeTileRequest(\n        request: WorkerDecoderProtocol.DecodeTileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        const decodedTile = await this.m_decoder.decodeTile(request.data, tileKey, projection);\n\n        const transferList: ArrayBufferLike[] = [];\n\n        const transferBufferAttribute = (\n            attribute?: BufferAttribute | InterleavedBufferAttribute\n        ) => {\n            if (\n                attribute !== undefined &&\n                attribute.buffer.byteLength > 0 &&\n                !transferList.includes(attribute.buffer)\n            ) {\n                transferList.push(attribute.buffer);\n            }\n        };\n\n        decodedTile.geometries.forEach(geom => {\n            geom.vertexAttributes?.forEach(attr => transferBufferAttribute(attr));\n            geom.interleavedVertexAttributes?.forEach(attr => transferBufferAttribute(attr));\n            transferBufferAttribute(geom.index);\n            transferBufferAttribute(geom.edgeIndex);\n\n            if (\n                Array.isArray(geom.objInfos) &&\n                geom.objInfos.length === 1 &&\n                typeof geom.objInfos[0] === \"object\" &&\n                geom.objInfos[0]?.hasOwnProperty(\"displacementMap\")\n            ) {\n                const obj = geom.objInfos[0] as any;\n                transferBufferAttribute(obj.displacementMap);\n            }\n\n            if (Array.isArray(geom.attachments)) {\n                geom.attachments.forEach(attachment => {\n                    transferBufferAttribute(attachment.index);\n                    transferBufferAttribute(attachment.edgeIndex);\n                });\n            }\n        });\n\n        decodedTile.techniques.forEach(technique => {\n            addBuffersToTransferList(technique, transferList);\n        });\n\n        return {\n            response: decodedTile,\n            transferList\n        };\n    }\n\n    private handleTileInfoRequest(\n        request: WorkerDecoderProtocol.TileInfoRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        return this.m_decoder.getTileInfo(request.data, tileKey, projection).then(tileInfo => {\n            const transferList: ArrayBuffer[] =\n                tileInfo !== undefined && tileInfo.transferList !== undefined\n                    ? tileInfo.transferList\n                    : [];\n            return {\n                response: tileInfo,\n                transferList\n            };\n        });\n    }\n\n    private handleConfigurationMessage(message: WorkerDecoderProtocol.ConfigurationMessage) {\n        this.m_decoder.configure(\n            message.styleSet,\n            message.definitions,\n            message.languages,\n            message.options\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ITiler, WorkerTilerProtocol } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { GeoJsonTiler } from \"./GeoJsonTiler\";\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * An extension to [[WorkerService]], the `TilerService` implements an asynchronous (message based)\n * service to tile untiled payloads in web workers. The `TilerService` itself lives in the web\n * worker, and communicates with messages by means of a [[ConcurrentWorkerSet]] with the\n * application.\n *\n * The `TilerService` registers tile indices (parent tile to be subdivided) by handling a\n * [[RegisterIndexRequest]], and can later retrieve tiled payloads from through the [[TileRequest]].\n * The data is sent back in form of a [[WorkerServiceResponse]].\n */\nexport class TilerService extends WorkerService {\n    /**\n     * Start a [[TilerService]].\n     *\n     * @param serviceId - Service id. Must be unique.\n     */\n    static start(serviceId: string) {\n        return new TilerService(serviceId);\n    }\n    tiler: ITiler = new GeoJsonTiler();\n\n    /**\n     * Set up the `TilerService`. The name of the service must be unique\n     *\n     * @param serviceId - Service id. Must be unique.\n     */\n    constructor(readonly serviceId: string) {\n        super(serviceId);\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request - [[WorkerTilerProtocol]] request.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerTilerProtocol.isRegisterIndexRequest(request)) {\n            return this.handleRegisterIndexRequest(request);\n        } else if (WorkerTilerProtocol.isUpdateIndexRequest(request)) {\n            return this.handleUpdateIndexRequest(request);\n        } else if (WorkerTilerProtocol.isTileRequest(request)) {\n            return this.handleTileRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    private async handleTileRequest(\n        request: WorkerTilerProtocol.TileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const tile = await this.tiler.getTile(request.index, tileKey);\n\n        return { response: tile || {} };\n    }\n\n    private async handleRegisterIndexRequest(\n        message: WorkerTilerProtocol.RegisterIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n        await this.tiler.registerIndex(message.id, input);\n\n        return { response: {} };\n    }\n\n    private async handleUpdateIndexRequest(\n        message: WorkerTilerProtocol.UpdateIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n\n        this.tiler.updateIndex(message.id, input);\n\n        return { response: {} };\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * Factory function that creates [[WorkerService]].\n */\nexport type WorkerServiceFactory = (serviceId: string) => WorkerService;\n\n/**\n * Worker service class definition as needed by [[WorkerServiceManager.register]].\n */\nexport interface WorkerServiceDescriptor {\n    serviceType: string;\n    factory: WorkerServiceFactory;\n}\n\n/**\n * Manages dynamic worker services in Web Worker context.\n *\n * Handles `CreateService` and `DestroyService` messages sent to Web Worker. Singleton (in scope of\n * one worker runtime!), starts automatically with first [[getInstance]] call.\n */\nexport class WorkerServiceManager extends WorkerService {\n    /**\n     * Gets the default instance of `WorkerServiceManager`. Starts the service when first called.\n     */\n    static getInstance() {\n        if (this.m_service === undefined) {\n            this.m_service = new WorkerServiceManager(\n                WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n            );\n        }\n        return this.m_service;\n    }\n\n    /**\n     * Default instance of `WorkerServiceManager`.\n     */\n    private static m_service: WorkerServiceManager;\n\n    /**\n     * Contains all registered service factories indexed by `serviceType`.\n     */\n    private m_factories = new Map<string, WorkerServiceFactory>();\n\n    /**\n     * Contains all managed worker services indexed by their `serviceId`.\n     */\n    private m_services = new Map<string, WorkerService>();\n\n    private constructor(\n        serviceId: string = WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n    ) {\n        super(serviceId);\n    }\n\n    /**\n     * Register [[WorkerService]] class to this manager.\n     *\n     * @param workerServiceDescriptor - service type and factory\n     */\n    register(workerServiceDescriptor: WorkerServiceDescriptor): void {\n        this.m_factories.set(workerServiceDescriptor.serviceType, workerServiceDescriptor.factory);\n    }\n\n    /** @override */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (request.type === WorkerServiceProtocol.Requests.CreateService) {\n            const existingService = this.m_services.get(request.targetServiceId);\n            if (existingService !== undefined) {\n                throw Error(\n                    // tslint:disable-next-line: max-line-length\n                    `error - service with targetServiceId='${request.targetServiceId}' already running, ignoring CreateService request`\n                );\n            }\n\n            const factory = this.m_factories.get(request.targetServiceType);\n\n            if (factory === undefined) {\n                throw Error(`unknown targetServiceType requested: '${request.targetServiceType}'`);\n            }\n\n            const service = factory(request.targetServiceId);\n            this.m_services.set(request.targetServiceId, service);\n        }\n        if (request.type === WorkerServiceProtocol.Requests.DestroyService) {\n            const service = this.m_services.get(request.targetServiceId);\n            if (service === undefined) {\n                throw Error(`unknown targetServiceId '${request.targetServiceId}'`);\n            }\n            service.destroy();\n            this.m_services.delete(request.targetServiceId);\n        }\n\n        return Promise.resolve({\n            response: {}\n        });\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    GeoBox,\n    OrientedBox3,\n    Projection,\n    TileKey,\n    TilingScheme,\n    webMercatorTilingScheme\n} from \"@here/harp-geoutils\";\n\nimport { WorldTileProjectionCookie } from \"./OmvUtils\";\n\nimport * as THREE from \"three\";\n\nexport class DecodeInfo {\n    /**\n     * The [[GeoBox]] of the Tile to decode.\n     */\n    readonly geoBox: GeoBox;\n\n    readonly projectedBoundingBox = new OrientedBox3();\n\n    /**\n     * The tile bounds in the OMV tile space [[webMercatorTilingScheme]].\n     */\n    readonly tileBounds = new THREE.Box3();\n\n    /**\n     * The tile size in the OMV tile space [[webMercatorTilingScheme]].\n     */\n    readonly tileSize = new THREE.Vector3();\n\n    /**\n     * The center of the Tile in the target [[Projection]] space.\n     * Geometries generated by decoding the OMV tile must be relative\n     * to this position.\n     */\n    readonly center = new THREE.Vector3();\n\n    /**\n     * @internal\n     */\n    worldTileProjectionCookie?: WorldTileProjectionCookie;\n\n    /**\n     * Estimated tile size in pixels.\n     */\n    readonly tileSizeOnScreen: number;\n\n    /**\n     * Constructs a new [[DecodeInfo]].\n     *\n     * @param adapterId - The id of the [[OmvDataAdapter]] used for decoding.\n     * @param targetProjection - The [[Projection]]\n     * @param tileKey - The [[TileKey]] of the Tile to decode.\n     * @param storageLevelOffset - The storage level offset.\n     */\n    constructor(\n        readonly adapterId: string,\n        readonly targetProjection: Projection,\n        readonly tileKey: TileKey,\n        readonly storageLevelOffset: number = 0\n    ) {\n        this.geoBox = this.tilingScheme.getGeoBox(tileKey);\n        this.targetProjection.projectBox(this.geoBox, this.projectedBoundingBox);\n        this.projectedBoundingBox.getCenter(this.center);\n        this.tilingScheme.getWorldBox(tileKey, this.tileBounds);\n        this.tileBounds.getSize(this.tileSize);\n        this.tileSizeOnScreen = 256 * Math.pow(2, -this.storageLevelOffset);\n    }\n\n    /**\n     * The [[TilingScheme]] of the OMV data, currenly it is defined\n     * to be [[webMercatorTilingScheme]].\n     */\n    get tilingScheme(): TilingScheme {\n        return webMercatorTilingScheme;\n    }\n\n    /**\n     * The [[Projection]] of OMV tiled data, currenly it is defined\n     * to be [[webMercatorProjection]].\n     */\n    get sourceProjection(): Projection {\n        return this.tilingScheme.projection;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, MapEnv, Value, ValueMap } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport * as Long from \"long\";\nimport { Vector2 } from \"three\";\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\nimport { OmvGeometryType } from \"./OmvDecoderDefs\";\nimport { isArrayBufferLike } from \"./OmvUtils\";\nimport { com } from \"./proto/vector_tile\";\n\n/**\n * @hidden\n */\nexport enum CommandKind {\n    MoveTo = 1,\n    LineTo = 2,\n    ClosePath = 7\n}\n\n/**\n * @hidden\n */\nexport interface BaseCommand {\n    kind: CommandKind;\n}\n\n/**\n * @hidden\n */\nexport interface PositionCommand extends BaseCommand {\n    position: Vector2;\n}\n\n/**\n * @hidden\n */\nexport type GeometryCommand = BaseCommand | PositionCommand;\n\n/**\n * @hidden\n */\nexport function isMoveToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.MoveTo;\n}\n\n/**\n * @hidden\n */\nexport function isLineToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.LineTo;\n}\n\n/**\n * @hidden\n */\nexport function isClosePathCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.ClosePath;\n}\n\n/**\n * @hidden\n */\nexport interface OmvVisitor {\n    visitLayer?(layer: com.mapbox.pb.Tile.ILayer): boolean;\n    endVisitLayer?(layer: com.mapbox.pb.Tile.ILayer): void;\n    visitPointFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitLineFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitPolygonFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n}\n\n/**\n * @hidden\n */\nexport function visitOmv(vectorTile: com.mapbox.pb.Tile, visitor: OmvVisitor) {\n    if (!vectorTile.layers) {\n        return;\n    }\n\n    for (const layer of vectorTile.layers) {\n        if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n            visitOmvLayer(layer, visitor);\n        }\n        if (visitor.endVisitLayer) {\n            visitor.endVisitLayer(layer);\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport function visitOmvLayer(layer: com.mapbox.pb.Tile.ILayer, visitor: OmvVisitor) {\n    if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n        if (layer.features) {\n            for (const feature of layer.features) {\n                switch (feature.type) {\n                    case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POINT:\n                        if (visitor.visitPointFeature) {\n                            visitor.visitPointFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.LINESTRING:\n                        if (visitor.visitLineFeature) {\n                            visitor.visitLineFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POLYGON:\n                        if (visitor.visitPolygonFeature) {\n                            visitor.visitPolygonFeature(feature);\n                        }\n                        break;\n                }\n            }\n        }\n    }\n\n    if (visitor.endVisitLayer) {\n        visitor.endVisitLayer(layer);\n    }\n}\n\n/**\n * @hidden\n */\nexport interface FeatureAttributesVisitor {\n    visitAttribute(name: string, value: com.mapbox.pb.Tile.IValue): boolean;\n}\n\n/**\n * @hidden\n */\nexport class FeatureAttributes {\n    accept(\n        layer: com.mapbox.pb.Tile.ILayer,\n        feature: com.mapbox.pb.Tile.IFeature,\n        visitor: FeatureAttributesVisitor\n    ): void {\n        const { keys, values } = layer;\n        const tags = feature.tags;\n\n        if (!tags || !keys || !values) {\n            return;\n        }\n\n        for (let i = 0; i < tags.length; i += 2) {\n            const key = keys[tags[i]];\n            const value = values[tags[i + 1]];\n            if (!visitor.visitAttribute(key, value)) {\n                break;\n            }\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport interface GeometryCommandsVisitor {\n    type: \"Point\" | \"Line\" | \"Polygon\";\n    visitCommand(command: GeometryCommand): void;\n}\n\n/**\n * @hidden\n */\nexport class GeometryCommands {\n    accept(geometry: number[] | null, visitor: GeometryCommandsVisitor) {\n        if (!geometry) {\n            return;\n        }\n\n        const geometryCount = geometry.length;\n\n        let currX = 0;\n        let currY = 0;\n\n        const xCoords: number[] = [];\n        const yCoords: number[] = [];\n        const commands: GeometryCommand[] = [];\n        for (let cmdIndex = 0; cmdIndex < geometryCount; ) {\n            // tslint:disable:no-bitwise\n            const kind = (geometry[cmdIndex] & 0x7) as CommandKind;\n            const count = geometry[cmdIndex] >> 0x3;\n            // tslint:enable:no-bitwise\n            ++cmdIndex;\n\n            if (kind === CommandKind.MoveTo || kind === CommandKind.LineTo) {\n                for (let n = 0; n < count; ++n) {\n                    const xx = geometry[cmdIndex++];\n                    const yy = geometry[cmdIndex++];\n\n                    // tslint:disable:no-bitwise\n                    currX += (xx >> 1) ^ -(xx & 1);\n                    currY += (yy >> 1) ^ -(yy & 1);\n                    if (visitor.type === \"Polygon\") {\n                        xCoords.push(currX);\n                        yCoords.push(currY);\n                    }\n\n                    const position = new Vector2(currX, currY);\n                    commands.push({ kind, position });\n                }\n            } else {\n                for (const command of commands) {\n                    visitor.visitCommand(command);\n                }\n                visitor.visitCommand({ kind });\n                xCoords.length = 0;\n                yCoords.length = 0;\n                commands.length = 0;\n            }\n        }\n\n        if (commands.length > 0) {\n            for (const command of commands) {\n                visitor.visitCommand(command);\n            }\n        }\n    }\n}\n\nconst propertyCategories = [\n    \"stringValue\",\n    \"floatValue\",\n    \"doubleValue\",\n    \"intValue\",\n    \"uintValue\",\n    \"sintValue\",\n    \"boolValue\"\n];\n\nfunction simplifiedValue(value: com.mapbox.pb.Tile.IValue): Value {\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    for (const category of propertyCategories) {\n        if (hasOwnProperty.call(value, category)) {\n            const v = value[category as keyof com.mapbox.pb.Tile.IValue];\n\n            if (v === undefined) {\n                throw new Error(\"unpexted undefined value\");\n            }\n\n            return Long.isLong(v) ? (v as any).toNumber() : v;\n        }\n    }\n\n    throw new Error(\"not happening\");\n}\n\nfunction replaceReservedName(name: string): string {\n    switch (name) {\n        case \"id\":\n            return \"$id\";\n        default:\n            return name;\n    } // switch\n}\n\nfunction decodeFeatureId(\n    feature: com.mapbox.pb.Tile.IFeature,\n    logger?: ILogger\n): number | string | undefined {\n    if (feature.hasOwnProperty(\"id\")) {\n        const id = feature.id;\n        if (typeof id === \"number\") {\n            return id;\n        } else if (id) {\n            if (logger !== undefined && id.greaterThan(Number.MAX_SAFE_INTEGER)) {\n                logger.error(\n                    \"Invalid ID: Larger than largest available Number in feature: \",\n                    feature\n                );\n            }\n            return id.toNumber();\n        }\n    }\n\n    return undefined;\n}\n\nfunction readAttributes(\n    layer: com.mapbox.pb.Tile.ILayer,\n    feature: com.mapbox.pb.Tile.IFeature,\n    defaultAttributes: ValueMap = {}\n): ValueMap {\n    const attrs = new FeatureAttributes();\n\n    const attributes: ValueMap = defaultAttributes || {};\n\n    attrs.accept(layer, feature, {\n        visitAttribute: (name, value) => {\n            attributes[replaceReservedName(name)] = simplifiedValue(value);\n            return true;\n        }\n    });\n\n    return attributes;\n}\n\nfunction createFeatureEnv(\n    layer: com.mapbox.pb.Tile.ILayer,\n    feature: com.mapbox.pb.Tile.IFeature,\n    geometryType: string,\n    storageLevel: number,\n    storageLevelOffset?: number,\n    logger?: ILogger,\n    parent?: Env\n): MapEnv {\n    const attributes: ValueMap = {\n        $layer: layer.name,\n        $level: storageLevel,\n        $zoom: Math.max(0, storageLevel - (storageLevelOffset || 0)),\n        $geometryType: geometryType\n    };\n\n    // Some sources serve `id` directly as `IFeature` property ...\n    const featureId = decodeFeatureId(feature, logger);\n    if (featureId !== undefined) {\n        attributes.$id = featureId;\n    }\n\n    readAttributes(layer, feature, attributes);\n\n    return new MapEnv(attributes, parent);\n}\n\nfunction asGeometryType(feature: com.mapbox.pb.Tile.IFeature | undefined): OmvGeometryType {\n    if (feature === undefined) {\n        return OmvGeometryType.UNKNOWN;\n    }\n\n    switch (feature.type) {\n        case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n            return OmvGeometryType.UNKNOWN;\n        case com.mapbox.pb.Tile.GeomType.POINT:\n            return OmvGeometryType.POINT;\n        case com.mapbox.pb.Tile.GeomType.LINESTRING:\n            return OmvGeometryType.LINESTRING;\n        case com.mapbox.pb.Tile.GeomType.POLYGON:\n            return OmvGeometryType.POLYGON;\n        default:\n            return OmvGeometryType.UNKNOWN;\n    } // switch\n}\n\n/**\n * The class [[OmvProtobufDataAdapter]] converts OMV protobuf geo data\n * to geometries for the given [[IGeometryProcessor]].\n */\nexport class OmvProtobufDataAdapter implements OmvDataAdapter, OmvVisitor {\n    id = \"omv-protobuf\";\n\n    private readonly m_geometryCommands = new GeometryCommands();\n    private readonly m_processor: IGeometryProcessor;\n    private readonly m_logger?: ILogger;\n    private m_dataFilter?: OmvFeatureFilter;\n\n    private m_tileKey!: TileKey;\n    private m_layer!: com.mapbox.pb.Tile.ILayer;\n\n    /**\n     * Constructs a new [[OmvProtobufDataAdapter]].\n     *\n     * @param processor - The [[IGeometryProcessor]] used to process the data.\n     * @param dataFilter - The [[OmvFeatureFilter]] used to filter features.\n     * @param logger - The [[ILogger]] used to log diagnostic messages.\n     */\n    constructor(processor: IGeometryProcessor, dataFilter?: OmvFeatureFilter, logger?: ILogger) {\n        this.m_processor = processor;\n        this.m_dataFilter = dataFilter;\n        this.m_logger = logger;\n    }\n\n    /**\n     * The [[OmvFeatureFilter]] used to filter features.\n     */\n    get dataFilter(): OmvFeatureFilter | undefined {\n        return this.m_dataFilter;\n    }\n\n    /**\n     * The [[OmvFeatureFilter]] used to filter features.\n     */\n    set dataFilter(dataFilter: OmvFeatureFilter | undefined) {\n        this.m_dataFilter = dataFilter;\n    }\n\n    /**\n     * Checks that the given data can be processed by this [[OmvProtobufDataAdapter]].\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        return isArrayBufferLike(data);\n    }\n\n    /**\n     * Processes the given data payload using this adapter's [[IGeometryProcessor]].\n     *\n     * @param data - The data payload to process.\n     * @param decodeInfo - The [[DecodedInfo]] of the tile to proceess.\n     */\n    process(data: ArrayBufferLike, decodeInfo: DecodeInfo) {\n        const { tileKey } = decodeInfo;\n        const payload = new Uint8Array(data);\n        const proto = com.mapbox.pb.Tile.decode(payload);\n\n        this.m_tileKey = tileKey;\n\n        visitOmv(proto, this);\n    }\n\n    /**\n     * Visits the OMV layer.\n     *\n     * @param layer - The OMV layer to process.\n     */\n    visitLayer(layer: com.mapbox.pb.Tile.ILayer): boolean {\n        this.m_layer = layer;\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = layer.name;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsLayer(layerName, storageLevel)\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Visits point features.\n     *\n     * @param feature - The OMV point features to process.\n     */\n    visitPointFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsPointFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: Vector2[] = [];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Point\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    geometry.push(command.position);\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"point\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processPointFeature(layerName, layerExtents, geometry, env, storageLevel);\n    }\n\n    /**\n     * Visits the line features.\n     *\n     * @param feature - The line features to process.\n     */\n    visitLineFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsLineFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: ILineGeometry[] = [];\n        let positions: Vector2[];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Line\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    positions = [command.position];\n                    geometry.push({ positions });\n                } else if (isLineToCommand(command)) {\n                    positions.push(command.position);\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"line\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processLineFeature(layerName, layerExtents, geometry, env, storageLevel);\n    }\n\n    /**\n     * Visits the polygon features.\n     *\n     * @param feature - The polygon features to process.\n     */\n    visitPolygonFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsPolygonFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: IPolygonGeometry[] = [];\n        const currentPolygon: IPolygonGeometry = { rings: [] };\n        let currentRing: Vector2[];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Polygon\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    currentRing = [command.position];\n                } else if (isLineToCommand(command)) {\n                    currentRing.push(command.position);\n                } else if (isClosePathCommand(command)) {\n                    if (currentRing !== undefined && currentRing.length > 0) {\n                        currentRing.push(currentRing[0].clone());\n                        currentPolygon.rings.push(currentRing);\n                    }\n                }\n            }\n        });\n\n        if (currentPolygon.rings.length > 0) {\n            geometry.push(currentPolygon);\n        }\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"polygon\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processPolygonFeature(\n            layerName,\n            layerExtents,\n            geometry,\n            env,\n            storageLevel\n        );\n    }\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.com = (function() {\n\n    /**\n     * Namespace com.\n     * @exports com\n     * @namespace\n     */\n    var com = {};\n\n    com.mapbox = (function() {\n\n        /**\n         * Namespace mapbox.\n         * @memberof com\n         * @namespace\n         */\n        var mapbox = {};\n\n        mapbox.pb = (function() {\n\n            /**\n             * Namespace pb.\n             * @memberof com.mapbox\n             * @namespace\n             */\n            var pb = {};\n\n            pb.Tile = (function() {\n\n                /**\n                 * Properties of a Tile.\n                 * @memberof com.mapbox.pb\n                 * @interface ITile\n                 * @property {Array.<com.mapbox.pb.Tile.ILayer>|null} [layers] Tile layers\n                 */\n\n                /**\n                 * Constructs a new Tile.\n                 * @memberof com.mapbox.pb\n                 * @classdesc Represents a Tile.\n                 * @implements ITile\n                 * @constructor\n                 * @param {com.mapbox.pb.ITile=} [properties] Properties to set\n                 */\n                function Tile(properties) {\n                    this.layers = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Tile layers.\n                 * @member {Array.<com.mapbox.pb.Tile.ILayer>} layers\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 */\n                Tile.prototype.layers = $util.emptyArray;\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 3:\n                            if (!(message.layers && message.layers.length))\n                                message.layers = [];\n                            message.layers.push($root.com.mapbox.pb.Tile.Layer.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Creates a Tile message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 */\n                Tile.fromObject = function fromObject(object) {\n                    if (object instanceof $root.com.mapbox.pb.Tile)\n                        return object;\n                    var message = new $root.com.mapbox.pb.Tile();\n                    if (object.layers) {\n                        if (!Array.isArray(object.layers))\n                            throw TypeError(\".com.mapbox.pb.Tile.layers: array expected\");\n                        message.layers = [];\n                        for (var i = 0; i < object.layers.length; ++i) {\n                            if (typeof object.layers[i] !== \"object\")\n                                throw TypeError(\".com.mapbox.pb.Tile.layers: object expected\");\n                            message.layers[i] = $root.com.mapbox.pb.Tile.Layer.fromObject(object.layers[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Tile message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {com.mapbox.pb.Tile} message Tile\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Tile.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.layers = [];\n                    if (message.layers && message.layers.length) {\n                        object.layers = [];\n                        for (var j = 0; j < message.layers.length; ++j)\n                            object.layers[j] = $root.com.mapbox.pb.Tile.Layer.toObject(message.layers[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this Tile to JSON.\n                 * @function toJSON\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Tile.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * GeomType enum.\n                 * @name com.mapbox.pb.Tile.GeomType\n                 * @enum {string}\n                 * @property {number} UNKNOWN=0 UNKNOWN value\n                 * @property {number} POINT=1 POINT value\n                 * @property {number} LINESTRING=2 LINESTRING value\n                 * @property {number} POLYGON=3 POLYGON value\n                 */\n                Tile.GeomType = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"UNKNOWN\"] = 0;\n                    values[valuesById[1] = \"POINT\"] = 1;\n                    values[valuesById[2] = \"LINESTRING\"] = 2;\n                    values[valuesById[3] = \"POLYGON\"] = 3;\n                    return values;\n                })();\n\n                Tile.Value = (function() {\n\n                    /**\n                     * Properties of a Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IValue\n                     * @property {string|null} [stringValue] Value stringValue\n                     * @property {number|null} [floatValue] Value floatValue\n                     * @property {number|null} [doubleValue] Value doubleValue\n                     * @property {number|Long|null} [intValue] Value intValue\n                     * @property {number|Long|null} [uintValue] Value uintValue\n                     * @property {number|Long|null} [sintValue] Value sintValue\n                     * @property {boolean|null} [boolValue] Value boolValue\n                     */\n\n                    /**\n                     * Constructs a new Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Value.\n                     * @implements IValue\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IValue=} [properties] Properties to set\n                     */\n                    function Value(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Value stringValue.\n                     * @member {string} stringValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.stringValue = \"\";\n\n                    /**\n                     * Value floatValue.\n                     * @member {number} floatValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.floatValue = 0;\n\n                    /**\n                     * Value doubleValue.\n                     * @member {number} doubleValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.doubleValue = 0;\n\n                    /**\n                     * Value intValue.\n                     * @member {number|Long} intValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.intValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value uintValue.\n                     * @member {number|Long} uintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.uintValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Value sintValue.\n                     * @member {number|Long} sintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.sintValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value boolValue.\n                     * @member {boolean} boolValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.boolValue = false;\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Value();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.stringValue = reader.string();\n                                break;\n                            case 2:\n                                message.floatValue = reader.float();\n                                break;\n                            case 3:\n                                message.doubleValue = reader.double();\n                                break;\n                            case 4:\n                                message.intValue = reader.int64();\n                                break;\n                            case 5:\n                                message.uintValue = reader.uint64();\n                                break;\n                            case 6:\n                                message.sintValue = reader.sint64();\n                                break;\n                            case 7:\n                                message.boolValue = reader.bool();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Value message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     */\n                    Value.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Value)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Value();\n                        if (object.stringValue != null)\n                            message.stringValue = String(object.stringValue);\n                        if (object.floatValue != null)\n                            message.floatValue = Number(object.floatValue);\n                        if (object.doubleValue != null)\n                            message.doubleValue = Number(object.doubleValue);\n                        if (object.intValue != null)\n                            if ($util.Long)\n                                (message.intValue = $util.Long.fromValue(object.intValue)).unsigned = false;\n                            else if (typeof object.intValue === \"string\")\n                                message.intValue = parseInt(object.intValue, 10);\n                            else if (typeof object.intValue === \"number\")\n                                message.intValue = object.intValue;\n                            else if (typeof object.intValue === \"object\")\n                                message.intValue = new $util.LongBits(object.intValue.low >>> 0, object.intValue.high >>> 0).toNumber();\n                        if (object.uintValue != null)\n                            if ($util.Long)\n                                (message.uintValue = $util.Long.fromValue(object.uintValue)).unsigned = true;\n                            else if (typeof object.uintValue === \"string\")\n                                message.uintValue = parseInt(object.uintValue, 10);\n                            else if (typeof object.uintValue === \"number\")\n                                message.uintValue = object.uintValue;\n                            else if (typeof object.uintValue === \"object\")\n                                message.uintValue = new $util.LongBits(object.uintValue.low >>> 0, object.uintValue.high >>> 0).toNumber(true);\n                        if (object.sintValue != null)\n                            if ($util.Long)\n                                (message.sintValue = $util.Long.fromValue(object.sintValue)).unsigned = false;\n                            else if (typeof object.sintValue === \"string\")\n                                message.sintValue = parseInt(object.sintValue, 10);\n                            else if (typeof object.sintValue === \"number\")\n                                message.sintValue = object.sintValue;\n                            else if (typeof object.sintValue === \"object\")\n                                message.sintValue = new $util.LongBits(object.sintValue.low >>> 0, object.sintValue.high >>> 0).toNumber();\n                        if (object.boolValue != null)\n                            message.boolValue = Boolean(object.boolValue);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Value message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Value} message Value\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Value.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.stringValue = \"\";\n                            object.floatValue = 0;\n                            object.doubleValue = 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.intValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.intValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.uintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.uintValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.sintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.sintValue = options.longs === String ? \"0\" : 0;\n                            object.boolValue = false;\n                        }\n                        if (message.stringValue != null && message.hasOwnProperty(\"stringValue\"))\n                            object.stringValue = message.stringValue;\n                        if (message.floatValue != null && message.hasOwnProperty(\"floatValue\"))\n                            object.floatValue = options.json && !isFinite(message.floatValue) ? String(message.floatValue) : message.floatValue;\n                        if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\"))\n                            object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n                        if (message.intValue != null && message.hasOwnProperty(\"intValue\"))\n                            if (typeof message.intValue === \"number\")\n                                object.intValue = options.longs === String ? String(message.intValue) : message.intValue;\n                            else\n                                object.intValue = options.longs === String ? $util.Long.prototype.toString.call(message.intValue) : options.longs === Number ? new $util.LongBits(message.intValue.low >>> 0, message.intValue.high >>> 0).toNumber() : message.intValue;\n                        if (message.uintValue != null && message.hasOwnProperty(\"uintValue\"))\n                            if (typeof message.uintValue === \"number\")\n                                object.uintValue = options.longs === String ? String(message.uintValue) : message.uintValue;\n                            else\n                                object.uintValue = options.longs === String ? $util.Long.prototype.toString.call(message.uintValue) : options.longs === Number ? new $util.LongBits(message.uintValue.low >>> 0, message.uintValue.high >>> 0).toNumber(true) : message.uintValue;\n                        if (message.sintValue != null && message.hasOwnProperty(\"sintValue\"))\n                            if (typeof message.sintValue === \"number\")\n                                object.sintValue = options.longs === String ? String(message.sintValue) : message.sintValue;\n                            else\n                                object.sintValue = options.longs === String ? $util.Long.prototype.toString.call(message.sintValue) : options.longs === Number ? new $util.LongBits(message.sintValue.low >>> 0, message.sintValue.high >>> 0).toNumber() : message.sintValue;\n                        if (message.boolValue != null && message.hasOwnProperty(\"boolValue\"))\n                            object.boolValue = message.boolValue;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Value to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Value.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Value;\n                })();\n\n                Tile.Feature = (function() {\n\n                    /**\n                     * Properties of a Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IFeature\n                     * @property {number|Long|null} [id] Feature id\n                     * @property {Array.<number>|null} [tags] Feature tags\n                     * @property {com.mapbox.pb.Tile.GeomType|null} [type] Feature type\n                     * @property {Array.<number>|null} [geometry] Feature geometry\n                     */\n\n                    /**\n                     * Constructs a new Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Feature.\n                     * @implements IFeature\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IFeature=} [properties] Properties to set\n                     */\n                    function Feature(properties) {\n                        this.tags = [];\n                        this.geometry = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Feature id.\n                     * @member {number|Long} id\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Feature tags.\n                     * @member {Array.<number>} tags\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.tags = $util.emptyArray;\n\n                    /**\n                     * Feature type.\n                     * @member {com.mapbox.pb.Tile.GeomType} type\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.type = 0;\n\n                    /**\n                     * Feature geometry.\n                     * @member {Array.<number>} geometry\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.geometry = $util.emptyArray;\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Feature();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.id = reader.uint64();\n                                break;\n                            case 2:\n                                if (!(message.tags && message.tags.length))\n                                    message.tags = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.tags.push(reader.uint32());\n                                } else\n                                    message.tags.push(reader.uint32());\n                                break;\n                            case 3:\n                                message.type = reader.int32();\n                                break;\n                            case 4:\n                                if (!(message.geometry && message.geometry.length))\n                                    message.geometry = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.geometry.push(reader.uint32());\n                                } else\n                                    message.geometry.push(reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Feature message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     */\n                    Feature.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Feature)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Feature();\n                        if (object.id != null)\n                            if ($util.Long)\n                                (message.id = $util.Long.fromValue(object.id)).unsigned = true;\n                            else if (typeof object.id === \"string\")\n                                message.id = parseInt(object.id, 10);\n                            else if (typeof object.id === \"number\")\n                                message.id = object.id;\n                            else if (typeof object.id === \"object\")\n                                message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);\n                        if (object.tags) {\n                            if (!Array.isArray(object.tags))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.tags: array expected\");\n                            message.tags = [];\n                            for (var i = 0; i < object.tags.length; ++i)\n                                message.tags[i] = object.tags[i] >>> 0;\n                        }\n                        switch (object.type) {\n                        case \"UNKNOWN\":\n                        case 0:\n                            message.type = 0;\n                            break;\n                        case \"POINT\":\n                        case 1:\n                            message.type = 1;\n                            break;\n                        case \"LINESTRING\":\n                        case 2:\n                            message.type = 2;\n                            break;\n                        case \"POLYGON\":\n                        case 3:\n                            message.type = 3;\n                            break;\n                        }\n                        if (object.geometry) {\n                            if (!Array.isArray(object.geometry))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.geometry: array expected\");\n                            message.geometry = [];\n                            for (var i = 0; i < object.geometry.length; ++i)\n                                message.geometry[i] = object.geometry[i] >>> 0;\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Feature message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Feature} message Feature\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Feature.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.tags = [];\n                            object.geometry = [];\n                        }\n                        if (options.defaults) {\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.id = options.longs === String ? \"0\" : 0;\n                            object.type = options.enums === String ? \"UNKNOWN\" : 0;\n                        }\n                        if (message.id != null && message.hasOwnProperty(\"id\"))\n                            if (typeof message.id === \"number\")\n                                object.id = options.longs === String ? String(message.id) : message.id;\n                            else\n                                object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;\n                        if (message.tags && message.tags.length) {\n                            object.tags = [];\n                            for (var j = 0; j < message.tags.length; ++j)\n                                object.tags[j] = message.tags[j];\n                        }\n                        if (message.type != null && message.hasOwnProperty(\"type\"))\n                            object.type = options.enums === String ? $root.com.mapbox.pb.Tile.GeomType[message.type] : message.type;\n                        if (message.geometry && message.geometry.length) {\n                            object.geometry = [];\n                            for (var j = 0; j < message.geometry.length; ++j)\n                                object.geometry[j] = message.geometry[j];\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Feature to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Feature.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Feature;\n                })();\n\n                Tile.Layer = (function() {\n\n                    /**\n                     * Properties of a Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface ILayer\n                     * @property {number} version Layer version\n                     * @property {string} name Layer name\n                     * @property {Array.<com.mapbox.pb.Tile.IFeature>|null} [features] Layer features\n                     * @property {Array.<string>|null} [keys] Layer keys\n                     * @property {Array.<com.mapbox.pb.Tile.IValue>|null} [values] Layer values\n                     * @property {number|null} [extent] Layer extent\n                     */\n\n                    /**\n                     * Constructs a new Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Layer.\n                     * @implements ILayer\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.ILayer=} [properties] Properties to set\n                     */\n                    function Layer(properties) {\n                        this.features = [];\n                        this.keys = [];\n                        this.values = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Layer version.\n                     * @member {number} version\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.version = 1;\n\n                    /**\n                     * Layer name.\n                     * @member {string} name\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.name = \"\";\n\n                    /**\n                     * Layer features.\n                     * @member {Array.<com.mapbox.pb.Tile.IFeature>} features\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.features = $util.emptyArray;\n\n                    /**\n                     * Layer keys.\n                     * @member {Array.<string>} keys\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.keys = $util.emptyArray;\n\n                    /**\n                     * Layer values.\n                     * @member {Array.<com.mapbox.pb.Tile.IValue>} values\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.values = $util.emptyArray;\n\n                    /**\n                     * Layer extent.\n                     * @member {number} extent\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.extent = 4096;\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Layer();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 15:\n                                message.version = reader.uint32();\n                                break;\n                            case 1:\n                                message.name = reader.string();\n                                break;\n                            case 2:\n                                if (!(message.features && message.features.length))\n                                    message.features = [];\n                                message.features.push($root.com.mapbox.pb.Tile.Feature.decode(reader, reader.uint32()));\n                                break;\n                            case 3:\n                                if (!(message.keys && message.keys.length))\n                                    message.keys = [];\n                                message.keys.push(reader.string());\n                                break;\n                            case 4:\n                                if (!(message.values && message.values.length))\n                                    message.values = [];\n                                message.values.push($root.com.mapbox.pb.Tile.Value.decode(reader, reader.uint32()));\n                                break;\n                            case 5:\n                                message.extent = reader.uint32();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        if (!message.hasOwnProperty(\"version\"))\n                            throw $util.ProtocolError(\"missing required 'version'\", { instance: message });\n                        if (!message.hasOwnProperty(\"name\"))\n                            throw $util.ProtocolError(\"missing required 'name'\", { instance: message });\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Layer message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     */\n                    Layer.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Layer)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Layer();\n                        if (object.version != null)\n                            message.version = object.version >>> 0;\n                        if (object.name != null)\n                            message.name = String(object.name);\n                        if (object.features) {\n                            if (!Array.isArray(object.features))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.features: array expected\");\n                            message.features = [];\n                            for (var i = 0; i < object.features.length; ++i) {\n                                if (typeof object.features[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.features: object expected\");\n                                message.features[i] = $root.com.mapbox.pb.Tile.Feature.fromObject(object.features[i]);\n                            }\n                        }\n                        if (object.keys) {\n                            if (!Array.isArray(object.keys))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.keys: array expected\");\n                            message.keys = [];\n                            for (var i = 0; i < object.keys.length; ++i)\n                                message.keys[i] = String(object.keys[i]);\n                        }\n                        if (object.values) {\n                            if (!Array.isArray(object.values))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.values: array expected\");\n                            message.values = [];\n                            for (var i = 0; i < object.values.length; ++i) {\n                                if (typeof object.values[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.values: object expected\");\n                                message.values[i] = $root.com.mapbox.pb.Tile.Value.fromObject(object.values[i]);\n                            }\n                        }\n                        if (object.extent != null)\n                            message.extent = object.extent >>> 0;\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Layer message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Layer} message Layer\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Layer.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.features = [];\n                            object.keys = [];\n                            object.values = [];\n                        }\n                        if (options.defaults) {\n                            object.name = \"\";\n                            object.extent = 4096;\n                            object.version = 1;\n                        }\n                        if (message.name != null && message.hasOwnProperty(\"name\"))\n                            object.name = message.name;\n                        if (message.features && message.features.length) {\n                            object.features = [];\n                            for (var j = 0; j < message.features.length; ++j)\n                                object.features[j] = $root.com.mapbox.pb.Tile.Feature.toObject(message.features[j], options);\n                        }\n                        if (message.keys && message.keys.length) {\n                            object.keys = [];\n                            for (var j = 0; j < message.keys.length; ++j)\n                                object.keys[j] = message.keys[j];\n                        }\n                        if (message.values && message.values.length) {\n                            object.values = [];\n                            for (var j = 0; j < message.values.length; ++j)\n                                object.values[j] = $root.com.mapbox.pb.Tile.Value.toObject(message.values[j], options);\n                        }\n                        if (message.extent != null && message.hasOwnProperty(\"extent\"))\n                            object.extent = message.extent;\n                        if (message.version != null && message.hasOwnProperty(\"version\"))\n                            object.version = message.version;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Layer to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Layer.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Layer;\n                })();\n\n                return Tile;\n            })();\n\n            return pb;\n        })();\n\n        return mapbox;\n    })();\n\n    return com;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    AttributeMap,\n    BufferAttribute,\n    composeTechniqueTextureName,\n    DecodedTile,\n    ExtrudedPolygonTechnique,\n    FillTechnique,\n    Geometry,\n    GeometryType,\n    getFeatureId,\n    getFeatureText,\n    Group,\n    IndexedTechnique,\n    InterleavedBufferAttribute,\n    isExtrudedLineTechnique,\n    isExtrudedPolygonTechnique,\n    isFillTechnique,\n    isLabelRejectionLineTechnique,\n    isLineMarkerTechnique,\n    isLineTechnique,\n    isPoiTechnique,\n    isShaderTechnique,\n    isSolidLineTechnique,\n    isSpecialDashesLineTechnique,\n    isStandardTechnique,\n    isTextTechnique,\n    LineMarkerTechnique,\n    PathGeometry,\n    PoiGeometry,\n    PoiTechnique,\n    StyleColor,\n    Technique,\n    TextGeometry,\n    TextPathGeometry,\n    TextTechnique,\n    textureCoordinateType,\n    TextureCoordinateType\n} from \"@here/harp-datasource-protocol\";\nimport {\n    Env,\n    IMeshBuffers,\n    StyleSetEvaluator,\n    Value\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LineGroup } from \"@here/harp-lines/lib/Lines\";\nimport { triangulateLine } from \"@here/harp-lines/lib/TriangulateLines\";\nimport { assert, getOptionValue, LoggerManager, Math2D } from \"@here/harp-utils\";\nimport earcut from \"earcut\";\nimport * as THREE from \"three\";\n\nimport {\n    GeoBox,\n    GeoCoordinates,\n    normalizedEquirectangularProjection,\n    ProjectionType,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\n\nimport { ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { LinesGeometry } from \"./OmvDataSource\";\nimport { IOmvEmitter, Ring } from \"./OmvDecoder\";\nimport {\n    tile2world,\n    webMercatorTile2TargetTile,\n    webMercatorTile2TargetWorld,\n    world2tile\n} from \"./OmvUtils\";\n\nimport {\n    AttrEvaluationContext,\n    evaluateTechniqueAttr\n} from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { clipPolygon } from \"@here/harp-geometry/lib/ClipPolygon\";\nimport {\n    EdgeLengthGeometrySubdivisionModifier,\n    SubdivisionMode\n} from \"@here/harp-geometry/lib/EdgeLengthGeometrySubdivisionModifier\";\n// tslint:disable-next-line:max-line-length\nimport { SphericalGeometrySubdivisionModifier } from \"@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier\";\nimport { ExtrusionFeatureDefs } from \"@here/harp-materials/lib/MapMeshMaterialsDefs\";\nimport { DecodeInfo } from \"./DecodeInfo\";\n\nconst logger = LoggerManager.instance.create(\"OmvDecodedTileEmitter\");\n\nconst tempTileOrigin = new THREE.Vector3();\nconst tempVertOrigin = new THREE.Vector3();\nconst tempVertNormal = new THREE.Vector3();\nconst tempFootDisp = new THREE.Vector3();\nconst tempRoofDisp = new THREE.Vector3();\n\nconst tmpV2 = new THREE.Vector2();\nconst tmpV2r = new THREE.Vector2();\nconst tmpV3 = new THREE.Vector3();\nconst tmpV3r = new THREE.Vector3();\nconst tmpV4 = new THREE.Vector3();\n\nconst tempP0 = new THREE.Vector2();\nconst tempP1 = new THREE.Vector2();\nconst tempPreviousTangent = new THREE.Vector2();\n\nconst tmpPointA = new THREE.Vector3();\nconst tmpPointB = new THREE.Vector3();\nconst tmpPointC = new THREE.Vector3();\nconst tmpPointD = new THREE.Vector3();\nconst tmpPointE = new THREE.Vector3();\nconst tmpLine = new THREE.Line3();\n\n/**\n * Minimum number of pixels per character. Used during estimation if there is enough screen space\n * available to render a text. Based on the estimated screen size of a tile.\n */\nconst MIN_AVERAGE_CHAR_WIDTH = 5;\n\n/**\n * Estimation \"fudge factor\", tweaking the size estimation to\n *\n * a) allow room for zooming in to the tile, and\n *\n * b) allow for some tilting, where the edge of a tile closer to the camera has more space.\n *\n * Useful values are between 0 (allow all labels), 0.5 (allow labels at twice the default display\n * size of the tile) and 1.0 (skip labels that would normally not be displayed at default tile\n * size).\n */\nconst SIZE_ESTIMATION_FACTOR = 0.5;\n\n/**\n * Maximum allowed corner angle inside a label path.\n */\nconst MAX_CORNER_ANGLE = Math.PI / 8;\n\n/**\n * Used to identify an invalid (or better: unused) array index.\n */\nconst INVALID_ARRAY_INDEX = -1;\n\nfunction createIndexBufferAttribute(\n    elements: ArrayLike<number>,\n    maxValue: number,\n    name: string = \"index\"\n): BufferAttribute {\n    const type = maxValue > 65535 ? \"uint32\" : \"uint16\";\n    const storage = type === \"uint32\" ? new Uint32Array(elements) : new Uint16Array(elements);\n    const buffer = storage.buffer;\n    return {\n        itemCount: 1,\n        name,\n        buffer,\n        type\n    };\n}\n\n// for tilezen by default extrude all buildings even those without height data\nclass MeshBuffers implements IMeshBuffers {\n    readonly positions: number[] = [];\n    readonly normals: number[] = [];\n    readonly textureCoordinates: number[] = [];\n    readonly colors: number[] = [];\n    readonly extrusionAxis: number[] = [];\n    readonly indices: number[] = [];\n    readonly edgeIndices: number[] = [];\n    readonly groups: Group[] = [];\n    readonly texts: number[] = [];\n    readonly pathLengths: number[] = [];\n    readonly stringCatalog: Array<string | undefined> = [];\n    readonly imageTextures: number[] = [];\n\n    /**\n     * Optional list of feature start indices. The indices point into the index attribute.\n     */\n    readonly featureStarts: number[] = [];\n\n    /**\n     * An optional list of additional data that can be used as additional data for the object\n     * picking.\n     */\n    readonly objInfos: AttributeMap[] = [];\n\n    /**\n     * Angle in degrees from north clockwise which represents the direction the icons can be\n     * shifted.\n     */\n    readonly offsetDirections: number[] = [];\n\n    constructor(readonly type: GeometryType) {}\n\n    addText(text: string) {\n        let index = this.stringCatalog.indexOf(text);\n\n        if (index < 0) {\n            index = this.stringCatalog.length;\n            this.stringCatalog.push(text);\n        }\n        return index;\n    }\n}\n\nexport enum LineType {\n    Simple,\n    Complex\n}\n\ntype TexCoordsFunction = (tilePos: THREE.Vector2, tileExtents: number) => { u: number; v: number };\nconst tmpColor = new THREE.Color();\n\nexport class OmvDecodedTileEmitter implements IOmvEmitter {\n    // mapping from style index to mesh buffers\n    private readonly m_meshBuffers = new Map<number, MeshBuffers>();\n\n    private readonly m_geometries: Geometry[] = [];\n    private readonly m_textGeometries: TextGeometry[] = [];\n    private readonly m_textPathGeometries: TextPathGeometry[] = [];\n    private readonly m_pathGeometries: PathGeometry[] = [];\n    private readonly m_poiGeometries: PoiGeometry[] = [];\n    private readonly m_simpleLines: LinesGeometry[] = [];\n    private readonly m_solidLines: LinesGeometry[] = [];\n\n    private readonly m_sources: string[] = [];\n    private m_maxGeometryHeight: number = 0;\n\n    constructor(\n        private readonly m_decodeInfo: DecodeInfo,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_gatherFeatureAttributes: boolean,\n        private readonly m_skipShortLabels: boolean,\n        private readonly m_enableElevationOverlay: boolean,\n        private readonly m_languages?: string[]\n    ) {}\n\n    get projection() {\n        return this.m_decodeInfo.targetProjection;\n    }\n\n    get center() {\n        return this.m_decodeInfo.center;\n    }\n\n    /**\n     * Creates the Point of Interest geometries for the given feature.\n     *\n     * @param layer - Tile's layer to be processed.\n     * @param extents - Tile's layer extents.\n     * @param geometry - The current feature containing the main geometry.\n     * @param env - The [[MapEnv]] containing the environment information for the map.\n     * @param techniques - The array of [[Technique]] that will be applied to the geometry.\n     */\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[]\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const techniqueIndex = technique._index;\n            const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, GeometryType.Point);\n\n            if (meshBuffers === undefined) {\n                continue;\n            }\n\n            const { positions, texts, imageTextures, objInfos, offsetDirections } = meshBuffers;\n\n            const shouldCreateTextGeometries =\n                isTextTechnique(technique) || isPoiTechnique(technique);\n\n            let imageTexture: string | undefined;\n            const wantsPoi = isPoiTechnique(technique);\n\n            if (wantsPoi) {\n                const poiTechnique = technique as PoiTechnique;\n                imageTexture = evaluateTechniqueAttr(context, poiTechnique.imageTexture);\n\n                // TODO: Move to decoder independent parts of code.\n                if (poiTechnique.poiName !== undefined) {\n                    imageTexture = evaluateTechniqueAttr(context, poiTechnique.poiName);\n                } else if (typeof poiTechnique.poiNameField === \"string\") {\n                    const poiNameFieldValue = env.lookup(poiTechnique.poiNameField) as string;\n                    imageTexture = poiNameFieldValue;\n                } else if (typeof poiTechnique.imageTextureField === \"string\") {\n                    const imageTextureValue = env.lookup(poiTechnique.imageTextureField) as string;\n                    imageTexture = composeTechniqueTextureName(imageTextureValue, poiTechnique);\n                }\n            }\n\n            const featureId = getFeatureId(env.entries);\n            for (const pos of geometry) {\n                if (shouldCreateTextGeometries) {\n                    const textTechnique = technique as TextTechnique;\n                    const text = getFeatureText(context, textTechnique, this.m_languages);\n\n                    if (text !== undefined && text.length > 0) {\n                        texts.push(meshBuffers.addText(text));\n                    } else {\n                        texts.push(INVALID_ARRAY_INDEX);\n                    }\n                }\n\n                // Always store the position, otherwise the following POIs will be\n                // misplaced.\n                if (shouldCreateTextGeometries) {\n                    webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos, tmpV3);\n                } else {\n                    webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV3);\n                }\n                positions.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                objInfos.push(this.m_gatherFeatureAttributes ? env.entries : featureId);\n                offsetDirections.push((env.lookup(\"offset_direction\") as number) ?? 0);\n\n                if (wantsPoi) {\n                    if (imageTexture === undefined) {\n                        imageTextures.push(INVALID_ARRAY_INDEX);\n                    } else {\n                        imageTextures.push(meshBuffers.addText(imageTexture));\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     *\n     * Creates the line geometries for the given feature.\n     *\n     * @param layer - Tile's layer to be processed.\n     * @param extents - Tile's layer extents.\n     * @param geometry - The current feature containing the main geometry.\n     * @param env - The [[MapEnv]] containing the environment information for the map.\n     * @param techniques - The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId - The id of the feature.\n     */\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        const localLines: number[][] = []; // lines in target tile space.\n        const worldLines: number[][] = []; // lines in world space.\n        const uvs: number[][] = [];\n        const offsets: number[][] = [];\n        const projectedBoundingBox = this.m_decodeInfo.projectedBoundingBox;\n\n        let localLineSegments: number[][]; // lines in target tile space for special dashes.\n\n        const tileWidth = projectedBoundingBox.extents.x * 2;\n        const tileHeight = projectedBoundingBox.extents.y * 2;\n        const tileSizeWorld = Math.max(tileWidth, tileHeight);\n\n        let computeTexCoords: TexCoordsFunction | undefined;\n        let texCoordinateType: TextureCoordinateType | undefined;\n\n        const hasUntiledLines = geometry[0].untiledPositions !== undefined;\n\n        // If true, special handling for dashes is required (round and diamond shaped dashes).\n        let hasIndividualLineSegments = false;\n        let hasContinuousLineSegments = false;\n\n        // Check if any of the techniques needs texture coordinates\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            if (!computeTexCoords) {\n                computeTexCoords = this.getComputeTexCoordsFunc(technique);\n                texCoordinateType = this.getTextureCoordinateType(technique);\n            } else {\n                // Support generation of only one type of texture coordinates.\n                const otherTexCoordType = this.getTextureCoordinateType(technique);\n                assert(otherTexCoordType === undefined || texCoordinateType === otherTexCoordType);\n            }\n\n            hasIndividualLineSegments =\n                hasIndividualLineSegments || isSpecialDashesLineTechnique(technique);\n\n            hasContinuousLineSegments = hasContinuousLineSegments || !hasIndividualLineSegments;\n        }\n\n        for (const polyline of geometry) {\n            // Compute the world position of the untiled line and its distance to the origin of the\n            // line to properly join lines.\n            const untiledLine: number[] = [];\n            let lineDist = 0;\n            if (hasUntiledLines) {\n                this.m_decodeInfo.targetProjection.projectPoint(\n                    polyline.untiledPositions![0],\n                    tmpV3r\n                );\n                polyline.untiledPositions!.forEach(pos => {\n                    // Calculate the distance to the next un-normalized point.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos, tmpV3);\n                    lineDist += tmpV3.distanceTo(tmpV3r);\n                    tmpV3r.copy(tmpV3);\n\n                    // Pushed the normalized point for line matching.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos.normalized(), tmpV3);\n                    untiledLine.push(tmpV3.x, tmpV3.y, tmpV3.z, lineDist);\n                });\n            }\n\n            // Add continuous line as individual segments to improve special dashes by overlapping\n            // their connecting vertices. The technique/style should defined round or rectangular\n            // caps.\n            if (hasIndividualLineSegments) {\n                localLineSegments = [];\n\n                // Compute length of whole line and offsets of individual segments.\n                let lineLength = 0;\n                const pointCount = polyline.positions.length;\n                if (pointCount > 1) {\n                    let lastSegmentOffset = 0;\n\n                    for (let i = 0; i < pointCount - 1; i++) {\n                        const localLine: number[] = [];\n                        const worldLine: number[] = [];\n                        const lineUvs: number[] = [];\n                        const segmentOffsets: number[] = [];\n\n                        const pos1 = polyline.positions[i];\n                        const pos2 = polyline.positions[i + 1];\n                        webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos1, tmpV3);\n                        worldLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                        webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos2, tmpV4);\n                        worldLine.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                        if (computeTexCoords) {\n                            {\n                                const { u, v } = computeTexCoords(pos1, extents);\n                                lineUvs.push(u, v);\n                            }\n                            {\n                                const { u, v } = computeTexCoords(pos2, extents);\n                                lineUvs.push(u, v);\n                            }\n                        }\n                        if (hasUntiledLines) {\n                            // Find where in the [0...1] range relative to the line our current\n                            // vertex lies.\n                            let offset =\n                                this.findRelativePositionInLine(tmpV3, untiledLine) / lineDist;\n                            segmentOffsets.push(offset);\n                            offset = this.findRelativePositionInLine(tmpV4, untiledLine) / lineDist;\n                            segmentOffsets.push(offset);\n                        } else {\n                            segmentOffsets.push(lastSegmentOffset);\n\n                            // Compute length of segment and whole line to scale down later.\n                            const segmentLength = tmpV3.distanceTo(tmpV4);\n                            lineLength += segmentLength;\n                            lastSegmentOffset += segmentLength;\n                            segmentOffsets.push(lastSegmentOffset);\n                        }\n\n                        tmpV3.sub(this.m_decodeInfo.center);\n                        localLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                        tmpV4.sub(this.m_decodeInfo.center);\n                        localLine.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                        localLineSegments!.push(localLine);\n                        worldLines.push(worldLine);\n                        uvs.push(lineUvs);\n                        offsets.push(segmentOffsets);\n                    }\n                }\n\n                if (!hasUntiledLines && lineLength > 0) {\n                    // Scale down each individual segment to range [0..1] for whole line.\n                    for (const segOffsets of offsets) {\n                        segOffsets.forEach((offs, index) => {\n                            segOffsets[index] = offs / lineLength;\n                        });\n                    }\n                }\n            }\n\n            // Add continuous lines\n            if (hasContinuousLineSegments) {\n                const localLine: number[] = [];\n                const worldLine: number[] = [];\n                const lineUvs: number[] = [];\n                const lineOffsets: number[] = [];\n                polyline.positions.forEach(pos => {\n                    webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos, tmpV3);\n                    worldLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n\n                    if (computeTexCoords) {\n                        const { u, v } = computeTexCoords(pos, extents);\n                        lineUvs.push(u, v);\n                    }\n                    if (hasUntiledLines) {\n                        // Find where in the [0...1] range relative to the line our current vertex\n                        // lines.\n                        const offset =\n                            this.findRelativePositionInLine(tmpV3, untiledLine) / lineDist;\n                        lineOffsets.push(offset);\n                    }\n                    tmpV3.sub(this.m_decodeInfo.center);\n                    localLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                });\n                localLines.push(localLine);\n                worldLines.push(worldLine);\n                uvs.push(lineUvs);\n                offsets.push(lineOffsets);\n            }\n        }\n\n        const wantCircle = this.m_decodeInfo.tileKey.level >= 11;\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            const techniqueIndex = technique._index;\n            const techniqueName = technique.name;\n\n            if (isLineTechnique(technique) || isSolidLineTechnique(technique)) {\n                const lineGeometry = isLineTechnique(technique)\n                    ? this.m_simpleLines\n                    : this.m_solidLines;\n\n                const lineType = isLineTechnique(technique) ? LineType.Simple : LineType.Complex;\n\n                if (hasIndividualLineSegments) {\n                    assert(\n                        localLineSegments! !== undefined,\n                        \"OmvDecodedTileEmitter#processLineFeature: \" +\n                            \"Internal error - No localLineSegments\"\n                    );\n\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        localLineSegments!,\n                        context,\n                        this.getTextureCoordinateType(technique) ? uvs : undefined,\n                        offsets\n                    );\n                }\n                if (localLines.length > 0) {\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        localLines,\n                        context,\n                        this.getTextureCoordinateType(technique) ? uvs : undefined,\n                        hasUntiledLines ? offsets : undefined\n                    );\n                }\n            } else if (\n                isTextTechnique(technique) ||\n                isPoiTechnique(technique) ||\n                isLineMarkerTechnique(technique)\n            ) {\n                const textTechnique = technique as TextTechnique;\n                const text = getFeatureText(context, textTechnique, this.m_languages);\n\n                if (text === undefined || text.length === 0) {\n                    continue;\n                }\n                let validLines: number[][] = [];\n\n                if (this.m_skipShortLabels) {\n                    // Filter the lines, keep only those that are long enough for labelling. Also,\n                    // split jagged label paths to keep processing and rendering only those that\n                    // have no sharp corners, which would not be rendered anyway.\n\n                    const worldUnitsPerPixel = tileSizeWorld / this.m_decodeInfo.tileSizeOnScreen;\n                    const minEstimatedLabelLength =\n                        MIN_AVERAGE_CHAR_WIDTH *\n                        text.length *\n                        worldUnitsPerPixel *\n                        SIZE_ESTIMATION_FACTOR;\n                    const minEstimatedLabelLengthSqr =\n                        minEstimatedLabelLength * minEstimatedLabelLength;\n\n                    validLines = this.splitJaggyLines(\n                        worldLines,\n                        minEstimatedLabelLengthSqr,\n                        MAX_CORNER_ANGLE\n                    );\n                } else {\n                    validLines = worldLines;\n                }\n\n                if (validLines.length === 0) {\n                    continue;\n                }\n\n                if (isTextTechnique(technique)) {\n                    if (text === undefined) {\n                        continue;\n                    }\n                    for (const path of validLines) {\n                        const pathLengthSqr = Math2D.computeSquaredLineLength(path);\n                        this.m_textPathGeometries.push({\n                            technique: techniqueIndex,\n                            path,\n                            pathLengthSqr,\n                            text: String(text),\n                            objInfos: this.m_gatherFeatureAttributes\n                                ? env.entries\n                                : getFeatureId(env.entries)\n                        });\n                    }\n                } else {\n                    const lineMarkerTechnique = technique as LineMarkerTechnique;\n\n                    let imageTexture = evaluateTechniqueAttr(\n                        context,\n                        lineMarkerTechnique.imageTexture\n                    );\n\n                    // TODO: `imageTextureField` and `imageTexturePrefix` and `imageTexturePostfix`\n                    // are now deprecated\n\n                    // TODO: Move to decoder independent parts of code.\n                    if (typeof lineMarkerTechnique.imageTextureField === \"string\") {\n                        const imageTextureValue = env.lookup(lineMarkerTechnique.imageTextureField);\n                        imageTexture = imageTextureValue as string;\n                        if (typeof lineMarkerTechnique.imageTexturePrefix === \"string\") {\n                            imageTexture = lineMarkerTechnique.imageTexturePrefix + imageTexture;\n                        }\n                        if (typeof lineMarkerTechnique.imageTexturePostfix === \"string\") {\n                            imageTexture = imageTexture + lineMarkerTechnique.imageTexturePostfix;\n                        }\n                    }\n\n                    for (const aLine of validLines) {\n                        this.m_poiGeometries.push({\n                            technique: techniqueIndex,\n                            positions: {\n                                name: \"position\",\n                                type: \"float\",\n                                buffer: new Float32Array(aLine).buffer,\n                                itemCount: 3\n                            },\n                            texts: [0],\n                            stringCatalog: [text, imageTexture],\n                            imageTextures: [1],\n                            objInfos: this.m_gatherFeatureAttributes\n                                ? [env.entries]\n                                : [getFeatureId(env.entries)]\n                        });\n                    }\n                }\n            } else if (isLabelRejectionLineTechnique(technique)) {\n                for (const path of worldLines) {\n                    const worldPath: Vector3Like[] = [];\n                    for (let i = 0; i < path.length; i += 3) {\n                        worldPath.push(new THREE.Vector3().fromArray(path, i) as Vector3Like);\n                    }\n                    this.m_pathGeometries.push({\n                        path: worldPath\n                    });\n                }\n            } else if (isExtrudedLineTechnique(technique)) {\n                const meshBuffers = this.findOrCreateMeshBuffers(\n                    techniqueIndex,\n                    GeometryType.ExtrudedLine\n                );\n                if (meshBuffers === undefined) {\n                    continue;\n                }\n                const { positions, indices, groups, featureStarts, objInfos } = meshBuffers;\n                const start = indices.length;\n\n                const lineWidth = evaluateTechniqueAttr<number>(context, technique.lineWidth);\n\n                if (lineWidth === undefined) {\n                    continue;\n                }\n\n                const techniqueCaps = evaluateTechniqueAttr<string>(\n                    context,\n                    technique.caps,\n                    \"Circle\"\n                );\n\n                const addCircle = wantCircle && techniqueCaps === \"Circle\";\n\n                localLines.forEach(aLine => {\n                    triangulateLine(aLine, lineWidth, positions, indices, addCircle);\n                    featureStarts.push(start);\n                    objInfos.push(\n                        this.m_gatherFeatureAttributes ? env.entries : getFeatureId(env.entries)\n                    );\n                });\n\n                const count = indices.length - start;\n                groups.push({ start, count, technique: techniqueIndex });\n            } else {\n                logger.warn(\n                    `OmvDecodedTileEmitter#processLineFeature: Invalid line technique\n                     ${techniqueName} for layer: ${env.entries.$layer} `\n                );\n            }\n        }\n    }\n\n    /**\n     * Creates the polygons geometries for the given feature.\n     *\n     * @param layer - Tile's layer to be processed.\n     * @param extents - Tile's layer extents.\n     * @param geometry - The current feature containing the main geometry.\n     * @param feature - The [[MapEnv]] containing the environment information for the map.\n     * @param techniques - The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId - The id of the feature.\n     */\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        techniques.forEach(technique => {\n            if (technique === undefined) {\n                return;\n            }\n\n            const techniqueIndex = technique._index;\n\n            if (techniqueIndex === undefined) {\n                throw new Error(\n                    \"OmvDecodedTileEmitter#processPolygonFeature: \" +\n                        \"Internal error - No technique index\"\n                );\n            }\n\n            let objectBounds: THREE.Box3 | undefined;\n\n            const bbox = env.lookup(\"bbox\");\n            if (Array.isArray(bbox)) {\n                const [west, south, east, north] = bbox;\n                const geoBox = new GeoBox(\n                    new GeoCoordinates(south, west),\n                    new GeoCoordinates(north, east)\n                );\n                objectBounds = new THREE.Box3();\n                webMercatorProjection.projectBox(geoBox, objectBounds);\n            }\n\n            const polygons: Ring[][] = [];\n\n            const isExtruded = isExtrudedPolygonTechnique(technique);\n            const isFilled = isFillTechnique(technique);\n            const isStandard = isStandardTechnique(technique);\n\n            const isPolygon =\n                isExtruded ||\n                isFilled ||\n                isStandard ||\n                (isShaderTechnique(technique) && technique.primitive === \"mesh\");\n            const computeTexCoords = this.getComputeTexCoordsFunc(technique, objectBounds);\n            const vertexStride = computeTexCoords !== undefined ? 4 : 2;\n\n            let clipRing: THREE.Vector2[] | undefined;\n\n            for (const polygon of geometry) {\n                const rings: Ring[] = [];\n\n                for (const outline of polygon.rings) {\n                    const ringContour: number[] = [];\n\n                    let coords = outline;\n\n                    if (isFilled || isStandard) {\n                        const shouldClipPolygon = coords.some(\n                            p => p.x < 0 || p.x > extents || p.y < 0 || p.y > extents\n                        );\n\n                        if (shouldClipPolygon) {\n                            if (!clipRing) {\n                                clipRing = [\n                                    new THREE.Vector2(0, 0),\n                                    new THREE.Vector2(extents, 0),\n                                    new THREE.Vector2(extents, extents),\n                                    new THREE.Vector2(0, extents)\n                                ];\n                            }\n\n                            coords = clipPolygon(coords, clipRing);\n                        }\n                    }\n\n                    if (coords.length === 0) {\n                        continue;\n                    }\n\n                    for (const coord of coords) {\n                        ringContour.push(coord.x, coord.y);\n                        if (computeTexCoords !== undefined) {\n                            const { u, v } = computeTexCoords(coord, extents);\n                            ringContour.push(u, v);\n                        }\n                    }\n\n                    rings.push(new Ring(extents, vertexStride, ringContour));\n                }\n\n                if (rings.length === 0) {\n                    continue;\n                }\n\n                polygons.push(rings);\n            }\n\n            const isLine = isSolidLineTechnique(technique) || isLineTechnique(technique);\n            if (isPolygon) {\n                this.applyPolygonTechnique(\n                    polygons,\n                    technique,\n                    techniqueIndex,\n                    featureId,\n                    context,\n                    extents\n                );\n            } else if (isLine) {\n                const lineGeometry =\n                    technique.name === \"line\" ? this.m_simpleLines : this.m_solidLines;\n\n                const lineType = technique.name === \"line\" ? LineType.Simple : LineType.Complex;\n\n                // Use individual line segments instead of a continuous line in special cases (round\n                // and diamond shaped dashes).\n                const needIndividualLineSegments = isSpecialDashesLineTechnique(technique);\n\n                polygons.forEach(rings => {\n                    const lines: number[][] = [];\n                    const offsets: number[][] | undefined = needIndividualLineSegments\n                        ? []\n                        : undefined;\n                    rings.forEach(ring => {\n                        const length = ring.contour.length / ring.vertexStride;\n                        let line: number[] = [];\n\n                        // Compute length of whole line and offsets of individual segments.\n                        let ringLength = 0;\n                        let lastSegmentOffset = 0;\n                        let segmentOffsets: number[] | undefined = needIndividualLineSegments\n                            ? []\n                            : undefined;\n\n                        for (let i = 0; i < length; ++i) {\n                            if (needIndividualLineSegments && line.length > 0) {\n                                // Allocate a line for every segment.\n                                line = [];\n                                segmentOffsets = [];\n                            }\n\n                            const nextIdx = (i + 1) % length;\n                            const currX = ring.contour[i * ring.vertexStride];\n                            const currY = ring.contour[i * ring.vertexStride + 1];\n                            const nextX = ring.contour[nextIdx * ring.vertexStride];\n                            const nextY = ring.contour[nextIdx * ring.vertexStride + 1];\n\n                            const isOutline = !(\n                                (currX <= 0 && nextX <= 0) ||\n                                (currX >= ring.extents && nextX >= ring.extents) ||\n                                (currY <= 0 && nextY <= 0) ||\n                                (currY >= ring.extents && nextY >= ring.extents)\n                            );\n\n                            if (!isOutline && line.length !== 0) {\n                                lines.push(line);\n                                line = [];\n                            } else if (isOutline && line.length === 0) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.set(currX, currY),\n                                    tmpV3\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n\n                                if (needIndividualLineSegments) {\n                                    // Add next point as the end point of this line segment.\n                                    webMercatorTile2TargetTile(\n                                        extents,\n                                        this.m_decodeInfo,\n                                        tmpV2.set(nextX, nextY),\n                                        tmpV4\n                                    );\n                                    line.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                                    segmentOffsets!.push(lastSegmentOffset);\n\n                                    // Compute length of segment and whole line to scale down later.\n                                    const segmentLength = tmpV3.distanceTo(tmpV4);\n                                    ringLength += segmentLength;\n                                    lastSegmentOffset += segmentLength;\n                                    segmentOffsets!.push(lastSegmentOffset);\n                                }\n                            }\n                            if (isOutline && !needIndividualLineSegments) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.set(nextX, nextY),\n                                    tmpV3\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                            }\n\n                            if (needIndividualLineSegments && line.length > 0 && ringLength > 0) {\n                                // Scale down each individual segment to range [0..1] for the whole\n                                // line.\n                                segmentOffsets!.forEach((offs, index) => {\n                                    segmentOffsets![index] = offs / ringLength;\n                                });\n\n                                // Close the line segment as a single line.\n                                lines.push(line);\n                                offsets!.push(segmentOffsets!);\n                            }\n                        }\n\n                        if (!needIndividualLineSegments && line.length > 0) {\n                            lines.push(line);\n                        }\n                    });\n\n                    if (lines.length === 0) {\n                        return;\n                    }\n\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        lines,\n                        context,\n                        undefined,\n                        offsets!\n                    );\n                });\n            }\n        });\n    }\n\n    /**\n     * Creates the geometries that belongs to the [[Tile].\n     *\n     * @returns The [[DecodedTile]]\n     */\n    getDecodedTile(): DecodedTile {\n        this.createGeometries();\n        this.processSimpleLines(this.m_simpleLines);\n        this.processLines(this.m_solidLines);\n\n        const decodedTile: DecodedTile = {\n            techniques: this.m_styleSetEvaluator.decodedTechniques,\n            geometries: this.m_geometries,\n            decodeTime: undefined\n        };\n        if (this.m_textGeometries.length > 0) {\n            decodedTile.textGeometries = this.m_textGeometries;\n        }\n        if (this.m_poiGeometries.length > 0) {\n            decodedTile.poiGeometries = this.m_poiGeometries;\n        }\n        if (this.m_textPathGeometries.length > 0) {\n            decodedTile.textPathGeometries = this.m_textPathGeometries;\n        }\n        if (this.m_pathGeometries.length > 0) {\n            decodedTile.pathGeometries = this.m_pathGeometries;\n        }\n        if (this.m_sources.length !== 0) {\n            decodedTile.copyrightHolderIds = this.m_sources;\n        }\n        decodedTile.maxGeometryHeight = this.m_maxGeometryHeight;\n        return decodedTile;\n    }\n\n    /**\n     * Split the lines array into multiple parts if there are sharp corners. Reject parts that are\n     * too short to display the label text.\n     *\n     * @param {number[][]} lines Array containing the points of the paths.\n     * @param {number} minEstimatedLabelLengthSqr Minimum label size squared.\n     * @param {number} maxCornerAngle Maximum angle between consecutive path segments in radians.\n     * @returns The split and filtered lines array.\n     */\n    protected splitJaggyLines(\n        lines: number[][],\n        minEstimatedLabelLengthSqr: number,\n        maxCornerAngle: number\n    ): number[][] {\n        const validLines: number[][] = [];\n\n        const computeBoundingBoxSizeSqr = (\n            aLine: number[],\n            startIndex: number,\n            endIndex: number\n        ): number => {\n            let minX = Number.MAX_SAFE_INTEGER;\n            let maxX = Number.MIN_SAFE_INTEGER;\n            let minY = Number.MAX_SAFE_INTEGER;\n            let maxY = Number.MIN_SAFE_INTEGER;\n            for (let i = startIndex; i < endIndex; i += 3) {\n                const x = aLine[i];\n                const y = aLine[i + 1];\n                if (x < minX) {\n                    minX = x;\n                }\n                if (x > maxX) {\n                    maxX = x;\n                }\n                if (y < minY) {\n                    minY = y;\n                }\n                if (y > maxY) {\n                    maxY = y;\n                }\n            }\n\n            return (maxX - minX) * (maxX - minX) + (maxY - minY) * (maxY - minY);\n        };\n\n        // Work on a copy of the path.\n        const pathsToCheck = lines.slice();\n\n        while (pathsToCheck.length > 0) {\n            const path = pathsToCheck.pop();\n\n            if (path === undefined || path.length < 6) {\n                continue;\n            }\n\n            let splitIndex = -1;\n\n            for (let i = 0; i < path.length - 3; i += 3) {\n                tempP0.set(path[i], path[i + 1]);\n                tempP1.set(path[i + 3], path[i + 4]);\n                const tangent = tempP1.sub(tempP0).normalize();\n\n                if (i > 0) {\n                    const theta = Math.atan2(\n                        tempPreviousTangent.x * tangent.y - tangent.x * tempPreviousTangent.y,\n                        tangent.dot(tempPreviousTangent)\n                    );\n\n                    if (Math.abs(theta) > maxCornerAngle) {\n                        splitIndex = i;\n                        break;\n                    }\n                }\n                tempPreviousTangent.set(tangent.x, tangent.y);\n            }\n\n            if (splitIndex > 0) {\n                // Estimate if the first part of the path is long enough for the label.\n                const firstPathLengthSqr = computeBoundingBoxSizeSqr(path, 0, splitIndex + 3);\n                // Estimate if the second part of the path is long enough for the label.\n                const secondPathLengthSqr = computeBoundingBoxSizeSqr(\n                    path,\n                    splitIndex,\n                    path.length\n                );\n\n                if (firstPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Split off the valid first path points with a clone of the path.\n                    validLines.push(path.slice(0, splitIndex + 3));\n                }\n\n                if (secondPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Now process the second part of the path, it may have to be split\n                    // again.\n                    pathsToCheck.push(path.slice(splitIndex));\n                }\n            } else {\n                // Estimate if the path is long enough for the label, otherwise ignore\n                // it for rendering text. First, compute the bounding box in world\n                // coordinates.\n                const pathLengthSqr = computeBoundingBoxSizeSqr(path, 0, path.length);\n\n                if (pathLengthSqr > minEstimatedLabelLengthSqr) {\n                    validLines.push(path);\n                }\n            }\n        }\n\n        return validLines;\n    }\n\n    private getTextureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n        // Set TileSpace coordinate type to generate texture coordinates for the displacement map\n        // used in elevation overlay.\n        if (\n            (isFillTechnique(technique) ||\n                isSolidLineTechnique(technique) ||\n                isExtrudedPolygonTechnique(technique)) &&\n            this.m_enableElevationOverlay\n        ) {\n            return TextureCoordinateType.TileSpace;\n        }\n\n        return textureCoordinateType(technique);\n    }\n\n    private getComputeTexCoordsFunc(\n        technique: Technique,\n        objectBounds?: THREE.Box3\n    ): TexCoordsFunction | undefined {\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        switch (texCoordType) {\n            case TextureCoordinateType.TileSpace:\n                return (tilePos: THREE.Vector2, tileExtents: number) => {\n                    const { x: u, y: v } = new THREE.Vector2()\n                        .copy(tilePos)\n                        .divideScalar(tileExtents);\n                    return { u, v: 1 - v };\n                };\n\n            case TextureCoordinateType.EquirectangularSpace:\n                return (tilePos: THREE.Vector2, extents: number) => {\n                    const worldPos = tile2world(extents, this.m_decodeInfo, tilePos, false, tmpV2r);\n                    const { x: u, y: v } = normalizedEquirectangularProjection.reprojectPoint(\n                        webMercatorProjection,\n                        new THREE.Vector3(worldPos.x, worldPos.y, 0)\n                    );\n                    return { u, v };\n                };\n\n            case TextureCoordinateType.FeatureSpace:\n                if (!objectBounds) {\n                    return undefined;\n                }\n                return (tilePos: THREE.Vector2, extents: number) => {\n                    const uv = tile2world(extents, this.m_decodeInfo, tilePos, false, tmpV2r);\n                    if (objectBounds) {\n                        uv.x -= objectBounds.min.x;\n                        uv.y -= objectBounds.min.y;\n                        uv.x /= objectBounds.max.x - objectBounds.min.x;\n                        uv.y /= objectBounds.max.y - objectBounds.min.y;\n                    }\n                    return { u: uv.x, v: 1 - uv.y };\n                };\n\n            default:\n                return undefined;\n        }\n    }\n\n    private applyLineTechnique(\n        linesGeometry: LinesGeometry[],\n        technique: IndexedTechnique,\n        techniqueIndex: number,\n        lineType = LineType.Complex,\n        featureAttributes: AttributeMap,\n        lines: number[][],\n        context: AttrEvaluationContext,\n        uvs?: number[][],\n        offsets?: number[][]\n    ): void {\n        let lineGroup: LineGroup;\n        const lineGroupGeometries = linesGeometry.find(aLine => aLine.technique === techniqueIndex);\n        const hasNormalsAndUvs = uvs !== undefined;\n        if (lineGroupGeometries === undefined) {\n            lineGroup = new LineGroup(hasNormalsAndUvs, undefined, lineType === LineType.Simple);\n            const aLine: LinesGeometry = {\n                type: lineType === LineType.Complex ? GeometryType.SolidLine : GeometryType.Line,\n                technique: techniqueIndex,\n                lines: lineGroup\n            };\n\n            const techniqueTransient = evaluateTechniqueAttr<boolean>(\n                context,\n                technique.transient,\n                false\n            );\n            if (!techniqueTransient && this.m_gatherFeatureAttributes) {\n                // if this technique is transient, do not save the featureIds with the geometry\n                aLine.objInfos = [featureAttributes];\n                aLine.featureStarts = [0];\n            }\n\n            linesGeometry.push(aLine);\n        } else {\n            lineGroup = lineGroupGeometries.lines;\n\n            if (\n                this.m_gatherFeatureAttributes &&\n                lineGroupGeometries.objInfos &&\n                lineGroupGeometries.featureStarts\n            ) {\n                // Add ID to tag the geometry, also provide the current length of the index\n                // attribute\n                lineGroupGeometries.objInfos.push(featureAttributes);\n                lineGroupGeometries.featureStarts.push(lineGroup.indices.length);\n            }\n        }\n        let i = 0;\n        lines.forEach(aLine => {\n            lineGroup.add(\n                this.m_decodeInfo.center,\n                aLine,\n                this.projection,\n                offsets ? offsets[i] : undefined,\n                uvs ? uvs[i] : undefined\n            );\n            i++;\n        });\n    }\n\n    private applyPolygonTechnique(\n        polygons: Ring[][],\n        technique: Technique,\n        techniqueIndex: number,\n        featureId: number | undefined,\n        context: AttrEvaluationContext,\n        extents: number\n    ): void {\n        const isExtruded = isExtrudedPolygonTechnique(technique);\n\n        const geometryType = isExtruded ? GeometryType.ExtrudedPolygon : GeometryType.Polygon;\n        const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, geometryType);\n\n        if (meshBuffers === undefined) {\n            return;\n        }\n\n        const extrudedPolygonTechnique = technique as ExtrudedPolygonTechnique;\n        const fillTechnique = technique as FillTechnique;\n        const boundaryWalls = extrudedPolygonTechnique.boundaryWalls === true;\n\n        const isFilled = isFillTechnique(technique);\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        let height = evaluateTechniqueAttr<number>(context, extrudedPolygonTechnique.height);\n\n        let floorHeight = evaluateTechniqueAttr<number>(\n            context,\n            extrudedPolygonTechnique.floorHeight\n        );\n\n        if (height === undefined) {\n            // Get the height values for the footprint and extrusion.\n            const featureHeight = context.env.lookup(\"height\") as number;\n            const styleSetDefaultHeight = evaluateTechniqueAttr<number>(\n                context,\n                // tslint:disable-next-line: deprecation\n                extrudedPolygonTechnique.defaultHeight\n            );\n            height =\n                featureHeight !== undefined\n                    ? featureHeight\n                    : styleSetDefaultHeight !== undefined\n                    ? styleSetDefaultHeight\n                    : 0;\n        }\n\n        if (floorHeight === undefined) {\n            const featureMinHeight = context.env.lookup(\"min_height\") as number;\n            floorHeight = featureMinHeight !== undefined && !isFilled ? featureMinHeight : 0;\n        }\n\n        // Prevent that extruded buildings are completely flat (can introduce errors in normal\n        // computation and extrusion).\n        height = Math.max(floorHeight + ExtrusionFeatureDefs.MIN_BUILDING_HEIGHT, height);\n\n        const styleSetConstantHeight = getOptionValue(\n            extrudedPolygonTechnique.constantHeight,\n            false\n        );\n\n        this.m_decodeInfo.tileBounds.getCenter(tempTileOrigin);\n\n        const {\n            positions,\n            normals,\n            textureCoordinates,\n            colors,\n            extrusionAxis,\n            indices,\n            edgeIndices,\n            groups\n        } = meshBuffers;\n\n        const featureStride = texCoordType !== undefined ? 4 : 2;\n        const vertexStride = featureStride + 2;\n        const isSpherical = this.m_decodeInfo.targetProjection.type === ProjectionType.Spherical;\n\n        const edgeWidth = isExtruded\n            ? extrudedPolygonTechnique.lineWidth || 0.0\n            : isFilled\n            ? fillTechnique.lineWidth || 0.0\n            : 0.0;\n        const hasEdges = edgeWidth > 0.0;\n\n        let color: THREE.Color | undefined;\n        if (isExtrudedPolygonTechnique(technique)) {\n            if (getOptionValue(technique.vertexColors, false)) {\n                let colorValue = evaluateTechniqueAttr<StyleColor>(context, technique.color);\n                if (colorValue === undefined) {\n                    const featureColor = context.env.lookup(\"color\");\n                    if (this.isColorStringValid(featureColor)) {\n                        colorValue = String(featureColor);\n                    }\n                }\n                if (colorValue === undefined) {\n                    colorValue = evaluateTechniqueAttr<number | string>(\n                        context,\n                        technique.defaultColor,\n                        0x000000\n                    );\n                }\n\n                if (colorValue === undefined) {\n                    colorValue = 0x000000;\n                }\n                tmpColor.set(colorValue as any);\n\n                color = tmpColor;\n            }\n        }\n\n        for (const polygon of polygons) {\n            const startIndexCount = indices.length;\n\n            for (let ringIndex = 0; ringIndex < polygon.length; ) {\n                const vertices: number[] = [];\n                const polygonBaseVertex = positions.length / 3;\n\n                const { contour, winding } = polygon[ringIndex++];\n                for (let i = 0; i < contour.length / featureStride; ++i) {\n                    // Invert the Y component to preserve the correct winding without transforming\n                    // from webMercator's local to global space.\n                    for (let j = 0; j < featureStride; ++j) {\n                        vertices.push((j === 1 ? -1 : 1) * contour[i * featureStride + j]);\n                    }\n\n                    // Calculate nextEdge and nextWall.\n                    const nextIdx = (i + 1) % (contour.length / featureStride);\n                    const currX = contour[i * featureStride];\n                    const currY = contour[i * featureStride + 1];\n                    const nextX = contour[nextIdx * featureStride];\n                    const nextY = contour[nextIdx * featureStride + 1];\n                    const insideExtents = !(\n                        (currX <= 0 && nextX <= 0) ||\n                        (currX >= extents && nextX >= extents) ||\n                        (currY <= 0 && nextY <= 0) ||\n                        (currY >= extents && nextY >= extents)\n                    );\n\n                    vertices.push(\n                        insideExtents ? nextIdx : -1,\n                        boundaryWalls || insideExtents ? nextIdx : -1\n                    );\n                }\n\n                // Iterate over the inner rings. The inner rings have the opposite winding\n                // of the outer rings.\n                const holes: number[] = [];\n                while (ringIndex < polygon.length && polygon[ringIndex].winding !== winding) {\n                    const vertexOffset = vertices.length / vertexStride;\n                    holes.push(vertexOffset);\n\n                    const hole = polygon[ringIndex++].contour;\n                    for (let i = 0; i < hole.length / featureStride; ++i) {\n                        // Invert the Y component to preserve the correct winding without\n                        // transforming from webMercator's local to global space.\n                        for (let j = 0; j < featureStride; ++j) {\n                            vertices.push((j === 1 ? -1 : 1) * hole[i * featureStride + j]);\n                        }\n\n                        // Calculate nextEdge and nextWall.\n                        const nextIdx = (i + 1) % (hole.length / featureStride);\n                        const currX = hole[i * featureStride];\n                        const currY = hole[i * featureStride + 1];\n                        const nextX = hole[nextIdx * featureStride];\n                        const nextY = hole[nextIdx * featureStride + 1];\n                        const insideExtents = !(\n                            (currX <= 0 && nextX <= 0) ||\n                            (currX >= extents && nextX >= extents) ||\n                            (currY <= 0 && nextY <= 0) ||\n                            (currY >= extents && nextY >= extents)\n                        );\n\n                        vertices.push(\n                            insideExtents ? vertexOffset + nextIdx : -1,\n                            boundaryWalls || insideExtents ? vertexOffset + nextIdx : -1\n                        );\n                    }\n                }\n\n                try {\n                    // Triangulate the footprint polyline.\n                    const triangles = earcut(vertices, holes, vertexStride);\n                    const originalVertexCount = vertices.length / vertexStride;\n\n                    // Subdivide for spherical projections if needed.\n                    if (isSpherical) {\n                        const geom = new THREE.BufferGeometry();\n\n                        const positionArray = [];\n                        const uvArray = [];\n                        const edgeArray = [];\n                        const wallArray = [];\n\n                        // Transform to global webMercator coordinates to be able to reproject to\n                        // sphere.\n                        for (let i = 0; i < vertices.length; i += vertexStride) {\n                            const worldPos = tile2world(\n                                extents,\n                                this.m_decodeInfo,\n                                tmpV2.set(vertices[i], vertices[i + 1]),\n                                true,\n                                tmpV2r\n                            );\n                            positionArray.push(worldPos.x, worldPos.y, 0);\n                            if (texCoordType !== undefined) {\n                                uvArray.push(vertices[i + 2], vertices[i + 3]);\n                            }\n                            edgeArray.push(vertices[i + featureStride]);\n                            wallArray.push(vertices[i + featureStride + 1]);\n                        }\n\n                        // Create the temporary geometry used for subdivision.\n                        const posAttr = new THREE.BufferAttribute(\n                            new Float32Array(positionArray),\n                            3\n                        );\n                        geom.setAttribute(\"position\", posAttr);\n                        let uvAttr: THREE.BufferAttribute | undefined;\n                        if (texCoordType !== undefined) {\n                            uvAttr = new THREE.BufferAttribute(new Float32Array(uvArray), 2);\n                            geom.setAttribute(\"uv\", uvAttr);\n                        }\n                        const edgeAttr = new THREE.BufferAttribute(new Float32Array(edgeArray), 1);\n                        geom.setAttribute(\"edge\", edgeAttr);\n                        const wallAttr = new THREE.BufferAttribute(new Float32Array(wallArray), 1);\n                        geom.setAttribute(\"wall\", edgeAttr);\n                        const index = createIndexBufferAttribute(triangles, posAttr.count - 1);\n                        const indexAttr =\n                            index.type === \"uint32\"\n                                ? new THREE.Uint32BufferAttribute(index.buffer, 1)\n                                : new THREE.Uint16BufferAttribute(index.buffer, 1);\n                        geom.setIndex(indexAttr);\n\n                        // Increase tesselation of polygons for certain zoom levels\n                        // to remove mixed LOD cracks\n                        const zoomLevel = this.m_decodeInfo.tileKey.level;\n                        if (zoomLevel >= 3 && zoomLevel < 9) {\n                            const subdivision = Math.pow(2, 9 - zoomLevel);\n                            const { geoBox } = this.m_decodeInfo;\n                            const edgeModifier = new EdgeLengthGeometrySubdivisionModifier(\n                                subdivision,\n                                geoBox,\n                                SubdivisionMode.NoDiagonals,\n                                webMercatorProjection\n                            );\n                            edgeModifier.modify(geom);\n                        }\n\n                        // FIXME(HARP-5700): Subdivision modifier ignores texture coordinates.\n                        const modifier = new SphericalGeometrySubdivisionModifier(\n                            THREE.MathUtils.degToRad(10),\n                            webMercatorProjection\n                        );\n                        modifier.modify(geom);\n\n                        // Reassemble the vertex buffer, transforming the subdivided global\n                        // webMercator points back to local space.\n                        vertices.length = 0;\n                        triangles.length = 0;\n                        for (let i = 0; i < posAttr.array.length; i += 3) {\n                            const tilePos = world2tile(\n                                extents,\n                                this.m_decodeInfo,\n                                tmpV2.set(posAttr.array[i], posAttr.array[i + 1]),\n                                true,\n                                tmpV2r\n                            );\n                            vertices.push(tilePos.x, tilePos.y);\n                            if (texCoordType !== undefined) {\n                                vertices.push(uvAttr!.array[(i / 3) * 2]);\n                                vertices.push(uvAttr!.array[(i / 3) * 2 + 1]);\n                            }\n                            vertices.push(edgeAttr.array[i / 3]);\n                            vertices.push(wallAttr.array[i / 3]);\n                        }\n\n                        const geomIndex = geom.getIndex();\n                        if (geomIndex !== null) {\n                            triangles.push(...(geomIndex.array as Float32Array));\n                        }\n                    }\n\n                    // Add the footprint/roof vertices to the position buffer.\n                    tempVertNormal.set(0, 0, 1);\n\n                    // Assemble the vertex buffer.\n                    for (let i = 0; i < vertices.length; i += vertexStride) {\n                        webMercatorTile2TargetTile(\n                            extents,\n                            this.m_decodeInfo,\n                            tmpV2.set(vertices[i], vertices[i + 1]),\n                            tmpV3,\n                            true\n                        );\n\n                        let scaleFactor = 1.0;\n                        if (isExtruded && styleSetConstantHeight !== true) {\n                            tempVertOrigin.set(\n                                tempTileOrigin.x + tmpV3.x,\n                                tempTileOrigin.y + tmpV3.y,\n                                tempTileOrigin.z + tmpV3.z\n                            );\n                            scaleFactor = this.m_decodeInfo.targetProjection.getScaleFactor(\n                                tempVertOrigin\n                            );\n                        }\n                        this.m_maxGeometryHeight = Math.max(\n                            this.m_maxGeometryHeight,\n                            scaleFactor * height\n                        );\n\n                        if (isSpherical) {\n                            tempVertNormal\n                                .set(tmpV3.x, tmpV3.y, tmpV3.z)\n                                .add(this.center)\n                                .normalize();\n                        }\n\n                        tempFootDisp.copy(tempVertNormal).multiplyScalar(floorHeight * scaleFactor);\n                        positions.push(\n                            tmpV3.x + tempFootDisp.x,\n                            tmpV3.y + tempFootDisp.y,\n                            tmpV3.z + tempFootDisp.z\n                        );\n                        if (texCoordType !== undefined) {\n                            textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                        }\n                        if (this.m_enableElevationOverlay) {\n                            normals.push(...tempVertNormal.toArray());\n                        }\n                        if (isExtruded) {\n                            tempRoofDisp.copy(tempVertNormal).multiplyScalar(height * scaleFactor);\n                            positions.push(\n                                tmpV3.x + tempRoofDisp.x,\n                                tmpV3.y + tempRoofDisp.y,\n                                tmpV3.z + tempRoofDisp.z\n                            );\n                            extrusionAxis.push(\n                                0.0,\n                                0.0,\n                                0.0,\n                                0.0,\n                                tempRoofDisp.x - tempFootDisp.x,\n                                tempRoofDisp.y - tempFootDisp.y,\n                                tempRoofDisp.z - tempFootDisp.z,\n                                1.0\n                            );\n                            if (texCoordType !== undefined) {\n                                textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                            }\n                            if (this.m_enableElevationOverlay) {\n                                normals.push(...tempVertNormal.toArray());\n                            }\n                            if (color !== undefined) {\n                                colors.push(color.r, color.g, color.b, color.r, color.g, color.b);\n                            }\n                        }\n                    }\n\n                    // Add the footprint/roof indices to the index buffer.\n                    for (let i = 0; i < triangles.length; i += 3) {\n                        if (isExtruded) {\n                            // When extruding we duplicate the vertices, so that all even vertices\n                            // belong to the bottom and all odd vertices belong to the top.\n                            const i0 = polygonBaseVertex + triangles[i + 0] * 2 + 1;\n                            const i1 = polygonBaseVertex + triangles[i + 1] * 2 + 1;\n                            const i2 = polygonBaseVertex + triangles[i + 2] * 2 + 1;\n                            indices.push(i0, i1, i2);\n                        } else {\n                            const i0 = polygonBaseVertex + triangles[i + 0];\n                            const i1 = polygonBaseVertex + triangles[i + 1];\n                            const i2 = polygonBaseVertex + triangles[i + 2];\n                            indices.push(i0, i1, i2);\n                        }\n                    }\n\n                    // Assemble the index buffer for edges (follow vertices as linked list).\n                    if (hasEdges) {\n                        this.addEdges(\n                            polygonBaseVertex,\n                            originalVertexCount,\n                            vertexStride,\n                            featureStride,\n                            positions,\n                            vertices,\n                            edgeIndices,\n                            isExtruded,\n                            extrudedPolygonTechnique.footprint,\n                            extrudedPolygonTechnique.maxSlope\n                        );\n                    }\n                    if (isExtruded) {\n                        this.addWalls(\n                            polygonBaseVertex,\n                            originalVertexCount,\n                            vertexStride,\n                            featureStride,\n                            vertices,\n                            indices\n                        );\n                    }\n                } catch (err) {\n                    logger.error(`cannot triangulate geometry`, err);\n                }\n            }\n\n            if (this.m_gatherFeatureAttributes) {\n                meshBuffers.objInfos.push(context.env.entries);\n                meshBuffers.featureStarts.push(startIndexCount);\n            }\n\n            const count = indices.length - startIndexCount;\n            if (count > 0) {\n                groups.push({\n                    start: startIndexCount,\n                    count,\n                    technique: techniqueIndex\n                });\n            }\n        }\n    }\n\n    private createGeometries() {\n        this.m_meshBuffers.forEach((meshBuffers, techniqueIdx) => {\n            if (meshBuffers.positions.length === 0) {\n                return;\n            } // nothing to do\n\n            if (\n                !this.m_styleSetEvaluator.techniques ||\n                this.m_styleSetEvaluator.techniques.length <= techniqueIdx\n            ) {\n                throw new Error(\"Invalid technique index\");\n            }\n\n            const technique = this.m_styleSetEvaluator.techniques[techniqueIdx];\n            if (technique === undefined) {\n                return;\n            }\n\n            const positionElements = new Float32Array(meshBuffers.positions);\n\n            if (meshBuffers.texts.length > 0 && isTextTechnique(technique)) {\n                this.m_textGeometries.push({\n                    positions: {\n                        name: \"position\",\n                        type: \"float\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3\n                    },\n                    texts: meshBuffers.texts,\n                    technique: techniqueIdx,\n                    stringCatalog: meshBuffers.stringCatalog,\n                    objInfos: meshBuffers.objInfos\n                });\n                return;\n            }\n\n            if (meshBuffers.texts.length > 0 && isPoiTechnique(technique)) {\n                this.m_poiGeometries.push({\n                    positions: {\n                        name: \"position\",\n                        type: \"float\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3\n                    },\n                    texts: meshBuffers.texts,\n                    technique: techniqueIdx,\n                    stringCatalog: meshBuffers.stringCatalog,\n                    imageTextures: meshBuffers.imageTextures,\n                    objInfos: meshBuffers.objInfos,\n                    offsetDirections: meshBuffers.offsetDirections\n                });\n                return;\n            }\n\n            if (meshBuffers.groups.length === 0) {\n                // create a default group containing all the vertices in the position attribute.\n\n                meshBuffers.groups.push({\n                    start: 0,\n                    count: positionElements.length / 3,\n                    technique: techniqueIdx\n                });\n            }\n\n            const vertexAttributes: BufferAttribute[] = [\n                {\n                    name: \"position\",\n                    buffer: positionElements.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                }\n            ];\n\n            const geometry: Geometry = {\n                type: meshBuffers.type,\n                vertexAttributes,\n                groups: meshBuffers.groups\n            };\n\n            if (meshBuffers.normals.length > 0) {\n                const normals = new Float32Array(meshBuffers.normals);\n                assert(\n                    normals.length === positionElements.length,\n                    \"length of normals buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"normal\",\n                    buffer: normals.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.colors.length > 0) {\n                const colors = new Float32Array(meshBuffers.colors);\n                assert(\n                    colors.length === positionElements.length,\n                    \"length of colors buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"color\",\n                    buffer: colors.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            const positionCount = meshBuffers.positions.length / 3;\n\n            if (meshBuffers.textureCoordinates.length > 0) {\n                const texCoordCount = meshBuffers.textureCoordinates.length / 2;\n                assert(\n                    texCoordCount === positionCount,\n                    \"length of textureCoordinates buffer is different than the length of the\" +\n                        \"position buffer\"\n                );\n\n                const textureCoordinates = new Float32Array(meshBuffers.textureCoordinates);\n                vertexAttributes.push({\n                    name: \"uv\",\n                    buffer: textureCoordinates.buffer as ArrayBuffer,\n                    itemCount: 2,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.extrusionAxis.length > 0) {\n                const extrusionAxis = new Float32Array(meshBuffers.extrusionAxis);\n                assert(\n                    extrusionAxis.length / 4 === positionElements.length / 3,\n                    \"length of extrusionAxis buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"extrusionAxis\",\n                    buffer: extrusionAxis.buffer as ArrayBuffer,\n                    itemCount: 4,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.indices.length > 0) {\n                geometry.index = createIndexBufferAttribute(meshBuffers.indices, positionCount - 1);\n            }\n\n            if (meshBuffers.edgeIndices.length > 0) {\n                geometry.edgeIndex = createIndexBufferAttribute(\n                    meshBuffers.edgeIndices,\n                    positionCount - 1,\n                    \"edgeIndex\"\n                );\n            }\n\n            geometry.featureStarts = meshBuffers.featureStarts;\n            geometry.objInfos = meshBuffers.objInfos;\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const index = createIndexBufferAttribute(\n                indices,\n                vertices.length / linesGeometry.lines.stride - 1\n            );\n            const attr: InterleavedBufferAttribute = {\n                type: \"float\",\n                stride: linesGeometry.lines.stride,\n                buffer,\n                attributes: linesGeometry.lines.vertexAttributes\n            };\n            const geometry: Geometry = {\n                type: GeometryType.SolidLine,\n                index,\n                interleavedVertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique }],\n                vertexAttributes: [],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processSimpleLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const attr: BufferAttribute = {\n                buffer,\n                itemCount: 3,\n                type: \"float\",\n                name: \"position\"\n            };\n            const geometry: Geometry = {\n                type: GeometryType.Line,\n                index: createIndexBufferAttribute(indices, vertices.length / attr.itemCount - 1),\n                vertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique }],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private findOrCreateMeshBuffers(index: number, type: GeometryType): MeshBuffers | undefined {\n        let buffers = this.m_meshBuffers.get(index);\n\n        if (buffers !== undefined) {\n            if (buffers.type !== type) {\n                logger.error(`MeshBuffer has been created with wrong type \"${GeometryType[type]}\"\n                instead of \"${GeometryType[buffers.type]}\"`);\n                return undefined;\n            }\n            return buffers;\n        }\n        buffers = new MeshBuffers(type);\n        this.m_meshBuffers.set(index, buffers);\n        return buffers;\n    }\n\n    private processFeatureCommon(env: Env) {\n        const source = env.lookup(\"source\");\n        if (typeof source === \"string\" && source !== \"\") {\n            if (!this.m_sources.includes(source)) {\n                this.m_sources.push(source);\n            }\n        }\n    }\n\n    private isColorStringValid(color: Value | undefined): color is string {\n        return typeof color === \"string\" && color.length > 0;\n    }\n\n    private addEdges(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        positions: number[],\n        vertices: number[],\n        indices: number[],\n        isExtruded: boolean,\n        hasFootprint?: boolean,\n        maxSlope?: number\n    ) {\n        const tmpEdgeA = new THREE.Vector3();\n        const tmpEdgeB = new THREE.Vector3();\n        let firstRingVertex: number | undefined;\n        let prevRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    if (!isExtruded) {\n                        indices.push(\n                            featureBaseVertex + currRingVertex,\n                            featureBaseVertex + nextRingVertex\n                        );\n                    } else {\n                        if (hasFootprint === true) {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + nextRingVertex * 2\n                            );\n                        }\n                        indices.push(\n                            featureBaseVertex + currRingVertex * 2 + 1,\n                            featureBaseVertex + nextRingVertex * 2 + 1\n                        );\n\n                        if (maxSlope !== undefined) {\n                            if (prevRingVertex !== undefined) {\n                                const prevPos = (featureBaseVertex + prevRingVertex * 2) * 3;\n                                const currPos = (featureBaseVertex + currRingVertex * 2) * 3;\n                                const nextPos = (featureBaseVertex + nextRingVertex * 2) * 3;\n                                tmpEdgeA\n                                    .set(\n                                        positions[currPos] - positions[prevPos],\n                                        positions[currPos + 1] - positions[prevPos + 1],\n                                        positions[currPos + 2] - positions[prevPos + 2]\n                                    )\n                                    .normalize();\n                                tmpEdgeB\n                                    .set(\n                                        positions[nextPos] - positions[currPos],\n                                        positions[nextPos + 1] - positions[currPos + 1],\n                                        positions[nextPos + 2] - positions[currPos + 2]\n                                    )\n                                    .normalize();\n                                if (tmpEdgeA.dot(tmpEdgeB) <= maxSlope) {\n                                    indices.push(\n                                        featureBaseVertex + currRingVertex * 2,\n                                        featureBaseVertex + currRingVertex * 2 + 1\n                                    );\n                                }\n                            }\n                        } else {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + currRingVertex * 2 + 1\n                            );\n                        }\n                    }\n                    prevRingVertex = currRingVertex;\n                    currRingVertex = nextRingVertex;\n                }\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n            prevRingVertex = undefined;\n        }\n    }\n\n    private addWalls(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        vertices: number[],\n        indices: number[]\n    ) {\n        let firstRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride + 1];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    indices.push(\n                        featureBaseVertex + currRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2\n                    );\n                }\n                currRingVertex = nextRingVertex;\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n        }\n    }\n\n    private findRelativePositionInLine(p: THREE.Vector3, line: number[]): number {\n        let lineDist = Infinity;\n        let lineOffset = 0;\n        for (let i = 0; i < line.length; i += 4) {\n            // Find the closest point C in segment AB to point P.\n            tmpLine.set(\n                tmpPointA.set(line[i], line[i + 1], line[i + 2]),\n                tmpPointB.set(line[i + 4], line[i + 5], line[i + 6])\n            );\n            tmpLine.closestPointToPoint(p, true, tmpPointC);\n\n            // If P is in AB (or really close), save A as anchor point and C (to estimate distance\n            // from segment origin).\n            const dist = tmpPointC.distanceTo(p);\n            if (dist < lineDist) {\n                tmpPointD.copy(tmpPointC);\n                tmpPointE.copy(tmpPointA);\n                lineDist = dist;\n                lineOffset = line[i + 3];\n            }\n        }\n        // Return the relative position of P inside the line.\n        return lineOffset + tmpPointD.distanceTo(tmpPointE);\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// Preallocate temp variables used during line generation.\nconst tmpV = new THREE.Vector3();\nconst tmpNormal = new THREE.Vector3();\nconst tmpTangent0 = new THREE.Vector3();\nconst tmpTangent1 = new THREE.Vector3();\nconst tmpBitangent = new THREE.Vector3();\nconst SEGMENT_OFFSET = 0.1;\n\n/**\n * Describes vertex attribute parameters of interleaved buffer.\n */\ninterface VertexAttributeDescriptor {\n    name: string;\n    itemSize: number;\n    offset: number;\n}\n\ninterface VertexDescriptor {\n    attributes: VertexAttributeDescriptor[];\n    stride: number;\n}\n\n/**\n * Declares all the vertex attributes used for rendering a line using the [[SolidLineMaterial]].\n */\n\n/** Base line vertex attributes. */\nconst LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        // The \"extrusionCoord\" is a vec4 which represents:\n        // xy: Extrusion coordinates\n        // sign(xy): Extrusion direction\n        // z: Line length\n        { name: \"extrusionCoord\", itemSize: 3, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 3 },\n        { name: \"tangent\", itemSize: 3, offset: 6 },\n        { name: \"bitangent\", itemSize: 4, offset: 9 }\n    ],\n    stride: 13\n};\n\n/** Optional normal and uv coordinates. */\nconst NORMAL_UV_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"uv\", itemSize: 2, offset: LINE_VERTEX_ATTRIBUTES.stride },\n        { name: \"normal\", itemSize: 3, offset: LINE_VERTEX_ATTRIBUTES.stride + 2 }\n    ],\n    stride: 5\n};\n\n/** Base line vertex attributes plus normals and uv coordinates. */\nconst LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [...LINE_VERTEX_ATTRIBUTES.attributes, ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes],\n    stride: LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Declares all the vertex attributes used for rendering a line using the\n * [[HighPrecisionLineMaterial]].\n */\nconst HP_LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"extrusionCoord\", itemSize: 2, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 2 },\n        { name: \"positionLow\", itemSize: 3, offset: 5 },\n        { name: \"tangent\", itemSize: 3, offset: 8 },\n        { name: \"bitangent\", itemSize: 4, offset: 11 }\n    ],\n    stride: 15\n};\n\n/** High precision line vertex attributes plus normals and uv coordinates. */\nconst HP_LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [\n        ...HP_LINE_VERTEX_ATTRIBUTES.attributes,\n        ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes\n    ],\n    stride: HP_LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Class that holds the vertex and index attributes for a [[Lines]] object.\n */\nexport class LineGeometry {\n    vertices: number[] = [];\n    vertexColors: number[] = [];\n    indices: number[] = [];\n}\n\nfunction getVertexDescriptor(hasNormalsAndUvs: boolean, highPrecision: boolean): VertexDescriptor {\n    if (highPrecision) {\n        return hasNormalsAndUvs ? HP_LINE_VERTEX_ATTRIBUTES_NUV : HP_LINE_VERTEX_ATTRIBUTES;\n    } else {\n        return hasNormalsAndUvs ? LINE_VERTEX_ATTRIBUTES_NUV : LINE_VERTEX_ATTRIBUTES;\n    }\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param center - Center of the polyline.\n * @param polyline - Array of `numbers` describing a polyline.\n * @param offsets - Array of `numbers` representing line segment offsets.\n * @param uvs - Array of `numbers` representing texture coordinates.\n * @param colors - Array of `numbers` describing a polyline's colors.\n * @param geometry - [[LineGeometry]] object used to store the vertex and index attributes.\n * @param highPrecision - If `true` will create high-precision vertex information.\n */\nexport function createLineGeometry(\n    center: THREE.Vector3,\n    polyline: ArrayLike<number>,\n    projection: Projection,\n    offsets?: ArrayLike<number>,\n    uvs?: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry(),\n    highPrecision: boolean = false\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const stride = getVertexDescriptor(uvs !== undefined, highPrecision).stride;\n\n    const pointCount = polyline.length / 3;\n    const segments = new Array<number>(pointCount);\n    const tangents = new Array<number>(polyline.length - 3);\n    const baseVertex = geometry.vertices.length / stride;\n\n    const hasSegmentOffsets = offsets !== undefined && offsets.length > 0;\n    const hasTexCoords = uvs !== undefined && uvs.length > 0;\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    assert(!hasSegmentOffsets || offsets!.length === pointCount);\n    assert(!hasTexCoords || uvs!.length / 2 === pointCount);\n    assert(!vertexColors || colors!.length === polyline.length);\n\n    // Compute segments and tangents.\n    let sum = SEGMENT_OFFSET;\n    segments[0] = sum;\n    for (let i = 0; i < pointCount - 1; ++i) {\n        let sqrLength = 0;\n        for (let j = 0; j < 3; ++j) {\n            const d = polyline[(i + 1) * 3 + j] - polyline[i * 3 + j];\n            tangents[i * 3 + j] = d;\n            sqrLength += d * d;\n        }\n        const len = Math.sqrt(sqrLength);\n        sum = sum + len;\n        segments[i + 1] = sum;\n    }\n\n    const lineCoverage = hasSegmentOffsets\n        ? Math.abs(offsets![offsets!.length - 1] - offsets![0])\n        : 1.0;\n    const lineLength = segments[segments.length - 1] / lineCoverage;\n\n    // Override the segments if offsets are explicitly provided.\n    if (hasSegmentOffsets) {\n        for (let i = 0; i < pointCount; ++i) {\n            segments[i] = offsets![i] * lineLength + SEGMENT_OFFSET;\n        }\n    }\n\n    // Check if we're working with a closed line.\n    let isClosed = true;\n    for (let j = 0; j < 3; ++j) {\n        isClosed = isClosed && polyline[j] === polyline[polyline.length - 3 + j];\n    }\n\n    const tmpVertices: number[] = [];\n\n    const addVertexPair = (\n        i: number,\n        T1: number,\n        T2: number,\n        segment: number,\n        extrusionCoord: number\n    ) => {\n        tmpVertices.length = 0;\n\n        // Store the segment and extrusionCoord attributes.\n        geometry.vertices.push(segment, extrusionCoord * -1, lineLength);\n        tmpVertices.push(segment, extrusionCoord * 1, lineLength);\n\n        // Store the position attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            if (!highPrecision) {\n                geometry.vertices.push(polyline[i * 3 + j]);\n                tmpVertices.push(polyline[i * 3 + j]);\n            } else {\n                const highComp = Math.fround(polyline[i * 3 + j]);\n                const lowComp = polyline[i * 3 + j] - highComp;\n                geometry.vertices.push(highComp, lowComp);\n                tmpVertices.push(highComp, lowComp);\n            }\n            tmpNormal.setComponent(j, polyline[i * 3 + j]);\n        }\n\n        // Store the bitangent attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            tmpTangent0.setComponent(j, tangents[T1 + j]);\n            tmpTangent1.setComponent(j, tangents[T2 + j]);\n        }\n        tmpTangent0.normalize();\n        geometry.vertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpVertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpNormal.add(center); // tmpNormal contains world position\n        projection.surfaceNormal(tmpNormal, tmpNormal);\n        const angle = computeBitangent(\n            tmpNormal,\n            tmpTangent0,\n            tmpTangent1.normalize(),\n            tmpBitangent\n        );\n        geometry.vertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n        tmpVertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n\n        if (hasTexCoords) {\n            // uvs\n            geometry.vertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            tmpVertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            // normals\n            geometry.vertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n            tmpVertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n        }\n\n        geometry.vertices.push(...tmpVertices);\n\n        // Add vertex colors (if supplied).\n        if (vertexColors) {\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n        }\n    };\n\n    for (let i = 0; i < pointCount; ++i) {\n        // Retrieve the per-point tangents.\n        const T1 = isClosed && i === 0 ? tangents.length - 3 : Math.max(0, i - 1) * 3;\n        const T2 = isClosed && i === pointCount - 1 ? 0 : Math.min(i * 3, tangents.length - 3);\n\n        // Process v0 and v1.\n        if (i > 0) {\n            addVertexPair(i, T1, T2, segments[i - 1], segments[i]);\n        }\n\n        // Process v2 and v3.\n        if (i + 1 < pointCount) {\n            addVertexPair(\n                i,\n                T1,\n                T2,\n                segments[Math.min(i, segments.length - 1)] * -1,\n                segments[Math.min(i + 1, segments.length - 1)]\n            );\n        }\n    }\n\n    // Store the triangle indices in the final index buffer.\n    for (let i = 0; i < pointCount - 1; ++i) {\n        const base = baseVertex + i * 4;\n        geometry.indices.push(base, base + 1, base + 2, base + 2, base + 1, base + 3);\n    }\n\n    return geometry;\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param polyline - Array of `numbers` describing a polyline.\n * @param colors - Array of `numbers` describing a polyline's colors.\n * @param geometry - [[LineGeometry]] object used to store the vertex and index attributes.\n */\nexport function createSimpleLineGeometry(\n    polyline: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry()\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const pointCount = polyline.length / 3;\n    let index = geometry.vertices.length / 3;\n\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    for (let i = 0; i < pointCount; ++i, index++) {\n        if (i > 0) {\n            geometry.indices.push(index);\n        }\n        if (i < pointCount - 1) {\n            geometry.indices.push(index);\n        }\n        for (let j = 0; j < 3; ++j) {\n            geometry.vertices.push(polyline[i * 3 + j]);\n            if (vertexColors) {\n                geometry.vertexColors.push(colors![i * 3 + j]);\n            }\n        }\n    }\n\n    return geometry;\n}\n\n/**\n * Class used to render groups (or batches) of width-variable lines (in the same tile).\n */\nexport class LineGroup {\n    /**\n     * Adds all the attribute data needed to a [[BufferGeometry]] object for rendering `Lines`.\n     *\n     * @param vertices - Array of vertex attributes.\n     * @param colors - Array of vertex colors.\n     * @param indices - Array of vertex indices.\n     * @param geometry - [[BufferGeometry]] object which will store all the `Lines` attribute data.\n     * @param hasNormalsAnUvs - Whether vertices have normal and uv coordinates as attributes.\n     * @param highPrecision - If `true` will create high-precision vertex information.\n     * @param isSimple - `true` to create simple (nonsolid, nonextruded) lines. Defaults to `false`.\n     */\n    static createGeometry(\n        vertices: ArrayLike<number>,\n        colors: ArrayLike<number>,\n        indices: ArrayLike<number>,\n        geometry: THREE.BufferGeometry,\n        hasNormalsAndUvs: boolean = false,\n        highPrecision = false,\n        isSimple = false\n    ): THREE.BufferGeometry {\n        if (isSimple) {\n            geometry.setAttribute(\n                \"position\",\n                new THREE.BufferAttribute(new Float32Array(vertices), 3)\n            );\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n            return geometry;\n        } else {\n            const vertexDescriptor = getVertexDescriptor(hasNormalsAndUvs, highPrecision);\n\n            const buffer = new THREE.InterleavedBuffer(\n                new Float32Array(vertices),\n                vertexDescriptor.stride\n            );\n            vertexDescriptor.attributes.forEach(descr => {\n                const attribute = new THREE.InterleavedBufferAttribute(\n                    buffer,\n                    descr.itemSize,\n                    descr.offset,\n                    false\n                );\n                geometry.setAttribute(descr.name, attribute);\n            });\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n\n            return geometry;\n        }\n    }\n\n    private readonly m_geometry: LineGeometry;\n\n    constructor(\n        readonly hasNormalsAndUvs: boolean = false,\n        readonly highPrecision: boolean = false,\n        readonly isSimple: boolean = false\n    ) {\n        this.m_geometry = new LineGeometry();\n    }\n\n    /**\n     * Clears the list of line strips.\n     */\n    clear() {\n        this.m_geometry.vertices = [];\n        this.m_geometry.vertexColors = [];\n        this.m_geometry.indices = [];\n    }\n\n    /**\n     * Add the given points to this line group.\n     *\n     * @param center - World center of the provided points.\n     * @param points - Sequence of (x,y,z) coordinates.\n     * @param offsets - Sequence of line segment offsets.\n     * @param uvs - Sequence of (u,v) texture coordinates.\n     * @param colors - Sequence of (r,g,b) color components.\n     */\n    add(\n        center: THREE.Vector3,\n        points: ArrayLike<number>,\n        projection: Projection,\n        offsets?: ArrayLike<number>,\n        uvs?: ArrayLike<number>,\n        colors?: ArrayLike<number>\n    ): this {\n        if (!this.isSimple) {\n            assert(!this.hasNormalsAndUvs || uvs !== undefined);\n            createLineGeometry(\n                center,\n                points,\n                projection,\n                offsets,\n                uvs,\n                colors,\n                this.m_geometry,\n                this.highPrecision\n            );\n        } else {\n            createSimpleLineGeometry(points, colors, this.m_geometry);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the list of vertices.\n     */\n    get vertices(): number[] {\n        return this.m_geometry.vertices;\n    }\n\n    /**\n     * Returns the list of vertex colors.\n     */\n    get vertexColors(): number[] {\n        return this.m_geometry.vertexColors;\n    }\n\n    /**\n     * Returns the list of indices.\n     */\n    get indices(): number[] {\n        return this.m_geometry.indices;\n    }\n\n    /**\n     * Returns the list of [[VertexAttributeDescriptor]]s.\n     */\n    get vertexAttributes(): VertexAttributeDescriptor[] {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).attributes;\n    }\n\n    /**\n     * Returns the vertex attribute stride.\n     */\n    get stride(): number {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).stride;\n    }\n\n    /**\n     * Creates a three.js geometry.\n     */\n    createGeometry(geometry?: THREE.BufferGeometry): THREE.BufferGeometry {\n        if (geometry === undefined) {\n            geometry = new THREE.BufferGeometry();\n        }\n        return LineGroup.createGeometry(\n            this.m_geometry.vertices,\n            this.m_geometry.vertexColors,\n            this.m_geometry.indices,\n            geometry,\n            this.hasNormalsAndUvs,\n            this.highPrecision\n        );\n    }\n}\n\nfunction computeBitangent(\n    n: THREE.Vector3,\n    t0: THREE.Vector3,\n    t1: THREE.Vector3,\n    bt: THREE.Vector3\n): number {\n    let angle = 0;\n    if (!t0.equals(t1)) {\n        angle = Math.acos(t0.dot(t1)) * Math.sign(n.dot(tmpV.copy(t0).cross(t1)));\n        if (Number.isNaN(angle)) {\n            angle = 0;\n        }\n    }\n    bt.copy(t0)\n        .add(t1)\n        .normalize()\n        .cross(n)\n        .normalize();\n    return angle;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst UNIT_Z = new THREE.Vector3(0, 0, 1);\nconst POINTS = [0, 1, 2, 1, 3, 2];\nconst BEVEL_POINTS = [0, 1, 3, 3, 1, 2, 0, 3, 4, 5, 4, 3];\n\nconst SECTORS_IN_CIRCLE = 8;\nconst STEP = Math.PI / SECTORS_IN_CIRCLE;\n\n/**\n * Adds a half-circle geometry to original line\n *\n * @param x - The line end X (used as circle center X)\n * @param y - The line end Y (used as circle center Y)\n * @param lineAngle - The cap incline angle\n * @param radius - The cap (circle) radius\n * @param vertices - The input vertex buffer (cap vertices are added there)\n * @param indices - The input index buffer (cap indices are is added there)\n */\nfunction addCircle(\n    x: number,\n    y: number,\n    lineAngle: number,\n    radius: number,\n    vertices: number[],\n    indices: number[]\n) {\n    const baseVertex = vertices.length / 3;\n\n    // Add cap center to vertices directly (it doesn't need rotation)\n    vertices.push(x, y, 0);\n\n    for (let i = 0; i < SECTORS_IN_CIRCLE + 1; ++i) {\n        const angle = STEP * i + Math.PI / 2 + lineAngle; // Start angle is -90deg\n        vertices.push(x + radius * Math.cos(angle), y + radius * Math.sin(angle), 0);\n\n        indices.push(\n            baseVertex,\n            baseVertex + i + 1,\n            baseVertex + ((i + 1) % (SECTORS_IN_CIRCLE + 1)) + 1\n        );\n    }\n}\n\n/**\n * Returns the number of points in circle used for caps.\n *\n * @param lineWidth - Width of line.\n */\n// tslint:disable-next-line:no-unused-variable\nexport function numCirclePoints(lineWidth: number): number {\n    return SECTORS_IN_CIRCLE + 1;\n}\n\n/**\n * Create a triangle mesh from the given polyline.\n *\n * @param points - Sequence of (x,y,z) coordinates.\n * @param width - The width of the extruded line.\n * @param vertices - The output vertex buffer.\n * @param indices - The output index buffer.\n * @param startWithCircle - `true` if the line should start will a circle.\n * @param endWithCircle - `true` if the line should end with a circle.\n */\nexport function triangulateLine(\n    points: ArrayLike<number>,\n    width: number,\n    vertices: number[],\n    indices: number[],\n    startWithCircle = true,\n    endWithCircle = startWithCircle\n) {\n    if (points.length < 3) {\n        return;\n    }\n\n    // This vector is used for computing cap angle\n    const angleVec = new THREE.Vector2();\n\n    if (startWithCircle) {\n        // Define lineAngle as (direction - origin) vector angle to X axis\n        const lineAngle =\n            points.length !== 3\n                ? angleVec.set(points[3] - points[0], points[4] - points[1]).angle()\n                : 0;\n\n        addCircle(points[0], points[1], lineAngle, width, vertices, indices);\n    }\n\n    const baseVertex = vertices.length / 3;\n\n    // bt = Bitangent (i.e. extrusion vector)\n    const prevBt = new THREE.Vector3();\n    const p = new THREE.Vector3(); // current point\n    const n = new THREE.Vector3(); // next point\n    const bt = new THREE.Vector3();\n    const averageBt = new THREE.Vector3();\n    const p0 = new THREE.Vector3();\n    const p1 = new THREE.Vector3();\n    const p2 = new THREE.Vector3();\n    const p3 = new THREE.Vector3();\n\n    const N = points.length / 3;\n\n    let vertexOffset = 0;\n    for (let i = 0; i < N; ++i) {\n        let useBevel = false;\n        p.set(points[i * 3], points[i * 3 + 1], points[i * 3 + 2]);\n\n        if (i + 1 < N) {\n            n.set(points[(i + 1) * 3], points[(i + 1) * 3 + 1], points[(i + 1) * 3 + 2]);\n\n            bt.copy(n)\n                .sub(p)\n                .normalize()\n                .cross(UNIT_Z);\n\n            averageBt.copy(bt);\n\n            if (i > 0) {\n                averageBt.add(prevBt).multiplyScalar(1.0 - 0.5 * bt.dot(prevBt));\n\n                useBevel = prevBt.angleTo(bt) > Math.PI / 2;\n\n                if (useBevel) {\n                    const inclineWidth = width / Math.cos(bt.angleTo(prevBt) / 2);\n\n                    p0.copy(bt)\n                        .add(prevBt)\n                        .normalize()\n                        .multiplyScalar(-inclineWidth)\n                        .add(p);\n\n                    p1.copy(prevBt)\n                        .multiplyScalar(width)\n                        .add(p);\n\n                    // p2 is used for \"miter\" connections\n                    p2.copy(bt)\n                        .add(prevBt)\n                        .normalize()\n                        .multiplyScalar(inclineWidth)\n                        .add(p);\n\n                    p3.copy(bt)\n                        .multiplyScalar(width)\n                        .add(p);\n                }\n            }\n\n            if (useBevel) {\n                vertices.push(\n                    p0.x,\n                    p0.y,\n                    p0.z,\n                    p1.x,\n                    p1.y,\n                    p1.z,\n                    p2.x,\n                    p2.y,\n                    p2.z,\n                    p3.x,\n                    p3.y,\n                    p3.z\n                );\n            } else {\n                p0.copy(averageBt)\n                    .multiplyScalar(-width)\n                    .add(p);\n\n                p1.copy(averageBt)\n                    .multiplyScalar(width)\n                    .add(p);\n\n                vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n            }\n\n            prevBt.copy(bt);\n        } else {\n            p0.copy(prevBt)\n                .multiplyScalar(-width)\n                .add(p);\n\n            p1.copy(prevBt)\n                .multiplyScalar(width)\n                .add(p);\n\n            vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n        }\n\n        if (i !== N - 1) {\n            (useBevel ? BEVEL_POINTS : POINTS).forEach(o =>\n                indices.push(baseVertex + vertexOffset + o)\n            );\n            vertexOffset += useBevel ? 4 : 2;\n        }\n    }\n\n    if (endWithCircle) {\n        const lineAngle =\n            points.length !== 2\n                ? angleVec\n                      .set(\n                          points[(N - 3) * 3] - points[(N - 2) * 3],\n                          points[(N - 3) * 3 + 1] - points[(N - 2) * 3 + 1]\n                      )\n                      .angle()\n                : Math.PI;\n\n        addCircle(\n            points[(N - 2) * 3],\n            points[(N - 2) * 3 + 1],\n            lineAngle,\n            width,\n            vertices,\n            indices\n        );\n    }\n}\n\n/**\n * Reconstruct the original points of a line from the vertices of the triangulated line.\n *\n * @param inBuffer - Buffer with vertices.\n * @param startOffset - Start index, will differ from `0` if the line has caps.\n * @returns Buffer containing the original points of the triangulated line.\n */\nexport function reconstructLine(inBuffer: Float32Array, startOffset: number): Float32Array {\n    const outBuffer = new Float32Array(inBuffer.length / 2);\n\n    for (let i = startOffset * 3, i2 = i * 2; i < outBuffer.length; i += 3, i2 += 6) {\n        outBuffer[i] = inBuffer[i2] + (inBuffer[i2 + 3] - inBuffer[i2]) * 0.5;\n        outBuffer[i + 1] = inBuffer[i2 + 1] + (inBuffer[i2 + 3 + 1] - inBuffer[i2 + 1]) * 0.5;\n        outBuffer[i + 2] = inBuffer[i2 + 2] + (inBuffer[i2 + 3 + 2] - inBuffer[i2 + 2]) * 0.5;\n    }\n    return outBuffer;\n}\n\n/**\n * Extract the line width from a triangulated line.\n *\n * @param inBuffer - Array of vertex elements of a triangulated line.\n * @param startIndex - Start index, will differ from `0` if the line has caps.\n */\nexport function reconstructLineWidth(inBuffer: Float32Array, startIndex: number): number {\n    const xd = inBuffer[startIndex * 2 + 3] - inBuffer[startIndex * 2];\n    const yd = inBuffer[startIndex * 2 + 3 + 1] - inBuffer[startIndex * 2 + 1];\n    const zd = inBuffer[startIndex * 2 + 3 + 2] - inBuffer[startIndex * 2 + 2];\n\n    return Math.sqrt(xd * xd + yd * yd + zd * zd) * 0.5;\n}\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n\n        // filter collinear points around the cuts\n        filterPoints(outerNode, outerNode.next);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector2 } from \"three\";\n\nconst tmpBA = new Vector2();\nconst tmpQP = new Vector2();\nconst tmpA = new Vector2();\nconst tmpB = new Vector2();\n\n/**\n * Clip the given polygon using the Sutherland-Hodgman algorithm.\n */\nexport function clipPolygon(polygon: Vector2[], clip: Vector2[]): Vector2[] {\n    if (polygon.length === 0) {\n        return polygon;\n    }\n    if (!polygon[0].equals(polygon[polygon.length - 1])) {\n        // close the polygon if needed.\n        polygon = [...polygon, polygon[0]];\n    }\n    let outputList = polygon;\n    for (let e = 0; e < clip.length; ++e) {\n        const p = clip[e];\n        const q = clip[(e + 1) % clip.length];\n        const inputList = outputList;\n        outputList = [];\n        for (let i = 0; i < inputList.length; ++i) {\n            const currentPoint = inputList[i];\n            const prevPoint = inputList[(i + inputList.length - 1) % inputList.length];\n            if (inside(currentPoint, p, q)) {\n                if (!inside(prevPoint, p, q)) {\n                    outputList.push(computeIntersection(prevPoint, currentPoint, p, q));\n                }\n                outputList.push(currentPoint);\n            } else if (inside(prevPoint, p, q)) {\n                outputList.push(computeIntersection(prevPoint, currentPoint, p, q));\n            }\n        }\n    }\n    return outputList;\n}\n\nfunction computeIntersection(\n    a: Vector2,\n    b: Vector2,\n    p: Vector2,\n    q: Vector2,\n    result = new Vector2()\n): Vector2 {\n    tmpBA.subVectors(b, a);\n    tmpQP.subVectors(q, p);\n    const c1 = a.cross(tmpBA);\n    const c2 = p.cross(tmpQP);\n    const D = tmpBA.cross(tmpQP);\n    const x = (tmpBA.x * c2 - tmpQP.x * c1) / D;\n    const y = (tmpBA.y * c2 - tmpQP.y * c1) / D;\n    return result.set(x, y).round();\n}\n\nfunction inside(point: Vector2, p: Vector2, q: Vector2) {\n    tmpA.subVectors(q, p);\n    tmpB.subVectors(point, p);\n    return tmpA.cross(tmpB) > 0;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Box3Like, GeoBox, Projection, ProjectionType } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport { Vector3 } from \"three\";\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3()];\n\nexport enum SubdivisionMode {\n    /**\n     * Subdivide all edges\n     */\n    All,\n    /**\n     * Only subdivide horizontal and vertical edges\n     */\n    NoDiagonals\n}\n\n/**\n * The [[EdgeLengthGeometrySubdivisionModifier]] subdivides triangle mesh depending on\n * length of edges.\n */\nexport class EdgeLengthGeometrySubdivisionModifier extends SubdivisionModifier {\n    private m_projectedBox: Box3Like;\n    private m_maxLength: number;\n    private m_maxLengthX: number;\n    private m_maxLengthY: number;\n\n    /**\n     * Constructs a new [[EdgeLengthGeometrySubdivisionModifier]].\n     *\n     * @param subdivision - The subdivision factor\n     * @param geoBox - The geo bounding box of a tile\n     * @param subdivisionMode - Configures what edges to divide\n     * @param projection - The projection that defines the world space of this geometry.\n     */\n    constructor(\n        readonly subdivision: number,\n        readonly geoBox: GeoBox,\n        readonly subdivisionMode: SubdivisionMode = SubdivisionMode.All,\n        readonly projection: Projection\n    ) {\n        super();\n\n        assert(\n            projection.type === ProjectionType.Planar,\n            \"EdgeLengthGeometrySubdivisionModifier only supports planar projections\"\n        );\n\n        const northEast = projection.projectPoint(geoBox.northEast, VERTEX_POSITION_CACHE[0]);\n        const southWest = projection.projectPoint(geoBox.southWest, VERTEX_POSITION_CACHE[1]);\n        this.m_projectedBox = {\n            min: {\n                x: Math.min(northEast.x, southWest.x),\n                y: Math.min(northEast.y, southWest.y),\n                z: Math.min(northEast.z, southWest.z)\n            },\n            max: {\n                x: Math.max(northEast.x, southWest.x),\n                y: Math.max(northEast.y, southWest.y),\n                z: Math.max(northEast.z, southWest.z)\n            }\n        };\n        this.m_maxLengthX = (this.m_projectedBox.max.x - this.m_projectedBox.min.x) / subdivision;\n        this.m_maxLengthY = (this.m_projectedBox.max.y - this.m_projectedBox.min.y) / subdivision;\n\n        // Increase max length slightly to account for precision errors\n        if (this.subdivisionMode === SubdivisionMode.All) {\n            this.m_maxLengthX *= 1.1;\n            this.m_maxLengthY *= 1.1;\n        }\n        this.m_maxLength = Math.sqrt(\n            this.m_maxLengthX * this.m_maxLengthX + this.m_maxLengthY * this.m_maxLengthY\n        );\n    }\n\n    /**\n     * Return upper bound for length of diagonal edges\n     */\n    get maxLength() {\n        return this.m_maxLength;\n    }\n\n    /**\n     * Return upper bound for edge length in x direction\n     */\n    get maxLengthX() {\n        return this.m_maxLengthX;\n    }\n\n    /**\n     * Return upper bound for edge length in y direction\n     */\n    get maxLengthY() {\n        return this.m_maxLengthY;\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const shouldSplitAB = this.shouldSplitEdge(a, b);\n        const shouldSplitBC = this.shouldSplitEdge(b, c);\n        const shouldSplitCA = this.shouldSplitEdge(c, a);\n        const shouldSplit = shouldSplitAB || shouldSplitBC || shouldSplitCA;\n\n        if (!shouldSplit) {\n            return;\n        }\n\n        const ab = a.distanceTo(b);\n        const bc = b.distanceTo(c);\n        const ca = c.distanceTo(a);\n        const maxDistance = Math.max(\n            shouldSplitAB ? ab : 0,\n            shouldSplitBC ? bc : 0,\n            shouldSplitCA ? ca : 0\n        );\n        if (ab === maxDistance) {\n            return 0;\n        } else if (bc === maxDistance) {\n            return 1;\n        } else if (ca === maxDistance) {\n            return 2;\n        }\n\n        throw new Error(\"Could not split triangle.\");\n    }\n\n    private shouldSplitEdge(a: Vector3, b: Vector3): boolean {\n        switch (this.subdivisionMode) {\n            case SubdivisionMode.All:\n                return (\n                    (a.y === b.y && Math.abs(a.x - b.x) > this.m_maxLengthX) ||\n                    (a.x === b.x && Math.abs(a.y - b.y) > this.m_maxLengthY) ||\n                    a.distanceTo(b) > this.m_maxLength\n                );\n            case SubdivisionMode.NoDiagonals:\n                return (\n                    (a.y === b.y && Math.abs(a.x - b.x) > this.m_maxLengthX) ||\n                    (a.x === b.x && Math.abs(a.y - b.y) > this.m_maxLengthY)\n                );\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection, sphereProjection } from \"@here/harp-geoutils\";\nimport { Vector3 } from \"three\";\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3(), new Vector3()];\n\n/**\n * The [[SphericalGeometrySubdivisionModifier]] subdivides triangle mesh geometries positioned\n * on the surface of a sphere centered at `(0, 0, 0)`.\n */\nexport class SphericalGeometrySubdivisionModifier extends SubdivisionModifier {\n    /**\n     * Constructs a new [[SphericalGeometrySubdivisionModifier]].\n     *\n     * @param angle - The maximum angle in radians between two vertices and the origin.\n     * @param projection - The projection that defines the world space of this geometry.\n     */\n    constructor(readonly angle: number, readonly projection: Projection = sphereProjection) {\n        super();\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const aa = sphereProjection.reprojectPoint(this.projection, a, VERTEX_POSITION_CACHE[0]);\n        const bb = sphereProjection.reprojectPoint(this.projection, b, VERTEX_POSITION_CACHE[1]);\n        const cc = sphereProjection.reprojectPoint(this.projection, c, VERTEX_POSITION_CACHE[2]);\n\n        const alpha = aa.angleTo(bb);\n        const beta = bb.angleTo(cc);\n        const gamma = cc.angleTo(aa);\n\n        // find the maximum angle\n        const m = Math.max(alpha, Math.max(beta, gamma));\n\n        // split the triangle if needed.\n        if (m < this.angle) {\n            return undefined;\n        }\n\n        if (m === alpha) {\n            return 0;\n        } else if (m === beta) {\n            return 1;\n        } else if (m === gamma) {\n            return 2;\n        }\n\n        throw new Error(\"failed to split triangle\");\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace ExtrusionFeatureDefs {\n    /**\n     * Minimum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MIN: number = 0.0;\n    /**\n     * Maximum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MAX: number = 1;\n\n    /**\n     * Buildings height used whenever no height-data is present or height is very small.\n     *\n     * Used to avoid z-fighting between ground plane and building.\n     */\n    export const MIN_BUILDING_HEIGHT = 0.01;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { OmvFeatureModifier } from \"./OmvDataFilter\";\n\nconst logger = LoggerManager.instance.create(\"OmvPoliticalViewFeatureModifier\");\n\n/**\n * Modifies the MapEnv of the Vector Tiles in Tilezen format with different POV.\n *\n * This feature modifier updates feature properties according to different political\n * point of view.\n * Political views (or alternate point of views) are supported in Tilezen by adding\n * country posix (lower-case ISO 3166-1 alpha-2 compliant) to __default__ property name.\n * For example country borders (__boundaries__ layer) may have both __kind__ property for\n * default (commonly accepted point of view) and __kind:xx__ for alternate points of view.\n * This way disputed borders may be visible or not for certain regions and different\n * users (clients).\n *\n * @hidden\n */\nexport class OmvPoliticalViewFeatureModifier implements OmvFeatureModifier {\n    private readonly m_countryCode: string;\n\n    /**\n     * C-tor.\n     *\n     * @param pov - The code of the country (in lower-case ISO 3166-1 alpha-2 format) which\n     * point of view should be taken into account.\n     */\n    constructor(pov: string) {\n        this.m_countryCode = pov;\n    }\n\n    /**\n     * Simply passes all points to rendering, points features does not support PoliticalView.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of point feature.\n     * @param level - Level of tile.\n     * @returns always `true` to pass feature.\n     */\n    doProcessPointFeature(layer: string, env: MapEnv, level: number): boolean {\n        return true;\n    }\n\n    /**\n     * Implements line features processing changing \"kind\" attribute depending on point of view.\n     *\n     * Currently only line features support different point of view.\n     * @param layer - The name of the layer.\n     * @param env - The environment to use.\n     * @returns always `true` to pass lines for rendering.\n     */\n    doProcessLineFeature(layer: string, env: MapEnv, level: number): boolean {\n        this.rewriteEnvironment(layer, env);\n        return true;\n    }\n\n    /**\n     * Simply pass all polygons to rendering, this feature does not support PoliticalView yet.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of polygon feature.\n     * @param level - Level of tile.\n     * @returns `true` to pass feature.\n     */\n    doProcessPolygonFeature(layer: string, env: MapEnv, level: number): boolean {\n        return true;\n    }\n\n    /**\n     * Rewrites the Environment to match the different points of view.\n     *\n     * @param layer - The layer name.\n     * @param env - The environment to use.\n     */\n    private rewriteEnvironment(layer: string, env: MapEnv) {\n        // For now we need to rewrite \"boundaries\" layer only.\n        if (this.isPoliticalViewLayer(layer)) {\n            this.updateEnvironment(env, this.m_countryCode, \"kind\");\n        }\n    }\n\n    private updateEnvironment(env: MapEnv, countryCode: string, propName: string): void {\n        const value = this.getAlternativePov(env, countryCode, propName);\n        if (value !== undefined) {\n            env.entries[propName] = value;\n        }\n    }\n\n    private getAlternativePov(env: MapEnv, countryCode: string, propName: string) {\n        logger.log(\"Get alternate POV: \", JSON.stringify(env));\n        const cc = countryCode;\n        const value = env.lookup(`${propName}:${cc}`);\n        logger.log(\"Lookup POV: \", `${propName}:${cc}`, value);\n        if (typeof value === \"string\" && value.length > 0) {\n            logger.log(\"Found POV: \", `${propName}:${cc}`, value);\n            return value;\n        } else {\n            return undefined;\n        }\n    }\n\n    private isPoliticalViewLayer(layer: string): boolean {\n        return layer === \"boundaries\";\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { OmvGenericFeatureModifier } from \"./OmvDataFilter\";\nimport { OmvFeatureFilterDescription, OmvFilterDescription } from \"./OmvDecoderDefs\";\n\nconst logger = LoggerManager.instance.create(\"OmvTomTomFeatureModifier\");\n\nconst DEFAULT_BUILDING_COLOR = \"#AAAAAA\";\nconst DEFAULT_DO_EXTRUDE_BUILDINGS = \"true\";\nconst DEFAULT_BUILDING_MIN_HEIGHT = \"2\";\nconst DEFAULT_BUILDING_HEIGHT = \"20\";\n\n/**\n * Modifies the MapEnv of the TomTom Vector Tiles to be similar to the OMV format, so that the same\n * theme files can be used.\n */\nexport class OmvTomTomFeatureModifier extends OmvGenericFeatureModifier {\n    constructor(description: OmvFeatureFilterDescription) {\n        super(description);\n    }\n\n    /** @override */\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        this.rewriteEnvironment(layer, env);\n        return super.doProcessFeature(itemsToProcess, itemsToIgnore, layer, env, defaultResult);\n    }\n\n    /**\n     * Rewrites the Environment to match the environment naming used in OMV.\n     *\n     * Does not cover roadlabels, as the roadlabels in the Tomtom format are delivered in a\n     * different format combined in the environment with the road line geometry, which is\n     * represented as two separate environment in the default format.\n     *\n     * @param layer -\n     * @param env -\n     */\n    private rewriteEnvironment(layer: string, env: MapEnv) {\n        // Rewriting landuse layers\n        if (this.isWood(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"wood\");\n        } else if (this.isHospital(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"hospital\");\n        } else if (this.isCemetery(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"cemetery\");\n        } else if (this.isIndustrial(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"industrial\");\n        } else if (this.isPark(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"park\");\n        } else if (this.isBuiltup(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"builtup\");\n            // Rewriting the water layer\n        } else if (this.isWater(layer)) {\n            this.updateEnvironment(env, \"water\");\n            // Rewriting the road label layer\n        } else if (this.isRoadLabel(layer)) {\n            this.updateEnvironment(env, \"road_label\");\n            // Rewriting road layers with category classes\n        } else if (this.isRoadPath(layer)) {\n            this.updateEnvironment(env, \"road\", \"path\");\n        } else if (this.isRoadStreet(layer)) {\n            this.updateEnvironment(env, \"road\", \"street\");\n        } else if (this.isRoadPrimary(layer)) {\n            this.updateEnvironment(env, \"road\", \"primary\");\n        } else if (this.isRoadSecondary(layer)) {\n            this.updateEnvironment(env, \"road\", \"secondary\");\n        } else if (this.isRailway(layer)) {\n            this.updateEnvironment(env, \"road\", \"major_rail\");\n        } else if (this.isFerry(layer)) {\n            this.updateEnvironment(env, \"road\", \"ferry\");\n            // Rewriting aeroway layer\n        } else if (this.isAeroway(layer)) {\n            this.updateEnvironment(env, \"aeroway\");\n            // Rewriting border layer\n        } else if (this.isBorder(layer)) {\n            this.updateEnvironment(env, \"admin\");\n            // Rewriting label layers\n        } else if (this.isCountryLabel(layer)) {\n            this.updateEnvironment(env, \"country_label\");\n        } else if (this.isCountyLabel(layer)) {\n            this.updateEnvironment(env, \"county_label\");\n        } else if (this.isRegionLabel(layer)) {\n            this.updateEnvironment(env, \"region_label\");\n        } else if (this.isStateLabel(layer)) {\n            this.updateEnvironment(env, \"state_label\");\n        } else if (this.isPlaceLabel(layer)) {\n            this.updateEnvironment(env, \"place_label\");\n        } else if (this.isWaterLabel(layer)) {\n            this.updateEnvironment(env, \"water_label\");\n        } else if (this.isMarineLabel(layer)) {\n            this.updateEnvironment(env, \"marine_label\");\n        } else if (this.isPoiLabel(layer)) {\n            this.updateEnvironment(env, \"poi_label\");\n            // Rewriting building layer\n        } else if (this.isBuilding(layer)) {\n            this.updateEnvironment(env, \"building\");\n            env.entries.color = DEFAULT_BUILDING_COLOR;\n            env.entries.extrude = DEFAULT_DO_EXTRUDE_BUILDINGS;\n            env.entries.min_height = DEFAULT_BUILDING_MIN_HEIGHT;\n            env.entries.height = DEFAULT_BUILDING_HEIGHT;\n        } else {\n            logger.info(`Not yet rewritten layer: ##${env.entries.$layer}## `);\n        }\n\n        // Add tunnel structure if its a tunnel\n        if (this.isTunnel(layer)) {\n            env.entries.structure = \"tunnel\";\n        }\n\n        //Add bridge structure if its a bridge\n        if (this.isBridge(layer)) {\n            env.entries.structure = \"bridge\";\n        }\n    }\n\n    private updateEnvironment(\n        env: MapEnv,\n        layer: string,\n        newClass?: string,\n        structure?: string\n    ): void {\n        env.entries.$layer = layer;\n        if (newClass !== undefined) {\n            env.entries.class = newClass;\n        }\n        if (structure !== undefined) {\n            env.entries.structure = structure;\n        }\n    }\n\n    private isWood(layer: string): boolean {\n        return layer === \"Woodland\" || layer === \"Moor or heathland\";\n    }\n\n    private isHospital(layer: string): boolean {\n        return layer === \"Hospital\";\n    }\n\n    private isCemetery(layer: string): boolean {\n        return layer === \"Cemetery\";\n    }\n\n    private isIndustrial(layer: string): boolean {\n        return layer.indexOf(\"Industrial\") >= 0 || layer === \"Airport\";\n    }\n\n    private isPark(layer: string): boolean {\n        return (\n            layer === \"Park\" ||\n            layer === \"City park\" ||\n            layer === \"National park\" ||\n            layer === \"Regional park\" ||\n            layer.indexOf(\"grass\") >= 0 ||\n            layer.indexOf(\"greens\") >= 0\n        );\n    }\n\n    private isBuiltup(layer: string): boolean {\n        return (\n            layer === \"Built-up area\" ||\n            layer === \"Town paved area\" ||\n            layer === \"Shopping\" ||\n            layer === \"University\" ||\n            layer === \"Stadium\" ||\n            layer.indexOf(\"ground\") > 0\n        );\n    }\n\n    private isWater(layer: string): boolean {\n        return (\n            layer === \"Other water\" ||\n            layer === \"Ocean or sea\" ||\n            layer === \"Ocean\" ||\n            layer === \"Lake\" ||\n            layer === \"Sea\" ||\n            layer === \"Town swimming pool\" ||\n            layer === \"River\"\n        );\n    }\n\n    private isRoadLabel(layer: string): boolean {\n        return layer.indexOf(\"road label\") >= 0;\n    }\n\n    private isRoadPath(layer: string): boolean {\n        return (\n            layer.indexOf(\"path\") > 0 ||\n            layer === \"Parking road\" ||\n            layer === \"Town walkway\" ||\n            layer === \"Pedestrian road\" ||\n            layer === \"Walkway road\" ||\n            layer === \"Town carriageway divider\" ||\n            layer === \"Runway\" ||\n            layer === \"Non public road\"\n        );\n    }\n\n    private isRoadStreet(layer: string): boolean {\n        return (\n            layer.indexOf(\"Minor local road\") >= 0 ||\n            layer.indexOf(\"minor local road\") >= 0 ||\n            layer.indexOf(\"Toll local road\") >= 0 ||\n            layer.indexOf(\"Local road\") >= 0\n        );\n    }\n    private isRoadPrimary(layer: string): boolean {\n        return (\n            layer.indexOf(\"Major local road\") >= 0 ||\n            layer.indexOf(\"Major road\") >= 0 ||\n            layer.indexOf(\"major road\") >= 0 ||\n            layer.indexOf(\"Motorway\") >= 0 ||\n            layer.indexOf(\"motorway\") >= 0 ||\n            layer.indexOf(\"International road\") >= 0 ||\n            layer.indexOf(\"international road\") >= 0\n        );\n    }\n\n    private isRoadSecondary(layer: string): boolean {\n        return (\n            layer.indexOf(\"connecting road\") >= 0 ||\n            layer.indexOf(\"Connecting road\") >= 0 ||\n            layer.indexOf(\"secondary road\") >= 0 ||\n            layer.indexOf(\"Secondary road\") >= 0\n        );\n    }\n\n    private isRailway(layer: string): boolean {\n        return layer === \"Railway\";\n    }\n\n    private isFerry(layer: string): boolean {\n        return layer === \"Ferry road\";\n    }\n\n    private isBorder(layer: string): boolean {\n        return layer.indexOf(\"border\") > 0;\n    }\n\n    private isCountryLabel(layer: string): boolean {\n        return layer === \"Country name\" || layer === \"Country label\";\n    }\n\n    private isStateLabel(layer: string): boolean {\n        return layer === \"City\" || layer.indexOf(\"city\") > 0;\n    }\n\n    private isRegionLabel(layer: string): boolean {\n        return layer === \"Town\";\n    }\n\n    private isCountyLabel(layer: string): boolean {\n        return layer === \"Village\";\n    }\n\n    private isPlaceLabel(layer: string): boolean {\n        return (\n            layer === \"Park\" ||\n            layer === \"Railway station\" ||\n            layer === \"Airport POI\" ||\n            layer === \"Town greens\"\n        );\n    }\n\n    private isWaterLabel(layer: string): boolean {\n        return (\n            layer === \"Ocean name\" || layer === \"River label\" || layer.indexOf(\"water label\") > 0\n        );\n    }\n\n    private isMarineLabel(layer: string): boolean {\n        return layer.indexOf(\"water label\") > 0;\n    }\n\n    private isPoiLabel(layer: string): boolean {\n        return (\n            layer === \"National park name\" ||\n            layer === \"Landmark label\" ||\n            layer.indexOf(\"label\") >= 0\n        );\n    }\n\n    private isAeroway(layer: string): boolean {\n        return layer === \"Airport\";\n    }\n\n    private isBuilding(layer: string): boolean {\n        return layer.indexOf(\"building\") >= 0;\n    }\n\n    private isTunnel(layer: string): boolean {\n        return layer.indexOf(\"tunnel\") >= 0;\n    }\n\n    private isBridge(layer: string): boolean {\n        return layer.indexOf(\"bridge\") >= 0;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\n\n/**\n * An [[OmvFeatureFilter]] implementation that queries [[StyleSetEvaluator]]\n * if given layers/features should be processed.\n *\n * Used in [[OmvDecoder]] to skip processing of layers/features that doesn't\n * have associated rules in style.\n *\n * @see [[StyleSetEvaluator.wantsFeature]]\n * @see [[StyleSetEvaluator.wantsLayer]]\n */\nexport class StyleSetDataFilter implements OmvFeatureFilter {\n    hasKindFilter: boolean = false;\n\n    constructor(readonly styleSetEvaluator: StyleSetEvaluator) {}\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.styleSetEvaluator.wantsLayer(layer);\n    }\n\n    wantsPointFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"point\");\n    }\n    wantsLineFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"line\");\n    }\n    wantsPolygonFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"polygon\");\n    }\n    wantsKind(): boolean {\n        return true;\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MapEnv, ValueMap } from \"@here/harp-datasource-protocol/lib/Env\";\nimport { GeoCoordinates, GeoPointLike, webMercatorProjection } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { world2tile } from \"./OmvUtils\";\n\nimport * as THREE from \"three\";\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\n\nconst DEFAULT_EXTENTS = 4 * 1024;\n\ntype GeoJsonGeometry =\n    | GeoJsonLineStringGeometry\n    | GeoJsonMultiLineStringGeometry\n    | GeoJsonPolygonGeometry\n    | GeoJsonMultiPolygonGeometry\n    | GeoJsonPointGeometry\n    | GeoJsonMultiPointGeometry;\n\ninterface GeoJsonLineStringGeometry {\n    type: \"LineString\";\n    coordinates: GeoPointLike[];\n}\n\ninterface GeoJsonMultiLineStringGeometry {\n    type: \"MultiLineString\";\n    coordinates: GeoPointLike[][];\n}\n\ninterface GeoJsonPointGeometry {\n    type: \"Point\";\n    coordinates: GeoPointLike;\n}\n\ninterface GeoJsonMultiPointGeometry {\n    type: \"MultiPoint\";\n    coordinates: GeoPointLike[];\n}\n\ninterface GeoJsonPolygonGeometry {\n    type: \"Polygon\";\n    coordinates: GeoPointLike[][];\n}\n\ninterface GeoJsonMultiPolygonGeometry {\n    type: \"MultiPolygon\";\n    coordinates: GeoPointLike[][][];\n}\n\ninterface GeoJsonFeature {\n    id?: string;\n    properties: ValueMap;\n    geometry: GeoJsonGeometry;\n}\n\ninterface GeoJsonFeatureCollection {\n    type: \"FeatureCollection\";\n    features: GeoJsonFeature[];\n}\n\nfunction convertGeometryType(type: string): string {\n    switch (type) {\n        case \"LineString\":\n            return \"line\";\n        case \"MultiLineString\":\n            return \"line\";\n        case \"Polygon\":\n            return \"polygon\";\n        case \"MultiPolygon\":\n            return \"polygon\";\n        case \"Point\":\n            return \"point\";\n        case \"MultiPoint\":\n            return \"point\";\n        default:\n            return \"unknown\";\n    } // switch\n}\n\nconst worldP = new THREE.Vector3();\nconst localP = new THREE.Vector2();\n\n/**\n * Converts a `geoPoint` to local tile space.\n *\n * @param geoPoint - The input [[GeoPointLike]].\n * @param decodeInfo - The [[DecodeInfo]].\n * @hidden\n */\nfunction convertPoint(geoPoint: GeoPointLike, decodeInfo: DecodeInfo): THREE.Vector2 {\n    webMercatorProjection.projectPoint(GeoCoordinates.fromGeoPoint(geoPoint), worldP);\n    localP.set(worldP.x, worldP.y);\n    return world2tile(DEFAULT_EXTENTS, decodeInfo, localP, false, new THREE.Vector2());\n}\n\nfunction convertLineStringGeometry(\n    coordinates: GeoPointLike[],\n    decodeInfo: DecodeInfo\n): ILineGeometry {\n    const untiledPositions = coordinates.map(geoPoint => {\n        return GeoCoordinates.fromGeoPoint(geoPoint);\n    });\n\n    const positions = coordinates.map(geoPoint => convertPoint(geoPoint, decodeInfo));\n\n    return { untiledPositions, positions };\n}\n\nfunction convertLineGeometry(\n    geometry: GeoJsonLineStringGeometry | GeoJsonMultiLineStringGeometry,\n    decodeInfo: DecodeInfo\n): ILineGeometry[] {\n    if (geometry.type === \"LineString\") {\n        return [convertLineStringGeometry(geometry.coordinates, decodeInfo)];\n    }\n\n    return geometry.coordinates.map(lineString =>\n        convertLineStringGeometry(lineString, decodeInfo)\n    );\n}\n\nfunction convertRings(coordinates: GeoPointLike[][], decodeInfo: DecodeInfo): IPolygonGeometry {\n    const rings = coordinates.map(ring => {\n        const { positions } = convertLineStringGeometry(ring, decodeInfo);\n        return positions;\n    });\n    return { rings };\n}\n\nfunction convertPolygonGeometry(\n    geometry: GeoJsonPolygonGeometry | GeoJsonMultiPolygonGeometry,\n    decodeInfo: DecodeInfo\n): IPolygonGeometry[] {\n    if (geometry.type === \"Polygon\") {\n        return [convertRings(geometry.coordinates, decodeInfo)];\n    }\n\n    return geometry.coordinates.map(polygon => convertRings(polygon, decodeInfo));\n}\n\nfunction convertPointGeometry(\n    geometry: GeoJsonPointGeometry | GeoJsonMultiPointGeometry,\n    decodeInfo: DecodeInfo\n): THREE.Vector2[] {\n    if (geometry.type === \"Point\") {\n        return [convertPoint(geometry.coordinates, decodeInfo)];\n    }\n\n    return geometry.coordinates.map(geoPoint => convertPoint(geoPoint, decodeInfo));\n}\n\nexport class TiledGeoJsonDataAdapter implements OmvDataAdapter {\n    id = \"TiledGeoJsonDataAdapter\";\n\n    constructor(\n        readonly m_processor: IGeometryProcessor,\n        readonly dataFilter: OmvFeatureFilter,\n        readonly m_logger?: ILogger\n    ) {}\n\n    canProcess(featureCollection: Partial<GeoJsonFeatureCollection>): boolean {\n        return (\n            featureCollection &&\n            featureCollection.type === \"FeatureCollection\" &&\n            Array.isArray(featureCollection.features)\n        );\n    }\n\n    process(featureCollection: GeoJsonFeatureCollection, decodeInfo: DecodeInfo): void {\n        if (!Array.isArray(featureCollection.features) || featureCollection.features.length === 0) {\n            return;\n        }\n\n        const { tileKey } = decodeInfo;\n\n        const $level = tileKey.level;\n        const $zoom = Math.max(0, tileKey.level - (this.m_processor.storageLevelOffset || 0));\n        const $layer = \"geojson\";\n\n        for (const feature of featureCollection.features) {\n            const $geometryType = convertGeometryType(feature.geometry.type);\n\n            const env = new MapEnv({\n                ...feature.properties,\n                $layer,\n                $level,\n                $zoom,\n                $geometryType\n            });\n\n            switch (feature.geometry.type) {\n                case \"LineString\":\n                case \"MultiLineString\": {\n                    const geometry = convertLineGeometry(feature.geometry, decodeInfo);\n                    this.m_processor.processLineFeature(\n                        $layer,\n                        DEFAULT_EXTENTS,\n                        geometry,\n                        env,\n                        $level\n                    );\n                    break;\n                }\n                case \"Polygon\":\n                case \"MultiPolygon\": {\n                    const geometry = convertPolygonGeometry(feature.geometry, decodeInfo);\n                    this.m_processor.processPolygonFeature(\n                        $layer,\n                        DEFAULT_EXTENTS,\n                        geometry,\n                        env,\n                        $level\n                    );\n                    break;\n                }\n                case \"Point\":\n                case \"MultiPoint\": {\n                    const geometry = convertPointGeometry(feature.geometry, decodeInfo);\n                    this.m_processor.processPointFeature(\n                        $layer,\n                        DEFAULT_EXTENTS,\n                        geometry,\n                        env,\n                        $level\n                    );\n                    break;\n                }\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TilerService, WorkerServiceManager } from \"@here/harp-mapview-decoder/index-worker\";\nimport { OMV_TILER_SERVICE_TYPE } from \"./OmvDecoderDefs\";\n\n/**\n * OMV tile decoder service.\n */\nexport class OmvTilerService {\n    /**\n     * Register[[OmvTiler]] service class in [[WorkerServiceManager]].\n     *\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: OMV_TILER_SERVICE_TYPE,\n            factory: (serviceId: string) => TilerService.start(serviceId)\n        });\n    }\n}\n","\n// calculate simplification data using optimized Douglas-Peucker algorithm\n\nexport default function simplify(coords, first, last, sqTolerance) {\n    var maxSqDist = sqTolerance;\n    var mid = (last - first) >> 1;\n    var minPosToMid = last - first;\n    var index;\n\n    var ax = coords[first];\n    var ay = coords[first + 1];\n    var bx = coords[last];\n    var by = coords[last + 1];\n\n    for (var i = first + 3; i < last; i += 3) {\n        var d = getSqSegDist(coords[i], coords[i + 1], ax, ay, bx, by);\n\n        if (d > maxSqDist) {\n            index = i;\n            maxSqDist = d;\n\n        } else if (d === maxSqDist) {\n            // a workaround to ensure we choose a pivot close to the middle of the list,\n            // reducing recursion depth, for certain degenerate inputs\n            // https://github.com/mapbox/geojson-vt/issues/104\n            var posToMid = Math.abs(i - mid);\n            if (posToMid < minPosToMid) {\n                index = i;\n                minPosToMid = posToMid;\n            }\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 3) simplify(coords, first, index, sqTolerance);\n        coords[index + 2] = maxSqDist;\n        if (last - index > 3) simplify(coords, index, last, sqTolerance);\n    }\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(px, py, x, y, bx, by) {\n\n    var dx = bx - x;\n    var dy = by - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = bx;\n            y = by;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default function createFeature(id, type, geom, tags) {\n    var feature = {\n        id: typeof id === 'undefined' ? null : id,\n        type: type,\n        geometry: geom,\n        tags: tags,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n    calcBBox(feature);\n    return feature;\n}\n\nfunction calcBBox(feature) {\n    var geom = feature.geometry;\n    var type = feature.type;\n\n    if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n        calcLineBBox(feature, geom);\n\n    } else if (type === 'Polygon' || type === 'MultiLineString') {\n        for (var i = 0; i < geom.length; i++) {\n            calcLineBBox(feature, geom[i]);\n        }\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < geom.length; i++) {\n            for (var j = 0; j < geom[i].length; j++) {\n                calcLineBBox(feature, geom[i][j]);\n            }\n        }\n    }\n}\n\nfunction calcLineBBox(feature, geom) {\n    for (var i = 0; i < geom.length; i += 3) {\n        feature.minX = Math.min(feature.minX, geom[i]);\n        feature.minY = Math.min(feature.minY, geom[i + 1]);\n        feature.maxX = Math.max(feature.maxX, geom[i]);\n        feature.maxY = Math.max(feature.maxY, geom[i + 1]);\n    }\n}\n","\nimport simplify from './simplify';\nimport createFeature from './feature';\n\n// converts GeoJSON feature into an intermediate projected JSON vector format with simplification data\n\nexport default function convert(data, options) {\n    var features = [];\n    if (data.type === 'FeatureCollection') {\n        for (var i = 0; i < data.features.length; i++) {\n            convertFeature(features, data.features[i], options, i);\n        }\n\n    } else if (data.type === 'Feature') {\n        convertFeature(features, data, options);\n\n    } else {\n        // single geometry or a geometry collection\n        convertFeature(features, {geometry: data}, options);\n    }\n\n    return features;\n}\n\nfunction convertFeature(features, geojson, options, index) {\n    if (!geojson.geometry) return;\n\n    var coords = geojson.geometry.coordinates;\n    var type = geojson.geometry.type;\n    var tolerance = Math.pow(options.tolerance / ((1 << options.maxZoom) * options.extent), 2);\n    var geometry = [];\n    var id = geojson.id;\n    if (options.promoteId) {\n        id = geojson.properties[options.promoteId];\n    } else if (options.generateId) {\n        id = index || 0;\n    }\n    if (type === 'Point') {\n        convertPoint(coords, geometry);\n\n    } else if (type === 'MultiPoint') {\n        for (var i = 0; i < coords.length; i++) {\n            convertPoint(coords[i], geometry);\n        }\n\n    } else if (type === 'LineString') {\n        convertLine(coords, geometry, tolerance, false);\n\n    } else if (type === 'MultiLineString') {\n        if (options.lineMetrics) {\n            // explode into linestrings to be able to track metrics\n            for (i = 0; i < coords.length; i++) {\n                geometry = [];\n                convertLine(coords[i], geometry, tolerance, false);\n                features.push(createFeature(id, 'LineString', geometry, geojson.properties));\n            }\n            return;\n        } else {\n            convertLines(coords, geometry, tolerance, false);\n        }\n\n    } else if (type === 'Polygon') {\n        convertLines(coords, geometry, tolerance, true);\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < coords.length; i++) {\n            var polygon = [];\n            convertLines(coords[i], polygon, tolerance, true);\n            geometry.push(polygon);\n        }\n    } else if (type === 'GeometryCollection') {\n        for (i = 0; i < geojson.geometry.geometries.length; i++) {\n            convertFeature(features, {\n                id: id,\n                geometry: geojson.geometry.geometries[i],\n                properties: geojson.properties\n            }, options, index);\n        }\n        return;\n    } else {\n        throw new Error('Input data is not a valid GeoJSON object.');\n    }\n\n    features.push(createFeature(id, type, geometry, geojson.properties));\n}\n\nfunction convertPoint(coords, out) {\n    out.push(projectX(coords[0]));\n    out.push(projectY(coords[1]));\n    out.push(0);\n}\n\nfunction convertLine(ring, out, tolerance, isPolygon) {\n    var x0, y0;\n    var size = 0;\n\n    for (var j = 0; j < ring.length; j++) {\n        var x = projectX(ring[j][0]);\n        var y = projectY(ring[j][1]);\n\n        out.push(x);\n        out.push(y);\n        out.push(0);\n\n        if (j > 0) {\n            if (isPolygon) {\n                size += (x0 * y - x * y0) / 2; // area\n            } else {\n                size += Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)); // length\n            }\n        }\n        x0 = x;\n        y0 = y;\n    }\n\n    var last = out.length - 3;\n    out[2] = 1;\n    simplify(out, 0, last, tolerance);\n    out[last + 2] = 1;\n\n    out.size = Math.abs(size);\n    out.start = 0;\n    out.end = out.size;\n}\n\nfunction convertLines(rings, out, tolerance, isPolygon) {\n    for (var i = 0; i < rings.length; i++) {\n        var geom = [];\n        convertLine(rings[i], geom, tolerance, isPolygon);\n        out.push(geom);\n    }\n}\n\nfunction projectX(x) {\n    return x / 360 + 0.5;\n}\n\nfunction projectY(y) {\n    var sin = Math.sin(y * Math.PI / 180);\n    var y2 = 0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI;\n    return y2 < 0 ? 0 : y2 > 1 ? 1 : y2;\n}\n","\nimport createFeature from './feature';\n\n/* clip features between two axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n */\n\nexport default function clip(features, scale, k1, k2, axis, minAll, maxAll, options) {\n\n    k1 /= scale;\n    k2 /= scale;\n\n    if (minAll >= k1 && maxAll < k2) return features; // trivial accept\n    else if (maxAll < k1 || minAll >= k2) return null; // trivial reject\n\n    var clipped = [];\n\n    for (var i = 0; i < features.length; i++) {\n\n        var feature = features[i];\n        var geometry = feature.geometry;\n        var type = feature.type;\n\n        var min = axis === 0 ? feature.minX : feature.minY;\n        var max = axis === 0 ? feature.maxX : feature.maxY;\n\n        if (min >= k1 && max < k2) { // trivial accept\n            clipped.push(feature);\n            continue;\n        } else if (max < k1 || min >= k2) { // trivial reject\n            continue;\n        }\n\n        var newGeometry = [];\n\n        if (type === 'Point' || type === 'MultiPoint') {\n            clipPoints(geometry, newGeometry, k1, k2, axis);\n\n        } else if (type === 'LineString') {\n            clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n\n        } else if (type === 'MultiLineString') {\n            clipLines(geometry, newGeometry, k1, k2, axis, false);\n\n        } else if (type === 'Polygon') {\n            clipLines(geometry, newGeometry, k1, k2, axis, true);\n\n        } else if (type === 'MultiPolygon') {\n            for (var j = 0; j < geometry.length; j++) {\n                var polygon = [];\n                clipLines(geometry[j], polygon, k1, k2, axis, true);\n                if (polygon.length) {\n                    newGeometry.push(polygon);\n                }\n            }\n        }\n\n        if (newGeometry.length) {\n            if (options.lineMetrics && type === 'LineString') {\n                for (j = 0; j < newGeometry.length; j++) {\n                    clipped.push(createFeature(feature.id, type, newGeometry[j], feature.tags));\n                }\n                continue;\n            }\n\n            if (type === 'LineString' || type === 'MultiLineString') {\n                if (newGeometry.length === 1) {\n                    type = 'LineString';\n                    newGeometry = newGeometry[0];\n                } else {\n                    type = 'MultiLineString';\n                }\n            }\n            if (type === 'Point' || type === 'MultiPoint') {\n                type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n            }\n\n            clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n        }\n    }\n\n    return clipped.length ? clipped : null;\n}\n\nfunction clipPoints(geom, newGeom, k1, k2, axis) {\n    for (var i = 0; i < geom.length; i += 3) {\n        var a = geom[i + axis];\n\n        if (a >= k1 && a <= k2) {\n            newGeom.push(geom[i]);\n            newGeom.push(geom[i + 1]);\n            newGeom.push(geom[i + 2]);\n        }\n    }\n}\n\nfunction clipLine(geom, newGeom, k1, k2, axis, isPolygon, trackMetrics) {\n\n    var slice = newSlice(geom);\n    var intersect = axis === 0 ? intersectX : intersectY;\n    var len = geom.start;\n    var segLen, t;\n\n    for (var i = 0; i < geom.length - 3; i += 3) {\n        var ax = geom[i];\n        var ay = geom[i + 1];\n        var az = geom[i + 2];\n        var bx = geom[i + 3];\n        var by = geom[i + 4];\n        var a = axis === 0 ? ax : ay;\n        var b = axis === 0 ? bx : by;\n        var exited = false;\n\n        if (trackMetrics) segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n\n        if (a < k1) {\n            // ---|-->  | (line enters the clip region from the left)\n            if (b > k1) {\n                t = intersect(slice, ax, ay, bx, by, k1);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else if (a > k2) {\n            // |  <--|--- (line enters the clip region from the right)\n            if (b < k2) {\n                t = intersect(slice, ax, ay, bx, by, k2);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else {\n            addPoint(slice, ax, ay, az);\n        }\n        if (b < k1 && a >= k1) {\n            // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n            t = intersect(slice, ax, ay, bx, by, k1);\n            exited = true;\n        }\n        if (b > k2 && a <= k2) {\n            // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n            t = intersect(slice, ax, ay, bx, by, k2);\n            exited = true;\n        }\n\n        if (!isPolygon && exited) {\n            if (trackMetrics) slice.end = len + segLen * t;\n            newGeom.push(slice);\n            slice = newSlice(geom);\n        }\n\n        if (trackMetrics) len += segLen;\n    }\n\n    // add the last point\n    var last = geom.length - 3;\n    ax = geom[last];\n    ay = geom[last + 1];\n    az = geom[last + 2];\n    a = axis === 0 ? ax : ay;\n    if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n    // close the polygon if its endpoints are not the same after clipping\n    last = slice.length - 3;\n    if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n        addPoint(slice, slice[0], slice[1], slice[2]);\n    }\n\n    // add the final slice\n    if (slice.length) {\n        newGeom.push(slice);\n    }\n}\n\nfunction newSlice(line) {\n    var slice = [];\n    slice.size = line.size;\n    slice.start = line.start;\n    slice.end = line.end;\n    return slice;\n}\n\nfunction clipLines(geom, newGeom, k1, k2, axis, isPolygon) {\n    for (var i = 0; i < geom.length; i++) {\n        clipLine(geom[i], newGeom, k1, k2, axis, isPolygon, false);\n    }\n}\n\nfunction addPoint(out, x, y, z) {\n    out.push(x);\n    out.push(y);\n    out.push(z);\n}\n\nfunction intersectX(out, ax, ay, bx, by, x) {\n    var t = (x - ax) / (bx - ax);\n    out.push(x);\n    out.push(ay + (by - ay) * t);\n    out.push(1);\n    return t;\n}\n\nfunction intersectY(out, ax, ay, bx, by, y) {\n    var t = (y - ay) / (by - ay);\n    out.push(ax + (bx - ax) * t);\n    out.push(y);\n    out.push(1);\n    return t;\n}\n","\nimport clip from './clip';\nimport createFeature from './feature';\n\nexport default function wrap(features, options) {\n    var buffer = options.buffer / options.extent;\n    var merged = features;\n    var left  = clip(features, 1, -1 - buffer, buffer,     0, -1, 2, options); // left world copy\n    var right = clip(features, 1,  1 - buffer, 2 + buffer, 0, -1, 2, options); // right world copy\n\n    if (left || right) {\n        merged = clip(features, 1, -buffer, 1 + buffer, 0, -1, 2, options) || []; // center world copy\n\n        if (left) merged = shiftFeatureCoords(left, 1).concat(merged); // merge left into center\n        if (right) merged = merged.concat(shiftFeatureCoords(right, -1)); // merge right into center\n    }\n\n    return merged;\n}\n\nfunction shiftFeatureCoords(features, offset) {\n    var newFeatures = [];\n\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i],\n            type = feature.type;\n\n        var newGeometry;\n\n        if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n            newGeometry = shiftCoords(feature.geometry, offset);\n\n        } else if (type === 'MultiLineString' || type === 'Polygon') {\n            newGeometry = [];\n            for (var j = 0; j < feature.geometry.length; j++) {\n                newGeometry.push(shiftCoords(feature.geometry[j], offset));\n            }\n        } else if (type === 'MultiPolygon') {\n            newGeometry = [];\n            for (j = 0; j < feature.geometry.length; j++) {\n                var newPolygon = [];\n                for (var k = 0; k < feature.geometry[j].length; k++) {\n                    newPolygon.push(shiftCoords(feature.geometry[j][k], offset));\n                }\n                newGeometry.push(newPolygon);\n            }\n        }\n\n        newFeatures.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n\n    return newFeatures;\n}\n\nfunction shiftCoords(points, offset) {\n    var newPoints = [];\n    newPoints.size = points.size;\n\n    if (points.start !== undefined) {\n        newPoints.start = points.start;\n        newPoints.end = points.end;\n    }\n\n    for (var i = 0; i < points.length; i += 3) {\n        newPoints.push(points[i] + offset, points[i + 1], points[i + 2]);\n    }\n    return newPoints;\n}\n","\n// Transforms the coordinates of each feature in the given tile from\n// mercator-projected space into (extent x extent) tile space.\nexport default function transformTile(tile, extent) {\n    if (tile.transformed) return tile;\n\n    var z2 = 1 << tile.z,\n        tx = tile.x,\n        ty = tile.y,\n        i, j, k;\n\n    for (i = 0; i < tile.features.length; i++) {\n        var feature = tile.features[i],\n            geom = feature.geometry,\n            type = feature.type;\n\n        feature.geometry = [];\n\n        if (type === 1) {\n            for (j = 0; j < geom.length; j += 2) {\n                feature.geometry.push(transformPoint(geom[j], geom[j + 1], extent, z2, tx, ty));\n            }\n        } else {\n            for (j = 0; j < geom.length; j++) {\n                var ring = [];\n                for (k = 0; k < geom[j].length; k += 2) {\n                    ring.push(transformPoint(geom[j][k], geom[j][k + 1], extent, z2, tx, ty));\n                }\n                feature.geometry.push(ring);\n            }\n        }\n    }\n\n    tile.transformed = true;\n\n    return tile;\n}\n\nfunction transformPoint(x, y, extent, z2, tx, ty) {\n    return [\n        Math.round(extent * (x * z2 - tx)),\n        Math.round(extent * (y * z2 - ty))];\n}\n","\nexport default function createTile(features, z, tx, ty, options) {\n    var tolerance = z === options.maxZoom ? 0 : options.tolerance / ((1 << z) * options.extent);\n    var tile = {\n        features: [],\n        numPoints: 0,\n        numSimplified: 0,\n        numFeatures: 0,\n        source: null,\n        x: tx,\n        y: ty,\n        z: z,\n        transformed: false,\n        minX: 2,\n        minY: 1,\n        maxX: -1,\n        maxY: 0\n    };\n    for (var i = 0; i < features.length; i++) {\n        tile.numFeatures++;\n        addFeature(tile, features[i], tolerance, options);\n\n        var minX = features[i].minX;\n        var minY = features[i].minY;\n        var maxX = features[i].maxX;\n        var maxY = features[i].maxY;\n\n        if (minX < tile.minX) tile.minX = minX;\n        if (minY < tile.minY) tile.minY = minY;\n        if (maxX > tile.maxX) tile.maxX = maxX;\n        if (maxY > tile.maxY) tile.maxY = maxY;\n    }\n    return tile;\n}\n\nfunction addFeature(tile, feature, tolerance, options) {\n\n    var geom = feature.geometry,\n        type = feature.type,\n        simplified = [];\n\n    if (type === 'Point' || type === 'MultiPoint') {\n        for (var i = 0; i < geom.length; i += 3) {\n            simplified.push(geom[i]);\n            simplified.push(geom[i + 1]);\n            tile.numPoints++;\n            tile.numSimplified++;\n        }\n\n    } else if (type === 'LineString') {\n        addLine(simplified, geom, tile, tolerance, false, false);\n\n    } else if (type === 'MultiLineString' || type === 'Polygon') {\n        for (i = 0; i < geom.length; i++) {\n            addLine(simplified, geom[i], tile, tolerance, type === 'Polygon', i === 0);\n        }\n\n    } else if (type === 'MultiPolygon') {\n\n        for (var k = 0; k < geom.length; k++) {\n            var polygon = geom[k];\n            for (i = 0; i < polygon.length; i++) {\n                addLine(simplified, polygon[i], tile, tolerance, true, i === 0);\n            }\n        }\n    }\n\n    if (simplified.length) {\n        var tags = feature.tags || null;\n        if (type === 'LineString' && options.lineMetrics) {\n            tags = {};\n            for (var key in feature.tags) tags[key] = feature.tags[key];\n            tags['mapbox_clip_start'] = geom.start / geom.size;\n            tags['mapbox_clip_end'] = geom.end / geom.size;\n        }\n        var tileFeature = {\n            geometry: simplified,\n            type: type === 'Polygon' || type === 'MultiPolygon' ? 3 :\n                type === 'LineString' || type === 'MultiLineString' ? 2 : 1,\n            tags: tags\n        };\n        if (feature.id !== null) {\n            tileFeature.id = feature.id;\n        }\n        tile.features.push(tileFeature);\n    }\n}\n\nfunction addLine(result, geom, tile, tolerance, isPolygon, isOuter) {\n    var sqTolerance = tolerance * tolerance;\n\n    if (tolerance > 0 && (geom.size < (isPolygon ? sqTolerance : tolerance))) {\n        tile.numPoints += geom.length / 3;\n        return;\n    }\n\n    var ring = [];\n\n    for (var i = 0; i < geom.length; i += 3) {\n        if (tolerance === 0 || geom[i + 2] > sqTolerance) {\n            tile.numSimplified++;\n            ring.push(geom[i]);\n            ring.push(geom[i + 1]);\n        }\n        tile.numPoints++;\n    }\n\n    if (isPolygon) rewind(ring, isOuter);\n\n    result.push(ring);\n}\n\nfunction rewind(ring, clockwise) {\n    var area = 0;\n    for (var i = 0, len = ring.length, j = len - 2; i < len; j = i, i += 2) {\n        area += (ring[i] - ring[j]) * (ring[i + 1] + ring[j + 1]);\n    }\n    if (area > 0 === clockwise) {\n        for (i = 0, len = ring.length; i < len / 2; i += 2) {\n            var x = ring[i];\n            var y = ring[i + 1];\n            ring[i] = ring[len - 2 - i];\n            ring[i + 1] = ring[len - 1 - i];\n            ring[len - 2 - i] = x;\n            ring[len - 1 - i] = y;\n        }\n    }\n}\n","\nimport convert from './convert';     // GeoJSON conversion and preprocessing\nimport clip from './clip';           // stripe clipping algorithm\nimport wrap from './wrap';           // date line processing\nimport transform from './transform'; // coordinate transformation\nimport createTile from './tile';     // final simplified tile generation\n\nexport default function geojsonvt(data, options) {\n    return new GeoJSONVT(data, options);\n}\n\nfunction GeoJSONVT(data, options) {\n    options = this.options = extend(Object.create(this.options), options);\n\n    var debug = options.debug;\n\n    if (debug) console.time('preprocess data');\n\n    if (options.maxZoom < 0 || options.maxZoom > 24) throw new Error('maxZoom should be in the 0-24 range');\n    if (options.promoteId && options.generateId) throw new Error('promoteId and generateId cannot be used together.');\n\n    var features = convert(data, options);\n\n    this.tiles = {};\n    this.tileCoords = [];\n\n    if (debug) {\n        console.timeEnd('preprocess data');\n        console.log('index: maxZoom: %d, maxPoints: %d', options.indexMaxZoom, options.indexMaxPoints);\n        console.time('generate tiles');\n        this.stats = {};\n        this.total = 0;\n    }\n\n    features = wrap(features, options);\n\n    // start slicing from the top tile down\n    if (features.length) this.splitTile(features, 0, 0, 0);\n\n    if (debug) {\n        if (features.length) console.log('features: %d, points: %d', this.tiles[0].numFeatures, this.tiles[0].numPoints);\n        console.timeEnd('generate tiles');\n        console.log('tiles generated:', this.total, JSON.stringify(this.stats));\n    }\n}\n\nGeoJSONVT.prototype.options = {\n    maxZoom: 14,            // max zoom to preserve detail on\n    indexMaxZoom: 5,        // max zoom in the tile index\n    indexMaxPoints: 100000, // max number of points per tile in the tile index\n    tolerance: 3,           // simplification tolerance (higher means simpler)\n    extent: 4096,           // tile extent\n    buffer: 64,             // tile buffer on each side\n    lineMetrics: false,     // whether to calculate line metrics\n    promoteId: null,        // name of a feature property to be promoted to feature.id\n    generateId: false,      // whether to generate feature ids. Cannot be used with promoteId\n    debug: 0                // logging level (0, 1 or 2)\n};\n\nGeoJSONVT.prototype.splitTile = function (features, z, x, y, cz, cx, cy) {\n\n    var stack = [features, z, x, y],\n        options = this.options,\n        debug = options.debug;\n\n    // avoid recursion by using a processing queue\n    while (stack.length) {\n        y = stack.pop();\n        x = stack.pop();\n        z = stack.pop();\n        features = stack.pop();\n\n        var z2 = 1 << z,\n            id = toID(z, x, y),\n            tile = this.tiles[id];\n\n        if (!tile) {\n            if (debug > 1) console.time('creation');\n\n            tile = this.tiles[id] = createTile(features, z, x, y, options);\n            this.tileCoords.push({z: z, x: x, y: y});\n\n            if (debug) {\n                if (debug > 1) {\n                    console.log('tile z%d-%d-%d (features: %d, points: %d, simplified: %d)',\n                        z, x, y, tile.numFeatures, tile.numPoints, tile.numSimplified);\n                    console.timeEnd('creation');\n                }\n                var key = 'z' + z;\n                this.stats[key] = (this.stats[key] || 0) + 1;\n                this.total++;\n            }\n        }\n\n        // save reference to original geometry in tile so that we can drill down later if we stop now\n        tile.source = features;\n\n        // if it's the first-pass tiling\n        if (!cz) {\n            // stop tiling if we reached max zoom, or if the tile is too simple\n            if (z === options.indexMaxZoom || tile.numPoints <= options.indexMaxPoints) continue;\n\n        // if a drilldown to a specific tile\n        } else {\n            // stop tiling if we reached base zoom or our target tile zoom\n            if (z === options.maxZoom || z === cz) continue;\n\n            // stop tiling if it's not an ancestor of the target tile\n            var m = 1 << (cz - z);\n            if (x !== Math.floor(cx / m) || y !== Math.floor(cy / m)) continue;\n        }\n\n        // if we slice further down, no need to keep source geometry\n        tile.source = null;\n\n        if (features.length === 0) continue;\n\n        if (debug > 1) console.time('clipping');\n\n        // values we'll use for clipping\n        var k1 = 0.5 * options.buffer / options.extent,\n            k2 = 0.5 - k1,\n            k3 = 0.5 + k1,\n            k4 = 1 + k1,\n            tl, bl, tr, br, left, right;\n\n        tl = bl = tr = br = null;\n\n        left  = clip(features, z2, x - k1, x + k3, 0, tile.minX, tile.maxX, options);\n        right = clip(features, z2, x + k2, x + k4, 0, tile.minX, tile.maxX, options);\n        features = null;\n\n        if (left) {\n            tl = clip(left, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            bl = clip(left, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            left = null;\n        }\n\n        if (right) {\n            tr = clip(right, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            br = clip(right, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            right = null;\n        }\n\n        if (debug > 1) console.timeEnd('clipping');\n\n        stack.push(tl || [], z + 1, x * 2,     y * 2);\n        stack.push(bl || [], z + 1, x * 2,     y * 2 + 1);\n        stack.push(tr || [], z + 1, x * 2 + 1, y * 2);\n        stack.push(br || [], z + 1, x * 2 + 1, y * 2 + 1);\n    }\n};\n\nGeoJSONVT.prototype.getTile = function (z, x, y) {\n    var options = this.options,\n        extent = options.extent,\n        debug = options.debug;\n\n    if (z < 0 || z > 24) return null;\n\n    var z2 = 1 << z;\n    x = ((x % z2) + z2) % z2; // wrap tile x coordinate\n\n    var id = toID(z, x, y);\n    if (this.tiles[id]) return transform(this.tiles[id], extent);\n\n    if (debug > 1) console.log('drilling down to z%d-%d-%d', z, x, y);\n\n    var z0 = z,\n        x0 = x,\n        y0 = y,\n        parent;\n\n    while (!parent && z0 > 0) {\n        z0--;\n        x0 = Math.floor(x0 / 2);\n        y0 = Math.floor(y0 / 2);\n        parent = this.tiles[toID(z0, x0, y0)];\n    }\n\n    if (!parent || !parent.source) return null;\n\n    // if we found a parent tile containing the original geometry, we can drill down from it\n    if (debug > 1) console.log('found parent tile z%d-%d-%d', z0, x0, y0);\n\n    if (debug > 1) console.time('drilling down');\n    this.splitTile(parent.source, z0, x0, y0, z, x, y);\n    if (debug > 1) console.timeEnd('drilling down');\n\n    return this.tiles[id] ? transform(this.tiles[id], extent) : null;\n};\n\nfunction toID(z, x, y) {\n    return (((1 << z) * y + x) * 32) + z;\n}\n\nfunction extend(dest, src) {\n    for (var i in src) dest[i] = src[i];\n    return dest;\n}\n"],"sourceRoot":""}